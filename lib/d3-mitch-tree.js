!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("mitchTree",[],e):"object"==typeof exports?exports.mitchTree=e():(t.d3=t.d3||{},t.d3.mitchTree=e())}(global,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/index.js")}({"./node_modules/d3-array/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/array.js ***!
  \********************************************/
/*! exports provided: slice, map */function(t,e,n){"use strict";n.r(e),n.d(e,"slice",function(){return o}),n.d(e,"map",function(){return i});var r=Array.prototype,o=r.slice,i=r.map},"./node_modules/d3-array/src/ascending.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/ascending.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}},"./node_modules/d3-array/src/bisect.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/bisect.js ***!
  \*********************************************/
/*! exports provided: bisectRight, bisectLeft, default */function(t,e,n){"use strict";n.r(e),n.d(e,"bisectRight",function(){return u}),n.d(e,"bisectLeft",function(){return s});var r=n(/*! ./ascending */"./node_modules/d3-array/src/ascending.js"),o=n(/*! ./bisector */"./node_modules/d3-array/src/bisector.js"),i=Object(o.default)(r.default),u=i.right,s=i.left;e.default=u},"./node_modules/d3-array/src/bisector.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/bisector.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./ascending */"./node_modules/d3-array/src/ascending.js");e.default=function(t){var e;return 1===t.length&&(e=t,t=function(t,n){return Object(r.default)(e(t),n)}),{left:function(e,n,r,o){for(null==r&&(r=0),null==o&&(o=e.length);r<o;){var i=r+o>>>1;t(e[i],n)<0?r=i+1:o=i}return r},right:function(e,n,r,o){for(null==r&&(r=0),null==o&&(o=e.length);r<o;){var i=r+o>>>1;t(e[i],n)>0?o=i:r=i+1}return r}}}},"./node_modules/d3-array/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return t}}},"./node_modules/d3-array/src/cross.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/cross.js ***!
  \********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./pairs */"./node_modules/d3-array/src/pairs.js");e.default=function(t,e,n){var o,i,u,s,c=t.length,a=e.length,l=new Array(c*a);for(null==n&&(n=r.pair),o=u=0;o<c;++o)for(s=t[o],i=0;i<a;++i,++u)l[u]=n(s,e[i]);return l}},"./node_modules/d3-array/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return e<t?-1:e>t?1:e>=t?0:NaN}},"./node_modules/d3-array/src/deviation.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/deviation.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./variance */"./node_modules/d3-array/src/variance.js");e.default=function(t,e){var n=Object(r.default)(t,e);return n?Math.sqrt(n):n}},"./node_modules/d3-array/src/extent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/extent.js ***!
  \*********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){var n,r,o,i=t.length,u=-1;if(null==e){for(;++u<i;)if(null!=(n=t[u])&&n>=n)for(r=o=n;++u<i;)null!=(n=t[u])&&(r>n&&(r=n),o<n&&(o=n))}else for(;++u<i;)if(null!=(n=e(t[u],u,t))&&n>=n)for(r=o=n;++u<i;)null!=(n=e(t[u],u,t))&&(r>n&&(r=n),o<n&&(o=n));return[r,o]}},"./node_modules/d3-array/src/histogram.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/histogram.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./array */"./node_modules/d3-array/src/array.js"),o=n(/*! ./bisect */"./node_modules/d3-array/src/bisect.js"),i=n(/*! ./constant */"./node_modules/d3-array/src/constant.js"),u=n(/*! ./extent */"./node_modules/d3-array/src/extent.js"),s=n(/*! ./identity */"./node_modules/d3-array/src/identity.js"),c=n(/*! ./range */"./node_modules/d3-array/src/range.js"),a=n(/*! ./ticks */"./node_modules/d3-array/src/ticks.js"),l=n(/*! ./threshold/sturges */"./node_modules/d3-array/src/threshold/sturges.js");e.default=function(){var t=s.default,e=u.default,n=l.default;function d(r){var i,u,s=r.length,l=new Array(s);for(i=0;i<s;++i)l[i]=t(r[i],i,r);var d=e(l),f=d[0],h=d[1],p=n(l,f,h);Array.isArray(p)||(p=Object(a.tickStep)(f,h,p),p=Object(c.default)(Math.ceil(f/p)*p,h,p));for(var m=p.length;p[0]<=f;)p.shift(),--m;for(;p[m-1]>h;)p.pop(),--m;var y,v=new Array(m+1);for(i=0;i<=m;++i)(y=v[i]=[]).x0=i>0?p[i-1]:f,y.x1=i<m?p[i]:h;for(i=0;i<s;++i)f<=(u=l[i])&&u<=h&&v[Object(o.default)(p,u,0,m)].push(r[i]);return v}return d.value=function(e){return arguments.length?(t="function"==typeof e?e:Object(i.default)(e),d):t},d.domain=function(t){return arguments.length?(e="function"==typeof t?t:Object(i.default)([t[0],t[1]]),d):e},d.thresholds=function(t){return arguments.length?(n="function"==typeof t?t:Array.isArray(t)?Object(i.default)(r.slice.call(t)):Object(i.default)(t),d):n},d}},"./node_modules/d3-array/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return t}},"./node_modules/d3-array/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/index.js ***!
  \********************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, ascending, bisector, cross, descending, deviation, extent, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, mean, median, merge, min, pairs, permute, quantile, range, scan, shuffle, sum, ticks, tickIncrement, tickStep, transpose, variance, zip */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./bisect */"./node_modules/d3-array/src/bisect.js");n.d(e,"bisect",function(){return r.default}),n.d(e,"bisectRight",function(){return r.bisectRight}),n.d(e,"bisectLeft",function(){return r.bisectLeft});var o=n(/*! ./ascending */"./node_modules/d3-array/src/ascending.js");n.d(e,"ascending",function(){return o.default});var i=n(/*! ./bisector */"./node_modules/d3-array/src/bisector.js");n.d(e,"bisector",function(){return i.default});var u=n(/*! ./cross */"./node_modules/d3-array/src/cross.js");n.d(e,"cross",function(){return u.default});var s=n(/*! ./descending */"./node_modules/d3-array/src/descending.js");n.d(e,"descending",function(){return s.default});var c=n(/*! ./deviation */"./node_modules/d3-array/src/deviation.js");n.d(e,"deviation",function(){return c.default});var a=n(/*! ./extent */"./node_modules/d3-array/src/extent.js");n.d(e,"extent",function(){return a.default});var l=n(/*! ./histogram */"./node_modules/d3-array/src/histogram.js");n.d(e,"histogram",function(){return l.default});var d=n(/*! ./threshold/freedmanDiaconis */"./node_modules/d3-array/src/threshold/freedmanDiaconis.js");n.d(e,"thresholdFreedmanDiaconis",function(){return d.default});var f=n(/*! ./threshold/scott */"./node_modules/d3-array/src/threshold/scott.js");n.d(e,"thresholdScott",function(){return f.default});var h=n(/*! ./threshold/sturges */"./node_modules/d3-array/src/threshold/sturges.js");n.d(e,"thresholdSturges",function(){return h.default});var p=n(/*! ./max */"./node_modules/d3-array/src/max.js");n.d(e,"max",function(){return p.default});var m=n(/*! ./mean */"./node_modules/d3-array/src/mean.js");n.d(e,"mean",function(){return m.default});var y=n(/*! ./median */"./node_modules/d3-array/src/median.js");n.d(e,"median",function(){return y.default});var v=n(/*! ./merge */"./node_modules/d3-array/src/merge.js");n.d(e,"merge",function(){return v.default});var g=n(/*! ./min */"./node_modules/d3-array/src/min.js");n.d(e,"min",function(){return g.default});var j=n(/*! ./pairs */"./node_modules/d3-array/src/pairs.js");n.d(e,"pairs",function(){return j.default});var b=n(/*! ./permute */"./node_modules/d3-array/src/permute.js");n.d(e,"permute",function(){return b.default});var _=n(/*! ./quantile */"./node_modules/d3-array/src/quantile.js");n.d(e,"quantile",function(){return _.default});var x=n(/*! ./range */"./node_modules/d3-array/src/range.js");n.d(e,"range",function(){return x.default});var w=n(/*! ./scan */"./node_modules/d3-array/src/scan.js");n.d(e,"scan",function(){return w.default});var A=n(/*! ./shuffle */"./node_modules/d3-array/src/shuffle.js");n.d(e,"shuffle",function(){return A.default});var O=n(/*! ./sum */"./node_modules/d3-array/src/sum.js");n.d(e,"sum",function(){return O.default});var k=n(/*! ./ticks */"./node_modules/d3-array/src/ticks.js");n.d(e,"ticks",function(){return k.default}),n.d(e,"tickIncrement",function(){return k.tickIncrement}),n.d(e,"tickStep",function(){return k.tickStep});var S=n(/*! ./transpose */"./node_modules/d3-array/src/transpose.js");n.d(e,"transpose",function(){return S.default});var C=n(/*! ./variance */"./node_modules/d3-array/src/variance.js");n.d(e,"variance",function(){return C.default});var B=n(/*! ./zip */"./node_modules/d3-array/src/zip.js");n.d(e,"zip",function(){return B.default})},"./node_modules/d3-array/src/max.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/max.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){var n,r,o=t.length,i=-1;if(null==e){for(;++i<o;)if(null!=(n=t[i])&&n>=n)for(r=n;++i<o;)null!=(n=t[i])&&n>r&&(r=n)}else for(;++i<o;)if(null!=(n=e(t[i],i,t))&&n>=n)for(r=n;++i<o;)null!=(n=e(t[i],i,t))&&n>r&&(r=n);return r}},"./node_modules/d3-array/src/mean.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/mean.js ***!
  \*******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./number */"./node_modules/d3-array/src/number.js");e.default=function(t,e){var n,o=t.length,i=o,u=-1,s=0;if(null==e)for(;++u<o;)isNaN(n=Object(r.default)(t[u]))?--i:s+=n;else for(;++u<o;)isNaN(n=Object(r.default)(e(t[u],u,t)))?--i:s+=n;if(i)return s/i}},"./node_modules/d3-array/src/median.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/median.js ***!
  \*********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./ascending */"./node_modules/d3-array/src/ascending.js"),o=n(/*! ./number */"./node_modules/d3-array/src/number.js"),i=n(/*! ./quantile */"./node_modules/d3-array/src/quantile.js");e.default=function(t,e){var n,u=t.length,s=-1,c=[];if(null==e)for(;++s<u;)isNaN(n=Object(o.default)(t[s]))||c.push(n);else for(;++s<u;)isNaN(n=Object(o.default)(e(t[s],s,t)))||c.push(n);return Object(i.default)(c.sort(r.default),.5)}},"./node_modules/d3-array/src/merge.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/merge.js ***!
  \********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){for(var e,n,r,o=t.length,i=-1,u=0;++i<o;)u+=t[i].length;for(n=new Array(u);--o>=0;)for(e=(r=t[o]).length;--e>=0;)n[--u]=r[e];return n}},"./node_modules/d3-array/src/min.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/min.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){var n,r,o=t.length,i=-1;if(null==e){for(;++i<o;)if(null!=(n=t[i])&&n>=n)for(r=n;++i<o;)null!=(n=t[i])&&r>n&&(r=n)}else for(;++i<o;)if(null!=(n=e(t[i],i,t))&&n>=n)for(r=n;++i<o;)null!=(n=e(t[i],i,t))&&r>n&&(r=n);return r}},"./node_modules/d3-array/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/number.js ***!
  \*********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return null===t?NaN:+t}},"./node_modules/d3-array/src/pairs.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/pairs.js ***!
  \********************************************/
/*! exports provided: default, pair */function(t,e,n){"use strict";function r(t,e){return[t,e]}n.r(e),n.d(e,"pair",function(){return r}),e.default=function(t,e){null==e&&(e=r);for(var n=0,o=t.length-1,i=t[0],u=new Array(o<0?0:o);n<o;)u[n]=e(i,i=t[++n]);return u}},"./node_modules/d3-array/src/permute.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/permute.js ***!
  \**********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){for(var n=e.length,r=new Array(n);n--;)r[n]=t[e[n]];return r}},"./node_modules/d3-array/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./number */"./node_modules/d3-array/src/number.js");e.default=function(t,e,n){if(null==n&&(n=r.default),o=t.length){if((e=+e)<=0||o<2)return+n(t[0],0,t);if(e>=1)return+n(t[o-1],o-1,t);var o,i=(o-1)*e,u=Math.floor(i),s=+n(t[u],u,t);return s+(+n(t[u+1],u+1,t)-s)*(i-u)}}},"./node_modules/d3-array/src/range.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/range.js ***!
  \********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e,n){t=+t,e=+e,n=(o=arguments.length)<2?(e=t,t=0,1):o<3?1:+n;for(var r=-1,o=0|Math.max(0,Math.ceil((e-t)/n)),i=new Array(o);++r<o;)i[r]=t+r*n;return i}},"./node_modules/d3-array/src/scan.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/scan.js ***!
  \*******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./ascending */"./node_modules/d3-array/src/ascending.js");e.default=function(t,e){if(n=t.length){var n,o,i=0,u=0,s=t[u];for(null==e&&(e=r.default);++i<n;)(e(o=t[i],s)<0||0!==e(s,s))&&(s=o,u=i);return 0===e(s,s)?u:void 0}}},"./node_modules/d3-array/src/shuffle.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/shuffle.js ***!
  \**********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e,n){for(var r,o,i=(null==n?t.length:n)-(e=null==e?0:+e);i;)o=Math.random()*i--|0,r=t[i+e],t[i+e]=t[o+e],t[o+e]=r;return t}},"./node_modules/d3-array/src/sum.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/sum.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){var n,r=t.length,o=-1,i=0;if(null==e)for(;++o<r;)(n=+t[o])&&(i+=n);else for(;++o<r;)(n=+e(t[o],o,t))&&(i+=n);return i}},"./node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../array */"./node_modules/d3-array/src/array.js"),o=n(/*! ../ascending */"./node_modules/d3-array/src/ascending.js"),i=n(/*! ../number */"./node_modules/d3-array/src/number.js"),u=n(/*! ../quantile */"./node_modules/d3-array/src/quantile.js");e.default=function(t,e,n){return t=r.map.call(t,i.default).sort(o.default),Math.ceil((n-e)/(2*(Object(u.default)(t,.75)-Object(u.default)(t,.25))*Math.pow(t.length,-1/3)))}},"./node_modules/d3-array/src/threshold/scott.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/scott.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../deviation */"./node_modules/d3-array/src/deviation.js");e.default=function(t,e,n){return Math.ceil((n-e)/(3.5*Object(r.default)(t)*Math.pow(t.length,-1/3)))}},"./node_modules/d3-array/src/threshold/sturges.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/sturges.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1}},"./node_modules/d3-array/src/ticks.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/ticks.js ***!
  \********************************************/
/*! exports provided: default, tickIncrement, tickStep */function(t,e,n){"use strict";n.r(e),n.d(e,"tickIncrement",function(){return u}),n.d(e,"tickStep",function(){return s});var r=Math.sqrt(50),o=Math.sqrt(10),i=Math.sqrt(2);function u(t,e,n){var u=(e-t)/Math.max(0,n),s=Math.floor(Math.log(u)/Math.LN10),c=u/Math.pow(10,s);return s>=0?(c>=r?10:c>=o?5:c>=i?2:1)*Math.pow(10,s):-Math.pow(10,-s)/(c>=r?10:c>=o?5:c>=i?2:1)}function s(t,e,n){var u=Math.abs(e-t)/Math.max(0,n),s=Math.pow(10,Math.floor(Math.log(u)/Math.LN10)),c=u/s;return c>=r?s*=10:c>=o?s*=5:c>=i&&(s*=2),e<t?-s:s}e.default=function(t,e,n){var r,o,i,s,c=-1;if(n=+n,(t=+t)===(e=+e)&&n>0)return[t];if((r=e<t)&&(o=t,t=e,e=o),0===(s=u(t,e,n))||!isFinite(s))return[];if(s>0)for(t=Math.ceil(t/s),e=Math.floor(e/s),i=new Array(o=Math.ceil(e-t+1));++c<o;)i[c]=(t+c)*s;else for(t=Math.floor(t*s),e=Math.ceil(e*s),i=new Array(o=Math.ceil(t-e+1));++c<o;)i[c]=(t-c)/s;return r&&i.reverse(),i}},"./node_modules/d3-array/src/transpose.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/transpose.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./min */"./node_modules/d3-array/src/min.js");function o(t){return t.length}e.default=function(t){if(!(u=t.length))return[];for(var e=-1,n=Object(r.default)(t,o),i=new Array(n);++e<n;)for(var u,s=-1,c=i[e]=new Array(u);++s<u;)c[s]=t[s][e];return i}},"./node_modules/d3-array/src/variance.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/variance.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./number */"./node_modules/d3-array/src/number.js");e.default=function(t,e){var n,o,i=t.length,u=0,s=-1,c=0,a=0;if(null==e)for(;++s<i;)isNaN(n=Object(r.default)(t[s]))||(a+=(o=n-c)*(n-(c+=o/++u)));else for(;++s<i;)isNaN(n=Object(r.default)(e(t[s],s,t)))||(a+=(o=n-c)*(n-(c+=o/++u)));if(u>1)return a/(u-1)}},"./node_modules/d3-array/src/zip.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/zip.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./transpose */"./node_modules/d3-array/src/transpose.js");e.default=function(){return Object(r.default)(arguments)}},"./node_modules/d3-collection/src/entries.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-collection/src/entries.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){var e=[];for(var n in t)e.push({key:n,value:t[n]});return e}},"./node_modules/d3-collection/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-collection/src/index.js ***!
  \*************************************************/
/*! exports provided: nest, set, map, keys, values, entries */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./nest */"./node_modules/d3-collection/src/nest.js");n.d(e,"nest",function(){return r.default});var o=n(/*! ./set */"./node_modules/d3-collection/src/set.js");n.d(e,"set",function(){return o.default});var i=n(/*! ./map */"./node_modules/d3-collection/src/map.js");n.d(e,"map",function(){return i.default});var u=n(/*! ./keys */"./node_modules/d3-collection/src/keys.js");n.d(e,"keys",function(){return u.default});var s=n(/*! ./values */"./node_modules/d3-collection/src/values.js");n.d(e,"values",function(){return s.default});var c=n(/*! ./entries */"./node_modules/d3-collection/src/entries.js");n.d(e,"entries",function(){return c.default})},"./node_modules/d3-collection/src/keys.js":
/*!************************************************!*\
  !*** ./node_modules/d3-collection/src/keys.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){var e=[];for(var n in t)e.push(n);return e}},"./node_modules/d3-collection/src/map.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-collection/src/map.js ***!
  \***********************************************/
/*! exports provided: prefix, default */function(t,e,n){"use strict";n.r(e),n.d(e,"prefix",function(){return r});var r="$";function o(){}function i(t,e){var n=new o;if(t instanceof o)t.each(function(t,e){n.set(e,t)});else if(Array.isArray(t)){var r,i=-1,u=t.length;if(null==e)for(;++i<u;)n.set(i,t[i]);else for(;++i<u;)n.set(e(r=t[i],i,t),r)}else if(t)for(var s in t)n.set(s,t[s]);return n}o.prototype=i.prototype={constructor:o,has:function(t){return r+t in this},get:function(t){return this[r+t]},set:function(t,e){return this[r+t]=e,this},remove:function(t){var e=r+t;return e in this&&delete this[e]},clear:function(){for(var t in this)t[0]===r&&delete this[t]},keys:function(){var t=[];for(var e in this)e[0]===r&&t.push(e.slice(1));return t},values:function(){var t=[];for(var e in this)e[0]===r&&t.push(this[e]);return t},entries:function(){var t=[];for(var e in this)e[0]===r&&t.push({key:e.slice(1),value:this[e]});return t},size:function(){var t=0;for(var e in this)e[0]===r&&++t;return t},empty:function(){for(var t in this)if(t[0]===r)return!1;return!0},each:function(t){for(var e in this)e[0]===r&&t(this[e],e.slice(1),this)}},e.default=i},"./node_modules/d3-collection/src/nest.js":
/*!************************************************!*\
  !*** ./node_modules/d3-collection/src/nest.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./map */"./node_modules/d3-collection/src/map.js");function o(){return{}}function i(t,e,n){t[e]=n}function u(){return Object(r.default)()}function s(t,e,n){t.set(e,n)}e.default=function(){var t,e,n,c=[],a=[];function l(n,o,i,u){if(o>=c.length)return null!=t&&n.sort(t),null!=e?e(n):n;for(var s,a,d,f=-1,h=n.length,p=c[o++],m=Object(r.default)(),y=i();++f<h;)(d=m.get(s=p(a=n[f])+""))?d.push(a):m.set(s,[a]);return m.each(function(t,e){u(y,e,l(t,o,i,u))}),y}return n={object:function(t){return l(t,0,o,i)},map:function(t){return l(t,0,u,s)},entries:function(t){return function t(n,r){if(++r>c.length)return n;var o,i=a[r-1];return null!=e&&r>=c.length?o=n.entries():(o=[],n.each(function(e,n){o.push({key:n,values:t(e,r)})})),null!=i?o.sort(function(t,e){return i(t.key,e.key)}):o}(l(t,0,u,s),0)},key:function(t){return c.push(t),n},sortKeys:function(t){return a[c.length-1]=t,n},sortValues:function(e){return t=e,n},rollup:function(t){return e=t,n}}}},"./node_modules/d3-collection/src/set.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-collection/src/set.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./map */"./node_modules/d3-collection/src/map.js");function o(){}var i=r.default.prototype;function u(t,e){var n=new o;if(t instanceof o)t.each(function(t){n.add(t)});else if(t){var r=-1,i=t.length;if(null==e)for(;++r<i;)n.add(t[r]);else for(;++r<i;)n.add(e(t[r],r,t))}return n}o.prototype=u.prototype={constructor:o,has:i.has,add:function(t){return t+="",this[r.prefix+t]=t,this},remove:i.remove,clear:i.clear,values:i.keys,size:i.size,empty:i.empty,each:i.each},e.default=u},"./node_modules/d3-collection/src/values.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-collection/src/values.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){var e=[];for(var n in t)e.push(t[n]);return e}},"./node_modules/d3-color/src/color.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/color.js ***!
  \********************************************/
/*! exports provided: Color, darker, brighter, default, rgbConvert, rgb, Rgb, hslConvert, hsl */function(t,e,n){"use strict";n.r(e),n.d(e,"Color",function(){return o}),n.d(e,"darker",function(){return i}),n.d(e,"brighter",function(){return u}),n.d(e,"default",function(){return j}),n.d(e,"rgbConvert",function(){return x}),n.d(e,"rgb",function(){return w}),n.d(e,"Rgb",function(){return A}),n.d(e,"hslConvert",function(){return S}),n.d(e,"hsl",function(){return C});var r=n(/*! ./define */"./node_modules/d3-color/src/define.js");function o(){}var i=.7,u=1/i,s="\\s*([+-]?\\d+)\\s*",c="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",a="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",l=/^#([0-9a-f]{3})$/,d=/^#([0-9a-f]{6})$/,f=new RegExp("^rgb\\("+[s,s,s]+"\\)$"),h=new RegExp("^rgb\\("+[a,a,a]+"\\)$"),p=new RegExp("^rgba\\("+[s,s,s,c]+"\\)$"),m=new RegExp("^rgba\\("+[a,a,a,c]+"\\)$"),y=new RegExp("^hsl\\("+[c,a,a]+"\\)$"),v=new RegExp("^hsla\\("+[c,a,a,c]+"\\)$"),g={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function j(t){var e;return t=(t+"").trim().toLowerCase(),(e=l.exec(t))?new A((e=parseInt(e[1],16))>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):(e=d.exec(t))?b(parseInt(e[1],16)):(e=f.exec(t))?new A(e[1],e[2],e[3],1):(e=h.exec(t))?new A(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=p.exec(t))?_(e[1],e[2],e[3],e[4]):(e=m.exec(t))?_(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=y.exec(t))?k(e[1],e[2]/100,e[3]/100,1):(e=v.exec(t))?k(e[1],e[2]/100,e[3]/100,e[4]):g.hasOwnProperty(t)?b(g[t]):"transparent"===t?new A(NaN,NaN,NaN,0):null}function b(t){return new A(t>>16&255,t>>8&255,255&t,1)}function _(t,e,n,r){return r<=0&&(t=e=n=NaN),new A(t,e,n,r)}function x(t){return t instanceof o||(t=j(t)),t?new A((t=t.rgb()).r,t.g,t.b,t.opacity):new A}function w(t,e,n,r){return 1===arguments.length?x(t):new A(t,e,n,null==r?1:r)}function A(t,e,n,r){this.r=+t,this.g=+e,this.b=+n,this.opacity=+r}function O(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function k(t,e,n,r){return r<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new B(t,e,n,r)}function S(t){if(t instanceof B)return new B(t.h,t.s,t.l,t.opacity);if(t instanceof o||(t=j(t)),!t)return new B;if(t instanceof B)return t;var e=(t=t.rgb()).r/255,n=t.g/255,r=t.b/255,i=Math.min(e,n,r),u=Math.max(e,n,r),s=NaN,c=u-i,a=(u+i)/2;return c?(s=e===u?(n-r)/c+6*(n<r):n===u?(r-e)/c+2:(e-n)/c+4,c/=a<.5?u+i:2-u-i,s*=60):c=a>0&&a<1?0:s,new B(s,c,a,t.opacity)}function C(t,e,n,r){return 1===arguments.length?S(t):new B(t,e,n,null==r?1:r)}function B(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}function F(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}Object(r.default)(o,j,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Object(r.default)(A,w,Object(r.extend)(o,{brighter:function(t){return t=null==t?u:Math.pow(u,t),new A(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?i:Math.pow(i,t),new A(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+O(this.r)+O(this.g)+O(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Object(r.default)(B,C,Object(r.extend)(o,{brighter:function(t){return t=null==t?u:Math.pow(u,t),new B(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?i:Math.pow(i,t),new B(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*e,o=2*n-r;return new A(F(t>=240?t-240:t+120,o,r),F(t,o,r),F(t<120?t+240:t-120,o,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}))},"./node_modules/d3-color/src/cubehelix.js":
/*!************************************************!*\
  !*** ./node_modules/d3-color/src/cubehelix.js ***!
  \************************************************/
/*! exports provided: default, Cubehelix */function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return p}),n.d(e,"Cubehelix",function(){return m});var r=n(/*! ./define */"./node_modules/d3-color/src/define.js"),o=n(/*! ./color */"./node_modules/d3-color/src/color.js"),i=n(/*! ./math */"./node_modules/d3-color/src/math.js"),u=-.14861,s=1.78277,c=-.29227,a=-.90649,l=1.97294,d=l*a,f=l*s,h=s*c-a*u;function p(t,e,n,r){return 1===arguments.length?function(t){if(t instanceof m)return new m(t.h,t.s,t.l,t.opacity);t instanceof o.Rgb||(t=Object(o.rgbConvert)(t));var e=t.r/255,n=t.g/255,r=t.b/255,u=(h*r+d*e-f*n)/(h+d-f),s=r-u,p=(l*(n-u)-c*s)/a,y=Math.sqrt(p*p+s*s)/(l*u*(1-u)),v=y?Math.atan2(p,s)*i.rad2deg-120:NaN;return new m(v<0?v+360:v,y,u,t.opacity)}(t):new m(t,e,n,null==r?1:r)}function m(t,e,n,r){this.h=+t,this.s=+e,this.l=+n,this.opacity=+r}Object(r.default)(m,p,Object(r.extend)(o.Color,{brighter:function(t){return t=null==t?o.brighter:Math.pow(o.brighter,t),new m(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?o.darker:Math.pow(o.darker,t),new m(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*i.deg2rad,e=+this.l,n=isNaN(this.s)?0:this.s*e*(1-e),r=Math.cos(t),d=Math.sin(t);return new o.Rgb(255*(e+n*(u*r+s*d)),255*(e+n*(c*r+a*d)),255*(e+n*(l*r)),this.opacity)}}))},"./node_modules/d3-color/src/define.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-color/src/define.js ***!
  \*********************************************/
/*! exports provided: default, extend */function(t,e,n){"use strict";function r(t,e){var n=Object.create(t.prototype);for(var r in e)n[r]=e[r];return n}n.r(e),n.d(e,"extend",function(){return r}),e.default=function(t,e,n){t.prototype=e.prototype=n,n.constructor=t}},"./node_modules/d3-color/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/index.js ***!
  \********************************************/
/*! exports provided: color, rgb, hsl, lab, hcl, lch, gray, cubehelix */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./color */"./node_modules/d3-color/src/color.js");n.d(e,"color",function(){return r.default}),n.d(e,"rgb",function(){return r.rgb}),n.d(e,"hsl",function(){return r.hsl});var o=n(/*! ./lab */"./node_modules/d3-color/src/lab.js");n.d(e,"lab",function(){return o.default}),n.d(e,"hcl",function(){return o.hcl}),n.d(e,"lch",function(){return o.lch}),n.d(e,"gray",function(){return o.gray});var i=n(/*! ./cubehelix */"./node_modules/d3-color/src/cubehelix.js");n.d(e,"cubehelix",function(){return i.default})},"./node_modules/d3-color/src/lab.js":
/*!******************************************!*\
  !*** ./node_modules/d3-color/src/lab.js ***!
  \******************************************/
/*! exports provided: gray, default, Lab, lch, hcl, Hcl */function(t,e,n){"use strict";n.r(e),n.d(e,"gray",function(){return p}),n.d(e,"default",function(){return m}),n.d(e,"Lab",function(){return y}),n.d(e,"lch",function(){return x}),n.d(e,"hcl",function(){return w}),n.d(e,"Hcl",function(){return A});var r=n(/*! ./define */"./node_modules/d3-color/src/define.js"),o=n(/*! ./color */"./node_modules/d3-color/src/color.js"),i=n(/*! ./math */"./node_modules/d3-color/src/math.js"),u=.96422,s=1,c=.82521,a=4/29,l=6/29,d=3*l*l,f=l*l*l;function h(t){if(t instanceof y)return new y(t.l,t.a,t.b,t.opacity);if(t instanceof A){if(isNaN(t.h))return new y(t.l,0,0,t.opacity);var e=t.h*i.deg2rad;return new y(t.l,Math.cos(e)*t.c,Math.sin(e)*t.c,t.opacity)}t instanceof o.Rgb||(t=Object(o.rgbConvert)(t));var n,r,a=b(t.r),l=b(t.g),d=b(t.b),f=v((.2225045*a+.7168786*l+.0606169*d)/s);return a===l&&l===d?n=r=f:(n=v((.4360747*a+.3850649*l+.1430804*d)/u),r=v((.0139322*a+.0971045*l+.7141733*d)/c)),new y(116*f-16,500*(n-f),200*(f-r),t.opacity)}function p(t,e){return new y(t,0,0,null==e?1:e)}function m(t,e,n,r){return 1===arguments.length?h(t):new y(t,e,n,null==r?1:r)}function y(t,e,n,r){this.l=+t,this.a=+e,this.b=+n,this.opacity=+r}function v(t){return t>f?Math.pow(t,1/3):t/d+a}function g(t){return t>l?t*t*t:d*(t-a)}function j(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function b(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function _(t){if(t instanceof A)return new A(t.h,t.c,t.l,t.opacity);if(t instanceof y||(t=h(t)),0===t.a&&0===t.b)return new A(NaN,0,t.l,t.opacity);var e=Math.atan2(t.b,t.a)*i.rad2deg;return new A(e<0?e+360:e,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function x(t,e,n,r){return 1===arguments.length?_(t):new A(n,e,t,null==r?1:r)}function w(t,e,n,r){return 1===arguments.length?_(t):new A(t,e,n,null==r?1:r)}function A(t,e,n,r){this.h=+t,this.c=+e,this.l=+n,this.opacity=+r}Object(r.default)(y,m,Object(r.extend)(o.Color,{brighter:function(t){return new y(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new y(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,e=isNaN(this.a)?t:t+this.a/500,n=isNaN(this.b)?t:t-this.b/200;return e=u*g(e),t=s*g(t),n=c*g(n),new o.Rgb(j(3.1338561*e-1.6168667*t-.4906146*n),j(-.9787684*e+1.9161415*t+.033454*n),j(.0719453*e-.2289914*t+1.4052427*n),this.opacity)}})),Object(r.default)(A,w,Object(r.extend)(o.Color,{brighter:function(t){return new A(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new A(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return h(this).rgb()}}))},"./node_modules/d3-color/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-color/src/math.js ***!
  \*******************************************/
/*! exports provided: deg2rad, rad2deg */function(t,e,n){"use strict";n.r(e),n.d(e,"deg2rad",function(){return r}),n.d(e,"rad2deg",function(){return o});var r=Math.PI/180,o=180/Math.PI},"./node_modules/d3-dispatch/src/dispatch.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-dispatch/src/dispatch.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r={value:function(){}};function o(){for(var t,e=0,n=arguments.length,r={};e<n;++e){if(!(t=arguments[e]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new i(r)}function i(t){this._=t}function u(t,e){for(var n,r=0,o=t.length;r<o;++r)if((n=t[r]).name===e)return n.value}function s(t,e,n){for(var o=0,i=t.length;o<i;++o)if(t[o].name===e){t[o]=r,t=t.slice(0,o).concat(t.slice(o+1));break}return null!=n&&t.push({name:e,value:n}),t}i.prototype=o.prototype={constructor:i,on:function(t,e){var n,r,o=this._,i=(r=o,(t+"").trim().split(/^|\s+/).map(function(t){var e="",n=t.indexOf(".");if(n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})),c=-1,a=i.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++c<a;)if(n=(t=i[c]).type)o[n]=s(o[n],t.name,e);else if(null==e)for(n in o)o[n]=s(o[n],t.name,null);return this}for(;++c<a;)if((n=(t=i[c]).type)&&(n=u(o[n],t.name)))return n},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new i(t)},call:function(t,e){if((n=arguments.length-2)>0)for(var n,r,o=new Array(n),i=0;i<n;++i)o[i]=arguments[i+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(i=0,n=(r=this._[t]).length;i<n;++i)r[i].value.apply(e,o)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],o=0,i=r.length;o<i;++o)r[o].value.apply(e,n)}},e.default=o},"./node_modules/d3-dispatch/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-dispatch/src/index.js ***!
  \***********************************************/
/*! exports provided: dispatch */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./dispatch */"./node_modules/d3-dispatch/src/dispatch.js");n.d(e,"dispatch",function(){return r.default})},"./node_modules/d3-drag/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-drag/src/constant.js ***!
  \**********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return t}}},"./node_modules/d3-drag/src/drag.js":
/*!******************************************!*\
  !*** ./node_modules/d3-drag/src/drag.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-dispatch */"./node_modules/d3-dispatch/src/index.js"),o=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),i=n(/*! ./nodrag */"./node_modules/d3-drag/src/nodrag.js"),u=n(/*! ./noevent */"./node_modules/d3-drag/src/noevent.js"),s=n(/*! ./constant */"./node_modules/d3-drag/src/constant.js"),c=n(/*! ./event */"./node_modules/d3-drag/src/event.js");function a(){return!o.event.button}function l(){return this.parentNode}function d(t){return null==t?{x:o.event.x,y:o.event.y}:t}function f(){return"ontouchstart"in this}e.default=function(){var t,e,n,h,p=a,m=l,y=d,v=f,g={},j=Object(r.dispatch)("start","drag","end"),b=0,_=0;function x(t){t.on("mousedown.drag",w).filter(v).on("touchstart.drag",k).on("touchmove.drag",S).on("touchend.drag touchcancel.drag",C).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function w(){if(!h&&p.apply(this,arguments)){var r=B("mouse",m.apply(this,arguments),o.mouse,this,arguments);r&&(Object(o.select)(o.event.view).on("mousemove.drag",A,!0).on("mouseup.drag",O,!0),Object(i.default)(o.event.view),Object(u.nopropagation)(),n=!1,t=o.event.clientX,e=o.event.clientY,r("start"))}}function A(){if(Object(u.default)(),!n){var r=o.event.clientX-t,i=o.event.clientY-e;n=r*r+i*i>_}g.mouse("drag")}function O(){Object(o.select)(o.event.view).on("mousemove.drag mouseup.drag",null),Object(i.yesdrag)(o.event.view,n),Object(u.default)(),g.mouse("end")}function k(){if(p.apply(this,arguments)){var t,e,n=o.event.changedTouches,r=m.apply(this,arguments),i=n.length;for(t=0;t<i;++t)(e=B(n[t].identifier,r,o.touch,this,arguments))&&(Object(u.nopropagation)(),e("start"))}}function S(){var t,e,n=o.event.changedTouches,r=n.length;for(t=0;t<r;++t)(e=g[n[t].identifier])&&(Object(u.default)(),e("drag"))}function C(){var t,e,n=o.event.changedTouches,r=n.length;for(h&&clearTimeout(h),h=setTimeout(function(){h=null},500),t=0;t<r;++t)(e=g[n[t].identifier])&&(Object(u.nopropagation)(),e("end"))}function B(t,e,n,r,i){var u,s,a,l=n(e,t),d=j.copy();if(Object(o.customEvent)(new c.default(x,"beforestart",u,t,b,l[0],l[1],0,0,d),function(){return null!=(o.event.subject=u=y.apply(r,i))&&(s=u.x-l[0]||0,a=u.y-l[1]||0,!0)}))return function f(h){var p,m=l;switch(h){case"start":g[t]=f,p=b++;break;case"end":delete g[t],--b;case"drag":l=n(e,t),p=b}Object(o.customEvent)(new c.default(x,h,u,t,p,l[0]+s,l[1]+a,l[0]-m[0],l[1]-m[1],d),d.apply,d,[h,r,i])}}return x.filter=function(t){return arguments.length?(p="function"==typeof t?t:Object(s.default)(!!t),x):p},x.container=function(t){return arguments.length?(m="function"==typeof t?t:Object(s.default)(t),x):m},x.subject=function(t){return arguments.length?(y="function"==typeof t?t:Object(s.default)(t),x):y},x.touchable=function(t){return arguments.length?(v="function"==typeof t?t:Object(s.default)(!!t),x):v},x.on=function(){var t=j.on.apply(j,arguments);return t===j?x:t},x.clickDistance=function(t){return arguments.length?(_=(t=+t)*t,x):Math.sqrt(_)},x}},"./node_modules/d3-drag/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/event.js ***!
  \*******************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t,e,n,r,o,i,u,s,c,a){this.target=t,this.type=e,this.subject=n,this.identifier=r,this.active=o,this.x=i,this.y=u,this.dx=s,this.dy=c,this._=a}n.r(e),n.d(e,"default",function(){return r}),r.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t}},"./node_modules/d3-drag/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/index.js ***!
  \*******************************************/
/*! exports provided: drag, dragDisable, dragEnable */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./drag */"./node_modules/d3-drag/src/drag.js");n.d(e,"drag",function(){return r.default});var o=n(/*! ./nodrag */"./node_modules/d3-drag/src/nodrag.js");n.d(e,"dragDisable",function(){return o.default}),n.d(e,"dragEnable",function(){return o.yesdrag})},"./node_modules/d3-drag/src/nodrag.js":
/*!********************************************!*\
  !*** ./node_modules/d3-drag/src/nodrag.js ***!
  \********************************************/
/*! exports provided: default, yesdrag */function(t,e,n){"use strict";n.r(e),n.d(e,"yesdrag",function(){return i});var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! ./noevent */"./node_modules/d3-drag/src/noevent.js");function i(t,e){var n=t.document.documentElement,i=Object(r.select)(t).on("dragstart.drag",null);e&&(i.on("click.drag",o.default,!0),setTimeout(function(){i.on("click.drag",null)},0)),"onselectstart"in n?i.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}e.default=function(t){var e=t.document.documentElement,n=Object(r.select)(t).on("dragstart.drag",o.default,!0);"onselectstart"in e?n.on("selectstart.drag",o.default,!0):(e.__noselect=e.style.MozUserSelect,e.style.MozUserSelect="none")}},"./node_modules/d3-drag/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-drag/src/noevent.js ***!
  \*********************************************/
/*! exports provided: nopropagation, default */function(t,e,n){"use strict";n.r(e),n.d(e,"nopropagation",function(){return o});var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js");function o(){r.event.stopImmediatePropagation()}e.default=function(){r.event.preventDefault(),r.event.stopImmediatePropagation()}},"./node_modules/d3-ease/src/back.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/back.js ***!
  \******************************************/
/*! exports provided: backIn, backOut, backInOut */function(t,e,n){"use strict";n.r(e),n.d(e,"backIn",function(){return r}),n.d(e,"backOut",function(){return o}),n.d(e,"backInOut",function(){return i});var r=function t(e){function n(t){return t*t*((e+1)*t-e)}return e=+e,n.overshoot=t,n}(1.70158),o=function t(e){function n(t){return--t*t*((e+1)*t+e)+1}return e=+e,n.overshoot=t,n}(1.70158),i=function t(e){function n(t){return((t*=2)<1?t*t*((e+1)*t-e):(t-=2)*t*((e+1)*t+e)+2)/2}return e=+e,n.overshoot=t,n}(1.70158)},"./node_modules/d3-ease/src/bounce.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/bounce.js ***!
  \********************************************/
/*! exports provided: bounceIn, bounceOut, bounceInOut */function(t,e,n){"use strict";n.r(e),n.d(e,"bounceIn",function(){return h}),n.d(e,"bounceOut",function(){return p}),n.d(e,"bounceInOut",function(){return m});var r=4/11,o=6/11,i=8/11,u=.75,s=9/11,c=10/11,a=.9375,l=21/22,d=63/64,f=1/r/r;function h(t){return 1-p(1-t)}function p(t){return(t=+t)<r?f*t*t:t<i?f*(t-=o)*t+u:t<c?f*(t-=s)*t+a:f*(t-=l)*t+d}function m(t){return((t*=2)<=1?1-p(1-t):p(t-1)+1)/2}},"./node_modules/d3-ease/src/circle.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/circle.js ***!
  \********************************************/
/*! exports provided: circleIn, circleOut, circleInOut */function(t,e,n){"use strict";function r(t){return 1-Math.sqrt(1-t*t)}function o(t){return Math.sqrt(1- --t*t)}function i(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}n.r(e),n.d(e,"circleIn",function(){return r}),n.d(e,"circleOut",function(){return o}),n.d(e,"circleInOut",function(){return i})},"./node_modules/d3-ease/src/cubic.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/cubic.js ***!
  \*******************************************/
/*! exports provided: cubicIn, cubicOut, cubicInOut */function(t,e,n){"use strict";function r(t){return t*t*t}function o(t){return--t*t*t+1}function i(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}n.r(e),n.d(e,"cubicIn",function(){return r}),n.d(e,"cubicOut",function(){return o}),n.d(e,"cubicInOut",function(){return i})},"./node_modules/d3-ease/src/elastic.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-ease/src/elastic.js ***!
  \*********************************************/
/*! exports provided: elasticIn, elasticOut, elasticInOut */function(t,e,n){"use strict";n.r(e),n.d(e,"elasticIn",function(){return o}),n.d(e,"elasticOut",function(){return i}),n.d(e,"elasticInOut",function(){return u});var r=2*Math.PI,o=function t(e,n){var o=Math.asin(1/(e=Math.max(1,e)))*(n/=r);function i(t){return e*Math.pow(2,10*--t)*Math.sin((o-t)/n)}return i.amplitude=function(e){return t(e,n*r)},i.period=function(n){return t(e,n)},i}(1,.3),i=function t(e,n){var o=Math.asin(1/(e=Math.max(1,e)))*(n/=r);function i(t){return 1-e*Math.pow(2,-10*(t=+t))*Math.sin((t+o)/n)}return i.amplitude=function(e){return t(e,n*r)},i.period=function(n){return t(e,n)},i}(1,.3),u=function t(e,n){var o=Math.asin(1/(e=Math.max(1,e)))*(n/=r);function i(t){return((t=2*t-1)<0?e*Math.pow(2,10*t)*Math.sin((o-t)/n):2-e*Math.pow(2,-10*t)*Math.sin((o+t)/n))/2}return i.amplitude=function(e){return t(e,n*r)},i.period=function(n){return t(e,n)},i}(1,.3)},"./node_modules/d3-ease/src/exp.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/exp.js ***!
  \*****************************************/
/*! exports provided: expIn, expOut, expInOut */function(t,e,n){"use strict";function r(t){return Math.pow(2,10*t-10)}function o(t){return 1-Math.pow(2,-10*t)}function i(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}n.r(e),n.d(e,"expIn",function(){return r}),n.d(e,"expOut",function(){return o}),n.d(e,"expInOut",function(){return i})},"./node_modules/d3-ease/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/index.js ***!
  \*******************************************/
/*! exports provided: easeLinear, easeQuad, easeQuadIn, easeQuadOut, easeQuadInOut, easeCubic, easeCubicIn, easeCubicOut, easeCubicInOut, easePoly, easePolyIn, easePolyOut, easePolyInOut, easeSin, easeSinIn, easeSinOut, easeSinInOut, easeExp, easeExpIn, easeExpOut, easeExpInOut, easeCircle, easeCircleIn, easeCircleOut, easeCircleInOut, easeBounce, easeBounceIn, easeBounceOut, easeBounceInOut, easeBack, easeBackIn, easeBackOut, easeBackInOut, easeElastic, easeElasticIn, easeElasticOut, easeElasticInOut */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./linear */"./node_modules/d3-ease/src/linear.js");n.d(e,"easeLinear",function(){return r.linear});var o=n(/*! ./quad */"./node_modules/d3-ease/src/quad.js");n.d(e,"easeQuad",function(){return o.quadInOut}),n.d(e,"easeQuadIn",function(){return o.quadIn}),n.d(e,"easeQuadOut",function(){return o.quadOut}),n.d(e,"easeQuadInOut",function(){return o.quadInOut});var i=n(/*! ./cubic */"./node_modules/d3-ease/src/cubic.js");n.d(e,"easeCubic",function(){return i.cubicInOut}),n.d(e,"easeCubicIn",function(){return i.cubicIn}),n.d(e,"easeCubicOut",function(){return i.cubicOut}),n.d(e,"easeCubicInOut",function(){return i.cubicInOut});var u=n(/*! ./poly */"./node_modules/d3-ease/src/poly.js");n.d(e,"easePoly",function(){return u.polyInOut}),n.d(e,"easePolyIn",function(){return u.polyIn}),n.d(e,"easePolyOut",function(){return u.polyOut}),n.d(e,"easePolyInOut",function(){return u.polyInOut});var s=n(/*! ./sin */"./node_modules/d3-ease/src/sin.js");n.d(e,"easeSin",function(){return s.sinInOut}),n.d(e,"easeSinIn",function(){return s.sinIn}),n.d(e,"easeSinOut",function(){return s.sinOut}),n.d(e,"easeSinInOut",function(){return s.sinInOut});var c=n(/*! ./exp */"./node_modules/d3-ease/src/exp.js");n.d(e,"easeExp",function(){return c.expInOut}),n.d(e,"easeExpIn",function(){return c.expIn}),n.d(e,"easeExpOut",function(){return c.expOut}),n.d(e,"easeExpInOut",function(){return c.expInOut});var a=n(/*! ./circle */"./node_modules/d3-ease/src/circle.js");n.d(e,"easeCircle",function(){return a.circleInOut}),n.d(e,"easeCircleIn",function(){return a.circleIn}),n.d(e,"easeCircleOut",function(){return a.circleOut}),n.d(e,"easeCircleInOut",function(){return a.circleInOut});var l=n(/*! ./bounce */"./node_modules/d3-ease/src/bounce.js");n.d(e,"easeBounce",function(){return l.bounceOut}),n.d(e,"easeBounceIn",function(){return l.bounceIn}),n.d(e,"easeBounceOut",function(){return l.bounceOut}),n.d(e,"easeBounceInOut",function(){return l.bounceInOut});var d=n(/*! ./back */"./node_modules/d3-ease/src/back.js");n.d(e,"easeBack",function(){return d.backInOut}),n.d(e,"easeBackIn",function(){return d.backIn}),n.d(e,"easeBackOut",function(){return d.backOut}),n.d(e,"easeBackInOut",function(){return d.backInOut});var f=n(/*! ./elastic */"./node_modules/d3-ease/src/elastic.js");n.d(e,"easeElastic",function(){return f.elasticOut}),n.d(e,"easeElasticIn",function(){return f.elasticIn}),n.d(e,"easeElasticOut",function(){return f.elasticOut}),n.d(e,"easeElasticInOut",function(){return f.elasticInOut})},"./node_modules/d3-ease/src/linear.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/linear.js ***!
  \********************************************/
/*! exports provided: linear */function(t,e,n){"use strict";function r(t){return+t}n.r(e),n.d(e,"linear",function(){return r})},"./node_modules/d3-ease/src/poly.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/poly.js ***!
  \******************************************/
/*! exports provided: polyIn, polyOut, polyInOut */function(t,e,n){"use strict";n.r(e),n.d(e,"polyIn",function(){return r}),n.d(e,"polyOut",function(){return o}),n.d(e,"polyInOut",function(){return i});var r=function t(e){function n(t){return Math.pow(t,e)}return e=+e,n.exponent=t,n}(3),o=function t(e){function n(t){return 1-Math.pow(1-t,e)}return e=+e,n.exponent=t,n}(3),i=function t(e){function n(t){return((t*=2)<=1?Math.pow(t,e):2-Math.pow(2-t,e))/2}return e=+e,n.exponent=t,n}(3)},"./node_modules/d3-ease/src/quad.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/quad.js ***!
  \******************************************/
/*! exports provided: quadIn, quadOut, quadInOut */function(t,e,n){"use strict";function r(t){return t*t}function o(t){return t*(2-t)}function i(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}n.r(e),n.d(e,"quadIn",function(){return r}),n.d(e,"quadOut",function(){return o}),n.d(e,"quadInOut",function(){return i})},"./node_modules/d3-ease/src/sin.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/sin.js ***!
  \*****************************************/
/*! exports provided: sinIn, sinOut, sinInOut */function(t,e,n){"use strict";n.r(e),n.d(e,"sinIn",function(){return i}),n.d(e,"sinOut",function(){return u}),n.d(e,"sinInOut",function(){return s});var r=Math.PI,o=r/2;function i(t){return 1-Math.cos(t*o)}function u(t){return Math.sin(t*o)}function s(t){return(1-Math.cos(r*t))/2}},"./node_modules/d3-hierarchy/src/accessors.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/accessors.js ***!
  \****************************************************/
/*! exports provided: optional, required */function(t,e,n){"use strict";function r(t){return null==t?null:o(t)}function o(t){if("function"!=typeof t)throw new Error;return t}n.r(e),n.d(e,"optional",function(){return r}),n.d(e,"required",function(){return o})},"./node_modules/d3-hierarchy/src/array.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/array.js ***!
  \************************************************/
/*! exports provided: slice, shuffle */function(t,e,n){"use strict";n.r(e),n.d(e,"slice",function(){return r}),n.d(e,"shuffle",function(){return o});var r=Array.prototype.slice;function o(t){for(var e,n,r=t.length;r;)n=Math.random()*r--|0,e=t[r],t[r]=t[n],t[n]=e;return t}},"./node_modules/d3-hierarchy/src/cluster.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/cluster.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t,e){return t.parent===e.parent?1:2}function o(t,e){return t+e.x}function i(t,e){return Math.max(t,e.y)}n.r(e),e.default=function(){var t=r,e=1,n=1,u=!1;function s(r){var s,c=0;r.eachAfter(function(e){var n=e.children;n?(e.x=function(t){return t.reduce(o,0)/t.length}(n),e.y=function(t){return 1+t.reduce(i,0)}(n)):(e.x=s?c+=t(e,s):0,e.y=0,s=e)});var a=function(t){for(var e;e=t.children;)t=e[0];return t}(r),l=function(t){for(var e;e=t.children;)t=e[e.length-1];return t}(r),d=a.x-t(a,l)/2,f=l.x+t(l,a)/2;return r.eachAfter(u?function(t){t.x=(t.x-r.x)*e,t.y=(r.y-t.y)*n}:function(t){t.x=(t.x-d)/(f-d)*e,t.y=(1-(r.y?t.y/r.y:1))*n})}return s.separation=function(e){return arguments.length?(t=e,s):t},s.size=function(t){return arguments.length?(u=!1,e=+t[0],n=+t[1],s):u?null:[e,n]},s.nodeSize=function(t){return arguments.length?(u=!0,e=+t[0],n=+t[1],s):u?[e,n]:null},s}},"./node_modules/d3-hierarchy/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/constant.js ***!
  \***************************************************/
/*! exports provided: constantZero, default */function(t,e,n){"use strict";function r(){return 0}n.r(e),n.d(e,"constantZero",function(){return r}),e.default=function(t){return function(){return t}}},"./node_modules/d3-hierarchy/src/hierarchy/ancestors.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/ancestors.js ***!
  \**************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e}},"./node_modules/d3-hierarchy/src/hierarchy/count.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/count.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t){var e=0,n=t.children,r=n&&n.length;if(r)for(;--r>=0;)e+=n[r].value;else e=1;t.value=e}n.r(e),e.default=function(){return this.eachAfter(r)}},"./node_modules/d3-hierarchy/src/hierarchy/descendants.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/descendants.js ***!
  \****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){var t=[];return this.each(function(e){t.push(e)}),t}},"./node_modules/d3-hierarchy/src/hierarchy/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/each.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){var e,n,r,o,i=this,u=[i];do{for(e=u.reverse(),u=[];i=e.pop();)if(t(i),n=i.children)for(r=0,o=n.length;r<o;++r)u.push(n[r])}while(u.length);return this}},"./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js ***!
  \**************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){for(var e,n,r,o=this,i=[o],u=[];o=i.pop();)if(u.push(o),e=o.children)for(n=0,r=e.length;n<r;++n)i.push(e[n]);for(;o=u.pop();)t(o);return this}},"./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js ***!
  \***************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){for(var e,n,r=this,o=[r];r=o.pop();)if(t(r),e=r.children)for(n=e.length-1;n>=0;--n)o.push(e[n]);return this}},"./node_modules/d3-hierarchy/src/hierarchy/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/index.js ***!
  \**********************************************************/
/*! exports provided: default, computeHeight, Node */function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return p}),n.d(e,"computeHeight",function(){return v}),n.d(e,"Node",function(){return g});var r=n(/*! ./count */"./node_modules/d3-hierarchy/src/hierarchy/count.js"),o=n(/*! ./each */"./node_modules/d3-hierarchy/src/hierarchy/each.js"),i=n(/*! ./eachBefore */"./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js"),u=n(/*! ./eachAfter */"./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js"),s=n(/*! ./sum */"./node_modules/d3-hierarchy/src/hierarchy/sum.js"),c=n(/*! ./sort */"./node_modules/d3-hierarchy/src/hierarchy/sort.js"),a=n(/*! ./path */"./node_modules/d3-hierarchy/src/hierarchy/path.js"),l=n(/*! ./ancestors */"./node_modules/d3-hierarchy/src/hierarchy/ancestors.js"),d=n(/*! ./descendants */"./node_modules/d3-hierarchy/src/hierarchy/descendants.js"),f=n(/*! ./leaves */"./node_modules/d3-hierarchy/src/hierarchy/leaves.js"),h=n(/*! ./links */"./node_modules/d3-hierarchy/src/hierarchy/links.js");function p(t,e){var n,r,o,i,u,s=new g(t),c=+t.value&&(s.value=t.value),a=[s];for(null==e&&(e=m);n=a.pop();)if(c&&(n.value=+n.data.value),(o=e(n.data))&&(u=o.length))for(n.children=new Array(u),i=u-1;i>=0;--i)a.push(r=n.children[i]=new g(o[i])),r.parent=n,r.depth=n.depth+1;return s.eachBefore(v)}function m(t){return t.children}function y(t){t.data=t.data.data}function v(t){var e=0;do{t.height=e}while((t=t.parent)&&t.height<++e)}function g(t){this.data=t,this.depth=this.height=0,this.parent=null}g.prototype=p.prototype={constructor:g,count:r.default,each:o.default,eachAfter:u.default,eachBefore:i.default,sum:s.default,sort:c.default,path:a.default,ancestors:l.default,descendants:d.default,leaves:f.default,links:h.default,copy:function(){return p(this).eachBefore(y)}}},"./node_modules/d3-hierarchy/src/hierarchy/leaves.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/leaves.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){var t=[];return this.eachBefore(function(e){e.children||t.push(e)}),t}},"./node_modules/d3-hierarchy/src/hierarchy/links.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/links.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){var t=this,e=[];return t.each(function(n){n!==t&&e.push({source:n.parent,target:n})}),e}},"./node_modules/d3-hierarchy/src/hierarchy/path.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/path.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){for(var e=this,n=function(t,e){if(t===e)return t;var n=t.ancestors(),r=e.ancestors(),o=null;t=n.pop(),e=r.pop();for(;t===e;)o=t,t=n.pop(),e=r.pop();return o}(e,t),r=[e];e!==n;)e=e.parent,r.push(e);for(var o=r.length;t!==n;)r.splice(o,0,t),t=t.parent;return r}},"./node_modules/d3-hierarchy/src/hierarchy/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sort.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return this.eachBefore(function(e){e.children&&e.children.sort(t)})}},"./node_modules/d3-hierarchy/src/hierarchy/sum.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sum.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return this.eachAfter(function(e){for(var n=+t(e.data)||0,r=e.children,o=r&&r.length;--o>=0;)n+=r[o].value;e.value=n})}},"./node_modules/d3-hierarchy/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/index.js ***!
  \************************************************/
/*! exports provided: cluster, hierarchy, pack, packSiblings, packEnclose, partition, stratify, tree, treemap, treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./cluster */"./node_modules/d3-hierarchy/src/cluster.js");n.d(e,"cluster",function(){return r.default});var o=n(/*! ./hierarchy/index */"./node_modules/d3-hierarchy/src/hierarchy/index.js");n.d(e,"hierarchy",function(){return o.default});var i=n(/*! ./pack/index */"./node_modules/d3-hierarchy/src/pack/index.js");n.d(e,"pack",function(){return i.default});var u=n(/*! ./pack/siblings */"./node_modules/d3-hierarchy/src/pack/siblings.js");n.d(e,"packSiblings",function(){return u.default});var s=n(/*! ./pack/enclose */"./node_modules/d3-hierarchy/src/pack/enclose.js");n.d(e,"packEnclose",function(){return s.default});var c=n(/*! ./partition */"./node_modules/d3-hierarchy/src/partition.js");n.d(e,"partition",function(){return c.default});var a=n(/*! ./stratify */"./node_modules/d3-hierarchy/src/stratify.js");n.d(e,"stratify",function(){return a.default});var l=n(/*! ./tree */"./node_modules/d3-hierarchy/src/tree.js");n.d(e,"tree",function(){return l.default});var d=n(/*! ./treemap/index */"./node_modules/d3-hierarchy/src/treemap/index.js");n.d(e,"treemap",function(){return d.default});var f=n(/*! ./treemap/binary */"./node_modules/d3-hierarchy/src/treemap/binary.js");n.d(e,"treemapBinary",function(){return f.default});var h=n(/*! ./treemap/dice */"./node_modules/d3-hierarchy/src/treemap/dice.js");n.d(e,"treemapDice",function(){return h.default});var p=n(/*! ./treemap/slice */"./node_modules/d3-hierarchy/src/treemap/slice.js");n.d(e,"treemapSlice",function(){return p.default});var m=n(/*! ./treemap/sliceDice */"./node_modules/d3-hierarchy/src/treemap/sliceDice.js");n.d(e,"treemapSliceDice",function(){return m.default});var y=n(/*! ./treemap/squarify */"./node_modules/d3-hierarchy/src/treemap/squarify.js");n.d(e,"treemapSquarify",function(){return y.default});var v=n(/*! ./treemap/resquarify */"./node_modules/d3-hierarchy/src/treemap/resquarify.js");n.d(e,"treemapResquarify",function(){return v.default})},"./node_modules/d3-hierarchy/src/pack/enclose.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/enclose.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../array */"./node_modules/d3-hierarchy/src/array.js");function o(t,e){var n,r;if(s(e,t))return[e];for(n=0;n<t.length;++n)if(i(e,t[n])&&s(a(t[n],e),t))return[t[n],e];for(n=0;n<t.length-1;++n)for(r=n+1;r<t.length;++r)if(i(a(t[n],t[r]),e)&&i(a(t[n],e),t[r])&&i(a(t[r],e),t[n])&&s(l(t[n],t[r],e),t))return[t[n],t[r],e];throw new Error}function i(t,e){var n=t.r-e.r,r=e.x-t.x,o=e.y-t.y;return n<0||n*n<r*r+o*o}function u(t,e){var n=t.r-e.r+1e-6,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function s(t,e){for(var n=0;n<e.length;++n)if(!u(t,e[n]))return!1;return!0}function c(t){switch(t.length){case 1:return{x:(e=t[0]).x,y:e.y,r:e.r};case 2:return a(t[0],t[1]);case 3:return l(t[0],t[1],t[2])}var e}function a(t,e){var n=t.x,r=t.y,o=t.r,i=e.x,u=e.y,s=e.r,c=i-n,a=u-r,l=s-o,d=Math.sqrt(c*c+a*a);return{x:(n+i+c/d*l)/2,y:(r+u+a/d*l)/2,r:(d+o+s)/2}}function l(t,e,n){var r=t.x,o=t.y,i=t.r,u=e.x,s=e.y,c=e.r,a=n.x,l=n.y,d=n.r,f=r-u,h=r-a,p=o-s,m=o-l,y=c-i,v=d-i,g=r*r+o*o-i*i,j=g-u*u-s*s+c*c,b=g-a*a-l*l+d*d,_=h*p-f*m,x=(p*b-m*j)/(2*_)-r,w=(m*y-p*v)/_,A=(h*j-f*b)/(2*_)-o,O=(f*v-h*y)/_,k=w*w+O*O-1,S=2*(i+x*w+A*O),C=x*x+A*A-i*i,B=-(k?(S+Math.sqrt(S*S-4*k*C))/(2*k):C/S);return{x:r+x+w*B,y:o+A+O*B,r:B}}e.default=function(t){for(var e,n,i=0,s=(t=Object(r.shuffle)(r.slice.call(t))).length,a=[];i<s;)e=t[i],n&&u(n,e)?++i:(n=c(a=o(a,e)),i=0);return n}},"./node_modules/d3-hierarchy/src/pack/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/index.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./siblings */"./node_modules/d3-hierarchy/src/pack/siblings.js"),o=n(/*! ../accessors */"./node_modules/d3-hierarchy/src/accessors.js"),i=n(/*! ../constant */"./node_modules/d3-hierarchy/src/constant.js");function u(t){return Math.sqrt(t.value)}function s(t){return function(e){e.children||(e.r=Math.max(0,+t(e)||0))}}function c(t,e){return function(n){if(o=n.children){var o,i,u,s=o.length,c=t(n)*e||0;if(c)for(i=0;i<s;++i)o[i].r+=c;if(u=Object(r.packEnclose)(o),c)for(i=0;i<s;++i)o[i].r-=c;n.r=u+c}}}function a(t){return function(e){var n=e.parent;e.r*=t,n&&(e.x=n.x+t*e.x,e.y=n.y+t*e.y)}}e.default=function(){var t=null,e=1,n=1,r=i.constantZero;function l(o){return o.x=e/2,o.y=n/2,t?o.eachBefore(s(t)).eachAfter(c(r,.5)).eachBefore(a(1)):o.eachBefore(s(u)).eachAfter(c(i.constantZero,1)).eachAfter(c(r,o.r/Math.min(e,n))).eachBefore(a(Math.min(e,n)/(2*o.r))),o}return l.radius=function(e){return arguments.length?(t=Object(o.optional)(e),l):t},l.size=function(t){return arguments.length?(e=+t[0],n=+t[1],l):[e,n]},l.padding=function(t){return arguments.length?(r="function"==typeof t?t:Object(i.default)(+t),l):r},l}},"./node_modules/d3-hierarchy/src/pack/siblings.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/siblings.js ***!
  \********************************************************/
/*! exports provided: packEnclose, default */function(t,e,n){"use strict";n.r(e),n.d(e,"packEnclose",function(){return c});var r=n(/*! ./enclose */"./node_modules/d3-hierarchy/src/pack/enclose.js");function o(t,e,n){var r,o,i,u,s=t.x-e.x,c=t.y-e.y,a=s*s+c*c;a?(o=e.r+n.r,o*=o,u=t.r+n.r,o>(u*=u)?(r=(a+u-o)/(2*a),i=Math.sqrt(Math.max(0,u/a-r*r)),n.x=t.x-r*s-i*c,n.y=t.y-r*c+i*s):(r=(a+o-u)/(2*a),i=Math.sqrt(Math.max(0,o/a-r*r)),n.x=e.x+r*s-i*c,n.y=e.y+r*c+i*s)):(n.x=e.x+n.r,n.y=e.y)}function i(t,e){var n=t.r+e.r-1e-6,r=e.x-t.x,o=e.y-t.y;return n>0&&n*n>r*r+o*o}function u(t){var e=t._,n=t.next._,r=e.r+n.r,o=(e.x*n.r+n.x*e.r)/r,i=(e.y*n.r+n.y*e.r)/r;return o*o+i*i}function s(t){this._=t,this.next=null,this.previous=null}function c(t){if(!(a=t.length))return 0;var e,n,c,a,l,d,f,h,p,m,y;if((e=t[0]).x=0,e.y=0,!(a>1))return e.r;if(n=t[1],e.x=-n.r,n.x=e.r,n.y=0,!(a>2))return e.r+n.r;o(n,e,c=t[2]),e=new s(e),n=new s(n),c=new s(c),e.next=c.previous=n,n.next=e.previous=c,c.next=n.previous=e;t:for(f=3;f<a;++f){o(e._,n._,c=t[f]),c=new s(c),h=n.next,p=e.previous,m=n._.r,y=e._.r;do{if(m<=y){if(i(h._,c._)){n=h,e.next=n,n.previous=e,--f;continue t}m+=h._.r,h=h.next}else{if(i(p._,c._)){(e=p).next=n,n.previous=e,--f;continue t}y+=p._.r,p=p.previous}}while(h!==p.next);for(c.previous=e,c.next=n,e.next=n.previous=n=c,l=u(e);(c=c.next)!==n;)(d=u(c))<l&&(e=c,l=d);n=e.next}for(e=[n._],c=n;(c=c.next)!==n;)e.push(c._);for(c=Object(r.default)(e),f=0;f<a;++f)(e=t[f]).x-=c.x,e.y-=c.y;return c.r}e.default=function(t){return c(t),t}},"./node_modules/d3-hierarchy/src/partition.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/partition.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./treemap/round */"./node_modules/d3-hierarchy/src/treemap/round.js"),o=n(/*! ./treemap/dice */"./node_modules/d3-hierarchy/src/treemap/dice.js");e.default=function(){var t=1,e=1,n=0,i=!1;function u(u){var s=u.height+1;return u.x0=u.y0=n,u.x1=t,u.y1=e/s,u.eachBefore(function(t,e){return function(r){r.children&&Object(o.default)(r,r.x0,t*(r.depth+1)/e,r.x1,t*(r.depth+2)/e);var i=r.x0,u=r.y0,s=r.x1-n,c=r.y1-n;s<i&&(i=s=(i+s)/2),c<u&&(u=c=(u+c)/2),r.x0=i,r.y0=u,r.x1=s,r.y1=c}}(e,s)),i&&u.eachBefore(r.default),u}return u.round=function(t){return arguments.length?(i=!!t,u):i},u.size=function(n){return arguments.length?(t=+n[0],e=+n[1],u):[t,e]},u.padding=function(t){return arguments.length?(n=+t,u):n},u}},"./node_modules/d3-hierarchy/src/stratify.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/stratify.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./accessors */"./node_modules/d3-hierarchy/src/accessors.js"),o=n(/*! ./hierarchy/index */"./node_modules/d3-hierarchy/src/hierarchy/index.js"),i="$",u={depth:-1},s={};function c(t){return t.id}function a(t){return t.parentId}e.default=function(){var t=c,e=a;function n(n){var r,c,a,l,d,f,h,p=n.length,m=new Array(p),y={};for(c=0;c<p;++c)r=n[c],d=m[c]=new o.Node(r),null!=(f=t(r,c,n))&&(f+="")&&(y[h=i+(d.id=f)]=h in y?s:d);for(c=0;c<p;++c)if(d=m[c],null!=(f=e(n[c],c,n))&&(f+="")){if(!(l=y[i+f]))throw new Error("missing: "+f);if(l===s)throw new Error("ambiguous: "+f);l.children?l.children.push(d):l.children=[d],d.parent=l}else{if(a)throw new Error("multiple roots");a=d}if(!a)throw new Error("no root");if(a.parent=u,a.eachBefore(function(t){t.depth=t.parent.depth+1,--p}).eachBefore(o.computeHeight),a.parent=null,p>0)throw new Error("cycle");return a}return n.id=function(e){return arguments.length?(t=Object(r.required)(e),n):t},n.parentId=function(t){return arguments.length?(e=Object(r.required)(t),n):e},n}},"./node_modules/d3-hierarchy/src/tree.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-hierarchy/src/tree.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./hierarchy/index */"./node_modules/d3-hierarchy/src/hierarchy/index.js");function o(t,e){return t.parent===e.parent?1:2}function i(t){var e=t.children;return e?e[0]:t.t}function u(t){var e=t.children;return e?e[e.length-1]:t.t}function s(t,e,n){var r=n/(e.i-t.i);e.c-=r,e.s+=n,t.c+=r,e.z+=n,e.m+=n}function c(t,e,n){return t.a.parent===e.parent?t.a:n}function a(t,e){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=e}a.prototype=Object.create(r.Node.prototype),e.default=function(){var t=o,e=1,n=1,r=null;function l(o){var i=function(t){for(var e,n,r,o,i,u=new a(t,0),s=[u];e=s.pop();)if(r=e._.children)for(e.children=new Array(i=r.length),o=i-1;o>=0;--o)s.push(n=e.children[o]=new a(r[o],o)),n.parent=e;return(u.parent=new a(null,0)).children=[u],u}(o);if(i.eachAfter(d),i.parent.m=-i.z,i.eachBefore(f),r)o.eachBefore(h);else{var u=o,s=o,c=o;o.eachBefore(function(t){t.x<u.x&&(u=t),t.x>s.x&&(s=t),t.depth>c.depth&&(c=t)});var l=u===s?1:t(u,s)/2,p=l-u.x,m=e/(s.x+l+p),y=n/(c.depth||1);o.eachBefore(function(t){t.x=(t.x+p)*m,t.y=t.depth*y})}return o}function d(e){var n=e.children,r=e.parent.children,o=e.i?r[e.i-1]:null;if(n){!function(t){for(var e,n=0,r=0,o=t.children,i=o.length;--i>=0;)(e=o[i]).z+=n,e.m+=n,n+=e.s+(r+=e.c)}(e);var a=(n[0].z+n[n.length-1].z)/2;o?(e.z=o.z+t(e._,o._),e.m=e.z-a):e.z=a}else o&&(e.z=o.z+t(e._,o._));e.parent.A=function(e,n,r){if(n){for(var o,a=e,l=e,d=n,f=a.parent.children[0],h=a.m,p=l.m,m=d.m,y=f.m;d=u(d),a=i(a),d&&a;)f=i(f),(l=u(l)).a=e,(o=d.z+m-a.z-h+t(d._,a._))>0&&(s(c(d,e,r),e,o),h+=o,p+=o),m+=d.m,h+=a.m,y+=f.m,p+=l.m;d&&!u(l)&&(l.t=d,l.m+=m-p),a&&!i(f)&&(f.t=a,f.m+=h-y,r=e)}return r}(e,o,e.parent.A||r[0])}function f(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function h(t){t.x*=e,t.y=t.depth*n}return l.separation=function(e){return arguments.length?(t=e,l):t},l.size=function(t){return arguments.length?(r=!1,e=+t[0],n=+t[1],l):r?null:[e,n]},l.nodeSize=function(t){return arguments.length?(r=!0,e=+t[0],n=+t[1],l):r?[e,n]:null},l}},"./node_modules/d3-hierarchy/src/treemap/binary.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/binary.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e,n,r,o){var i,u,s=t.children,c=s.length,a=new Array(c+1);for(a[0]=u=i=0;i<c;++i)a[i+1]=u+=s[i].value;!function t(e,n,r,o,i,u,c){if(e>=n-1){var l=s[e];return l.x0=o,l.y0=i,l.x1=u,void(l.y1=c)}var d=a[e],f=r/2+d,h=e+1,p=n-1;for(;h<p;){var m=h+p>>>1;a[m]<f?h=m+1:p=m}f-a[h-1]<a[h]-f&&e+1<h&&--h;var y=a[h]-d,v=r-y;if(u-o>c-i){var g=(o*v+u*y)/r;t(e,h,y,o,i,g,c),t(h,n,v,g,i,u,c)}else{var j=(i*v+c*y)/r;t(e,h,y,o,i,u,j),t(h,n,v,o,j,u,c)}}(0,c,t.value,e,n,r,o)}},"./node_modules/d3-hierarchy/src/treemap/dice.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/dice.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e,n,r,o){for(var i,u=t.children,s=-1,c=u.length,a=t.value&&(r-e)/t.value;++s<c;)(i=u[s]).y0=n,i.y1=o,i.x0=e,i.x1=e+=i.value*a}},"./node_modules/d3-hierarchy/src/treemap/index.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/index.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./round */"./node_modules/d3-hierarchy/src/treemap/round.js"),o=n(/*! ./squarify */"./node_modules/d3-hierarchy/src/treemap/squarify.js"),i=n(/*! ../accessors */"./node_modules/d3-hierarchy/src/accessors.js"),u=n(/*! ../constant */"./node_modules/d3-hierarchy/src/constant.js");e.default=function(){var t=o.default,e=!1,n=1,s=1,c=[0],a=u.constantZero,l=u.constantZero,d=u.constantZero,f=u.constantZero,h=u.constantZero;function p(t){return t.x0=t.y0=0,t.x1=n,t.y1=s,t.eachBefore(m),c=[0],e&&t.eachBefore(r.default),t}function m(e){var n=c[e.depth],r=e.x0+n,o=e.y0+n,i=e.x1-n,u=e.y1-n;i<r&&(r=i=(r+i)/2),u<o&&(o=u=(o+u)/2),e.x0=r,e.y0=o,e.x1=i,e.y1=u,e.children&&(n=c[e.depth+1]=a(e)/2,r+=h(e)-n,o+=l(e)-n,(i-=d(e)-n)<r&&(r=i=(r+i)/2),(u-=f(e)-n)<o&&(o=u=(o+u)/2),t(e,r,o,i,u))}return p.round=function(t){return arguments.length?(e=!!t,p):e},p.size=function(t){return arguments.length?(n=+t[0],s=+t[1],p):[n,s]},p.tile=function(e){return arguments.length?(t=Object(i.required)(e),p):t},p.padding=function(t){return arguments.length?p.paddingInner(t).paddingOuter(t):p.paddingInner()},p.paddingInner=function(t){return arguments.length?(a="function"==typeof t?t:Object(u.default)(+t),p):a},p.paddingOuter=function(t){return arguments.length?p.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):p.paddingTop()},p.paddingTop=function(t){return arguments.length?(l="function"==typeof t?t:Object(u.default)(+t),p):l},p.paddingRight=function(t){return arguments.length?(d="function"==typeof t?t:Object(u.default)(+t),p):d},p.paddingBottom=function(t){return arguments.length?(f="function"==typeof t?t:Object(u.default)(+t),p):f},p.paddingLeft=function(t){return arguments.length?(h="function"==typeof t?t:Object(u.default)(+t),p):h},p}},"./node_modules/d3-hierarchy/src/treemap/resquarify.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/resquarify.js ***!
  \*************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./dice */"./node_modules/d3-hierarchy/src/treemap/dice.js"),o=n(/*! ./slice */"./node_modules/d3-hierarchy/src/treemap/slice.js"),i=n(/*! ./squarify */"./node_modules/d3-hierarchy/src/treemap/squarify.js");e.default=function t(e){function n(t,n,u,s,c){if((a=t._squarify)&&a.ratio===e)for(var a,l,d,f,h,p=-1,m=a.length,y=t.value;++p<m;){for(d=(l=a[p]).children,f=l.value=0,h=d.length;f<h;++f)l.value+=d[f].value;l.dice?Object(r.default)(l,n,u,s,u+=(c-u)*l.value/y):Object(o.default)(l,n,u,n+=(s-n)*l.value/y,c),y-=l.value}else t._squarify=a=Object(i.squarifyRatio)(e,t,n,u,s,c),a.ratio=e}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}(i.phi)},"./node_modules/d3-hierarchy/src/treemap/round.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/round.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}},"./node_modules/d3-hierarchy/src/treemap/slice.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/slice.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e,n,r,o){for(var i,u=t.children,s=-1,c=u.length,a=t.value&&(o-n)/t.value;++s<c;)(i=u[s]).x0=e,i.x1=r,i.y0=n,i.y1=n+=i.value*a}},"./node_modules/d3-hierarchy/src/treemap/sliceDice.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/sliceDice.js ***!
  \************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./dice */"./node_modules/d3-hierarchy/src/treemap/dice.js"),o=n(/*! ./slice */"./node_modules/d3-hierarchy/src/treemap/slice.js");e.default=function(t,e,n,i,u){(1&t.depth?o.default:r.default)(t,e,n,i,u)}},"./node_modules/d3-hierarchy/src/treemap/squarify.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/squarify.js ***!
  \***********************************************************/
/*! exports provided: phi, squarifyRatio, default */function(t,e,n){"use strict";n.r(e),n.d(e,"phi",function(){return i}),n.d(e,"squarifyRatio",function(){return u});var r=n(/*! ./dice */"./node_modules/d3-hierarchy/src/treemap/dice.js"),o=n(/*! ./slice */"./node_modules/d3-hierarchy/src/treemap/slice.js"),i=(1+Math.sqrt(5))/2;function u(t,e,n,i,u,s){for(var c,a,l,d,f,h,p,m,y,v,g,j=[],b=e.children,_=0,x=0,w=b.length,A=e.value;_<w;){l=u-n,d=s-i;do{f=b[x++].value}while(!f&&x<w);for(h=p=f,g=f*f*(v=Math.max(d/l,l/d)/(A*t)),y=Math.max(p/g,g/h);x<w;++x){if(f+=a=b[x].value,a<h&&(h=a),a>p&&(p=a),g=f*f*v,(m=Math.max(p/g,g/h))>y){f-=a;break}y=m}j.push(c={value:f,dice:l<d,children:b.slice(_,x)}),c.dice?Object(r.default)(c,n,i,u,A?i+=d*f/A:s):Object(o.default)(c,n,i,A?n+=l*f/A:u,s),A-=f,_=x}return j}e.default=function t(e){function n(t,n,r,o,i){u(e,t,n,r,o,i)}return n.ratio=function(e){return t((e=+e)>1?e:1)},n}(i)},"./node_modules/d3-interpolate/src/array.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/array.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./value */"./node_modules/d3-interpolate/src/value.js");e.default=function(t,e){var n,o=e?e.length:0,i=t?Math.min(o,t.length):0,u=new Array(i),s=new Array(o);for(n=0;n<i;++n)u[n]=Object(r.default)(t[n],e[n]);for(;n<o;++n)s[n]=e[n];return function(t){for(n=0;n<i;++n)s[n]=u[n](t);return s}}},"./node_modules/d3-interpolate/src/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basis.js ***!
  \**************************************************/
/*! exports provided: basis, default */function(t,e,n){"use strict";function r(t,e,n,r,o){var i=t*t,u=i*t;return((1-3*t+3*i-u)*e+(4-6*i+3*u)*n+(1+3*t+3*i-3*u)*r+u*o)/6}n.r(e),n.d(e,"basis",function(){return r}),e.default=function(t){var e=t.length-1;return function(n){var o=n<=0?n=0:n>=1?(n=1,e-1):Math.floor(n*e),i=t[o],u=t[o+1],s=o>0?t[o-1]:2*i-u,c=o<e-1?t[o+2]:2*u-i;return r((n-o/e)*e,s,i,u,c)}}},"./node_modules/d3-interpolate/src/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./basis */"./node_modules/d3-interpolate/src/basis.js");e.default=function(t){var e=t.length;return function(n){var o=Math.floor(((n%=1)<0?++n:n)*e),i=t[(o+e-1)%e],u=t[o%e],s=t[(o+1)%e],c=t[(o+2)%e];return Object(r.basis)((n-o/e)*e,i,u,s,c)}}},"./node_modules/d3-interpolate/src/color.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/color.js ***!
  \**************************************************/
/*! exports provided: hue, gamma, default */function(t,e,n){"use strict";n.r(e),n.d(e,"hue",function(){return i}),n.d(e,"gamma",function(){return u}),n.d(e,"default",function(){return s});var r=n(/*! ./constant */"./node_modules/d3-interpolate/src/constant.js");function o(t,e){return function(n){return t+n*e}}function i(t,e){var n=e-t;return n?o(t,n>180||n<-180?n-360*Math.round(n/360):n):Object(r.default)(isNaN(t)?e:t)}function u(t){return 1==(t=+t)?s:function(e,n){return n-e?function(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(r){return Math.pow(t+r*e,n)}}(e,n,t):Object(r.default)(isNaN(e)?n:e)}}function s(t,e){var n=e-t;return n?o(t,n):Object(r.default)(isNaN(t)?e:t)}},"./node_modules/d3-interpolate/src/constant.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/constant.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return t}}},"./node_modules/d3-interpolate/src/cubehelix.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/cubehelix.js ***!
  \******************************************************/
/*! exports provided: default, cubehelixLong */function(t,e,n){"use strict";n.r(e),n.d(e,"cubehelixLong",function(){return u});var r=n(/*! d3-color */"./node_modules/d3-color/src/index.js"),o=n(/*! ./color */"./node_modules/d3-interpolate/src/color.js");function i(t){return function e(n){function i(e,i){var u=t((e=Object(r.cubehelix)(e)).h,(i=Object(r.cubehelix)(i)).h),s=Object(o.default)(e.s,i.s),c=Object(o.default)(e.l,i.l),a=Object(o.default)(e.opacity,i.opacity);return function(t){return e.h=u(t),e.s=s(t),e.l=c(Math.pow(t,n)),e.opacity=a(t),e+""}}return n=+n,i.gamma=e,i}(1)}e.default=i(o.hue);var u=i(o.default)},"./node_modules/d3-interpolate/src/date.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/date.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){var n=new Date;return e-=t=+t,function(r){return n.setTime(t+e*r),n}}},"./node_modules/d3-interpolate/src/discrete.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/discrete.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){var e=t.length;return function(n){return t[Math.max(0,Math.min(e-1,Math.floor(n*e)))]}}},"./node_modules/d3-interpolate/src/hcl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hcl.js ***!
  \************************************************/
/*! exports provided: default, hclLong */function(t,e,n){"use strict";n.r(e),n.d(e,"hclLong",function(){return u});var r=n(/*! d3-color */"./node_modules/d3-color/src/index.js"),o=n(/*! ./color */"./node_modules/d3-interpolate/src/color.js");function i(t){return function(e,n){var i=t((e=Object(r.hcl)(e)).h,(n=Object(r.hcl)(n)).h),u=Object(o.default)(e.c,n.c),s=Object(o.default)(e.l,n.l),c=Object(o.default)(e.opacity,n.opacity);return function(t){return e.h=i(t),e.c=u(t),e.l=s(t),e.opacity=c(t),e+""}}}e.default=i(o.hue);var u=i(o.default)},"./node_modules/d3-interpolate/src/hsl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hsl.js ***!
  \************************************************/
/*! exports provided: default, hslLong */function(t,e,n){"use strict";n.r(e),n.d(e,"hslLong",function(){return u});var r=n(/*! d3-color */"./node_modules/d3-color/src/index.js"),o=n(/*! ./color */"./node_modules/d3-interpolate/src/color.js");function i(t){return function(e,n){var i=t((e=Object(r.hsl)(e)).h,(n=Object(r.hsl)(n)).h),u=Object(o.default)(e.s,n.s),s=Object(o.default)(e.l,n.l),c=Object(o.default)(e.opacity,n.opacity);return function(t){return e.h=i(t),e.s=u(t),e.l=s(t),e.opacity=c(t),e+""}}}e.default=i(o.hue);var u=i(o.default)},"./node_modules/d3-interpolate/src/hue.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hue.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./color */"./node_modules/d3-interpolate/src/color.js");e.default=function(t,e){var n=Object(r.hue)(+t,+e);return function(t){var e=n(t);return e-360*Math.floor(e/360)}}},"./node_modules/d3-interpolate/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/index.js ***!
  \**************************************************/
/*! exports provided: interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./value */"./node_modules/d3-interpolate/src/value.js");n.d(e,"interpolate",function(){return r.default});var o=n(/*! ./array */"./node_modules/d3-interpolate/src/array.js");n.d(e,"interpolateArray",function(){return o.default});var i=n(/*! ./basis */"./node_modules/d3-interpolate/src/basis.js");n.d(e,"interpolateBasis",function(){return i.default});var u=n(/*! ./basisClosed */"./node_modules/d3-interpolate/src/basisClosed.js");n.d(e,"interpolateBasisClosed",function(){return u.default});var s=n(/*! ./date */"./node_modules/d3-interpolate/src/date.js");n.d(e,"interpolateDate",function(){return s.default});var c=n(/*! ./discrete */"./node_modules/d3-interpolate/src/discrete.js");n.d(e,"interpolateDiscrete",function(){return c.default});var a=n(/*! ./hue */"./node_modules/d3-interpolate/src/hue.js");n.d(e,"interpolateHue",function(){return a.default});var l=n(/*! ./number */"./node_modules/d3-interpolate/src/number.js");n.d(e,"interpolateNumber",function(){return l.default});var d=n(/*! ./object */"./node_modules/d3-interpolate/src/object.js");n.d(e,"interpolateObject",function(){return d.default});var f=n(/*! ./round */"./node_modules/d3-interpolate/src/round.js");n.d(e,"interpolateRound",function(){return f.default});var h=n(/*! ./string */"./node_modules/d3-interpolate/src/string.js");n.d(e,"interpolateString",function(){return h.default});var p=n(/*! ./transform/index */"./node_modules/d3-interpolate/src/transform/index.js");n.d(e,"interpolateTransformCss",function(){return p.interpolateTransformCss}),n.d(e,"interpolateTransformSvg",function(){return p.interpolateTransformSvg});var m=n(/*! ./zoom */"./node_modules/d3-interpolate/src/zoom.js");n.d(e,"interpolateZoom",function(){return m.default});var y=n(/*! ./rgb */"./node_modules/d3-interpolate/src/rgb.js");n.d(e,"interpolateRgb",function(){return y.default}),n.d(e,"interpolateRgbBasis",function(){return y.rgbBasis}),n.d(e,"interpolateRgbBasisClosed",function(){return y.rgbBasisClosed});var v=n(/*! ./hsl */"./node_modules/d3-interpolate/src/hsl.js");n.d(e,"interpolateHsl",function(){return v.default}),n.d(e,"interpolateHslLong",function(){return v.hslLong});var g=n(/*! ./lab */"./node_modules/d3-interpolate/src/lab.js");n.d(e,"interpolateLab",function(){return g.default});var j=n(/*! ./hcl */"./node_modules/d3-interpolate/src/hcl.js");n.d(e,"interpolateHcl",function(){return j.default}),n.d(e,"interpolateHclLong",function(){return j.hclLong});var b=n(/*! ./cubehelix */"./node_modules/d3-interpolate/src/cubehelix.js");n.d(e,"interpolateCubehelix",function(){return b.default}),n.d(e,"interpolateCubehelixLong",function(){return b.cubehelixLong});var _=n(/*! ./piecewise */"./node_modules/d3-interpolate/src/piecewise.js");n.d(e,"piecewise",function(){return _.default});var x=n(/*! ./quantize */"./node_modules/d3-interpolate/src/quantize.js");n.d(e,"quantize",function(){return x.default})},"./node_modules/d3-interpolate/src/lab.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/lab.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return i});var r=n(/*! d3-color */"./node_modules/d3-color/src/index.js"),o=n(/*! ./color */"./node_modules/d3-interpolate/src/color.js");function i(t,e){var n=Object(o.default)((t=Object(r.lab)(t)).l,(e=Object(r.lab)(e)).l),i=Object(o.default)(t.a,e.a),u=Object(o.default)(t.b,e.b),s=Object(o.default)(t.opacity,e.opacity);return function(e){return t.l=n(e),t.a=i(e),t.b=u(e),t.opacity=s(e),t+""}}},"./node_modules/d3-interpolate/src/number.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/number.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return e-=t=+t,function(n){return t+e*n}}},"./node_modules/d3-interpolate/src/object.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/object.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./value */"./node_modules/d3-interpolate/src/value.js");e.default=function(t,e){var n,o={},i={};for(n in null!==t&&"object"==typeof t||(t={}),null!==e&&"object"==typeof e||(e={}),e)n in t?o[n]=Object(r.default)(t[n],e[n]):i[n]=e[n];return function(t){for(n in o)i[n]=o[n](t);return i}}},"./node_modules/d3-interpolate/src/piecewise.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/piecewise.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t,e){for(var n=0,r=e.length-1,o=e[0],i=new Array(r<0?0:r);n<r;)i[n]=t(o,o=e[++n]);return function(t){var e=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return i[e](t-e)}}n.r(e),n.d(e,"default",function(){return r})},"./node_modules/d3-interpolate/src/quantize.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/quantize.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t(r/(e-1));return n}},"./node_modules/d3-interpolate/src/rgb.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/rgb.js ***!
  \************************************************/
/*! exports provided: default, rgbBasis, rgbBasisClosed */function(t,e,n){"use strict";n.r(e),n.d(e,"rgbBasis",function(){return c}),n.d(e,"rgbBasisClosed",function(){return a});var r=n(/*! d3-color */"./node_modules/d3-color/src/index.js"),o=n(/*! ./basis */"./node_modules/d3-interpolate/src/basis.js"),i=n(/*! ./basisClosed */"./node_modules/d3-interpolate/src/basisClosed.js"),u=n(/*! ./color */"./node_modules/d3-interpolate/src/color.js");function s(t){return function(e){var n,o,i=e.length,u=new Array(i),s=new Array(i),c=new Array(i);for(n=0;n<i;++n)o=Object(r.rgb)(e[n]),u[n]=o.r||0,s[n]=o.g||0,c[n]=o.b||0;return u=t(u),s=t(s),c=t(c),o.opacity=1,function(t){return o.r=u(t),o.g=s(t),o.b=c(t),o+""}}}e.default=function t(e){var n=Object(u.gamma)(e);function o(t,e){var o=n((t=Object(r.rgb)(t)).r,(e=Object(r.rgb)(e)).r),i=n(t.g,e.g),s=n(t.b,e.b),c=Object(u.default)(t.opacity,e.opacity);return function(e){return t.r=o(e),t.g=i(e),t.b=s(e),t.opacity=c(e),t+""}}return o.gamma=t,o}(1);var c=s(o.default),a=s(i.default)},"./node_modules/d3-interpolate/src/round.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/round.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return e-=t=+t,function(n){return Math.round(t+e*n)}}},"./node_modules/d3-interpolate/src/string.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/string.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./number */"./node_modules/d3-interpolate/src/number.js"),o=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,i=new RegExp(o.source,"g");e.default=function(t,e){var n,u,s,c=o.lastIndex=i.lastIndex=0,a=-1,l=[],d=[];for(t+="",e+="";(n=o.exec(t))&&(u=i.exec(e));)(s=u.index)>c&&(s=e.slice(c,s),l[a]?l[a]+=s:l[++a]=s),(n=n[0])===(u=u[0])?l[a]?l[a]+=u:l[++a]=u:(l[++a]=null,d.push({i:a,x:Object(r.default)(n,u)})),c=i.lastIndex;return c<e.length&&(s=e.slice(c),l[a]?l[a]+=s:l[++a]=s),l.length<2?d[0]?function(t){return function(e){return t(e)+""}}(d[0].x):function(t){return function(){return t}}(e):(e=d.length,function(t){for(var n,r=0;r<e;++r)l[(n=d[r]).i]=n.x(t);return l.join("")})}},"./node_modules/d3-interpolate/src/transform/decompose.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/decompose.js ***!
  \****************************************************************/
/*! exports provided: identity, default */function(t,e,n){"use strict";n.r(e),n.d(e,"identity",function(){return o});var r=180/Math.PI,o={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};e.default=function(t,e,n,o,i,u){var s,c,a;return(s=Math.sqrt(t*t+e*e))&&(t/=s,e/=s),(a=t*n+e*o)&&(n-=t*a,o-=e*a),(c=Math.sqrt(n*n+o*o))&&(n/=c,o/=c,a/=c),t*o<e*n&&(t=-t,e=-e,a=-a,s=-s),{translateX:i,translateY:u,rotate:Math.atan2(e,t)*r,skewX:Math.atan(a)*r,scaleX:s,scaleY:c}}},"./node_modules/d3-interpolate/src/transform/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/index.js ***!
  \************************************************************/
/*! exports provided: interpolateTransformCss, interpolateTransformSvg */function(t,e,n){"use strict";n.r(e),n.d(e,"interpolateTransformCss",function(){return u}),n.d(e,"interpolateTransformSvg",function(){return s});var r=n(/*! ../number */"./node_modules/d3-interpolate/src/number.js"),o=n(/*! ./parse */"./node_modules/d3-interpolate/src/transform/parse.js");function i(t,e,n,o){function i(t){return t.length?t.pop()+" ":""}return function(u,s){var c=[],a=[];return u=t(u),s=t(s),function(t,o,i,u,s,c){if(t!==i||o!==u){var a=s.push("translate(",null,e,null,n);c.push({i:a-4,x:Object(r.default)(t,i)},{i:a-2,x:Object(r.default)(o,u)})}else(i||u)&&s.push("translate("+i+e+u+n)}(u.translateX,u.translateY,s.translateX,s.translateY,c,a),function(t,e,n,u){t!==e?(t-e>180?e+=360:e-t>180&&(t+=360),u.push({i:n.push(i(n)+"rotate(",null,o)-2,x:Object(r.default)(t,e)})):e&&n.push(i(n)+"rotate("+e+o)}(u.rotate,s.rotate,c,a),function(t,e,n,u){t!==e?u.push({i:n.push(i(n)+"skewX(",null,o)-2,x:Object(r.default)(t,e)}):e&&n.push(i(n)+"skewX("+e+o)}(u.skewX,s.skewX,c,a),function(t,e,n,o,u,s){if(t!==n||e!==o){var c=u.push(i(u)+"scale(",null,",",null,")");s.push({i:c-4,x:Object(r.default)(t,n)},{i:c-2,x:Object(r.default)(e,o)})}else 1===n&&1===o||u.push(i(u)+"scale("+n+","+o+")")}(u.scaleX,u.scaleY,s.scaleX,s.scaleY,c,a),u=s=null,function(t){for(var e,n=-1,r=a.length;++n<r;)c[(e=a[n]).i]=e.x(t);return c.join("")}}}var u=i(o.parseCss,"px, ","px)","deg)"),s=i(o.parseSvg,", ",")",")")},"./node_modules/d3-interpolate/src/transform/parse.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/parse.js ***!
  \************************************************************/
/*! exports provided: parseCss, parseSvg */function(t,e,n){"use strict";n.r(e),n.d(e,"parseCss",function(){return c}),n.d(e,"parseSvg",function(){return a});var r,o,i,u,s=n(/*! ./decompose */"./node_modules/d3-interpolate/src/transform/decompose.js");function c(t){return"none"===t?s.identity:(r||(r=document.createElement("DIV"),o=document.documentElement,i=document.defaultView),r.style.transform=t,t=i.getComputedStyle(o.appendChild(r),null).getPropertyValue("transform"),o.removeChild(r),t=t.slice(7,-1).split(","),Object(s.default)(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}function a(t){return null==t?s.identity:(u||(u=document.createElementNS("http://www.w3.org/2000/svg","g")),u.setAttribute("transform",t),(t=u.transform.baseVal.consolidate())?(t=t.matrix,Object(s.default)(t.a,t.b,t.c,t.d,t.e,t.f)):s.identity)}},"./node_modules/d3-interpolate/src/value.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/value.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-color */"./node_modules/d3-color/src/index.js"),o=n(/*! ./rgb */"./node_modules/d3-interpolate/src/rgb.js"),i=n(/*! ./array */"./node_modules/d3-interpolate/src/array.js"),u=n(/*! ./date */"./node_modules/d3-interpolate/src/date.js"),s=n(/*! ./number */"./node_modules/d3-interpolate/src/number.js"),c=n(/*! ./object */"./node_modules/d3-interpolate/src/object.js"),a=n(/*! ./string */"./node_modules/d3-interpolate/src/string.js"),l=n(/*! ./constant */"./node_modules/d3-interpolate/src/constant.js");e.default=function(t,e){var n,d=typeof e;return null==e||"boolean"===d?Object(l.default)(e):("number"===d?s.default:"string"===d?(n=Object(r.color)(e))?(e=n,o.default):a.default:e instanceof r.color?o.default:e instanceof Date?u.default:Array.isArray(e)?i.default:"function"!=typeof e.valueOf&&"function"!=typeof e.toString||isNaN(e)?c.default:s.default)(t,e)}},"./node_modules/d3-interpolate/src/zoom.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/zoom.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=Math.SQRT2;function o(t){return((t=Math.exp(t))+1/t)/2}e.default=function(t,e){var n,i,u=t[0],s=t[1],c=t[2],a=e[0],l=e[1],d=e[2],f=a-u,h=l-s,p=f*f+h*h;if(p<1e-12)i=Math.log(d/c)/r,n=function(t){return[u+t*f,s+t*h,c*Math.exp(r*t*i)]};else{var m=Math.sqrt(p),y=(d*d-c*c+4*p)/(2*c*2*m),v=(d*d-c*c-4*p)/(2*d*2*m),g=Math.log(Math.sqrt(y*y+1)-y),j=Math.log(Math.sqrt(v*v+1)-v);i=(j-g)/r,n=function(t){var e,n=t*i,a=o(g),l=c/(2*m)*(a*(e=r*n+g,((e=Math.exp(2*e))-1)/(e+1))-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[u+l*f,s+l*h,c*a/o(r*n+g)]}}return n.duration=1e3*i,n}},"./node_modules/d3-path/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-path/src/index.js ***!
  \*******************************************/
/*! exports provided: path */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./path */"./node_modules/d3-path/src/path.js");n.d(e,"path",function(){return r.default})},"./node_modules/d3-path/src/path.js":
/*!******************************************!*\
  !*** ./node_modules/d3-path/src/path.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=Math.PI,o=2*r,i=o-1e-6;function u(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function s(){return new u}u.prototype=s.prototype={constructor:u,moveTo:function(t,e){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,e){this._+="L"+(this._x1=+t)+","+(this._y1=+e)},quadraticCurveTo:function(t,e,n,r){this._+="Q"+ +t+","+ +e+","+(this._x1=+n)+","+(this._y1=+r)},bezierCurveTo:function(t,e,n,r,o,i){this._+="C"+ +t+","+ +e+","+ +n+","+ +r+","+(this._x1=+o)+","+(this._y1=+i)},arcTo:function(t,e,n,o,i){t=+t,e=+e,n=+n,o=+o,i=+i;var u=this._x1,s=this._y1,c=n-t,a=o-e,l=u-t,d=s-e,f=l*l+d*d;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=e);else if(f>1e-6)if(Math.abs(d*c-a*l)>1e-6&&i){var h=n-u,p=o-s,m=c*c+a*a,y=h*h+p*p,v=Math.sqrt(m),g=Math.sqrt(f),j=i*Math.tan((r-Math.acos((m+f-y)/(2*v*g)))/2),b=j/g,_=j/v;Math.abs(b-1)>1e-6&&(this._+="L"+(t+b*l)+","+(e+b*d)),this._+="A"+i+","+i+",0,0,"+ +(d*h>l*p)+","+(this._x1=t+_*c)+","+(this._y1=e+_*a)}else this._+="L"+(this._x1=t)+","+(this._y1=e);else;},arc:function(t,e,n,u,s,c){t=+t,e=+e;var a=(n=+n)*Math.cos(u),l=n*Math.sin(u),d=t+a,f=e+l,h=1^c,p=c?u-s:s-u;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+d+","+f:(Math.abs(this._x1-d)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+d+","+f),n&&(p<0&&(p=p%o+o),p>i?this._+="A"+n+","+n+",0,1,"+h+","+(t-a)+","+(e-l)+"A"+n+","+n+",0,1,"+h+","+(this._x1=d)+","+(this._y1=f):p>1e-6&&(this._+="A"+n+","+n+",0,"+ +(p>=r)+","+h+","+(this._x1=t+n*Math.cos(s))+","+(this._y1=e+n*Math.sin(s))))},rect:function(t,e,n,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)+"h"+ +n+"v"+ +r+"h"+-n+"Z"},toString:function(){return this._}},e.default=s},"./node_modules/d3-selection/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/constant.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return t}}},"./node_modules/d3-selection/src/create.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/create.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./creator */"./node_modules/d3-selection/src/creator.js"),o=n(/*! ./select */"./node_modules/d3-selection/src/select.js");e.default=function(t){return Object(o.default)(Object(r.default)(t).call(document.documentElement))}},"./node_modules/d3-selection/src/creator.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/creator.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./namespace */"./node_modules/d3-selection/src/namespace.js"),o=n(/*! ./namespaces */"./node_modules/d3-selection/src/namespaces.js");e.default=function(t){var e=Object(r.default)(t);return(e.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var e=this.ownerDocument,n=this.namespaceURI;return n===o.xhtml&&e.documentElement.namespaceURI===o.xhtml?e.createElement(t):e.createElementNS(n,t)}})(e)}},"./node_modules/d3-selection/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/index.js ***!
  \************************************************/
/*! exports provided: create, creator, local, matcher, mouse, namespace, namespaces, clientPoint, select, selectAll, selection, selector, selectorAll, style, touch, touches, window, event, customEvent */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./create */"./node_modules/d3-selection/src/create.js");n.d(e,"create",function(){return r.default});var o=n(/*! ./creator */"./node_modules/d3-selection/src/creator.js");n.d(e,"creator",function(){return o.default});var i=n(/*! ./local */"./node_modules/d3-selection/src/local.js");n.d(e,"local",function(){return i.default});var u=n(/*! ./matcher */"./node_modules/d3-selection/src/matcher.js");n.d(e,"matcher",function(){return u.default});var s=n(/*! ./mouse */"./node_modules/d3-selection/src/mouse.js");n.d(e,"mouse",function(){return s.default});var c=n(/*! ./namespace */"./node_modules/d3-selection/src/namespace.js");n.d(e,"namespace",function(){return c.default});var a=n(/*! ./namespaces */"./node_modules/d3-selection/src/namespaces.js");n.d(e,"namespaces",function(){return a.default});var l=n(/*! ./point */"./node_modules/d3-selection/src/point.js");n.d(e,"clientPoint",function(){return l.default});var d=n(/*! ./select */"./node_modules/d3-selection/src/select.js");n.d(e,"select",function(){return d.default});var f=n(/*! ./selectAll */"./node_modules/d3-selection/src/selectAll.js");n.d(e,"selectAll",function(){return f.default});var h=n(/*! ./selection/index */"./node_modules/d3-selection/src/selection/index.js");n.d(e,"selection",function(){return h.default});var p=n(/*! ./selector */"./node_modules/d3-selection/src/selector.js");n.d(e,"selector",function(){return p.default});var m=n(/*! ./selectorAll */"./node_modules/d3-selection/src/selectorAll.js");n.d(e,"selectorAll",function(){return m.default});var y=n(/*! ./selection/style */"./node_modules/d3-selection/src/selection/style.js");n.d(e,"style",function(){return y.styleValue});var v=n(/*! ./touch */"./node_modules/d3-selection/src/touch.js");n.d(e,"touch",function(){return v.default});var g=n(/*! ./touches */"./node_modules/d3-selection/src/touches.js");n.d(e,"touches",function(){return g.default});var j=n(/*! ./window */"./node_modules/d3-selection/src/window.js");n.d(e,"window",function(){return j.default});var b=n(/*! ./selection/on */"./node_modules/d3-selection/src/selection/on.js");n.d(e,"event",function(){return b.event}),n.d(e,"customEvent",function(){return b.customEvent})},"./node_modules/d3-selection/src/local.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/local.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return o});var r=0;function o(){return new i}function i(){this._="@"+(++r).toString(36)}i.prototype=o.prototype={constructor:i,get:function(t){for(var e=this._;!(e in t);)if(!(t=t.parentNode))return;return t[e]},set:function(t,e){return t[this._]=e},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}}},"./node_modules/d3-selection/src/matcher.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/matcher.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return this.matches(t)}}},"./node_modules/d3-selection/src/mouse.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/mouse.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./sourceEvent */"./node_modules/d3-selection/src/sourceEvent.js"),o=n(/*! ./point */"./node_modules/d3-selection/src/point.js");e.default=function(t){var e=Object(r.default)();return e.changedTouches&&(e=e.changedTouches[0]),Object(o.default)(t,e)}},"./node_modules/d3-selection/src/namespace.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespace.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./namespaces */"./node_modules/d3-selection/src/namespaces.js");e.default=function(t){var e=t+="",n=e.indexOf(":");return n>=0&&"xmlns"!==(e=t.slice(0,n))&&(t=t.slice(n+1)),r.default.hasOwnProperty(e)?{space:r.default[e],local:t}:t}},"./node_modules/d3-selection/src/namespaces.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespaces.js ***!
  \*****************************************************/
/*! exports provided: xhtml, default */function(t,e,n){"use strict";n.r(e),n.d(e,"xhtml",function(){return r});var r="http://www.w3.org/1999/xhtml";e.default={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"}},"./node_modules/d3-selection/src/point.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/point.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=e.clientX,r.y=e.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var o=t.getBoundingClientRect();return[e.clientX-o.left-t.clientLeft,e.clientY-o.top-t.clientTop]}},"./node_modules/d3-selection/src/select.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/select.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./selection/index */"./node_modules/d3-selection/src/selection/index.js");e.default=function(t){return"string"==typeof t?new r.Selection([[document.querySelector(t)]],[document.documentElement]):new r.Selection([[t]],r.root)}},"./node_modules/d3-selection/src/selectAll.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/selectAll.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./selection/index */"./node_modules/d3-selection/src/selection/index.js");e.default=function(t){return"string"==typeof t?new r.Selection([document.querySelectorAll(t)],[document.documentElement]):new r.Selection([null==t?[]:t],r.root)}},"./node_modules/d3-selection/src/selection/append.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/append.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../creator */"./node_modules/d3-selection/src/creator.js");e.default=function(t){var e="function"==typeof t?t:Object(r.default)(t);return this.select(function(){return this.appendChild(e.apply(this,arguments))})}},"./node_modules/d3-selection/src/selection/attr.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/attr.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../namespace */"./node_modules/d3-selection/src/namespace.js");e.default=function(t,e){var n=Object(r.default)(t);if(arguments.length<2){var o=this.node();return n.local?o.getAttributeNS(n.space,n.local):o.getAttribute(n)}return this.each((null==e?n.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof e?n.local?function(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,n)}}:function(t,e){return function(){var n=e.apply(this,arguments);null==n?this.removeAttribute(t):this.setAttribute(t,n)}}:n.local?function(t,e){return function(){this.setAttributeNS(t.space,t.local,e)}}:function(t,e){return function(){this.setAttribute(t,e)}})(n,e))}},"./node_modules/d3-selection/src/selection/call.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/call.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}},"./node_modules/d3-selection/src/selection/classed.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/classed.js ***!
  \************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t){return t.trim().split(/^|\s+/)}function o(t){return t.classList||new i(t)}function i(t){this._node=t,this._names=r(t.getAttribute("class")||"")}function u(t,e){for(var n=o(t),r=-1,i=e.length;++r<i;)n.add(e[r])}function s(t,e){for(var n=o(t),r=-1,i=e.length;++r<i;)n.remove(e[r])}n.r(e),i.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var e=this._names.indexOf(t);e>=0&&(this._names.splice(e,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}},e.default=function(t,e){var n=r(t+"");if(arguments.length<2){for(var i=o(this.node()),c=-1,a=n.length;++c<a;)if(!i.contains(n[c]))return!1;return!0}return this.each(("function"==typeof e?function(t,e){return function(){(e.apply(this,arguments)?u:s)(this,t)}}:e?function(t){return function(){u(this,t)}}:function(t){return function(){s(this,t)}})(n,e))}},"./node_modules/d3-selection/src/selection/clone.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/clone.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function o(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}n.r(e),e.default=function(t){return this.select(t?o:r)}},"./node_modules/d3-selection/src/selection/data.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/data.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js"),o=n(/*! ./enter */"./node_modules/d3-selection/src/selection/enter.js"),i=n(/*! ../constant */"./node_modules/d3-selection/src/constant.js"),u="$";function s(t,e,n,r,i,u){for(var s,c=0,a=e.length,l=u.length;c<l;++c)(s=e[c])?(s.__data__=u[c],r[c]=s):n[c]=new o.EnterNode(t,u[c]);for(;c<a;++c)(s=e[c])&&(i[c]=s)}function c(t,e,n,r,i,s,c){var a,l,d,f={},h=e.length,p=s.length,m=new Array(h);for(a=0;a<h;++a)(l=e[a])&&(m[a]=d=u+c.call(l,l.__data__,a,e),d in f?i[a]=l:f[d]=l);for(a=0;a<p;++a)(l=f[d=u+c.call(t,s[a],a,s)])?(r[a]=l,l.__data__=s[a],f[d]=null):n[a]=new o.EnterNode(t,s[a]);for(a=0;a<h;++a)(l=e[a])&&f[m[a]]===l&&(i[a]=l)}e.default=function(t,e){if(!t)return v=new Array(this.size()),h=-1,this.each(function(t){v[++h]=t}),v;var n=e?c:s,o=this._parents,u=this._groups;"function"!=typeof t&&(t=Object(i.default)(t));for(var a=u.length,l=new Array(a),d=new Array(a),f=new Array(a),h=0;h<a;++h){var p=o[h],m=u[h],y=m.length,v=t.call(p,p&&p.__data__,h,o),g=v.length,j=d[h]=new Array(g),b=l[h]=new Array(g);n(p,m,j,b,f[h]=new Array(y),v,e);for(var _,x,w=0,A=0;w<g;++w)if(_=j[w]){for(w>=A&&(A=w+1);!(x=b[A])&&++A<g;);_._next=x||null}}return(l=new r.Selection(l,o))._enter=d,l._exit=f,l}},"./node_modules/d3-selection/src/selection/datum.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/datum.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return arguments.length?this.property("__data__",t):this.node().__data__}},"./node_modules/d3-selection/src/selection/dispatch.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/dispatch.js ***!
  \*************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../window */"./node_modules/d3-selection/src/window.js");function o(t,e,n){var o=Object(r.default)(t),i=o.CustomEvent;"function"==typeof i?i=new i(e,n):(i=o.document.createEvent("Event"),n?(i.initEvent(e,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(e,!1,!1)),t.dispatchEvent(i)}e.default=function(t,e){return this.each(("function"==typeof e?function(t,e){return function(){return o(this,t,e.apply(this,arguments))}}:function(t,e){return function(){return o(this,t,e)}})(t,e))}},"./node_modules/d3-selection/src/selection/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/each.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){for(var e=this._groups,n=0,r=e.length;n<r;++n)for(var o,i=e[n],u=0,s=i.length;u<s;++u)(o=i[u])&&t.call(o,o.__data__,u,i);return this}},"./node_modules/d3-selection/src/selection/empty.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/empty.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){return!this.node()}},"./node_modules/d3-selection/src/selection/enter.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/enter.js ***!
  \**********************************************************/
/*! exports provided: default, EnterNode */function(t,e,n){"use strict";n.r(e),n.d(e,"EnterNode",function(){return i});var r=n(/*! ./sparse */"./node_modules/d3-selection/src/selection/sparse.js"),o=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js");function i(t,e){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=e}e.default=function(){return new o.Selection(this._enter||this._groups.map(r.default),this._parents)},i.prototype={constructor:i,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,e){return this._parent.insertBefore(t,e)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}}},"./node_modules/d3-selection/src/selection/exit.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/exit.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./sparse */"./node_modules/d3-selection/src/selection/sparse.js"),o=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js");e.default=function(){return new o.Selection(this._exit||this._groups.map(r.default),this._parents)}},"./node_modules/d3-selection/src/selection/filter.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/filter.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js"),o=n(/*! ../matcher */"./node_modules/d3-selection/src/matcher.js");e.default=function(t){"function"!=typeof t&&(t=Object(o.default)(t));for(var e=this._groups,n=e.length,i=new Array(n),u=0;u<n;++u)for(var s,c=e[u],a=c.length,l=i[u]=[],d=0;d<a;++d)(s=c[d])&&t.call(s,s.__data__,d,c)&&l.push(s);return new r.Selection(i,this._parents)}},"./node_modules/d3-selection/src/selection/html.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/html.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){this.innerHTML=""}n.r(e),e.default=function(t){return arguments.length?this.each(null==t?r:("function"==typeof t?function(t){return function(){var e=t.apply(this,arguments);this.innerHTML=null==e?"":e}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML}},"./node_modules/d3-selection/src/selection/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/index.js ***!
  \**********************************************************/
/*! exports provided: root, Selection, default */function(t,e,n){"use strict";n.r(e),n.d(e,"root",function(){return q}),n.d(e,"Selection",function(){return H});var r=n(/*! ./select */"./node_modules/d3-selection/src/selection/select.js"),o=n(/*! ./selectAll */"./node_modules/d3-selection/src/selection/selectAll.js"),i=n(/*! ./filter */"./node_modules/d3-selection/src/selection/filter.js"),u=n(/*! ./data */"./node_modules/d3-selection/src/selection/data.js"),s=n(/*! ./enter */"./node_modules/d3-selection/src/selection/enter.js"),c=n(/*! ./exit */"./node_modules/d3-selection/src/selection/exit.js"),a=n(/*! ./join */"./node_modules/d3-selection/src/selection/join.js"),l=n(/*! ./merge */"./node_modules/d3-selection/src/selection/merge.js"),d=n(/*! ./order */"./node_modules/d3-selection/src/selection/order.js"),f=n(/*! ./sort */"./node_modules/d3-selection/src/selection/sort.js"),h=n(/*! ./call */"./node_modules/d3-selection/src/selection/call.js"),p=n(/*! ./nodes */"./node_modules/d3-selection/src/selection/nodes.js"),m=n(/*! ./node */"./node_modules/d3-selection/src/selection/node.js"),y=n(/*! ./size */"./node_modules/d3-selection/src/selection/size.js"),v=n(/*! ./empty */"./node_modules/d3-selection/src/selection/empty.js"),g=n(/*! ./each */"./node_modules/d3-selection/src/selection/each.js"),j=n(/*! ./attr */"./node_modules/d3-selection/src/selection/attr.js"),b=n(/*! ./style */"./node_modules/d3-selection/src/selection/style.js"),_=n(/*! ./property */"./node_modules/d3-selection/src/selection/property.js"),x=n(/*! ./classed */"./node_modules/d3-selection/src/selection/classed.js"),w=n(/*! ./text */"./node_modules/d3-selection/src/selection/text.js"),A=n(/*! ./html */"./node_modules/d3-selection/src/selection/html.js"),O=n(/*! ./raise */"./node_modules/d3-selection/src/selection/raise.js"),k=n(/*! ./lower */"./node_modules/d3-selection/src/selection/lower.js"),S=n(/*! ./append */"./node_modules/d3-selection/src/selection/append.js"),C=n(/*! ./insert */"./node_modules/d3-selection/src/selection/insert.js"),B=n(/*! ./remove */"./node_modules/d3-selection/src/selection/remove.js"),F=n(/*! ./clone */"./node_modules/d3-selection/src/selection/clone.js"),N=n(/*! ./datum */"./node_modules/d3-selection/src/selection/datum.js"),z=n(/*! ./on */"./node_modules/d3-selection/src/selection/on.js"),T=n(/*! ./dispatch */"./node_modules/d3-selection/src/selection/dispatch.js"),q=[null];function H(t,e){this._groups=t,this._parents=e}function D(){return new H([[document.documentElement]],q)}H.prototype=D.prototype={constructor:H,select:r.default,selectAll:o.default,filter:i.default,data:u.default,enter:s.default,exit:c.default,join:a.default,merge:l.default,order:d.default,sort:f.default,call:h.default,nodes:p.default,node:m.default,size:y.default,empty:v.default,each:g.default,attr:j.default,style:b.default,property:_.default,classed:x.default,text:w.default,html:A.default,raise:O.default,lower:k.default,append:S.default,insert:C.default,remove:B.default,clone:F.default,datum:N.default,on:z.default,dispatch:T.default},e.default=D},"./node_modules/d3-selection/src/selection/insert.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/insert.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../creator */"./node_modules/d3-selection/src/creator.js"),o=n(/*! ../selector */"./node_modules/d3-selection/src/selector.js");function i(){return null}e.default=function(t,e){var n="function"==typeof t?t:Object(r.default)(t),u=null==e?i:"function"==typeof e?e:Object(o.default)(e);return this.select(function(){return this.insertBefore(n.apply(this,arguments),u.apply(this,arguments)||null)})}},"./node_modules/d3-selection/src/selection/join.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/join.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e,n){var r=this.enter(),o=this,i=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=e&&(o=e(o)),null==n?i.remove():n(i),r&&o?r.merge(o).order():o}},"./node_modules/d3-selection/src/selection/lower.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/lower.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}n.r(e),e.default=function(){return this.each(r)}},"./node_modules/d3-selection/src/selection/merge.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/merge.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js");e.default=function(t){for(var e=this._groups,n=t._groups,o=e.length,i=n.length,u=Math.min(o,i),s=new Array(o),c=0;c<u;++c)for(var a,l=e[c],d=n[c],f=l.length,h=s[c]=new Array(f),p=0;p<f;++p)(a=l[p]||d[p])&&(h[p]=a);for(;c<o;++c)s[c]=e[c];return new r.Selection(s,this._parents)}},"./node_modules/d3-selection/src/selection/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/node.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){for(var t=this._groups,e=0,n=t.length;e<n;++e)for(var r=t[e],o=0,i=r.length;o<i;++o){var u=r[o];if(u)return u}return null}},"./node_modules/d3-selection/src/selection/nodes.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/nodes.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){var t=new Array(this.size()),e=-1;return this.each(function(){t[++e]=this}),t}},"./node_modules/d3-selection/src/selection/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/on.js ***!
  \*******************************************************/
/*! exports provided: event, default, customEvent */function(t,e,n){"use strict";n.r(e),n.d(e,"event",function(){return o}),n.d(e,"customEvent",function(){return a});var r={},o=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(r={mouseenter:"mouseover",mouseleave:"mouseout"}));function i(t,e,n){return t=u(t,e,n),function(e){var n=e.relatedTarget;n&&(n===this||8&n.compareDocumentPosition(this))||t.call(this,e)}}function u(t,e,n){return function(r){var i=o;o=r;try{t.call(this,this.__data__,e,n)}finally{o=i}}}function s(t){return function(){var e=this.__on;if(e){for(var n,r=0,o=-1,i=e.length;r<i;++r)n=e[r],t.type&&n.type!==t.type||n.name!==t.name?e[++o]=n:this.removeEventListener(n.type,n.listener,n.capture);++o?e.length=o:delete this.__on}}}function c(t,e,n){var o=r.hasOwnProperty(t.type)?i:u;return function(r,i,u){var s,c=this.__on,a=o(e,i,u);if(c)for(var l=0,d=c.length;l<d;++l)if((s=c[l]).type===t.type&&s.name===t.name)return this.removeEventListener(s.type,s.listener,s.capture),this.addEventListener(s.type,s.listener=a,s.capture=n),void(s.value=e);this.addEventListener(t.type,a,n),s={type:t.type,name:t.name,value:e,listener:a,capture:n},c?c.push(s):this.__on=[s]}}function a(t,e,n,r){var i=o;t.sourceEvent=o,o=t;try{return e.apply(n,r)}finally{o=i}}e.default=function(t,e,n){var r,o,i=function(t){return t.trim().split(/^|\s+/).map(function(t){var e="",n=t.indexOf(".");return n>=0&&(e=t.slice(n+1),t=t.slice(0,n)),{type:t,name:e}})}(t+""),u=i.length;if(!(arguments.length<2)){for(a=e?c:s,null==n&&(n=!1),r=0;r<u;++r)this.each(a(i[r],e,n));return this}var a=this.node().__on;if(a)for(var l,d=0,f=a.length;d<f;++d)for(r=0,l=a[d];r<u;++r)if((o=i[r]).type===l.type&&o.name===l.name)return l.value}},"./node_modules/d3-selection/src/selection/order.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/order.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){for(var t=this._groups,e=-1,n=t.length;++e<n;)for(var r,o=t[e],i=o.length-1,u=o[i];--i>=0;)(r=o[i])&&(u&&4^r.compareDocumentPosition(u)&&u.parentNode.insertBefore(r,u),u=r);return this}},"./node_modules/d3-selection/src/selection/property.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/property.js ***!
  \*************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return arguments.length>1?this.each((null==e?function(t){return function(){delete this[t]}}:"function"==typeof e?function(t,e){return function(){var n=e.apply(this,arguments);null==n?delete this[t]:this[t]=n}}:function(t,e){return function(){this[t]=e}})(t,e)):this.node()[t]}},"./node_modules/d3-selection/src/selection/raise.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/raise.js ***!
  \**********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){this.nextSibling&&this.parentNode.appendChild(this)}n.r(e),e.default=function(){return this.each(r)}},"./node_modules/d3-selection/src/selection/remove.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/remove.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){var t=this.parentNode;t&&t.removeChild(this)}n.r(e),e.default=function(){return this.each(r)}},"./node_modules/d3-selection/src/selection/select.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/select.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js"),o=n(/*! ../selector */"./node_modules/d3-selection/src/selector.js");e.default=function(t){"function"!=typeof t&&(t=Object(o.default)(t));for(var e=this._groups,n=e.length,i=new Array(n),u=0;u<n;++u)for(var s,c,a=e[u],l=a.length,d=i[u]=new Array(l),f=0;f<l;++f)(s=a[f])&&(c=t.call(s,s.__data__,f,a))&&("__data__"in s&&(c.__data__=s.__data__),d[f]=c);return new r.Selection(i,this._parents)}},"./node_modules/d3-selection/src/selection/selectAll.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/selectAll.js ***!
  \**************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js"),o=n(/*! ../selectorAll */"./node_modules/d3-selection/src/selectorAll.js");e.default=function(t){"function"!=typeof t&&(t=Object(o.default)(t));for(var e=this._groups,n=e.length,i=[],u=[],s=0;s<n;++s)for(var c,a=e[s],l=a.length,d=0;d<l;++d)(c=a[d])&&(i.push(t.call(c,c.__data__,d,a)),u.push(c));return new r.Selection(i,u)}},"./node_modules/d3-selection/src/selection/size.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/size.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){var t=0;return this.each(function(){++t}),t}},"./node_modules/d3-selection/src/selection/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sort.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-selection/src/selection/index.js");function o(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}e.default=function(t){function e(e,n){return e&&n?t(e.__data__,n.__data__):!e-!n}t||(t=o);for(var n=this._groups,i=n.length,u=new Array(i),s=0;s<i;++s){for(var c,a=n[s],l=a.length,d=u[s]=new Array(l),f=0;f<l;++f)(c=a[f])&&(d[f]=c);d.sort(e)}return new r.Selection(u,this._parents).order()}},"./node_modules/d3-selection/src/selection/sparse.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sparse.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return new Array(t.length)}},"./node_modules/d3-selection/src/selection/style.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/style.js ***!
  \**********************************************************/
/*! exports provided: default, styleValue */function(t,e,n){"use strict";n.r(e),n.d(e,"styleValue",function(){return o});var r=n(/*! ../window */"./node_modules/d3-selection/src/window.js");function o(t,e){return t.style.getPropertyValue(e)||Object(r.default)(t).getComputedStyle(t,null).getPropertyValue(e)}e.default=function(t,e,n){return arguments.length>1?this.each((null==e?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof e?function(t,e,n){return function(){var r=e.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,n)}}:function(t,e,n){return function(){this.style.setProperty(t,e,n)}})(t,e,null==n?"":n)):o(this.node(),t)}},"./node_modules/d3-selection/src/selection/text.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/text.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){this.textContent=""}n.r(e),e.default=function(t){return arguments.length?this.each(null==t?r:("function"==typeof t?function(t){return function(){var e=t.apply(this,arguments);this.textContent=null==e?"":e}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent}},"./node_modules/d3-selection/src/selector.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/selector.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){}n.r(e),e.default=function(t){return null==t?r:function(){return this.querySelector(t)}}},"./node_modules/d3-selection/src/selectorAll.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/selectorAll.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){return[]}n.r(e),e.default=function(t){return null==t?r:function(){return this.querySelectorAll(t)}}},"./node_modules/d3-selection/src/sourceEvent.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/sourceEvent.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./selection/on */"./node_modules/d3-selection/src/selection/on.js");e.default=function(){for(var t,e=r.event;t=e.sourceEvent;)e=t;return e}},"./node_modules/d3-selection/src/touch.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/touch.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./sourceEvent */"./node_modules/d3-selection/src/sourceEvent.js"),o=n(/*! ./point */"./node_modules/d3-selection/src/point.js");e.default=function(t,e,n){arguments.length<3&&(n=e,e=Object(r.default)().changedTouches);for(var i,u=0,s=e?e.length:0;u<s;++u)if((i=e[u]).identifier===n)return Object(o.default)(t,i);return null}},"./node_modules/d3-selection/src/touches.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/touches.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./sourceEvent */"./node_modules/d3-selection/src/sourceEvent.js"),o=n(/*! ./point */"./node_modules/d3-selection/src/point.js");e.default=function(t,e){null==e&&(e=Object(r.default)().touches);for(var n=0,i=e?e.length:0,u=new Array(i);n<i;++n)u[n]=Object(o.default)(t,e[n]);return u}},"./node_modules/d3-selection/src/window.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/window.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}},"./node_modules/d3-shape/src/arc.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/arc.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-path */"./node_modules/d3-path/src/index.js"),o=n(/*! ./constant */"./node_modules/d3-shape/src/constant.js"),i=n(/*! ./math */"./node_modules/d3-shape/src/math.js");function u(t){return t.innerRadius}function s(t){return t.outerRadius}function c(t){return t.startAngle}function a(t){return t.endAngle}function l(t){return t&&t.padAngle}function d(t,e,n,r,o,u,s){var c=t-n,a=e-r,l=(s?u:-u)/Object(i.sqrt)(c*c+a*a),d=l*a,f=-l*c,h=t+d,p=e+f,m=n+d,y=r+f,v=(h+m)/2,g=(p+y)/2,j=m-h,b=y-p,_=j*j+b*b,x=o-u,w=h*y-m*p,A=(b<0?-1:1)*Object(i.sqrt)(Object(i.max)(0,x*x*_-w*w)),O=(w*b-j*A)/_,k=(-w*j-b*A)/_,S=(w*b+j*A)/_,C=(-w*j+b*A)/_,B=O-v,F=k-g,N=S-v,z=C-g;return B*B+F*F>N*N+z*z&&(O=S,k=C),{cx:O,cy:k,x01:-d,y01:-f,x11:O*(o/x-1),y11:k*(o/x-1)}}e.default=function(){var t=u,e=s,n=Object(o.default)(0),f=null,h=c,p=a,m=l,y=null;function v(){var o,u,s=+t.apply(this,arguments),c=+e.apply(this,arguments),a=h.apply(this,arguments)-i.halfPi,l=p.apply(this,arguments)-i.halfPi,v=Object(i.abs)(l-a),g=l>a;if(y||(y=o=Object(r.path)()),c<s&&(u=c,c=s,s=u),c>i.epsilon)if(v>i.tau-i.epsilon)y.moveTo(c*Object(i.cos)(a),c*Object(i.sin)(a)),y.arc(0,0,c,a,l,!g),s>i.epsilon&&(y.moveTo(s*Object(i.cos)(l),s*Object(i.sin)(l)),y.arc(0,0,s,l,a,g));else{var j,b,_=a,x=l,w=a,A=l,O=v,k=v,S=m.apply(this,arguments)/2,C=S>i.epsilon&&(f?+f.apply(this,arguments):Object(i.sqrt)(s*s+c*c)),B=Object(i.min)(Object(i.abs)(c-s)/2,+n.apply(this,arguments)),F=B,N=B;if(C>i.epsilon){var z=Object(i.asin)(C/s*Object(i.sin)(S)),T=Object(i.asin)(C/c*Object(i.sin)(S));(O-=2*z)>i.epsilon?(w+=z*=g?1:-1,A-=z):(O=0,w=A=(a+l)/2),(k-=2*T)>i.epsilon?(_+=T*=g?1:-1,x-=T):(k=0,_=x=(a+l)/2)}var q=c*Object(i.cos)(_),H=c*Object(i.sin)(_),D=s*Object(i.cos)(A),V=s*Object(i.sin)(A);if(B>i.epsilon){var X,Y=c*Object(i.cos)(x),Z=c*Object(i.sin)(x),G=s*Object(i.cos)(w),$=s*Object(i.sin)(w);if(v<=i.tau-i.epsilon&&(X=function(t,e,n,r,o,u,s,c){var a=n-t,l=r-e,d=s-o,f=c-u,h=f*a-d*l;if(!(h*h<i.epsilon))return[t+(h=(d*(e-u)-f*(t-o))/h)*a,e+h*l]}(q,H,G,$,Y,Z,D,V))){var E=q-X[0],Q=H-X[1],J=Y-X[0],M=Z-X[1],I=1/Object(i.sin)(Object(i.acos)((E*J+Q*M)/(Object(i.sqrt)(E*E+Q*Q)*Object(i.sqrt)(J*J+M*M)))/2),R=Object(i.sqrt)(X[0]*X[0]+X[1]*X[1]);F=Object(i.min)(B,(s-R)/(I-1)),N=Object(i.min)(B,(c-R)/(I+1))}}k>i.epsilon?N>i.epsilon?(j=d(G,$,q,H,c,N,g),b=d(Y,Z,D,V,c,N,g),y.moveTo(j.cx+j.x01,j.cy+j.y01),N<B?y.arc(j.cx,j.cy,N,Object(i.atan2)(j.y01,j.x01),Object(i.atan2)(b.y01,b.x01),!g):(y.arc(j.cx,j.cy,N,Object(i.atan2)(j.y01,j.x01),Object(i.atan2)(j.y11,j.x11),!g),y.arc(0,0,c,Object(i.atan2)(j.cy+j.y11,j.cx+j.x11),Object(i.atan2)(b.cy+b.y11,b.cx+b.x11),!g),y.arc(b.cx,b.cy,N,Object(i.atan2)(b.y11,b.x11),Object(i.atan2)(b.y01,b.x01),!g))):(y.moveTo(q,H),y.arc(0,0,c,_,x,!g)):y.moveTo(q,H),s>i.epsilon&&O>i.epsilon?F>i.epsilon?(j=d(D,V,Y,Z,s,-F,g),b=d(q,H,G,$,s,-F,g),y.lineTo(j.cx+j.x01,j.cy+j.y01),F<B?y.arc(j.cx,j.cy,F,Object(i.atan2)(j.y01,j.x01),Object(i.atan2)(b.y01,b.x01),!g):(y.arc(j.cx,j.cy,F,Object(i.atan2)(j.y01,j.x01),Object(i.atan2)(j.y11,j.x11),!g),y.arc(0,0,s,Object(i.atan2)(j.cy+j.y11,j.cx+j.x11),Object(i.atan2)(b.cy+b.y11,b.cx+b.x11),g),y.arc(b.cx,b.cy,F,Object(i.atan2)(b.y11,b.x11),Object(i.atan2)(b.y01,b.x01),!g))):y.arc(0,0,s,A,w,g):y.lineTo(D,V)}else y.moveTo(0,0);if(y.closePath(),o)return y=null,o+""||null}return v.centroid=function(){var n=(+t.apply(this,arguments)+ +e.apply(this,arguments))/2,r=(+h.apply(this,arguments)+ +p.apply(this,arguments))/2-i.pi/2;return[Object(i.cos)(r)*n,Object(i.sin)(r)*n]},v.innerRadius=function(e){return arguments.length?(t="function"==typeof e?e:Object(o.default)(+e),v):t},v.outerRadius=function(t){return arguments.length?(e="function"==typeof t?t:Object(o.default)(+t),v):e},v.cornerRadius=function(t){return arguments.length?(n="function"==typeof t?t:Object(o.default)(+t),v):n},v.padRadius=function(t){return arguments.length?(f=null==t?null:"function"==typeof t?t:Object(o.default)(+t),v):f},v.startAngle=function(t){return arguments.length?(h="function"==typeof t?t:Object(o.default)(+t),v):h},v.endAngle=function(t){return arguments.length?(p="function"==typeof t?t:Object(o.default)(+t),v):p},v.padAngle=function(t){return arguments.length?(m="function"==typeof t?t:Object(o.default)(+t),v):m},v.context=function(t){return arguments.length?(y=null==t?null:t,v):y},v}},"./node_modules/d3-shape/src/area.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/area.js ***!
  \*******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-path */"./node_modules/d3-path/src/index.js"),o=n(/*! ./constant */"./node_modules/d3-shape/src/constant.js"),i=n(/*! ./curve/linear */"./node_modules/d3-shape/src/curve/linear.js"),u=n(/*! ./line */"./node_modules/d3-shape/src/line.js"),s=n(/*! ./point */"./node_modules/d3-shape/src/point.js");e.default=function(){var t=s.x,e=null,n=Object(o.default)(0),c=s.y,a=Object(o.default)(!0),l=null,d=i.default,f=null;function h(o){var i,u,s,h,p,m=o.length,y=!1,v=new Array(m),g=new Array(m);for(null==l&&(f=d(p=Object(r.path)())),i=0;i<=m;++i){if(!(i<m&&a(h=o[i],i,o))===y)if(y=!y)u=i,f.areaStart(),f.lineStart();else{for(f.lineEnd(),f.lineStart(),s=i-1;s>=u;--s)f.point(v[s],g[s]);f.lineEnd(),f.areaEnd()}y&&(v[i]=+t(h,i,o),g[i]=+n(h,i,o),f.point(e?+e(h,i,o):v[i],c?+c(h,i,o):g[i]))}if(p)return f=null,p+""||null}function p(){return Object(u.default)().defined(a).curve(d).context(l)}return h.x=function(n){return arguments.length?(t="function"==typeof n?n:Object(o.default)(+n),e=null,h):t},h.x0=function(e){return arguments.length?(t="function"==typeof e?e:Object(o.default)(+e),h):t},h.x1=function(t){return arguments.length?(e=null==t?null:"function"==typeof t?t:Object(o.default)(+t),h):e},h.y=function(t){return arguments.length?(n="function"==typeof t?t:Object(o.default)(+t),c=null,h):n},h.y0=function(t){return arguments.length?(n="function"==typeof t?t:Object(o.default)(+t),h):n},h.y1=function(t){return arguments.length?(c=null==t?null:"function"==typeof t?t:Object(o.default)(+t),h):c},h.lineX0=h.lineY0=function(){return p().x(t).y(n)},h.lineY1=function(){return p().x(t).y(c)},h.lineX1=function(){return p().x(e).y(n)},h.defined=function(t){return arguments.length?(a="function"==typeof t?t:Object(o.default)(!!t),h):a},h.curve=function(t){return arguments.length?(d=t,null!=l&&(f=d(l)),h):d},h.context=function(t){return arguments.length?(null==t?l=f=null:f=d(l=t),h):l},h}},"./node_modules/d3-shape/src/areaRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/areaRadial.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./curve/radial */"./node_modules/d3-shape/src/curve/radial.js"),o=n(/*! ./area */"./node_modules/d3-shape/src/area.js"),i=n(/*! ./lineRadial */"./node_modules/d3-shape/src/lineRadial.js");e.default=function(){var t=Object(o.default)().curve(r.curveRadialLinear),e=t.curve,n=t.lineX0,u=t.lineX1,s=t.lineY0,c=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Object(i.lineRadial)(n())},delete t.lineX0,t.lineEndAngle=function(){return Object(i.lineRadial)(u())},delete t.lineX1,t.lineInnerRadius=function(){return Object(i.lineRadial)(s())},delete t.lineY0,t.lineOuterRadius=function(){return Object(i.lineRadial)(c())},delete t.lineY1,t.curve=function(t){return arguments.length?e(Object(r.default)(t)):e()._curve},t}},"./node_modules/d3-shape/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/array.js ***!
  \********************************************/
/*! exports provided: slice */function(t,e,n){"use strict";n.r(e),n.d(e,"slice",function(){return r});var r=Array.prototype.slice},"./node_modules/d3-shape/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return t}}},"./node_modules/d3-shape/src/curve/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basis.js ***!
  \**************************************************/
/*! exports provided: point, Basis, default */function(t,e,n){"use strict";function r(t,e,n){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+e)/6,(t._y0+4*t._y1+n)/6)}function o(t){this._context=t}n.r(e),n.d(e,"point",function(){return r}),n.d(e,"Basis",function(){return o}),o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:r(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:r(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}},e.default=function(t){return new o(t)}},"./node_modules/d3-shape/src/curve/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../noop */"./node_modules/d3-shape/src/noop.js"),o=n(/*! ./basis */"./node_modules/d3-shape/src/curve/basis.js");function i(t){this._context=t}i.prototype={areaStart:r.default,areaEnd:r.default,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x2=t,this._y2=e;break;case 1:this._point=2,this._x3=t,this._y3=e;break;case 2:this._point=3,this._x4=t,this._y4=e,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+e)/6);break;default:Object(o.point)(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}},e.default=function(t){return new i(t)}},"./node_modules/d3-shape/src/curve/basisOpen.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisOpen.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./basis */"./node_modules/d3-shape/src/curve/basis.js");function o(t){this._context=t}o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var n=(this._x0+4*this._x1+t)/6,o=(this._y0+4*this._y1+e)/6;this._line?this._context.lineTo(n,o):this._context.moveTo(n,o);break;case 3:this._point=4;default:Object(r.point)(this,t,e)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e}},e.default=function(t){return new o(t)}},"./node_modules/d3-shape/src/curve/bundle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/bundle.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./basis */"./node_modules/d3-shape/src/curve/basis.js");function o(t,e){this._basis=new r.Basis(t),this._beta=e}o.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,e=this._y,n=t.length-1;if(n>0)for(var r,o=t[0],i=e[0],u=t[n]-o,s=e[n]-i,c=-1;++c<=n;)r=c/n,this._basis.point(this._beta*t[c]+(1-this._beta)*(o+r*u),this._beta*e[c]+(1-this._beta)*(i+r*s));this._x=this._y=null,this._basis.lineEnd()},point:function(t,e){this._x.push(+t),this._y.push(+e)}},e.default=function t(e){function n(t){return 1===e?new r.Basis(t):new o(t,e)}return n.beta=function(e){return t(+e)},n}(.85)},"./node_modules/d3-shape/src/curve/cardinal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinal.js ***!
  \*****************************************************/
/*! exports provided: point, Cardinal, default */function(t,e,n){"use strict";function r(t,e,n){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-e),t._y2+t._k*(t._y1-n),t._x2,t._y2)}function o(t,e){this._context=t,this._k=(1-e)/6}n.r(e),n.d(e,"point",function(){return r}),n.d(e,"Cardinal",function(){return o}),o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:r(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2,this._x1=t,this._y1=e;break;case 2:this._point=3;default:r(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}},e.default=function t(e){function n(t){return new o(t,e)}return n.tension=function(e){return t(+e)},n}(0)},"./node_modules/d3-shape/src/curve/cardinalClosed.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalClosed.js ***!
  \***********************************************************/
/*! exports provided: CardinalClosed, default */function(t,e,n){"use strict";n.r(e),n.d(e,"CardinalClosed",function(){return i});var r=n(/*! ../noop */"./node_modules/d3-shape/src/noop.js"),o=n(/*! ./cardinal */"./node_modules/d3-shape/src/curve/cardinal.js");function i(t,e){this._context=t,this._k=(1-e)/6}i.prototype={areaStart:r.default,areaEnd:r.default,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:Object(o.point)(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}},e.default=function t(e){function n(t){return new i(t,e)}return n.tension=function(e){return t(+e)},n}(0)},"./node_modules/d3-shape/src/curve/cardinalOpen.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalOpen.js ***!
  \*********************************************************/
/*! exports provided: CardinalOpen, default */function(t,e,n){"use strict";n.r(e),n.d(e,"CardinalOpen",function(){return o});var r=n(/*! ./cardinal */"./node_modules/d3-shape/src/curve/cardinal.js");function o(t,e){this._context=t,this._k=(1-e)/6}o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(r.point)(this,t,e)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}},e.default=function t(e){function n(t){return new o(t,e)}return n.tension=function(e){return t(+e)},n}(0)},"./node_modules/d3-shape/src/curve/catmullRom.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRom.js ***!
  \*******************************************************/
/*! exports provided: point, default */function(t,e,n){"use strict";n.r(e),n.d(e,"point",function(){return i});var r=n(/*! ../math */"./node_modules/d3-shape/src/math.js"),o=n(/*! ./cardinal */"./node_modules/d3-shape/src/curve/cardinal.js");function i(t,e,n){var o=t._x1,i=t._y1,u=t._x2,s=t._y2;if(t._l01_a>r.epsilon){var c=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,a=3*t._l01_a*(t._l01_a+t._l12_a);o=(o*c-t._x0*t._l12_2a+t._x2*t._l01_2a)/a,i=(i*c-t._y0*t._l12_2a+t._y2*t._l01_2a)/a}if(t._l23_a>r.epsilon){var l=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,d=3*t._l23_a*(t._l23_a+t._l12_a);u=(u*l+t._x1*t._l23_2a-e*t._l12_2a)/d,s=(s*l+t._y1*t._l23_2a-n*t._l12_2a)/d}t._context.bezierCurveTo(o,i,u,s,t._x2,t._y2)}function u(t,e){this._context=t,this._alpha=e}u.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3;default:i(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}},e.default=function t(e){function n(t){return e?new u(t,e):new o.Cardinal(t,0)}return n.alpha=function(e){return t(+e)},n}(.5)},"./node_modules/d3-shape/src/curve/catmullRomClosed.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomClosed.js ***!
  \*************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./cardinalClosed */"./node_modules/d3-shape/src/curve/cardinalClosed.js"),o=n(/*! ../noop */"./node_modules/d3-shape/src/noop.js"),i=n(/*! ./catmullRom */"./node_modules/d3-shape/src/curve/catmullRom.js");function u(t,e){this._context=t,this._alpha=e}u.prototype={areaStart:o.default,areaEnd:o.default,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=e;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=e);break;case 2:this._point=3,this._x5=t,this._y5=e;break;default:Object(i.point)(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}},e.default=function t(e){function n(t){return e?new u(t,e):new r.CardinalClosed(t,0)}return n.alpha=function(e){return t(+e)},n}(.5)},"./node_modules/d3-shape/src/curve/catmullRomOpen.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomOpen.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./cardinalOpen */"./node_modules/d3-shape/src/curve/cardinalOpen.js"),o=n(/*! ./catmullRom */"./node_modules/d3-shape/src/curve/catmullRom.js");function i(t,e){this._context=t,this._alpha=e}i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){if(t=+t,e=+e,this._point){var n=this._x2-t,r=this._y2-e;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(n*n+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(o.point)(this,t,e)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=e}},e.default=function t(e){function n(t){return e?new i(t,e):new r.CardinalOpen(t,0)}return n.alpha=function(e){return t(+e)},n}(.5)},"./node_modules/d3-shape/src/curve/linear.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linear.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t){this._context=t}n.r(e),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:this._context.lineTo(t,e)}}},e.default=function(t){return new r(t)}},"./node_modules/d3-shape/src/curve/linearClosed.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linearClosed.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../noop */"./node_modules/d3-shape/src/noop.js");function o(t){this._context=t}o.prototype={areaStart:r.default,areaEnd:r.default,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,e){t=+t,e=+e,this._point?this._context.lineTo(t,e):(this._point=1,this._context.moveTo(t,e))}},e.default=function(t){return new o(t)}},"./node_modules/d3-shape/src/curve/monotone.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/monotone.js ***!
  \*****************************************************/
/*! exports provided: monotoneX, monotoneY */function(t,e,n){"use strict";function r(t){return t<0?-1:1}function o(t,e,n){var o=t._x1-t._x0,i=e-t._x1,u=(t._y1-t._y0)/(o||i<0&&-0),s=(n-t._y1)/(i||o<0&&-0),c=(u*i+s*o)/(o+i);return(r(u)+r(s))*Math.min(Math.abs(u),Math.abs(s),.5*Math.abs(c))||0}function i(t,e){var n=t._x1-t._x0;return n?(3*(t._y1-t._y0)/n-e)/2:e}function u(t,e,n){var r=t._x0,o=t._y0,i=t._x1,u=t._y1,s=(i-r)/3;t._context.bezierCurveTo(r+s,o+s*e,i-s,u-s*n,i,u)}function s(t){this._context=t}function c(t){this._context=new a(t)}function a(t){this._context=t}function l(t){return new s(t)}function d(t){return new c(t)}n.r(e),n.d(e,"monotoneX",function(){return l}),n.d(e,"monotoneY",function(){return d}),s.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:u(this,this._t0,i(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){var n=NaN;if(e=+e,(t=+t)!==this._x1||e!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;break;case 2:this._point=3,u(this,i(this,n=o(this,t,e)),n);break;default:u(this,this._t0,n=o(this,t,e))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=e,this._t0=n}}},(c.prototype=Object.create(s.prototype)).point=function(t,e){s.prototype.point.call(this,e,t)},a.prototype={moveTo:function(t,e){this._context.moveTo(e,t)},closePath:function(){this._context.closePath()},lineTo:function(t,e){this._context.lineTo(e,t)},bezierCurveTo:function(t,e,n,r,o,i){this._context.bezierCurveTo(e,t,r,n,i,o)}}},"./node_modules/d3-shape/src/curve/natural.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/natural.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t){this._context=t}function o(t){var e,n,r=t.length-1,o=new Array(r),i=new Array(r),u=new Array(r);for(o[0]=0,i[0]=2,u[0]=t[0]+2*t[1],e=1;e<r-1;++e)o[e]=1,i[e]=4,u[e]=4*t[e]+2*t[e+1];for(o[r-1]=2,i[r-1]=7,u[r-1]=8*t[r-1]+t[r],e=1;e<r;++e)n=o[e]/i[e-1],i[e]-=n,u[e]-=n*u[e-1];for(o[r-1]=u[r-1]/i[r-1],e=r-2;e>=0;--e)o[e]=(u[e]-o[e+1])/i[e];for(i[r-1]=(t[r]+o[r-1])/2,e=0;e<r-1;++e)i[e]=2*t[e+1]-o[e+1];return[o,i]}n.r(e),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,e=this._y,n=t.length;if(n)if(this._line?this._context.lineTo(t[0],e[0]):this._context.moveTo(t[0],e[0]),2===n)this._context.lineTo(t[1],e[1]);else for(var r=o(t),i=o(e),u=0,s=1;s<n;++u,++s)this._context.bezierCurveTo(r[0][u],i[0][u],r[1][u],i[1][u],t[s],e[s]);(this._line||0!==this._line&&1===n)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,e){this._x.push(+t),this._y.push(+e)}},e.default=function(t){return new r(t)}},"./node_modules/d3-shape/src/curve/radial.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/radial.js ***!
  \***************************************************/
/*! exports provided: curveRadialLinear, default */function(t,e,n){"use strict";n.r(e),n.d(e,"curveRadialLinear",function(){return r}),n.d(e,"default",function(){return i});var r=i(n(/*! ./linear */"./node_modules/d3-shape/src/curve/linear.js").default);function o(t){this._curve=t}function i(t){function e(e){return new o(t(e))}return e._curve=t,e}o.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,e){this._curve.point(e*Math.sin(t),e*-Math.cos(t))}}},"./node_modules/d3-shape/src/curve/step.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/step.js ***!
  \*************************************************/
/*! exports provided: default, stepBefore, stepAfter */function(t,e,n){"use strict";function r(t,e){this._context=t,this._t=e}function o(t){return new r(t,0)}function i(t){return new r(t,1)}n.r(e),n.d(e,"stepBefore",function(){return o}),n.d(e,"stepAfter",function(){return i}),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,e),this._context.lineTo(t,e);else{var n=this._x*(1-this._t)+t*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,e)}}this._x=t,this._y=e}},e.default=function(t){return new r(t,.5)}},"./node_modules/d3-shape/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return e<t?-1:e>t?1:e>=t?0:NaN}},"./node_modules/d3-shape/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return t}},"./node_modules/d3-shape/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/index.js ***!
  \********************************************/
/*! exports provided: arc, area, line, pie, areaRadial, radialArea, lineRadial, radialLine, pointRadial, linkHorizontal, linkVertical, linkRadial, symbol, symbols, symbolCircle, symbolCross, symbolDiamond, symbolSquare, symbolStar, symbolTriangle, symbolWye, curveBasisClosed, curveBasisOpen, curveBasis, curveBundle, curveCardinalClosed, curveCardinalOpen, curveCardinal, curveCatmullRomClosed, curveCatmullRomOpen, curveCatmullRom, curveLinearClosed, curveLinear, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, stack, stackOffsetExpand, stackOffsetDiverging, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle, stackOrderAppearance, stackOrderAscending, stackOrderDescending, stackOrderInsideOut, stackOrderNone, stackOrderReverse */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./arc */"./node_modules/d3-shape/src/arc.js");n.d(e,"arc",function(){return r.default});var o=n(/*! ./area */"./node_modules/d3-shape/src/area.js");n.d(e,"area",function(){return o.default});var i=n(/*! ./line */"./node_modules/d3-shape/src/line.js");n.d(e,"line",function(){return i.default});var u=n(/*! ./pie */"./node_modules/d3-shape/src/pie.js");n.d(e,"pie",function(){return u.default});var s=n(/*! ./areaRadial */"./node_modules/d3-shape/src/areaRadial.js");n.d(e,"areaRadial",function(){return s.default}),n.d(e,"radialArea",function(){return s.default});var c=n(/*! ./lineRadial */"./node_modules/d3-shape/src/lineRadial.js");n.d(e,"lineRadial",function(){return c.default}),n.d(e,"radialLine",function(){return c.default});var a=n(/*! ./pointRadial */"./node_modules/d3-shape/src/pointRadial.js");n.d(e,"pointRadial",function(){return a.default});var l=n(/*! ./link/index */"./node_modules/d3-shape/src/link/index.js");n.d(e,"linkHorizontal",function(){return l.linkHorizontal}),n.d(e,"linkVertical",function(){return l.linkVertical}),n.d(e,"linkRadial",function(){return l.linkRadial});var d=n(/*! ./symbol */"./node_modules/d3-shape/src/symbol.js");n.d(e,"symbol",function(){return d.default}),n.d(e,"symbols",function(){return d.symbols});var f=n(/*! ./symbol/circle */"./node_modules/d3-shape/src/symbol/circle.js");n.d(e,"symbolCircle",function(){return f.default});var h=n(/*! ./symbol/cross */"./node_modules/d3-shape/src/symbol/cross.js");n.d(e,"symbolCross",function(){return h.default});var p=n(/*! ./symbol/diamond */"./node_modules/d3-shape/src/symbol/diamond.js");n.d(e,"symbolDiamond",function(){return p.default});var m=n(/*! ./symbol/square */"./node_modules/d3-shape/src/symbol/square.js");n.d(e,"symbolSquare",function(){return m.default});var y=n(/*! ./symbol/star */"./node_modules/d3-shape/src/symbol/star.js");n.d(e,"symbolStar",function(){return y.default});var v=n(/*! ./symbol/triangle */"./node_modules/d3-shape/src/symbol/triangle.js");n.d(e,"symbolTriangle",function(){return v.default});var g=n(/*! ./symbol/wye */"./node_modules/d3-shape/src/symbol/wye.js");n.d(e,"symbolWye",function(){return g.default});var j=n(/*! ./curve/basisClosed */"./node_modules/d3-shape/src/curve/basisClosed.js");n.d(e,"curveBasisClosed",function(){return j.default});var b=n(/*! ./curve/basisOpen */"./node_modules/d3-shape/src/curve/basisOpen.js");n.d(e,"curveBasisOpen",function(){return b.default});var _=n(/*! ./curve/basis */"./node_modules/d3-shape/src/curve/basis.js");n.d(e,"curveBasis",function(){return _.default});var x=n(/*! ./curve/bundle */"./node_modules/d3-shape/src/curve/bundle.js");n.d(e,"curveBundle",function(){return x.default});var w=n(/*! ./curve/cardinalClosed */"./node_modules/d3-shape/src/curve/cardinalClosed.js");n.d(e,"curveCardinalClosed",function(){return w.default});var A=n(/*! ./curve/cardinalOpen */"./node_modules/d3-shape/src/curve/cardinalOpen.js");n.d(e,"curveCardinalOpen",function(){return A.default});var O=n(/*! ./curve/cardinal */"./node_modules/d3-shape/src/curve/cardinal.js");n.d(e,"curveCardinal",function(){return O.default});var k=n(/*! ./curve/catmullRomClosed */"./node_modules/d3-shape/src/curve/catmullRomClosed.js");n.d(e,"curveCatmullRomClosed",function(){return k.default});var S=n(/*! ./curve/catmullRomOpen */"./node_modules/d3-shape/src/curve/catmullRomOpen.js");n.d(e,"curveCatmullRomOpen",function(){return S.default});var C=n(/*! ./curve/catmullRom */"./node_modules/d3-shape/src/curve/catmullRom.js");n.d(e,"curveCatmullRom",function(){return C.default});var B=n(/*! ./curve/linearClosed */"./node_modules/d3-shape/src/curve/linearClosed.js");n.d(e,"curveLinearClosed",function(){return B.default});var F=n(/*! ./curve/linear */"./node_modules/d3-shape/src/curve/linear.js");n.d(e,"curveLinear",function(){return F.default});var N=n(/*! ./curve/monotone */"./node_modules/d3-shape/src/curve/monotone.js");n.d(e,"curveMonotoneX",function(){return N.monotoneX}),n.d(e,"curveMonotoneY",function(){return N.monotoneY});var z=n(/*! ./curve/natural */"./node_modules/d3-shape/src/curve/natural.js");n.d(e,"curveNatural",function(){return z.default});var T=n(/*! ./curve/step */"./node_modules/d3-shape/src/curve/step.js");n.d(e,"curveStep",function(){return T.default}),n.d(e,"curveStepAfter",function(){return T.stepAfter}),n.d(e,"curveStepBefore",function(){return T.stepBefore});var q=n(/*! ./stack */"./node_modules/d3-shape/src/stack.js");n.d(e,"stack",function(){return q.default});var H=n(/*! ./offset/expand */"./node_modules/d3-shape/src/offset/expand.js");n.d(e,"stackOffsetExpand",function(){return H.default});var D=n(/*! ./offset/diverging */"./node_modules/d3-shape/src/offset/diverging.js");n.d(e,"stackOffsetDiverging",function(){return D.default});var V=n(/*! ./offset/none */"./node_modules/d3-shape/src/offset/none.js");n.d(e,"stackOffsetNone",function(){return V.default});var X=n(/*! ./offset/silhouette */"./node_modules/d3-shape/src/offset/silhouette.js");n.d(e,"stackOffsetSilhouette",function(){return X.default});var Y=n(/*! ./offset/wiggle */"./node_modules/d3-shape/src/offset/wiggle.js");n.d(e,"stackOffsetWiggle",function(){return Y.default});var Z=n(/*! ./order/appearance */"./node_modules/d3-shape/src/order/appearance.js");n.d(e,"stackOrderAppearance",function(){return Z.default});var G=n(/*! ./order/ascending */"./node_modules/d3-shape/src/order/ascending.js");n.d(e,"stackOrderAscending",function(){return G.default});var $=n(/*! ./order/descending */"./node_modules/d3-shape/src/order/descending.js");n.d(e,"stackOrderDescending",function(){return $.default});var E=n(/*! ./order/insideOut */"./node_modules/d3-shape/src/order/insideOut.js");n.d(e,"stackOrderInsideOut",function(){return E.default});var Q=n(/*! ./order/none */"./node_modules/d3-shape/src/order/none.js");n.d(e,"stackOrderNone",function(){return Q.default});var J=n(/*! ./order/reverse */"./node_modules/d3-shape/src/order/reverse.js");n.d(e,"stackOrderReverse",function(){return J.default})},"./node_modules/d3-shape/src/line.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/line.js ***!
  \*******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-path */"./node_modules/d3-path/src/index.js"),o=n(/*! ./constant */"./node_modules/d3-shape/src/constant.js"),i=n(/*! ./curve/linear */"./node_modules/d3-shape/src/curve/linear.js"),u=n(/*! ./point */"./node_modules/d3-shape/src/point.js");e.default=function(){var t=u.x,e=u.y,n=Object(o.default)(!0),s=null,c=i.default,a=null;function l(o){var i,u,l,d=o.length,f=!1;for(null==s&&(a=c(l=Object(r.path)())),i=0;i<=d;++i)!(i<d&&n(u=o[i],i,o))===f&&((f=!f)?a.lineStart():a.lineEnd()),f&&a.point(+t(u,i,o),+e(u,i,o));if(l)return a=null,l+""||null}return l.x=function(e){return arguments.length?(t="function"==typeof e?e:Object(o.default)(+e),l):t},l.y=function(t){return arguments.length?(e="function"==typeof t?t:Object(o.default)(+t),l):e},l.defined=function(t){return arguments.length?(n="function"==typeof t?t:Object(o.default)(!!t),l):n},l.curve=function(t){return arguments.length?(c=t,null!=s&&(a=c(s)),l):c},l.context=function(t){return arguments.length?(null==t?s=a=null:a=c(s=t),l):s},l}},"./node_modules/d3-shape/src/lineRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/lineRadial.js ***!
  \*************************************************/
/*! exports provided: lineRadial, default */function(t,e,n){"use strict";n.r(e),n.d(e,"lineRadial",function(){return i});var r=n(/*! ./curve/radial */"./node_modules/d3-shape/src/curve/radial.js"),o=n(/*! ./line */"./node_modules/d3-shape/src/line.js");function i(t){var e=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?e(Object(r.default)(t)):e()._curve},t}e.default=function(){return i(Object(o.default)().curve(r.curveRadialLinear))}},"./node_modules/d3-shape/src/link/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/link/index.js ***!
  \*************************************************/
/*! exports provided: linkHorizontal, linkVertical, linkRadial */function(t,e,n){"use strict";n.r(e),n.d(e,"linkHorizontal",function(){return p}),n.d(e,"linkVertical",function(){return m}),n.d(e,"linkRadial",function(){return y});var r=n(/*! d3-path */"./node_modules/d3-path/src/index.js"),o=n(/*! ../array */"./node_modules/d3-shape/src/array.js"),i=n(/*! ../constant */"./node_modules/d3-shape/src/constant.js"),u=n(/*! ../point */"./node_modules/d3-shape/src/point.js"),s=n(/*! ../pointRadial */"./node_modules/d3-shape/src/pointRadial.js");function c(t){return t.source}function a(t){return t.target}function l(t){var e=c,n=a,s=u.x,l=u.y,d=null;function f(){var i,u=o.slice.call(arguments),c=e.apply(this,u),a=n.apply(this,u);if(d||(d=i=Object(r.path)()),t(d,+s.apply(this,(u[0]=c,u)),+l.apply(this,u),+s.apply(this,(u[0]=a,u)),+l.apply(this,u)),i)return d=null,i+""||null}return f.source=function(t){return arguments.length?(e=t,f):e},f.target=function(t){return arguments.length?(n=t,f):n},f.x=function(t){return arguments.length?(s="function"==typeof t?t:Object(i.default)(+t),f):s},f.y=function(t){return arguments.length?(l="function"==typeof t?t:Object(i.default)(+t),f):l},f.context=function(t){return arguments.length?(d=null==t?null:t,f):d},f}function d(t,e,n,r,o){t.moveTo(e,n),t.bezierCurveTo(e=(e+r)/2,n,e,o,r,o)}function f(t,e,n,r,o){t.moveTo(e,n),t.bezierCurveTo(e,n=(n+o)/2,r,n,r,o)}function h(t,e,n,r,o){var i=Object(s.default)(e,n),u=Object(s.default)(e,n=(n+o)/2),c=Object(s.default)(r,n),a=Object(s.default)(r,o);t.moveTo(i[0],i[1]),t.bezierCurveTo(u[0],u[1],c[0],c[1],a[0],a[1])}function p(){return l(d)}function m(){return l(f)}function y(){var t=l(h);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}},"./node_modules/d3-shape/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/math.js ***!
  \*******************************************/
/*! exports provided: abs, atan2, cos, max, min, sin, sqrt, epsilon, pi, halfPi, tau, acos, asin */function(t,e,n){"use strict";n.r(e),n.d(e,"abs",function(){return r}),n.d(e,"atan2",function(){return o}),n.d(e,"cos",function(){return i}),n.d(e,"max",function(){return u}),n.d(e,"min",function(){return s}),n.d(e,"sin",function(){return c}),n.d(e,"sqrt",function(){return a}),n.d(e,"epsilon",function(){return l}),n.d(e,"pi",function(){return d}),n.d(e,"halfPi",function(){return f}),n.d(e,"tau",function(){return h}),n.d(e,"acos",function(){return p}),n.d(e,"asin",function(){return m});var r=Math.abs,o=Math.atan2,i=Math.cos,u=Math.max,s=Math.min,c=Math.sin,a=Math.sqrt,l=1e-12,d=Math.PI,f=d/2,h=2*d;function p(t){return t>1?0:t<-1?d:Math.acos(t)}function m(t){return t>=1?f:t<=-1?-f:Math.asin(t)}},"./node_modules/d3-shape/src/noop.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/noop.js ***!
  \*******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){}},"./node_modules/d3-shape/src/offset/diverging.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/diverging.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){if((s=t.length)>1)for(var n,r,o,i,u,s,c=0,a=t[e[0]].length;c<a;++c)for(i=u=0,n=0;n<s;++n)(o=(r=t[e[n]][c])[1]-r[0])>=0?(r[0]=i,r[1]=i+=o):o<0?(r[1]=u,r[0]=u+=o):r[0]=i}},"./node_modules/d3-shape/src/offset/expand.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/expand.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./none */"./node_modules/d3-shape/src/offset/none.js");e.default=function(t,e){if((o=t.length)>0){for(var n,o,i,u=0,s=t[0].length;u<s;++u){for(i=n=0;n<o;++n)i+=t[n][u][1]||0;if(i)for(n=0;n<o;++n)t[n][u][1]/=i}Object(r.default)(t,e)}}},"./node_modules/d3-shape/src/offset/none.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/none.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){if((o=t.length)>1)for(var n,r,o,i=1,u=t[e[0]],s=u.length;i<o;++i)for(r=u,u=t[e[i]],n=0;n<s;++n)u[n][1]+=u[n][0]=isNaN(r[n][1])?r[n][0]:r[n][1]}},"./node_modules/d3-shape/src/offset/silhouette.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/silhouette.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./none */"./node_modules/d3-shape/src/offset/none.js");e.default=function(t,e){if((n=t.length)>0){for(var n,o=0,i=t[e[0]],u=i.length;o<u;++o){for(var s=0,c=0;s<n;++s)c+=t[s][o][1]||0;i[o][1]+=i[o][0]=-c/2}Object(r.default)(t,e)}}},"./node_modules/d3-shape/src/offset/wiggle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/wiggle.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./none */"./node_modules/d3-shape/src/offset/none.js");e.default=function(t,e){if((i=t.length)>0&&(o=(n=t[e[0]]).length)>0){for(var n,o,i,u=0,s=1;s<o;++s){for(var c=0,a=0,l=0;c<i;++c){for(var d=t[e[c]],f=d[s][1]||0,h=(f-(d[s-1][1]||0))/2,p=0;p<c;++p){var m=t[e[p]];h+=(m[s][1]||0)-(m[s-1][1]||0)}a+=f,l+=h*f}n[s-1][1]+=n[s-1][0]=u,a&&(u-=l/a)}n[s-1][1]+=n[s-1][0]=u,Object(r.default)(t,e)}}},"./node_modules/d3-shape/src/order/appearance.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/appearance.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./none */"./node_modules/d3-shape/src/order/none.js");function o(t){for(var e,n=-1,r=0,o=t.length,i=-1/0;++n<o;)(e=+t[n][1])>i&&(i=e,r=n);return r}e.default=function(t){var e=t.map(o);return Object(r.default)(t).sort(function(t,n){return e[t]-e[n]})}},"./node_modules/d3-shape/src/order/ascending.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/ascending.js ***!
  \******************************************************/
/*! exports provided: default, sum */function(t,e,n){"use strict";n.r(e),n.d(e,"sum",function(){return o});var r=n(/*! ./none */"./node_modules/d3-shape/src/order/none.js");function o(t){for(var e,n=0,r=-1,o=t.length;++r<o;)(e=+t[r][1])&&(n+=e);return n}e.default=function(t){var e=t.map(o);return Object(r.default)(t).sort(function(t,n){return e[t]-e[n]})}},"./node_modules/d3-shape/src/order/descending.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/descending.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./ascending */"./node_modules/d3-shape/src/order/ascending.js");e.default=function(t){return Object(r.default)(t).reverse()}},"./node_modules/d3-shape/src/order/insideOut.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/insideOut.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./appearance */"./node_modules/d3-shape/src/order/appearance.js"),o=n(/*! ./ascending */"./node_modules/d3-shape/src/order/ascending.js");e.default=function(t){var e,n,i=t.length,u=t.map(o.sum),s=Object(r.default)(t),c=0,a=0,l=[],d=[];for(e=0;e<i;++e)n=s[e],c<a?(c+=u[n],l.push(n)):(a+=u[n],d.push(n));return d.reverse().concat(l)}},"./node_modules/d3-shape/src/order/none.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/order/none.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){for(var e=t.length,n=new Array(e);--e>=0;)n[e]=e;return n}},"./node_modules/d3-shape/src/order/reverse.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/order/reverse.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./none */"./node_modules/d3-shape/src/order/none.js");e.default=function(t){return Object(r.default)(t).reverse()}},"./node_modules/d3-shape/src/pie.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/pie.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./constant */"./node_modules/d3-shape/src/constant.js"),o=n(/*! ./descending */"./node_modules/d3-shape/src/descending.js"),i=n(/*! ./identity */"./node_modules/d3-shape/src/identity.js"),u=n(/*! ./math */"./node_modules/d3-shape/src/math.js");e.default=function(){var t=i.default,e=o.default,n=null,s=Object(r.default)(0),c=Object(r.default)(u.tau),a=Object(r.default)(0);function l(r){var o,i,l,d,f,h=r.length,p=0,m=new Array(h),y=new Array(h),v=+s.apply(this,arguments),g=Math.min(u.tau,Math.max(-u.tau,c.apply(this,arguments)-v)),j=Math.min(Math.abs(g)/h,a.apply(this,arguments)),b=j*(g<0?-1:1);for(o=0;o<h;++o)(f=y[m[o]=o]=+t(r[o],o,r))>0&&(p+=f);for(null!=e?m.sort(function(t,n){return e(y[t],y[n])}):null!=n&&m.sort(function(t,e){return n(r[t],r[e])}),o=0,l=p?(g-h*b)/p:0;o<h;++o,v=d)i=m[o],d=v+((f=y[i])>0?f*l:0)+b,y[i]={data:r[i],index:o,value:f,startAngle:v,endAngle:d,padAngle:j};return y}return l.value=function(e){return arguments.length?(t="function"==typeof e?e:Object(r.default)(+e),l):t},l.sortValues=function(t){return arguments.length?(e=t,n=null,l):e},l.sort=function(t){return arguments.length?(n=t,e=null,l):n},l.startAngle=function(t){return arguments.length?(s="function"==typeof t?t:Object(r.default)(+t),l):s},l.endAngle=function(t){return arguments.length?(c="function"==typeof t?t:Object(r.default)(+t),l):c},l.padAngle=function(t){return arguments.length?(a="function"==typeof t?t:Object(r.default)(+t),l):a},l}},"./node_modules/d3-shape/src/point.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/point.js ***!
  \********************************************/
/*! exports provided: x, y */function(t,e,n){"use strict";function r(t){return t[0]}function o(t){return t[1]}n.r(e),n.d(e,"x",function(){return r}),n.d(e,"y",function(){return o})},"./node_modules/d3-shape/src/pointRadial.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/pointRadial.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return[(e=+e)*Math.cos(t-=Math.PI/2),e*Math.sin(t)]}},"./node_modules/d3-shape/src/stack.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/stack.js ***!
  \********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./array */"./node_modules/d3-shape/src/array.js"),o=n(/*! ./constant */"./node_modules/d3-shape/src/constant.js"),i=n(/*! ./offset/none */"./node_modules/d3-shape/src/offset/none.js"),u=n(/*! ./order/none */"./node_modules/d3-shape/src/order/none.js");function s(t,e){return t[e]}e.default=function(){var t=Object(o.default)([]),e=u.default,n=i.default,c=s;function a(r){var o,i,u=t.apply(this,arguments),s=r.length,a=u.length,l=new Array(a);for(o=0;o<a;++o){for(var d,f=u[o],h=l[o]=new Array(s),p=0;p<s;++p)h[p]=d=[0,+c(r[p],f,p,r)],d.data=r[p];h.key=f}for(o=0,i=e(l);o<a;++o)l[i[o]].index=o;return n(l,i),l}return a.keys=function(e){return arguments.length?(t="function"==typeof e?e:Object(o.default)(r.slice.call(e)),a):t},a.value=function(t){return arguments.length?(c="function"==typeof t?t:Object(o.default)(+t),a):c},a.order=function(t){return arguments.length?(e=null==t?u.default:"function"==typeof t?t:Object(o.default)(r.slice.call(t)),a):e},a.offset=function(t){return arguments.length?(n=null==t?i.default:t,a):n},a}},"./node_modules/d3-shape/src/symbol.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-shape/src/symbol.js ***!
  \*********************************************/
/*! exports provided: symbols, default */function(t,e,n){"use strict";n.r(e),n.d(e,"symbols",function(){return f});var r=n(/*! d3-path */"./node_modules/d3-path/src/index.js"),o=n(/*! ./symbol/circle */"./node_modules/d3-shape/src/symbol/circle.js"),i=n(/*! ./symbol/cross */"./node_modules/d3-shape/src/symbol/cross.js"),u=n(/*! ./symbol/diamond */"./node_modules/d3-shape/src/symbol/diamond.js"),s=n(/*! ./symbol/star */"./node_modules/d3-shape/src/symbol/star.js"),c=n(/*! ./symbol/square */"./node_modules/d3-shape/src/symbol/square.js"),a=n(/*! ./symbol/triangle */"./node_modules/d3-shape/src/symbol/triangle.js"),l=n(/*! ./symbol/wye */"./node_modules/d3-shape/src/symbol/wye.js"),d=n(/*! ./constant */"./node_modules/d3-shape/src/constant.js"),f=[o.default,i.default,u.default,c.default,s.default,a.default,l.default];e.default=function(){var t=Object(d.default)(o.default),e=Object(d.default)(64),n=null;function i(){var o;if(n||(n=o=Object(r.path)()),t.apply(this,arguments).draw(n,+e.apply(this,arguments)),o)return n=null,o+""||null}return i.type=function(e){return arguments.length?(t="function"==typeof e?e:Object(d.default)(e),i):t},i.size=function(t){return arguments.length?(e="function"==typeof t?t:Object(d.default)(+t),i):e},i.context=function(t){return arguments.length?(n=null==t?null:t,i):n},i}},"./node_modules/d3-shape/src/symbol/circle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/circle.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../math */"./node_modules/d3-shape/src/math.js");e.default={draw:function(t,e){var n=Math.sqrt(e/r.pi);t.moveTo(n,0),t.arc(0,0,n,0,r.tau)}}},"./node_modules/d3-shape/src/symbol/cross.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/cross.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default={draw:function(t,e){var n=Math.sqrt(e/5)/2;t.moveTo(-3*n,-n),t.lineTo(-n,-n),t.lineTo(-n,-3*n),t.lineTo(n,-3*n),t.lineTo(n,-n),t.lineTo(3*n,-n),t.lineTo(3*n,n),t.lineTo(n,n),t.lineTo(n,3*n),t.lineTo(-n,3*n),t.lineTo(-n,n),t.lineTo(-3*n,n),t.closePath()}}},"./node_modules/d3-shape/src/symbol/diamond.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/diamond.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=Math.sqrt(1/3),o=2*r;e.default={draw:function(t,e){var n=Math.sqrt(e/o),i=n*r;t.moveTo(0,-n),t.lineTo(i,0),t.lineTo(0,n),t.lineTo(-i,0),t.closePath()}}},"./node_modules/d3-shape/src/symbol/square.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/square.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default={draw:function(t,e){var n=Math.sqrt(e),r=-n/2;t.rect(r,r,n,n)}}},"./node_modules/d3-shape/src/symbol/star.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/star.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../math */"./node_modules/d3-shape/src/math.js"),o=Math.sin(r.pi/10)/Math.sin(7*r.pi/10),i=Math.sin(r.tau/10)*o,u=-Math.cos(r.tau/10)*o;e.default={draw:function(t,e){var n=Math.sqrt(.8908130915292852*e),o=i*n,s=u*n;t.moveTo(0,-n),t.lineTo(o,s);for(var c=1;c<5;++c){var a=r.tau*c/5,l=Math.cos(a),d=Math.sin(a);t.lineTo(d*n,-l*n),t.lineTo(l*o-d*s,d*o+l*s)}t.closePath()}}},"./node_modules/d3-shape/src/symbol/triangle.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/triangle.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=Math.sqrt(3);e.default={draw:function(t,e){var n=-Math.sqrt(e/(3*r));t.moveTo(0,2*n),t.lineTo(-r*n,-n),t.lineTo(r*n,-n),t.closePath()}}},"./node_modules/d3-shape/src/symbol/wye.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/wye.js ***!
  \*************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=-.5,o=Math.sqrt(3)/2,i=1/Math.sqrt(12),u=3*(i/2+1);e.default={draw:function(t,e){var n=Math.sqrt(e/u),s=n/2,c=n*i,a=s,l=n*i+n,d=-a,f=l;t.moveTo(s,c),t.lineTo(a,l),t.lineTo(d,f),t.lineTo(r*s-o*c,o*s+r*c),t.lineTo(r*a-o*l,o*a+r*l),t.lineTo(r*d-o*f,o*d+r*f),t.lineTo(r*s+o*c,r*c-o*s),t.lineTo(r*a+o*l,r*l-o*a),t.lineTo(r*d+o*f,r*f-o*d),t.closePath()}}},"./node_modules/d3-timer/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/index.js ***!
  \********************************************/
/*! exports provided: now, timer, timerFlush, timeout, interval */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./timer */"./node_modules/d3-timer/src/timer.js");n.d(e,"now",function(){return r.now}),n.d(e,"timer",function(){return r.timer}),n.d(e,"timerFlush",function(){return r.timerFlush});var o=n(/*! ./timeout */"./node_modules/d3-timer/src/timeout.js");n.d(e,"timeout",function(){return o.default});var i=n(/*! ./interval */"./node_modules/d3-timer/src/interval.js");n.d(e,"interval",function(){return i.default})},"./node_modules/d3-timer/src/interval.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-timer/src/interval.js ***!
  \***********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./timer */"./node_modules/d3-timer/src/timer.js");e.default=function(t,e,n){var o=new r.Timer,i=e;return null==e?(o.restart(t,e,n),o):(e=+e,n=null==n?Object(r.now)():+n,o.restart(function r(u){u+=i,o.restart(r,i+=e,n),t(u)},e,n),o)}},"./node_modules/d3-timer/src/timeout.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-timer/src/timeout.js ***!
  \**********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./timer */"./node_modules/d3-timer/src/timer.js");e.default=function(t,e,n){var o=new r.Timer;return e=null==e?0:+e,o.restart(function(n){o.stop(),t(n+e)},e,n),o}},"./node_modules/d3-timer/src/timer.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/timer.js ***!
  \********************************************/
/*! exports provided: now, Timer, timer, timerFlush */function(t,e,n){"use strict";n.r(e),n.d(e,"now",function(){return p}),n.d(e,"Timer",function(){return y}),n.d(e,"timer",function(){return v}),n.d(e,"timerFlush",function(){return g});var r,o,i=0,u=0,s=0,c=1e3,a=0,l=0,d=0,f="object"==typeof performance&&performance.now?performance:Date,h="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function p(){return l||(h(m),l=f.now()+d)}function m(){l=0}function y(){this._call=this._time=this._next=null}function v(t,e,n){var r=new y;return r.restart(t,e,n),r}function g(){p(),++i;for(var t,e=r;e;)(t=l-e._time)>=0&&e._call.call(null,t),e=e._next;--i}function j(){l=(a=f.now())+d,i=u=0;try{g()}finally{i=0,function(){var t,e,n=r,i=1/0;for(;n;)n._call?(i>n._time&&(i=n._time),t=n,n=n._next):(e=n._next,n._next=null,n=t?t._next=e:r=e);o=t,_(i)}(),l=0}}function b(){var t=f.now(),e=t-a;e>c&&(d-=e,a=t)}function _(t){i||(u&&(u=clearTimeout(u)),t-l>24?(t<1/0&&(u=setTimeout(j,t-f.now()-d)),s&&(s=clearInterval(s))):(s||(a=f.now(),s=setInterval(b,c)),i=1,h(j)))}y.prototype=v.prototype={constructor:y,restart:function(t,e,n){if("function"!=typeof t)throw new TypeError("callback is not a function");n=(null==n?p():+n)+(null==e?0:+e),this._next||o===this||(o?o._next=this:r=this,o=this),this._call=t,this._time=n,_()},stop:function(){this._call&&(this._call=null,this._time=1/0,_())}}},"./node_modules/d3-transition/src/active.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-transition/src/active.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./transition/index */"./node_modules/d3-transition/src/transition/index.js"),o=n(/*! ./transition/schedule */"./node_modules/d3-transition/src/transition/schedule.js"),i=[null];e.default=function(t,e){var n,u,s=t.__transition;if(s)for(u in e=null==e?null:e+"",s)if((n=s[u]).state>o.SCHEDULED&&n.name===e)return new r.Transition([[t]],i,e,+u);return null}},"./node_modules/d3-transition/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-transition/src/index.js ***!
  \*************************************************/
/*! exports provided: transition, active, interrupt */function(t,e,n){"use strict";n.r(e);n(/*! ./selection/index */"./node_modules/d3-transition/src/selection/index.js");var r=n(/*! ./transition/index */"./node_modules/d3-transition/src/transition/index.js");n.d(e,"transition",function(){return r.default});var o=n(/*! ./active */"./node_modules/d3-transition/src/active.js");n.d(e,"active",function(){return o.default});var i=n(/*! ./interrupt */"./node_modules/d3-transition/src/interrupt.js");n.d(e,"interrupt",function(){return i.default})},"./node_modules/d3-transition/src/interrupt.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-transition/src/interrupt.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./transition/schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(t,e){var n,o,i,u=t.__transition,s=!0;if(u){for(i in e=null==e?null:e+"",u)(n=u[i]).name===e?(o=n.state>r.STARTING&&n.state<r.ENDING,n.state=r.ENDED,n.timer.stop(),o&&n.on.call("interrupt",t,t.__data__,n.index,n.group),delete u[i]):s=!1;s&&delete t.__transition}}},"./node_modules/d3-transition/src/selection/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/index.js ***!
  \***********************************************************/
/*! no exports provided */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! ./interrupt */"./node_modules/d3-transition/src/selection/interrupt.js"),i=n(/*! ./transition */"./node_modules/d3-transition/src/selection/transition.js");r.selection.prototype.interrupt=o.default,r.selection.prototype.transition=i.default},"./node_modules/d3-transition/src/selection/interrupt.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/interrupt.js ***!
  \***************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../interrupt */"./node_modules/d3-transition/src/interrupt.js");e.default=function(t){return this.each(function(){Object(r.default)(this,t)})}},"./node_modules/d3-transition/src/selection/transition.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/transition.js ***!
  \****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ../transition/index */"./node_modules/d3-transition/src/transition/index.js"),o=n(/*! ../transition/schedule */"./node_modules/d3-transition/src/transition/schedule.js"),i=n(/*! d3-ease */"./node_modules/d3-ease/src/index.js"),u=n(/*! d3-timer */"./node_modules/d3-timer/src/index.js"),s={time:null,delay:0,duration:250,ease:i.easeCubicInOut};function c(t,e){for(var n;!(n=t.__transition)||!(n=n[e]);)if(!(t=t.parentNode))return s.time=Object(u.now)(),s;return n}e.default=function(t){var e,n;t instanceof r.Transition?(e=t._id,t=t._name):(e=Object(r.newId)(),(n=s).time=Object(u.now)(),t=null==t?null:t+"");for(var i=this._groups,a=i.length,l=0;l<a;++l)for(var d,f=i[l],h=f.length,p=0;p<h;++p)(d=f[p])&&Object(o.default)(d,t,e,p,f,n||c(d,e));return new r.Transition(i,this._parents,t,e)}},"./node_modules/d3-transition/src/transition/attr.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attr.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-interpolate */"./node_modules/d3-interpolate/src/index.js"),o=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),i=n(/*! ./tween */"./node_modules/d3-transition/src/transition/tween.js"),u=n(/*! ./interpolate */"./node_modules/d3-transition/src/transition/interpolate.js");e.default=function(t,e){var n=Object(o.namespace)(t),s="transform"===n?r.interpolateTransformSvg:u.default;return this.attrTween(t,"function"==typeof e?(n.local?function(t,e,n){var r,o,i;return function(){var u,s=n(this);if(null!=s)return(u=this.getAttributeNS(t.space,t.local))===s?null:u===r&&s===o?i:i=e(r=u,o=s);this.removeAttributeNS(t.space,t.local)}}:function(t,e,n){var r,o,i;return function(){var u,s=n(this);if(null!=s)return(u=this.getAttribute(t))===s?null:u===r&&s===o?i:i=e(r=u,o=s);this.removeAttribute(t)}})(n,s,Object(i.tweenValue)(this,"attr."+t,e)):null==e?(n.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(n):(n.local?function(t,e,n){var r,o;return function(){var i=this.getAttributeNS(t.space,t.local);return i===n?null:i===r?o:o=e(r=i,n)}}:function(t,e,n){var r,o;return function(){var i=this.getAttribute(t);return i===n?null:i===r?o:o=e(r=i,n)}})(n,s,e+""))}},"./node_modules/d3-transition/src/transition/attrTween.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attrTween.js ***!
  \****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js");e.default=function(t,e){var n="attr."+t;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==e)return this.tween(n,null);if("function"!=typeof e)throw new Error;var o=Object(r.namespace)(t);return this.tween(n,(o.local?function(t,e){function n(){var n=this,r=e.apply(n,arguments);return r&&function(e){n.setAttributeNS(t.space,t.local,r(e))}}return n._value=e,n}:function(t,e){function n(){var n=this,r=e.apply(n,arguments);return r&&function(e){n.setAttribute(t,r(e))}}return n._value=e,n})(o,e))}},"./node_modules/d3-transition/src/transition/delay.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/delay.js ***!
  \************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?function(t,e){return function(){Object(r.init)(this,t).delay=+e.apply(this,arguments)}}:function(t,e){return e=+e,function(){Object(r.init)(this,t).delay=e}})(e,t)):Object(r.get)(this.node(),e).delay}},"./node_modules/d3-transition/src/transition/duration.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/duration.js ***!
  \***************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(t){var e=this._id;return arguments.length?this.each(("function"==typeof t?function(t,e){return function(){Object(r.set)(this,t).duration=+e.apply(this,arguments)}}:function(t,e){return e=+e,function(){Object(r.set)(this,t).duration=e}})(e,t)):Object(r.get)(this.node(),e).duration}},"./node_modules/d3-transition/src/transition/ease.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/ease.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(t){var e=this._id;return arguments.length?this.each(function(t,e){if("function"!=typeof e)throw new Error;return function(){Object(r.set)(this,t).ease=e}}(e,t)):Object(r.get)(this.node(),e).ease}},"./node_modules/d3-transition/src/transition/filter.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/filter.js ***!
  \*************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! ./index */"./node_modules/d3-transition/src/transition/index.js");e.default=function(t){"function"!=typeof t&&(t=Object(r.matcher)(t));for(var e=this._groups,n=e.length,i=new Array(n),u=0;u<n;++u)for(var s,c=e[u],a=c.length,l=i[u]=[],d=0;d<a;++d)(s=c[d])&&t.call(s,s.__data__,d,c)&&l.push(s);return new o.Transition(i,this._parents,this._name,this._id)}},"./node_modules/d3-transition/src/transition/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/index.js ***!
  \************************************************************/
/*! exports provided: Transition, default, newId */function(t,e,n){"use strict";n.r(e),n.d(e,"Transition",function(){return x}),n.d(e,"default",function(){return w}),n.d(e,"newId",function(){return A});var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! ./attr */"./node_modules/d3-transition/src/transition/attr.js"),i=n(/*! ./attrTween */"./node_modules/d3-transition/src/transition/attrTween.js"),u=n(/*! ./delay */"./node_modules/d3-transition/src/transition/delay.js"),s=n(/*! ./duration */"./node_modules/d3-transition/src/transition/duration.js"),c=n(/*! ./ease */"./node_modules/d3-transition/src/transition/ease.js"),a=n(/*! ./filter */"./node_modules/d3-transition/src/transition/filter.js"),l=n(/*! ./merge */"./node_modules/d3-transition/src/transition/merge.js"),d=n(/*! ./on */"./node_modules/d3-transition/src/transition/on.js"),f=n(/*! ./remove */"./node_modules/d3-transition/src/transition/remove.js"),h=n(/*! ./select */"./node_modules/d3-transition/src/transition/select.js"),p=n(/*! ./selectAll */"./node_modules/d3-transition/src/transition/selectAll.js"),m=n(/*! ./selection */"./node_modules/d3-transition/src/transition/selection.js"),y=n(/*! ./style */"./node_modules/d3-transition/src/transition/style.js"),v=n(/*! ./styleTween */"./node_modules/d3-transition/src/transition/styleTween.js"),g=n(/*! ./text */"./node_modules/d3-transition/src/transition/text.js"),j=n(/*! ./transition */"./node_modules/d3-transition/src/transition/transition.js"),b=n(/*! ./tween */"./node_modules/d3-transition/src/transition/tween.js"),_=0;function x(t,e,n,r){this._groups=t,this._parents=e,this._name=n,this._id=r}function w(t){return Object(r.selection)().transition(t)}function A(){return++_}var O=r.selection.prototype;x.prototype=w.prototype={constructor:x,select:h.default,selectAll:p.default,filter:a.default,merge:l.default,selection:m.default,transition:j.default,call:O.call,nodes:O.nodes,node:O.node,size:O.size,empty:O.empty,each:O.each,on:d.default,attr:o.default,attrTween:i.default,style:y.default,styleTween:v.default,text:g.default,remove:f.default,tween:b.default,delay:u.default,duration:s.default,ease:c.default}},"./node_modules/d3-transition/src/transition/interpolate.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/interpolate.js ***!
  \******************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-color */"./node_modules/d3-color/src/index.js"),o=n(/*! d3-interpolate */"./node_modules/d3-interpolate/src/index.js");e.default=function(t,e){var n;return("number"==typeof e?o.interpolateNumber:e instanceof r.color?o.interpolateRgb:(n=Object(r.color)(e))?(e=n,o.interpolateRgb):o.interpolateString)(t,e)}},"./node_modules/d3-transition/src/transition/merge.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/merge.js ***!
  \************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-transition/src/transition/index.js");e.default=function(t){if(t._id!==this._id)throw new Error;for(var e=this._groups,n=t._groups,o=e.length,i=n.length,u=Math.min(o,i),s=new Array(o),c=0;c<u;++c)for(var a,l=e[c],d=n[c],f=l.length,h=s[c]=new Array(f),p=0;p<f;++p)(a=l[p]||d[p])&&(h[p]=a);for(;c<o;++c)s[c]=e[c];return new r.Transition(s,this._parents,this._name,this._id)}},"./node_modules/d3-transition/src/transition/on.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/on.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(t,e){var n=this._id;return arguments.length<2?Object(r.get)(this.node(),n).on.on(t):this.each(function(t,e,n){var o,i,u=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var e=t.indexOf(".");return e>=0&&(t=t.slice(0,e)),!t||"start"===t})}(e)?r.init:r.set;return function(){var r=u(this,t),s=r.on;s!==o&&(i=(o=s).copy()).on(e,n),r.on=i}}(n,t,e))}},"./node_modules/d3-transition/src/transition/remove.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/remove.js ***!
  \*************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){return this.on("end.remove",(t=this._id,function(){var e=this.parentNode;for(var n in this.__transition)if(+n!==t)return;e&&e.removeChild(this)}));var t}},"./node_modules/d3-transition/src/transition/schedule.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/schedule.js ***!
  \***************************************************************/
/*! exports provided: CREATED, SCHEDULED, STARTING, STARTED, RUNNING, ENDING, ENDED, default, init, set, get */function(t,e,n){"use strict";n.r(e),n.d(e,"CREATED",function(){return s}),n.d(e,"SCHEDULED",function(){return c}),n.d(e,"STARTING",function(){return a}),n.d(e,"STARTED",function(){return l}),n.d(e,"RUNNING",function(){return d}),n.d(e,"ENDING",function(){return f}),n.d(e,"ENDED",function(){return h}),n.d(e,"init",function(){return p}),n.d(e,"set",function(){return m}),n.d(e,"get",function(){return y});var r=n(/*! d3-dispatch */"./node_modules/d3-dispatch/src/index.js"),o=n(/*! d3-timer */"./node_modules/d3-timer/src/index.js"),i=Object(r.dispatch)("start","end","interrupt"),u=[],s=0,c=1,a=2,l=3,d=4,f=5,h=6;function p(t,e){var n=y(t,e);if(n.state>s)throw new Error("too late; already scheduled");return n}function m(t,e){var n=y(t,e);if(n.state>a)throw new Error("too late; already started");return n}function y(t,e){var n=t.__transition;if(!n||!(n=n[e]))throw new Error("transition not found");return n}e.default=function(t,e,n,r,p,m){var y=t.__transition;if(y){if(n in y)return}else t.__transition={};!function(t,e,n){var r,i=t.__transition;function u(f){var m,y,v,g;if(n.state!==c)return p();for(m in i)if((g=i[m]).name===n.name){if(g.state===l)return Object(o.timeout)(u);g.state===d?(g.state=h,g.timer.stop(),g.on.call("interrupt",t,t.__data__,g.index,g.group),delete i[m]):+m<e&&(g.state=h,g.timer.stop(),delete i[m])}if(Object(o.timeout)(function(){n.state===l&&(n.state=d,n.timer.restart(s,n.delay,n.time),s(f))}),n.state=a,n.on.call("start",t,t.__data__,n.index,n.group),n.state===a){for(n.state=l,r=new Array(v=n.tween.length),m=0,y=-1;m<v;++m)(g=n.tween[m].value.call(t,t.__data__,n.index,n.group))&&(r[++y]=g);r.length=y+1}}function s(e){for(var o=e<n.duration?n.ease.call(null,e/n.duration):(n.timer.restart(p),n.state=f,1),i=-1,u=r.length;++i<u;)r[i].call(null,o);n.state===f&&(n.on.call("end",t,t.__data__,n.index,n.group),p())}function p(){for(var r in n.state=h,n.timer.stop(),delete i[e],i)return;delete t.__transition}i[e]=n,n.timer=Object(o.timer)(function(t){n.state=c,n.timer.restart(u,n.delay,n.time),n.delay<=t&&u(t-n.delay)},0,n.time)}(t,n,{name:e,index:r,group:p,on:i,tween:u,time:m.time,delay:m.delay,duration:m.duration,ease:m.ease,timer:null,state:s})}},"./node_modules/d3-transition/src/transition/select.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/select.js ***!
  \*************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! ./index */"./node_modules/d3-transition/src/transition/index.js"),i=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=Object(r.selector)(t));for(var u=this._groups,s=u.length,c=new Array(s),a=0;a<s;++a)for(var l,d,f=u[a],h=f.length,p=c[a]=new Array(h),m=0;m<h;++m)(l=f[m])&&(d=t.call(l,l.__data__,m,f))&&("__data__"in l&&(d.__data__=l.__data__),p[m]=d,Object(i.default)(p[m],e,n,m,p,Object(i.get)(l,n)));return new o.Transition(c,this._parents,e,n)}},"./node_modules/d3-transition/src/transition/selectAll.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selectAll.js ***!
  \****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! ./index */"./node_modules/d3-transition/src/transition/index.js"),i=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(t){var e=this._name,n=this._id;"function"!=typeof t&&(t=Object(r.selectorAll)(t));for(var u=this._groups,s=u.length,c=[],a=[],l=0;l<s;++l)for(var d,f=u[l],h=f.length,p=0;p<h;++p)if(d=f[p]){for(var m,y=t.call(d,d.__data__,p,f),v=Object(i.get)(d,n),g=0,j=y.length;g<j;++g)(m=y[g])&&Object(i.default)(m,e,n,g,y,v);c.push(y),a.push(d)}return new o.Transition(c,a,e,n)}},"./node_modules/d3-transition/src/transition/selection.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selection.js ***!
  \****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js").selection.prototype.constructor;e.default=function(){return new r(this._groups,this._parents)}},"./node_modules/d3-transition/src/transition/style.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/style.js ***!
  \************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-interpolate */"./node_modules/d3-interpolate/src/index.js"),o=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),i=n(/*! ./tween */"./node_modules/d3-transition/src/transition/tween.js"),u=n(/*! ./interpolate */"./node_modules/d3-transition/src/transition/interpolate.js");e.default=function(t,e,n){var s="transform"==(t+="")?r.interpolateTransformCss:u.default;return null==e?this.styleTween(t,function(t,e){var n,r,i;return function(){var u=Object(o.style)(this,t),s=(this.style.removeProperty(t),Object(o.style)(this,t));return u===s?null:u===n&&s===r?i:i=e(n=u,r=s)}}(t,s)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof e?function(t,e,n){var r,i,u;return function(){var s=Object(o.style)(this,t),c=n(this);return null==c&&(this.style.removeProperty(t),c=Object(o.style)(this,t)),s===c?null:s===r&&c===i?u:u=e(r=s,i=c)}}(t,s,Object(i.tweenValue)(this,"style."+t,e)):function(t,e,n){var r,i;return function(){var u=Object(o.style)(this,t);return u===n?null:u===r?i:i=e(r=u,n)}}(t,s,e+""),n)}},"./node_modules/d3-transition/src/transition/styleTween.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/styleTween.js ***!
  \*****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e,n){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==e)return this.tween(r,null);if("function"!=typeof e)throw new Error;return this.tween(r,function(t,e,n){function r(){var r=this,o=e.apply(r,arguments);return o&&function(e){r.style.setProperty(t,o(e),n)}}return r._value=e,r}(t,e,null==n?"":n))}},"./node_modules/d3-transition/src/transition/text.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/text.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./tween */"./node_modules/d3-transition/src/transition/tween.js");e.default=function(t){return this.tween("text","function"==typeof t?function(t){return function(){var e=t(this);this.textContent=null==e?"":e}}(Object(r.tweenValue)(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))}},"./node_modules/d3-transition/src/transition/transition.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/transition.js ***!
  \*****************************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./index */"./node_modules/d3-transition/src/transition/index.js"),o=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");e.default=function(){for(var t=this._name,e=this._id,n=Object(r.newId)(),i=this._groups,u=i.length,s=0;s<u;++s)for(var c,a=i[s],l=a.length,d=0;d<l;++d)if(c=a[d]){var f=Object(o.get)(c,e);Object(o.default)(c,t,n,d,a,{time:f.time+f.delay+f.duration,delay:0,duration:f.duration,ease:f.ease})}return new r.Transition(i,this._parents,t,n)}},"./node_modules/d3-transition/src/transition/tween.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/tween.js ***!
  \************************************************************/
/*! exports provided: default, tweenValue */function(t,e,n){"use strict";n.r(e),n.d(e,"tweenValue",function(){return o});var r=n(/*! ./schedule */"./node_modules/d3-transition/src/transition/schedule.js");function o(t,e,n){var o=t._id;return t.each(function(){var t=Object(r.set)(this,o);(t.value||(t.value={}))[e]=n.apply(this,arguments)}),function(t){return Object(r.get)(t,o).value[e]}}e.default=function(t,e){var n=this._id;if(t+="",arguments.length<2){for(var o,i=Object(r.get)(this.node(),n).tween,u=0,s=i.length;u<s;++u)if((o=i[u]).name===t)return o.value;return null}return this.each((null==e?function(t,e){var n,o;return function(){var i=Object(r.set)(this,t),u=i.tween;if(u!==n)for(var s=0,c=(o=n=u).length;s<c;++s)if(o[s].name===e){(o=o.slice()).splice(s,1);break}i.tween=o}}:function(t,e,n){var o,i;if("function"!=typeof n)throw new Error;return function(){var u=Object(r.set)(this,t),s=u.tween;if(s!==o){i=(o=s).slice();for(var c={name:e,value:n},a=0,l=i.length;a<l;++a)if(i[a].name===e){i[a]=c;break}a===l&&i.push(c)}u.tween=i}})(n,t,e))}},"./node_modules/d3-zoom/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-zoom/src/constant.js ***!
  \**********************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return t}}},"./node_modules/d3-zoom/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/event.js ***!
  \*******************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t,e,n){this.target=t,this.type=e,this.transform=n}n.r(e),n.d(e,"default",function(){return r})},"./node_modules/d3-zoom/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/index.js ***!
  \*******************************************/
/*! exports provided: zoom, zoomTransform, zoomIdentity */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./zoom */"./node_modules/d3-zoom/src/zoom.js");n.d(e,"zoom",function(){return r.default});var o=n(/*! ./transform */"./node_modules/d3-zoom/src/transform.js");n.d(e,"zoomTransform",function(){return o.default}),n.d(e,"zoomIdentity",function(){return o.identity})},"./node_modules/d3-zoom/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-zoom/src/noevent.js ***!
  \*********************************************/
/*! exports provided: nopropagation, default */function(t,e,n){"use strict";n.r(e),n.d(e,"nopropagation",function(){return o});var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js");function o(){r.event.stopImmediatePropagation()}e.default=function(){r.event.preventDefault(),r.event.stopImmediatePropagation()}},"./node_modules/d3-zoom/src/transform.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-zoom/src/transform.js ***!
  \***********************************************/
/*! exports provided: Transform, identity, default */function(t,e,n){"use strict";function r(t,e,n){this.k=t,this.x=e,this.y=n}n.r(e),n.d(e,"Transform",function(){return r}),n.d(e,"identity",function(){return o}),n.d(e,"default",function(){return i}),r.prototype={constructor:r,scale:function(t){return 1===t?this:new r(this.k*t,this.x,this.y)},translate:function(t,e){return 0===t&0===e?this:new r(this.k,this.x+this.k*t,this.y+this.k*e)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var o=new r(1,0,0);function i(t){return t.__zoom||o}i.prototype=r.prototype},"./node_modules/d3-zoom/src/zoom.js":
/*!******************************************!*\
  !*** ./node_modules/d3-zoom/src/zoom.js ***!
  \******************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-dispatch */"./node_modules/d3-dispatch/src/index.js"),o=n(/*! d3-drag */"./node_modules/d3-drag/src/index.js"),i=n(/*! d3-interpolate */"./node_modules/d3-interpolate/src/index.js"),u=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),s=n(/*! d3-transition */"./node_modules/d3-transition/src/index.js"),c=n(/*! ./constant */"./node_modules/d3-zoom/src/constant.js"),a=n(/*! ./event */"./node_modules/d3-zoom/src/event.js"),l=n(/*! ./transform */"./node_modules/d3-zoom/src/transform.js"),d=n(/*! ./noevent */"./node_modules/d3-zoom/src/noevent.js");function f(){return!u.event.button}function h(){var t,e,n=this;return n instanceof SVGElement?(t=(n=n.ownerSVGElement||n).width.baseVal.value,e=n.height.baseVal.value):(t=n.clientWidth,e=n.clientHeight),[[0,0],[t,e]]}function p(){return this.__zoom||l.identity}function m(){return-u.event.deltaY*(u.event.deltaMode?120:1)/500}function y(){return"ontouchstart"in this}function v(t,e,n){var r=t.invertX(e[0][0])-n[0][0],o=t.invertX(e[1][0])-n[1][0],i=t.invertY(e[0][1])-n[0][1],u=t.invertY(e[1][1])-n[1][1];return t.translate(o>r?(r+o)/2:Math.min(0,r)||Math.max(0,o),u>i?(i+u)/2:Math.min(0,i)||Math.max(0,u))}e.default=function(){var t,e,n=f,g=h,j=v,b=m,_=y,x=[0,1/0],w=[[-1/0,-1/0],[1/0,1/0]],A=250,O=i.interpolateZoom,k=[],S=Object(r.dispatch)("start","zoom","end"),C=500,B=150,F=0;function N(t){t.property("__zoom",p).on("wheel.zoom",X).on("mousedown.zoom",Y).on("dblclick.zoom",Z).filter(_).on("touchstart.zoom",G).on("touchmove.zoom",$).on("touchend.zoom touchcancel.zoom",E).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function z(t,e){return(e=Math.max(x[0],Math.min(x[1],e)))===t.k?t:new l.Transform(e,t.x,t.y)}function T(t,e,n){var r=e[0]-n[0]*t.k,o=e[1]-n[1]*t.k;return r===t.x&&o===t.y?t:new l.Transform(t.k,r,o)}function q(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function H(t,e,n){t.on("start.zoom",function(){D(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){D(this,arguments).end()}).tween("zoom",function(){var t=arguments,r=D(this,t),o=g.apply(this,t),i=n||q(o),u=Math.max(o[1][0]-o[0][0],o[1][1]-o[0][1]),s=this.__zoom,c="function"==typeof e?e.apply(this,t):e,a=O(s.invert(i).concat(u/s.k),c.invert(i).concat(u/c.k));return function(t){if(1===t)t=c;else{var e=a(t),n=u/e[2];t=new l.Transform(n,i[0]-e[0]*n,i[1]-e[1]*n)}r.zoom(null,t)}})}function D(t,e){for(var n,r=0,o=k.length;r<o;++r)if((n=k[r]).that===t)return n;return new V(t,e)}function V(t,e){this.that=t,this.args=e,this.index=-1,this.active=0,this.extent=g.apply(t,e)}function X(){if(n.apply(this,arguments)){var t=D(this,arguments),e=this.__zoom,r=Math.max(x[0],Math.min(x[1],e.k*Math.pow(2,b.apply(this,arguments)))),o=Object(u.mouse)(this);if(t.wheel)t.mouse[0][0]===o[0]&&t.mouse[0][1]===o[1]||(t.mouse[1]=e.invert(t.mouse[0]=o)),clearTimeout(t.wheel);else{if(e.k===r)return;t.mouse=[o,e.invert(o)],Object(s.interrupt)(this),t.start()}Object(d.default)(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},B),t.zoom("mouse",j(T(z(e,r),t.mouse[0],t.mouse[1]),t.extent,w))}}function Y(){if(!e&&n.apply(this,arguments)){var t=D(this,arguments),r=Object(u.select)(u.event.view).on("mousemove.zoom",function(){if(Object(d.default)(),!t.moved){var e=u.event.clientX-c,n=u.event.clientY-a;t.moved=e*e+n*n>F}t.zoom("mouse",j(T(t.that.__zoom,t.mouse[0]=Object(u.mouse)(t.that),t.mouse[1]),t.extent,w))},!0).on("mouseup.zoom",function(){r.on("mousemove.zoom mouseup.zoom",null),Object(o.dragEnable)(u.event.view,t.moved),Object(d.default)(),t.end()},!0),i=Object(u.mouse)(this),c=u.event.clientX,a=u.event.clientY;Object(o.dragDisable)(u.event.view),Object(d.nopropagation)(),t.mouse=[i,this.__zoom.invert(i)],Object(s.interrupt)(this),t.start()}}function Z(){if(n.apply(this,arguments)){var t=this.__zoom,e=Object(u.mouse)(this),r=t.invert(e),o=t.k*(u.event.shiftKey?.5:2),i=j(T(z(t,o),e,r),g.apply(this,arguments),w);Object(d.default)(),A>0?Object(u.select)(this).transition().duration(A).call(H,i,e):Object(u.select)(this).call(N.transform,i)}}function G(){if(n.apply(this,arguments)){var e,r,o,i,c=D(this,arguments),a=u.event.changedTouches,l=a.length;for(Object(d.nopropagation)(),r=0;r<l;++r)o=a[r],i=[i=Object(u.touch)(this,a,o.identifier),this.__zoom.invert(i),o.identifier],c.touch0?c.touch1||(c.touch1=i):(c.touch0=i,e=!0);if(t&&(t=clearTimeout(t),!c.touch1))return c.end(),void((i=Object(u.select)(this).on("dblclick.zoom"))&&i.apply(this,arguments));e&&(t=setTimeout(function(){t=null},C),Object(s.interrupt)(this),c.start())}}function $(){var e,n,r,o,i=D(this,arguments),s=u.event.changedTouches,c=s.length;for(Object(d.default)(),t&&(t=clearTimeout(t)),e=0;e<c;++e)n=s[e],r=Object(u.touch)(this,s,n.identifier),i.touch0&&i.touch0[2]===n.identifier?i.touch0[0]=r:i.touch1&&i.touch1[2]===n.identifier&&(i.touch1[0]=r);if(n=i.that.__zoom,i.touch1){var a=i.touch0[0],l=i.touch0[1],f=i.touch1[0],h=i.touch1[1],p=(p=f[0]-a[0])*p+(p=f[1]-a[1])*p,m=(m=h[0]-l[0])*m+(m=h[1]-l[1])*m;n=z(n,Math.sqrt(p/m)),r=[(a[0]+f[0])/2,(a[1]+f[1])/2],o=[(l[0]+h[0])/2,(l[1]+h[1])/2]}else{if(!i.touch0)return;r=i.touch0[0],o=i.touch0[1]}i.zoom("touch",j(T(n,r,o),i.extent,w))}function E(){var t,n,r=D(this,arguments),o=u.event.changedTouches,i=o.length;for(Object(d.nopropagation)(),e&&clearTimeout(e),e=setTimeout(function(){e=null},C),t=0;t<i;++t)n=o[t],r.touch0&&r.touch0[2]===n.identifier?delete r.touch0:r.touch1&&r.touch1[2]===n.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return N.transform=function(t,e){var n=t.selection?t.selection():t;n.property("__zoom",p),t!==n?H(t,e):n.interrupt().each(function(){D(this,arguments).start().zoom(null,"function"==typeof e?e.apply(this,arguments):e).end()})},N.scaleBy=function(t,e){N.scaleTo(t,function(){return this.__zoom.k*("function"==typeof e?e.apply(this,arguments):e)})},N.scaleTo=function(t,e){N.transform(t,function(){var t=g.apply(this,arguments),n=this.__zoom,r=q(t),o=n.invert(r),i="function"==typeof e?e.apply(this,arguments):e;return j(T(z(n,i),r,o),t,w)})},N.translateBy=function(t,e,n){N.transform(t,function(){return j(this.__zoom.translate("function"==typeof e?e.apply(this,arguments):e,"function"==typeof n?n.apply(this,arguments):n),g.apply(this,arguments),w)})},N.translateTo=function(t,e,n){N.transform(t,function(){var t=g.apply(this,arguments),r=this.__zoom,o=q(t);return j(l.identity.translate(o[0],o[1]).scale(r.k).translate("function"==typeof e?-e.apply(this,arguments):-e,"function"==typeof n?-n.apply(this,arguments):-n),t,w)})},V.prototype={start:function(){return 1==++this.active&&(this.index=k.push(this)-1,this.emit("start")),this},zoom:function(t,e){return this.mouse&&"mouse"!==t&&(this.mouse[1]=e.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=e.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=e.invert(this.touch1[0])),this.that.__zoom=e,this.emit("zoom"),this},end:function(){return 0==--this.active&&(k.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){Object(u.customEvent)(new a.default(N,t,this.that.__zoom),S.apply,S,[t,this.that,this.args])}},N.wheelDelta=function(t){return arguments.length?(b="function"==typeof t?t:Object(c.default)(+t),N):b},N.filter=function(t){return arguments.length?(n="function"==typeof t?t:Object(c.default)(!!t),N):n},N.touchable=function(t){return arguments.length?(_="function"==typeof t?t:Object(c.default)(!!t),N):_},N.extent=function(t){return arguments.length?(g="function"==typeof t?t:Object(c.default)([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),N):g},N.scaleExtent=function(t){return arguments.length?(x[0]=+t[0],x[1]=+t[1],N):[x[0],x[1]]},N.translateExtent=function(t){return arguments.length?(w[0][0]=+t[0][0],w[1][0]=+t[1][0],w[0][1]=+t[0][1],w[1][1]=+t[1][1],N):[[w[0][0],w[0][1]],[w[1][0],w[1][1]]]},N.constrain=function(t){return arguments.length?(j=t,N):j},N.duration=function(t){return arguments.length?(A=+t,N):A},N.interpolate=function(t){return arguments.length?(O=t,N):O},N.on=function(){var t=S.on.apply(S,arguments);return t===S?N:t},N.clickDistance=function(t){return arguments.length?(F=(t=+t)*t,N):Math.sqrt(F)},N}},"./node_modules/d3plus-common/es/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3plus-common/es/index.js ***!
  \************************************************/
/*! exports provided: accessor, assign, attrize, BaseClass, closest, configPrep, constant, elem, isObject, merge, parseSides, prefix, RESET, stylize, uuid */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./src/accessor */"./node_modules/d3plus-common/es/src/accessor.js");n.d(e,"accessor",function(){return r.default});var o=n(/*! ./src/assign */"./node_modules/d3plus-common/es/src/assign.js");n.d(e,"assign",function(){return o.default});var i=n(/*! ./src/attrize */"./node_modules/d3plus-common/es/src/attrize.js");n.d(e,"attrize",function(){return i.default});var u=n(/*! ./src/BaseClass */"./node_modules/d3plus-common/es/src/BaseClass.js");n.d(e,"BaseClass",function(){return u.default});var s=n(/*! ./src/closest */"./node_modules/d3plus-common/es/src/closest.js");n.d(e,"closest",function(){return s.default});var c=n(/*! ./src/configPrep */"./node_modules/d3plus-common/es/src/configPrep.js");n.d(e,"configPrep",function(){return c.default});var a=n(/*! ./src/constant */"./node_modules/d3plus-common/es/src/constant.js");n.d(e,"constant",function(){return a.default});var l=n(/*! ./src/elem */"./node_modules/d3plus-common/es/src/elem.js");n.d(e,"elem",function(){return l.default});var d=n(/*! ./src/isObject */"./node_modules/d3plus-common/es/src/isObject.js");n.d(e,"isObject",function(){return d.default});var f=n(/*! ./src/merge */"./node_modules/d3plus-common/es/src/merge.js");n.d(e,"merge",function(){return f.default});var h=n(/*! ./src/parseSides */"./node_modules/d3plus-common/es/src/parseSides.js");n.d(e,"parseSides",function(){return h.default});var p=n(/*! ./src/prefix */"./node_modules/d3plus-common/es/src/prefix.js");n.d(e,"prefix",function(){return p.default});var m=n(/*! ./src/RESET */"./node_modules/d3plus-common/es/src/RESET.js");n.d(e,"RESET",function(){return m.default});var y=n(/*! ./src/stylize */"./node_modules/d3plus-common/es/src/stylize.js");n.d(e,"stylize",function(){return y.default});var v=n(/*! ./src/uuid */"./node_modules/d3plus-common/es/src/uuid.js");n.d(e,"uuid",function(){return v.default})},"./node_modules/d3plus-common/es/src/BaseClass.js":
/*!********************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/BaseClass.js ***!
  \********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./assign */"./node_modules/d3plus-common/es/src/assign.js"),o=n(/*! ./isObject */"./node_modules/d3plus-common/es/src/isObject.js"),i=n(/*! ./uuid */"./node_modules/d3plus-common/es/src/uuid.js"),u=n(/*! ./RESET */"./node_modules/d3plus-common/es/src/RESET.js");function s(t,e){if(Object(o.default)(t))for(var n in t)if({}.hasOwnProperty.call(t,n)&&!n.startsWith("_")){var r=e&&Object(o.default)(e)?e[n]:void 0;t[n]===u.default?t[n]=r:Object(o.default)(t[n])&&s(t[n],r)}}var c=function(){this._on={},this._uuid=Object(i.default)()};c.prototype.config=function(t){if(!this._configDefault){var e={};for(var n in this.__proto__)if(0!==n.indexOf("_")&&!["config","constructor","render"].includes(n)){var i=this[n]();e[n]=Object(o.default)(i)?Object(r.default)({},i):i}this._configDefault=e}if(arguments.length){for(var c in t)if({}.hasOwnProperty.call(t,c)&&c in this){var a=t[c];a===u.default?"on"===c?this._on=this._configDefault[c]:this[c](this._configDefault[c]):(s(a,this._configDefault[c]),this[c](a))}return this}var l={};for(var d in this.__proto__)0===d.indexOf("_")||["config","constructor","render"].includes(d)||(l[d]=this[d]());return l},c.prototype.on=function(t,e){return 2===arguments.length?(this._on[t]=e,this):arguments.length?"string"==typeof t?this._on[t]:(this._on=Object.assign({},this._on,t),this):this._on},e.default=c},"./node_modules/d3plus-common/es/src/RESET.js":
/*!****************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/RESET.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default="D3PLUS-COMMON-RESET"},"./node_modules/d3plus-common/es/src/accessor.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/accessor.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){return void 0===e?function(e){return e[t]}:function(n){return void 0===n[t]?e:n[t]}}},"./node_modules/d3plus-common/es/src/assign.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/assign.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./isObject */"./node_modules/d3plus-common/es/src/isObject.js");e.default=function t(){for(var e=[],n=arguments.length;n--;)e[n]=arguments[n];for(var o=e[0],i=function(n){var i=e[n];Object.keys(i).forEach(function(e){var n,u=i[e];Object(r.default)(u)&&(n=u,"undefined"==typeof window||n!==window&&n!==document)?o.hasOwnProperty(e)&&Object(r.default)(o[e])?o[e]=t({},o[e],u):o[e]=t({},u):Array.isArray(u)?o[e]=u.slice():o[e]=u})},u=1;u<e.length;u++)i(u);return o}},"./node_modules/d3plus-common/es/src/attrize.js":
/*!******************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/attrize.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){for(var n in void 0===e&&(e={}),e)({}).hasOwnProperty.call(e,n)&&t.attr(n,e[n])}},"./node_modules/d3plus-common/es/src/closest.js":
/*!******************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/closest.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){if(void 0===e&&(e=[]),e&&e instanceof Array&&e.length)return e.reduce(function(e,n){return Math.abs(n-t)<Math.abs(e-t)?n:e})}},"./node_modules/d3plus-common/es/src/configPrep.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/configPrep.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t,e,n){var r=this;void 0===t&&(t=this._shapeConfig),void 0===e&&(e="shape"),void 0===n&&(n=!1);var o={duration:this._duration,on:{}},i=function(t){return function(e,n,o){for(;e.__d3plus__;)n=e.i,e=e.data||e.feature;return t.bind(r)(e,n,o)}},u=function(t,n){for(var r in n)({}.hasOwnProperty.call(n,r)&&!r.includes(".")||r.includes("."+e))&&(t.on[r]=i(n[r]))},s=function(t,e){for(var n in e)({}).hasOwnProperty.call(e,n)&&("on"===n?u(t,e[n]):"function"==typeof e[n]?t[n]=i(e[n]):"object"!=typeof e[n]||e instanceof Array?t[n]=e[n]:(t[n]={on:{}},s(t[n],e[n])))};return s(o,t),this._on&&u(o,this._on),n&&t[n]&&(s(o,t[n]),t[n].on&&u(o,t[n].on)),o}n.r(e),n.d(e,"default",function(){return r})},"./node_modules/d3plus-common/es/src/constant.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/constant.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return function(){return t}}},"./node_modules/d3plus-common/es/src/elem.js":
/*!***************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/elem.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! d3-transition */"./node_modules/d3-transition/src/index.js"),i=n(/*! ./attrize */"./node_modules/d3plus-common/es/src/attrize.js");e.default=function(t,e){e=Object.assign({},{condition:!0,enter:{},exit:{},parent:Object(r.select)("body"),transition:Object(o.transition)().duration(0),update:{}},e);var n=/\.([^#]+)/g.exec(t),u=/#([^\.]+)/g.exec(t),s=/^([^.^#]+)/g.exec(t)[1],c=e.parent.selectAll(t.includes(":")?t.split(":")[1]:t).data(e.condition?[null]:[]),a=c.enter().append(s).call(i.default,e.enter);u&&a.attr("id",u[1]),n&&a.attr("class",n[1]),c.exit().transition(e.transition).call(i.default,e.exit).remove();var l=a.merge(c);return l.transition(e.transition).call(i.default,e.update),l}},"./node_modules/d3plus-common/es/src/isObject.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/isObject.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return!(!t||"object"!=typeof t||"undefined"!=typeof window&&(t===window||t===window.document||t instanceof Element)||Array.isArray(t))}},"./node_modules/d3plus-common/es/src/merge.js":
/*!****************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/merge.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-array */"./node_modules/d3-array/src/index.js"),o=n(/*! d3-collection */"./node_modules/d3-collection/src/index.js");e.default=function t(e,n){void 0===n&&(n={});var i=new Set(Object(r.merge)(e.map(function(t){return Object(o.keys)(t)}))),u={};return i.forEach(function(o){var i,s=e.map(function(t){return t[o]});if(n[o])i=n[o](s);else{var c=s.map(function(t){return t||!1===t?t.constructor:t}).filter(function(t){return void 0!==t});c.length?c.indexOf(Array)>=0?(i=Object(r.merge)(s.map(function(t){return t instanceof Array?t:[t]})),1===(i=Array.from(new Set(i))).length&&(i=i[0])):c.indexOf(String)>=0?1===(i=Array.from(new Set(s))).length&&(i=i[0]):c.indexOf(Number)>=0?i=Object(r.sum)(s):c.indexOf(Object)>=0?i=t(s.filter(function(t){return t})):1===(i=Array.from(new Set(s.filter(function(t){return void 0!==t})))).length&&(i=i[0]):i=void 0}u[o]=i}),u}},"./node_modules/d3plus-common/es/src/parseSides.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/parseSides.js ***!
  \*********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){var e;return 1===(e="number"==typeof t?[t]:t.split(/\s+/)).length?e=[e[0],e[0],e[0],e[0]]:2===e.length?e=e.concat(e):3===e.length&&e.push(e[1]),["top","right","bottom","left"].reduce(function(t,n,r){var o=parseFloat(e[r]);return t[n]=o||0,t},{})}},"./node_modules/d3plus-common/es/src/prefix.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/prefix.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(){return"-webkit-transform"in document.body.style?"-webkit-":"-moz-transform"in document.body.style?"-moz-":"-ms-transform"in document.body.style?"-ms-":"-o-transform"in document.body.style?"-o-":""}},"./node_modules/d3plus-common/es/src/stylize.js":
/*!******************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/stylize.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){for(var n in void 0===e&&(e={}),e)({}).hasOwnProperty.call(e,n)&&t.style(n,e[n])}},"./node_modules/d3plus-common/es/src/uuid.js":
/*!***************************************************!*\
  !*** ./node_modules/d3plus-common/es/src/uuid.js ***!
  \***************************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}n.r(e),e.default=function(){return""+r()+r()+"-"+r()+"-"+r()+"-"+r()+"-"+r()+r()+r()}},"./node_modules/d3plus-text/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3plus-text/es/index.js ***!
  \**********************************************/
/*! exports provided: fontExists, rtl, stringify, strip, TextBox, textSplit, textWidth, textWrap, titleCase, trim, trimLeft, trimRight */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./src/fontExists */"./node_modules/d3plus-text/es/src/fontExists.js");n.d(e,"fontExists",function(){return r.default});var o=n(/*! ./src/rtl */"./node_modules/d3plus-text/es/src/rtl.js");n.d(e,"rtl",function(){return o.default});var i=n(/*! ./src/stringify */"./node_modules/d3plus-text/es/src/stringify.js");n.d(e,"stringify",function(){return i.default});var u=n(/*! ./src/strip */"./node_modules/d3plus-text/es/src/strip.js");n.d(e,"strip",function(){return u.default});var s=n(/*! ./src/TextBox */"./node_modules/d3plus-text/es/src/TextBox.js");n.d(e,"TextBox",function(){return s.default});var c=n(/*! ./src/textSplit */"./node_modules/d3plus-text/es/src/textSplit.js");n.d(e,"textSplit",function(){return c.default});var a=n(/*! ./src/textWidth */"./node_modules/d3plus-text/es/src/textWidth.js");n.d(e,"textWidth",function(){return a.default});var l=n(/*! ./src/textWrap */"./node_modules/d3plus-text/es/src/textWrap.js");n.d(e,"textWrap",function(){return l.default});var d=n(/*! ./src/titleCase */"./node_modules/d3plus-text/es/src/titleCase.js");n.d(e,"titleCase",function(){return d.default});var f=n(/*! ./src/trim */"./node_modules/d3plus-text/es/src/trim.js");n.d(e,"trim",function(){return f.trim}),n.d(e,"trimLeft",function(){return f.trimLeft}),n.d(e,"trimRight",function(){return f.trimRight})},"./node_modules/d3plus-text/es/src/TextBox.js":
/*!****************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/TextBox.js ***!
  \****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! d3-transition */"./node_modules/d3-transition/src/index.js"),i=n(/*! d3-array */"./node_modules/d3-array/src/index.js"),u=n(/*! d3plus-common */"./node_modules/d3plus-common/es/index.js"),s=n(/*! ./fontExists */"./node_modules/d3plus-text/es/src/fontExists.js"),c=n(/*! ./rtl */"./node_modules/d3plus-text/es/src/rtl.js"),a=n(/*! ./strip */"./node_modules/d3plus-text/es/src/strip.js"),l=n(/*! ./textSplit */"./node_modules/d3plus-text/es/src/textSplit.js"),d=n(/*! ./textWidth */"./node_modules/d3plus-text/es/src/textWidth.js"),f=n(/*! ./textWrap */"./node_modules/d3plus-text/es/src/textWrap.js"),h=n(/*! ./trim */"./node_modules/d3plus-text/es/src/trim.js"),p=function(t){function e(){var e=this;t.call(this),this._ariaHidden=Object(u.constant)("false"),this._delay=0,this._duration=0,this._ellipsis=function(t,e){return e?t.replace(/\.|,$/g,"")+"...":""},this._fontColor=Object(u.constant)("black"),this._fontFamily=Object(u.constant)(["Roboto","Helvetica Neue","HelveticaNeue","Helvetica","Arial","sans-serif"]),this._fontMax=Object(u.constant)(50),this._fontMin=Object(u.constant)(8),this._fontOpacity=Object(u.constant)(1),this._fontResize=Object(u.constant)(!1),this._fontSize=Object(u.constant)(10),this._fontWeight=Object(u.constant)(400),this._height=Object(u.accessor)("height",200),this._id=function(t,e){return t.id||""+e},this._lineHeight=function(t,n){return 1.2*e._fontSize(t,n)},this._maxLines=Object(u.constant)(null),this._on={},this._overflow=Object(u.constant)(!1),this._padding=Object(u.constant)(0),this._pointerEvents=Object(u.constant)("auto"),this._rotate=Object(u.constant)(0),this._rotateAnchor=function(t){return[t.w/2,t.h/2]},this._split=l.default,this._text=Object(u.accessor)("text"),this._textAnchor=Object(u.constant)("start"),this._verticalAlign=Object(u.constant)("top"),this._width=Object(u.accessor)("width",200),this._x=Object(u.accessor)("x",0),this._y=Object(u.accessor)("y",0)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.render=function(t){var e=this;void 0===this._select&&this.select(Object(r.select)("body").append("svg").style("width",window.innerWidth+"px").style("height",window.innerHeight+"px").node());var n=this,l=this._select.selectAll(".d3plus-textBox").data(this._data.reduce(function(t,r,o){var c=e._text(r,o);if(void 0===c)return t;var a,l,h=e._fontResize(r,o),p=e._lineHeight(r,o)/e._fontSize(r,o),m=h?e._fontMax(r,o):e._fontSize(r,o),y=h?m*p:e._lineHeight(r,o),v=1,g=[],j={"font-family":Object(s.default)(e._fontFamily(r,o)),"font-size":m,"font-weight":e._fontWeight(r,o),"line-height":y},b=Object(u.parseSides)(e._padding(r,o)),_=e._height(r,o)-(b.top+b.bottom),x=e._width(r,o)-(b.left+b.right),w=Object(f.default)().fontFamily(j["font-family"]).fontSize(m).fontWeight(j["font-weight"]).lineHeight(y).maxLines(e._maxLines(r,o)).height(_).overflow(e._overflow(r,o)).width(x),A=e._fontMax(r,o),O=e._fontMin(r,o),k=e._verticalAlign(r,o),S=e._split(c,o);if(x>O&&(_>y||h&&_>O*p)){if(h){a=Object(d.default)(S,j);var C=1.165+x/_*.1,B=x*_,F=Object(i.max)(a),N=Object(i.sum)(a,function(t){return t*y})*C;if(F>x||N>B){var z=Math.sqrt(B/N),T=x/F,q=Object(i.min)([z,T]);m=Math.floor(m*q)}var H=Math.floor(.8*_);m>H&&(m=H)}!function t(){var e=function(){v<1?g=[n._ellipsis("",v)]:g[v-1]=n._ellipsis(g[v-1],v)};if(m=Object(i.max)([m,O]),m=Object(i.min)([m,A]),h&&(y=m*p,w.fontSize(m).lineHeight(y),j["font-size"]=m,j["line-height"]=y),l=w(c),g=l.lines.filter(function(t){return""!==t}),v=g.length,l.truncated)if(h){if(--m<O)return m=O,void e();t()}else e()}()}if(g.length){var D=v*y,V=e._rotate(r,o),X=0===V?"top"===k?0:"middle"===k?_/2-D/2:_-D:0;X-=.1*y,t.push({aH:e._ariaHidden(r,o),data:r,i:o,lines:g,fC:e._fontColor(r,o),fF:j["font-family"],fO:e._fontOpacity(r,o),fW:j["font-weight"],id:e._id(r,o),tA:e._textAnchor(r,o),vA:e._verticalAlign(r,o),widths:l.widths,fS:m,lH:y,w:x,h:_,r:V,x:e._x(r,o)+b.left,y:e._y(r,o)+X+b.top})}return t},[]),function(t){return e._id(t.data,t.i)}),p=Object(o.transition)().duration(this._duration);function m(t){t.attr("transform",function(t,e){var r=n._rotateAnchor(t,e);return"translate("+t.x+", "+t.y+") rotate("+t.r+", "+r[0]+", "+r[1]+")"})}0===this._duration?l.exit().remove():(l.exit().transition().delay(this._duration).remove(),l.exit().selectAll("text").transition(p).attr("opacity",0).style("opacity",0));var y=l.enter().append("g").attr("class","d3plus-textBox").attr("id",function(t){return"d3plus-textBox-"+Object(a.default)(t.id)}).call(m).merge(l),v=Object(c.default)();y.style("pointer-events",function(t){return e._pointerEvents(t.data,t.i)}).each(function(t){function e(e){e.text(function(t){return Object(h.trimRight)(t)}).attr("aria-hidden",t.aH).attr("dir",v?"rtl":"ltr").attr("fill",t.fC).attr("text-anchor",t.tA).attr("font-family",t.fF).style("font-family",t.fF).attr("font-size",t.fS+"px").style("font-size",t.fS+"px").attr("font-weight",t.fW).style("font-weight",t.fW).attr("x",("middle"===t.tA?t.w/2:v?"start"===t.tA?t.w:0:"end"===t.tA?t.w:2*Math.sin(Math.PI*t.r/180))+"px").attr("y",function(e,n){return 0===t.r||"top"===t.vA?(n+1)*t.lH-(t.lH-t.fS)+"px":"middle"===t.vA?(t.h+t.fS)/2-(t.lH-t.fS)+(n-t.lines.length/2+.5)*t.lH+"px":t.h-2*(t.lH-t.fS)-(t.lines.length-(n+1))*t.lH+2*Math.cos(Math.PI*t.r/180)+"px"})}var o=Object(r.select)(this).selectAll("text").data(t.lines);0===n._duration?(o.call(e),o.exit().remove(),o.enter().append("text").attr("dominant-baseline","alphabetic").style("baseline-shift","0%").attr("unicode-bidi","bidi-override").call(e).attr("opacity",t.fO).style("opacity",t.fO)):(o.transition(p).call(e),o.exit().transition(p).attr("opacity",0).remove(),o.enter().append("text").attr("dominant-baseline","alphabetic").style("baseline-shift","0%").attr("opacity",0).style("opacity",0).call(e).merge(o).transition(p).delay(n._delay).call(e).attr("opacity",t.fO).style("opacity",t.fO))}).transition(p).call(m);for(var g=Object.keys(this._on),j=g.reduce(function(t,n){return t[n]=function(t,r){return e._on[n](t.data,r)},t},{}),b=0;b<g.length;b++)y.on(g[b],j[g[b]]);return t&&setTimeout(t,this._duration+100),this},e.prototype.ariaHidden=function(t){return void 0!==t?(this._ariaHidden="function"==typeof t?t:Object(u.constant)(t),this):this._ariaHidden},e.prototype.data=function(t){return arguments.length?(this._data=t,this):this._data},e.prototype.delay=function(t){return arguments.length?(this._delay=t,this):this._delay},e.prototype.duration=function(t){return arguments.length?(this._duration=t,this):this._duration},e.prototype.ellipsis=function(t){return arguments.length?(this._ellipsis="function"==typeof t?t:Object(u.constant)(t),this):this._ellipsis},e.prototype.fontColor=function(t){return arguments.length?(this._fontColor="function"==typeof t?t:Object(u.constant)(t),this):this._fontColor},e.prototype.fontFamily=function(t){return arguments.length?(this._fontFamily="function"==typeof t?t:Object(u.constant)(t),this):this._fontFamily},e.prototype.fontMax=function(t){return arguments.length?(this._fontMax="function"==typeof t?t:Object(u.constant)(t),this):this._fontMax},e.prototype.fontMin=function(t){return arguments.length?(this._fontMin="function"==typeof t?t:Object(u.constant)(t),this):this._fontMin},e.prototype.fontOpacity=function(t){return arguments.length?(this._fontOpacity="function"==typeof t?t:Object(u.constant)(t),this):this._fontOpacity},e.prototype.fontResize=function(t){return arguments.length?(this._fontResize="function"==typeof t?t:Object(u.constant)(t),this):this._fontResize},e.prototype.fontSize=function(t){return arguments.length?(this._fontSize="function"==typeof t?t:Object(u.constant)(t),this):this._fontSize},e.prototype.fontWeight=function(t){return arguments.length?(this._fontWeight="function"==typeof t?t:Object(u.constant)(t),this):this._fontWeight},e.prototype.height=function(t){return arguments.length?(this._height="function"==typeof t?t:Object(u.constant)(t),this):this._height},e.prototype.id=function(t){return arguments.length?(this._id="function"==typeof t?t:Object(u.constant)(t),this):this._id},e.prototype.lineHeight=function(t){return arguments.length?(this._lineHeight="function"==typeof t?t:Object(u.constant)(t),this):this._lineHeight},e.prototype.maxLines=function(t){return arguments.length?(this._maxLines="function"==typeof t?t:Object(u.constant)(t),this):this._maxLines},e.prototype.overflow=function(t){return arguments.length?(this._overflow="function"==typeof t?t:Object(u.constant)(t),this):this._overflow},e.prototype.padding=function(t){return arguments.length?(this._padding="function"==typeof t?t:Object(u.constant)(t),this):this._padding},e.prototype.pointerEvents=function(t){return arguments.length?(this._pointerEvents="function"==typeof t?t:Object(u.constant)(t),this):this._pointerEvents},e.prototype.rotate=function(t){return arguments.length?(this._rotate="function"==typeof t?t:Object(u.constant)(t),this):this._rotate},e.prototype.rotateAnchor=function(t){return arguments.length?(this._rotateAnchor="function"==typeof t?t:Object(u.constant)(t),this):this._rotateAnchor},e.prototype.select=function(t){return arguments.length?(this._select=Object(r.select)(t),this):this._select},e.prototype.split=function(t){return arguments.length?(this._split=t,this):this._split},e.prototype.text=function(t){return arguments.length?(this._text="function"==typeof t?t:Object(u.constant)(t),this):this._text},e.prototype.textAnchor=function(t){return arguments.length?(this._textAnchor="function"==typeof t?t:Object(u.constant)(t),this):this._textAnchor},e.prototype.verticalAlign=function(t){return arguments.length?(this._verticalAlign="function"==typeof t?t:Object(u.constant)(t),this):this._verticalAlign},e.prototype.width=function(t){return arguments.length?(this._width="function"==typeof t?t:Object(u.constant)(t),this):this._width},e.prototype.x=function(t){return arguments.length?(this._x="function"==typeof t?t:Object(u.constant)(t),this):this._x},e.prototype.y=function(t){return arguments.length?(this._y="function"==typeof t?t:Object(u.constant)(t),this):this._y},e}(u.BaseClass);e.default=p},"./node_modules/d3plus-text/es/src/combiningMarks.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/combiningMarks.js ***!
  \***********************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);e.default=["u0903","u093B","u093E","u093F","u0940","u0949","u094A","u094B","u094C","u094E","u094F","u0982","u0983","u09BE","u09BF","u09C0","u09C7","u09C8","u09CB","u09CC","u09D7","u0A03","u0A3E","u0A3F","u0A40","u0A83","u0ABE","u0ABF","u0AC0","u0AC9","u0ACB","u0ACC","u0B02","u0B03","u0B3E","u0B40","u0B47","u0B48","u0B4B","u0B4C","u0B57","u0BBE","u0BBF","u0BC1","u0BC2","u0BC6","u0BC7","u0BC8","u0BCA","u0BCB","u0BCC","u0BD7","u0C01","u0C02","u0C03","u0C41","u0C42","u0C43","u0C44","u0C82","u0C83","u0CBE","u0CC0","u0CC1","u0CC2","u0CC3","u0CC4","u0CC7","u0CC8","u0CCA","u0CCB","u0CD5","u0CD6","u0D02","u0D03","u0D3E","u0D3F","u0D40","u0D46","u0D47","u0D48","u0D4A","u0D4B","u0D4C","u0D57","u0D82","u0D83","u0DCF","u0DD0","u0DD1","u0DD8","u0DD9","u0DDA","u0DDB","u0DDC","u0DDD","u0DDE","u0DDF","u0DF2","u0DF3","u0F3E","u0F3F","u0F7F","u102B","u102C","u1031","u1038","u103B","u103C","u1056","u1057","u1062","u1063","u1064","u1067","u1068","u1069","u106A","u106B","u106C","u106D","u1083","u1084","u1087","u1088","u1089","u108A","u108B","u108C","u108F","u109A","u109B","u109C","u17B6","u17BE","u17BF","u17C0","u17C1","u17C2","u17C3","u17C4","u17C5","u17C7","u17C8","u1923","u1924","u1925","u1926","u1929","u192A","u192B","u1930","u1931","u1933","u1934","u1935","u1936","u1937","u1938","u1A19","u1A1A","u1A55","u1A57","u1A61","u1A63","u1A64","u1A6D","u1A6E","u1A6F","u1A70","u1A71","u1A72","u1B04","u1B35","u1B3B","u1B3D","u1B3E","u1B3F","u1B40","u1B41","u1B43","u1B44","u1B82","u1BA1","u1BA6","u1BA7","u1BAA","u1BE7","u1BEA","u1BEB","u1BEC","u1BEE","u1BF2","u1BF3","u1C24","u1C25","u1C26","u1C27","u1C28","u1C29","u1C2A","u1C2B","u1C34","u1C35","u1CE1","u1CF2","u1CF3","u302E","u302F","uA823","uA824","uA827","uA880","uA881","uA8B4","uA8B5","uA8B6","uA8B7","uA8B8","uA8B9","uA8BA","uA8BB","uA8BC","uA8BD","uA8BE","uA8BF","uA8C0","uA8C1","uA8C2","uA8C3","uA952","uA953","uA983","uA9B4","uA9B5","uA9BA","uA9BB","uA9BD","uA9BE","uA9BF","uA9C0","uAA2F","uAA30","uAA33","uAA34","uAA4D","uAA7B","uAA7D","uAAEB","uAAEE","uAAEF","uAAF5","uABE3","uABE4","uABE6","uABE7","uABE9","uABEA","uABEC"].concat(["u0300","u0301","u0302","u0303","u0304","u0305","u0306","u0307","u0308","u0309","u030A","u030B","u030C","u030D","u030E","u030F","u0310","u0311","u0312","u0313","u0314","u0315","u0316","u0317","u0318","u0319","u031A","u031B","u031C","u031D","u031E","u031F","u0320","u0321","u0322","u0323","u0324","u0325","u0326","u0327","u0328","u0329","u032A","u032B","u032C","u032D","u032E","u032F","u0330","u0331","u0332","u0333","u0334","u0335","u0336","u0337","u0338","u0339","u033A","u033B","u033C","u033D","u033E","u033F","u0340","u0341","u0342","u0343","u0344","u0345","u0346","u0347","u0348","u0349","u034A","u034B","u034C","u034D","u034E","u034F","u0350","u0351","u0352","u0353","u0354","u0355","u0356","u0357","u0358","u0359","u035A","u035B","u035C","u035D","u035E","u035F","u0360","u0361","u0362","u0363","u0364","u0365","u0366","u0367","u0368","u0369","u036A","u036B","u036C","u036D","u036E","u036F","u0483","u0484","u0485","u0486","u0487","u0591","u0592","u0593","u0594","u0595","u0596","u0597","u0598","u0599","u059A","u059B","u059C","u059D","u059E","u059F","u05A0","u05A1","u05A2","u05A3","u05A4","u05A5","u05A6","u05A7","u05A8","u05A9","u05AA","u05AB","u05AC","u05AD","u05AE","u05AF","u05B0","u05B1","u05B2","u05B3","u05B4","u05B5","u05B6","u05B7","u05B8","u05B9","u05BA","u05BB","u05BC","u05BD","u05BF","u05C1","u05C2","u05C4","u05C5","u05C7","u0610","u0611","u0612","u0613","u0614","u0615","u0616","u0617","u0618","u0619","u061A","u064B","u064C","u064D","u064E","u064F","u0650","u0651","u0652","u0653","u0654","u0655","u0656","u0657","u0658","u0659","u065A","u065B","u065C","u065D","u065E","u065F","u0670","u06D6","u06D7","u06D8","u06D9","u06DA","u06DB","u06DC","u06DF","u06E0","u06E1","u06E2","u06E3","u06E4","u06E7","u06E8","u06EA","u06EB","u06EC","u06ED","u0711","u0730","u0731","u0732","u0733","u0734","u0735","u0736","u0737","u0738","u0739","u073A","u073B","u073C","u073D","u073E","u073F","u0740","u0741","u0742","u0743","u0744","u0745","u0746","u0747","u0748","u0749","u074A","u07A6","u07A7","u07A8","u07A9","u07AA","u07AB","u07AC","u07AD","u07AE","u07AF","u07B0","u07EB","u07EC","u07ED","u07EE","u07EF","u07F0","u07F1","u07F2","u07F3","u0816","u0817","u0818","u0819","u081B","u081C","u081D","u081E","u081F","u0820","u0821","u0822","u0823","u0825","u0826","u0827","u0829","u082A","u082B","u082C","u082D","u0859","u085A","u085B","u08E3","u08E4","u08E5","u08E6","u08E7","u08E8","u08E9","u08EA","u08EB","u08EC","u08ED","u08EE","u08EF","u08F0","u08F1","u08F2","u08F3","u08F4","u08F5","u08F6","u08F7","u08F8","u08F9","u08FA","u08FB","u08FC","u08FD","u08FE","u08FF","u0900","u0901","u0902","u093A","u093C","u0941","u0942","u0943","u0944","u0945","u0946","u0947","u0948","u094D","u0951","u0952","u0953","u0954","u0955","u0956","u0957","u0962","u0963","u0981","u09BC","u09C1","u09C2","u09C3","u09C4","u09CD","u09E2","u09E3","u0A01","u0A02","u0A3C","u0A41","u0A42","u0A47","u0A48","u0A4B","u0A4C","u0A4D","u0A51","u0A70","u0A71","u0A75","u0A81","u0A82","u0ABC","u0AC1","u0AC2","u0AC3","u0AC4","u0AC5","u0AC7","u0AC8","u0ACD","u0AE2","u0AE3","u0B01","u0B3C","u0B3F","u0B41","u0B42","u0B43","u0B44","u0B4D","u0B56","u0B62","u0B63","u0B82","u0BC0","u0BCD","u0C00","u0C3E","u0C3F","u0C40","u0C46","u0C47","u0C48","u0C4A","u0C4B","u0C4C","u0C4D","u0C55","u0C56","u0C62","u0C63","u0C81","u0CBC","u0CBF","u0CC6","u0CCC","u0CCD","u0CE2","u0CE3","u0D01","u0D41","u0D42","u0D43","u0D44","u0D4D","u0D62","u0D63","u0DCA","u0DD2","u0DD3","u0DD4","u0DD6","u0E31","u0E34","u0E35","u0E36","u0E37","u0E38","u0E39","u0E3A","u0E47","u0E48","u0E49","u0E4A","u0E4B","u0E4C","u0E4D","u0E4E","u0EB1","u0EB4","u0EB5","u0EB6","u0EB7","u0EB8","u0EB9","u0EBB","u0EBC","u0EC8","u0EC9","u0ECA","u0ECB","u0ECC","u0ECD","u0F18","u0F19","u0F35","u0F37","u0F39","u0F71","u0F72","u0F73","u0F74","u0F75","u0F76","u0F77","u0F78","u0F79","u0F7A","u0F7B","u0F7C","u0F7D","u0F7E","u0F80","u0F81","u0F82","u0F83","u0F84","u0F86","u0F87","u0F8D","u0F8E","u0F8F","u0F90","u0F91","u0F92","u0F93","u0F94","u0F95","u0F96","u0F97","u0F99","u0F9A","u0F9B","u0F9C","u0F9D","u0F9E","u0F9F","u0FA0","u0FA1","u0FA2","u0FA3","u0FA4","u0FA5","u0FA6","u0FA7","u0FA8","u0FA9","u0FAA","u0FAB","u0FAC","u0FAD","u0FAE","u0FAF","u0FB0","u0FB1","u0FB2","u0FB3","u0FB4","u0FB5","u0FB6","u0FB7","u0FB8","u0FB9","u0FBA","u0FBB","u0FBC","u0FC6","u102D","u102E","u102F","u1030","u1032","u1033","u1034","u1035","u1036","u1037","u1039","u103A","u103D","u103E","u1058","u1059","u105E","u105F","u1060","u1071","u1072","u1073","u1074","u1082","u1085","u1086","u108D","u109D","u135D","u135E","u135F","u1712","u1713","u1714","u1732","u1733","u1734","u1752","u1753","u1772","u1773","u17B4","u17B5","u17B7","u17B8","u17B9","u17BA","u17BB","u17BC","u17BD","u17C6","u17C9","u17CA","u17CB","u17CC","u17CD","u17CE","u17CF","u17D0","u17D1","u17D2","u17D3","u17DD","u180B","u180C","u180D","u18A9","u1920","u1921","u1922","u1927","u1928","u1932","u1939","u193A","u193B","u1A17","u1A18","u1A1B","u1A56","u1A58","u1A59","u1A5A","u1A5B","u1A5C","u1A5D","u1A5E","u1A60","u1A62","u1A65","u1A66","u1A67","u1A68","u1A69","u1A6A","u1A6B","u1A6C","u1A73","u1A74","u1A75","u1A76","u1A77","u1A78","u1A79","u1A7A","u1A7B","u1A7C","u1A7F","u1AB0","u1AB1","u1AB2","u1AB3","u1AB4","u1AB5","u1AB6","u1AB7","u1AB8","u1AB9","u1ABA","u1ABB","u1ABC","u1ABD","u1B00","u1B01","u1B02","u1B03","u1B34","u1B36","u1B37","u1B38","u1B39","u1B3A","u1B3C","u1B42","u1B6B","u1B6C","u1B6D","u1B6E","u1B6F","u1B70","u1B71","u1B72","u1B73","u1B80","u1B81","u1BA2","u1BA3","u1BA4","u1BA5","u1BA8","u1BA9","u1BAB","u1BAC","u1BAD","u1BE6","u1BE8","u1BE9","u1BED","u1BEF","u1BF0","u1BF1","u1C2C","u1C2D","u1C2E","u1C2F","u1C30","u1C31","u1C32","u1C33","u1C36","u1C37","u1CD0","u1CD1","u1CD2","u1CD4","u1CD5","u1CD6","u1CD7","u1CD8","u1CD9","u1CDA","u1CDB","u1CDC","u1CDD","u1CDE","u1CDF","u1CE0","u1CE2","u1CE3","u1CE4","u1CE5","u1CE6","u1CE7","u1CE8","u1CED","u1CF4","u1CF8","u1CF9","u1DC0","u1DC1","u1DC2","u1DC3","u1DC4","u1DC5","u1DC6","u1DC7","u1DC8","u1DC9","u1DCA","u1DCB","u1DCC","u1DCD","u1DCE","u1DCF","u1DD0","u1DD1","u1DD2","u1DD3","u1DD4","u1DD5","u1DD6","u1DD7","u1DD8","u1DD9","u1DDA","u1DDB","u1DDC","u1DDD","u1DDE","u1DDF","u1DE0","u1DE1","u1DE2","u1DE3","u1DE4","u1DE5","u1DE6","u1DE7","u1DE8","u1DE9","u1DEA","u1DEB","u1DEC","u1DED","u1DEE","u1DEF","u1DF0","u1DF1","u1DF2","u1DF3","u1DF4","u1DF5","u1DFC","u1DFD","u1DFE","u1DFF","u20D0","u20D1","u20D2","u20D3","u20D4","u20D5","u20D6","u20D7","u20D8","u20D9","u20DA","u20DB","u20DC","u20E1","u20E5","u20E6","u20E7","u20E8","u20E9","u20EA","u20EB","u20EC","u20ED","u20EE","u20EF","u20F0","u2CEF","u2CF0","u2CF1","u2D7F","u2DE0","u2DE1","u2DE2","u2DE3","u2DE4","u2DE5","u2DE6","u2DE7","u2DE8","u2DE9","u2DEA","u2DEB","u2DEC","u2DED","u2DEE","u2DEF","u2DF0","u2DF1","u2DF2","u2DF3","u2DF4","u2DF5","u2DF6","u2DF7","u2DF8","u2DF9","u2DFA","u2DFB","u2DFC","u2DFD","u2DFE","u2DFF","u302A","u302B","u302C","u302D","u3099","u309A","uA66F","uA674","uA675","uA676","uA677","uA678","uA679","uA67A","uA67B","uA67C","uA67D","uA69E","uA69F","uA6F0","uA6F1","uA802","uA806","uA80B","uA825","uA826","uA8C4","uA8E0","uA8E1","uA8E2","uA8E3","uA8E4","uA8E5","uA8E6","uA8E7","uA8E8","uA8E9","uA8EA","uA8EB","uA8EC","uA8ED","uA8EE","uA8EF","uA8F0","uA8F1","uA926","uA927","uA928","uA929","uA92A","uA92B","uA92C","uA92D","uA947","uA948","uA949","uA94A","uA94B","uA94C","uA94D","uA94E","uA94F","uA950","uA951","uA980","uA981","uA982","uA9B3","uA9B6","uA9B7","uA9B8","uA9B9","uA9BC","uA9E5","uAA29","uAA2A","uAA2B","uAA2C","uAA2D","uAA2E","uAA31","uAA32","uAA35","uAA36","uAA43","uAA4C","uAA7C","uAAB0","uAAB2","uAAB3","uAAB4","uAAB7","uAAB8","uAABE","uAABF","uAAC1","uAAEC","uAAED","uAAF6","uABE5","uABE8","uABED","uFB1E","uFE00","uFE01","uFE02","uFE03","uFE04","uFE05","uFE06","uFE07","uFE08","uFE09","uFE0A","uFE0B","uFE0C","uFE0D","uFE0E","uFE0F","uFE20","uFE21","uFE22","uFE23","uFE24","uFE25","uFE26","uFE27","uFE28","uFE29","uFE2A","uFE2B","uFE2C","uFE2D","uFE2E","uFE2F"])},"./node_modules/d3plus-text/es/src/fontExists.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/fontExists.js ***!
  \*******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r,o,i,u,s=n(/*! ./textWidth */"./node_modules/d3plus-text/es/src/textWidth.js"),c=n(/*! ./trim */"./node_modules/d3plus-text/es/src/trim.js"),a="abcdefghiABCDEFGHI_!@#$%^&*()_+1234567890",l={};e.default=function(t){r||(r=Object(s.default)(a,{"font-family":"DejaVuSans","font-size":32}),o=Object(s.default)(a,{"font-family":"-apple-system","font-size":32}),i=Object(s.default)(a,{"font-family":"monospace","font-size":32}),u=Object(s.default)(a,{"font-family":"sans-serif","font-size":32})),t instanceof Array||(t=t.split(",")),t=t.map(function(t){return Object(c.trim)(t)});for(var e=0;e<t.length;e++){var n=t[e];if(l[n]||["-apple-system","monospace","sans-serif","DejaVuSans"].includes(n))return n;if(!1!==l[n]){var d=Object(s.default)(a,{"font-family":n,"font-size":32});if(l[n]=d!==i,l[n]&&(l[n]=d!==u),o&&l[n]&&(l[n]=d!==o),r&&l[n]&&(l[n]=d!==r),l[n])return n}}return!1}},"./node_modules/d3plus-text/es/src/rtl.js":
/*!************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/rtl.js ***!
  \************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js");e.default=function(){return"rtl"===Object(r.select)("html").attr("dir")||"rtl"===Object(r.select)("body").attr("dir")||"rtl"===Object(r.select)("html").style("direction")||"rtl"===Object(r.select)("body").style("direction")}},"./node_modules/d3plus-text/es/src/stringify.js":
/*!******************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/stringify.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t){return void 0===t?t="undefined":"string"==typeof t||t instanceof String||(t=JSON.stringify(t)),t}},"./node_modules/d3plus-text/es/src/strip.js":
/*!**************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/strip.js ***!
  \**************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=[[/[\300-\305]/g,"A"],[/[\340-\345]/g,"a"],[/[\306]/g,"AE"],[/[\346]/g,"ae"],[/[\337]/g,"B"],[/[\307]/g,"C"],[/[\347]/g,"c"],[/[\320\336\376]/g,"D"],[/[\360]/g,"d"],[/[\310-\313]/g,"E"],[/[\350-\353]/g,"e"],[/[\314-\317]/g,"I"],[/[\354-\357]/g,"i"],[/[\321]/g,"N"],[/[\361]/g,"n"],[/[\322-\326\330]/g,"O"],[/[\362-\366\370]/g,"o"],[/[\331-\334]/g,"U"],[/[\371-\374]/g,"u"],[/[\327]/g,"x"],[/[\335]/g,"Y"],[/[\375\377]/g,"y"]];e.default=function(t){return(""+t).replace(/[^A-Za-z0-9\-_]/g,function(t){if(" "===t)return"-";for(var e=!1,n=0;n<r.length;n++)if(new RegExp(r[n][0]).test(t)){e=r[n][1];break}return e||""})}},"./node_modules/d3plus-text/es/src/textSplit.js":
/*!******************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/textSplit.js ***!
  \******************************************************/
/*! exports provided: default, prefixChars, splitChars, splitWords, suffixChars */function(t,e,n){"use strict";n.r(e),n.d(e,"prefixChars",function(){return s}),n.d(e,"splitChars",function(){return u}),n.d(e,"splitWords",function(){return l}),n.d(e,"suffixChars",function(){return c});var r=n(/*! ./stringify */"./node_modules/d3plus-text/es/src/stringify.js"),o=n(/*! ./combiningMarks */"./node_modules/d3plus-text/es/src/combiningMarks.js"),i=n(/*! d3-array */"./node_modules/d3-array/src/index.js"),u=["-","/",";",":","&","u0E2F","u0EAF","u0EC6","u0ECC","u104A","u104B","u104C","u104D","u104E","u104F","u2013","u2014","u2027","u3000","u3001","u3002","uFF0C","uFF5E"],s=["'","<","(","{","[","u00AB","u300A","u3008"],c=["'",">",")","}","]",".","!","?","u00BB","u300B","u3009"].concat(u),a="က-ဪဿ-၉ၐ-ၕ㐀-龿぀-ゟ゠-ヿ＀-＋－-｝｟-ﾟ㐀-䶿ກ-ຮະ-ໄ່-໋ໍ-ໝ",l=new RegExp("(\\"+u.join("|\\")+")*[^\\s|\\"+u.join("|\\")+"]*(\\"+u.join("|\\")+")*","g"),d=new RegExp("["+a+"]"),f=new RegExp("(\\"+s.join("|\\")+")*["+a+"](\\"+c.join("|\\")+"|\\"+o.default.join("|\\")+")*|[a-z0-9]+","gi");e.default=function(t){return d.test(t)?Object(i.merge)(Object(r.default)(t).match(l).map(function(t){return d.test(t)?t.match(f):[t]})):Object(r.default)(t).match(l).filter(function(t){return t.length})}},"./node_modules/d3plus-text/es/src/textWidth.js":
/*!******************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/textWidth.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e),e.default=function(t,e){e=Object.assign({"font-size":10,"font-family":"sans-serif","font-style":"normal","font-weight":400,"font-variant":"normal"},e);var n=document.createElement("canvas").getContext("2d"),r=[];return r.push(e["font-style"]),r.push(e["font-variant"]),r.push(e["font-weight"]),r.push("string"==typeof e["font-size"]?e["font-size"]:e["font-size"]+"px"),r.push(e["font-family"]),n.font=r.join(" "),t instanceof Array?t.map(function(t){return n.measureText(t).width}):n.measureText(t).width}},"./node_modules/d3plus-text/es/src/textWrap.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/textWrap.js ***!
  \*****************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./textWidth */"./node_modules/d3plus-text/es/src/textWidth.js"),o=n(/*! ./textSplit */"./node_modules/d3plus-text/es/src/textSplit.js"),i=n(/*! ./stringify */"./node_modules/d3plus-text/es/src/stringify.js"),u=n(/*! ./trim */"./node_modules/d3plus-text/es/src/trim.js");e.default=function(){var t,e="sans-serif",n=10,s=400,c=200,a=null,l=!1,d=o.default,f=200;function h(o){o=Object(i.default)(o),void 0===t&&(t=Math.ceil(1.4*n));for(var h=d(o),p={"font-family":e,"font-size":n,"font-weight":s,"line-height":t},m=1,y="",v=!1,g=0,j=[],b=Object(r.default)(h,p),_=Object(r.default)(" ",p),x=0;x<h.length;x++){var w=h[x],A=b[h.indexOf(w)];if(w+=o.slice(y.length+w.length).match("^( |\n)*","g")[0],"\n"===y.slice(-1)||g+A>f){if(!x&&!l){v=!0;break}if(j[m-1]=Object(u.trimRight)(j[m-1]),t*++m>c||A>f&&!l||a&&m>a){v=!0;break}g=0,j.push(w)}else x?j[m-1]+=w:j[0]=w;y+=w,g+=A,g+=w.match(/[\s]*$/g)[0].length*_}return{lines:j,sentence:o,truncated:v,widths:Object(r.default)(j,p),words:h}}return h.fontFamily=function(t){return arguments.length?(e=t,h):e},h.fontSize=function(t){return arguments.length?(n=t,h):n},h.fontWeight=function(t){return arguments.length?(s=t,h):s},h.height=function(t){return arguments.length?(c=t,h):c},h.lineHeight=function(e){return arguments.length?(t=e,h):t},h.maxLines=function(t){return arguments.length?(a=t,h):a},h.overflow=function(t){return arguments.length?(l=t,h):l},h.split=function(t){return arguments.length?(d=t,h):d},h.width=function(t){return arguments.length?(f=t,h):f},h}},"./node_modules/d3plus-text/es/src/titleCase.js":
/*!******************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/titleCase.js ***!
  \******************************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./textSplit */"./node_modules/d3plus-text/es/src/textSplit.js"),o=["a","an","and","as","at","but","by","for","from","if","in","into","near","nor","of","on","onto","or","per","that","the","to","with","via","vs","vs."],i=["CEO","CFO","CNC","COO","CPU","GDP","HVAC","ID","IT","R&D","TV","UI"];e.default=function(t){if(void 0===t)return"";var e=o.map(function(t){return t.toLowerCase()}),n=i.slice(),u=(n=n.concat(n.map(function(t){return t+"s"}))).map(function(t){return t.toLowerCase()}),s=Object(r.default)(t);return s.map(function(t,o){if(t){var i=t.toLowerCase(),c=r.suffixChars.includes(i.charAt(i.length-1))?i.slice(0,-1):i,a=u.indexOf(c);return a>=0?n[a]:e.includes(c)&&0!==o&&o!==s.length-1?i:t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()}return""}).reduce(function(e,n,r){return r&&" "===t.charAt(e.length)&&(e+=" "),e+=n},"")}},"./node_modules/d3plus-text/es/src/trim.js":
/*!*************************************************!*\
  !*** ./node_modules/d3plus-text/es/src/trim.js ***!
  \*************************************************/
/*! exports provided: trim, trimLeft, trimRight */function(t,e,n){"use strict";function r(t){return t.replace(/^\s+|\s+$/g,"")}function o(t){return t.replace(/^\s+/,"")}function i(t){return t.replace(/\s+$/,"")}n.r(e),n.d(e,"trim",function(){return r}),n.d(e,"trimLeft",function(){return o}),n.d(e,"trimRight",function(){return i})},"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./js/BoxedTree */"./src/js/BoxedTree.js"),o=n(/*! ./js/CircleTree */"./src/js/CircleTree.js");e.default={boxedTree:r.default,circleTree:o.default}},"./src/js/BaseTree.js":
/*!****************************!*\
  !*** ./src/js/BaseTree.js ***!
  \****************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./CustomD3 */"./src/js/CustomD3.js"),o=n(/*! ./NodeSettings */"./src/js/NodeSettings.js"),i=n(/*! ./LoadOnDemandSettings */"./src/js/LoadOnDemandSettings.js"),u=n(/*! events */"events"),s=n.n(u);function c(t){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function h(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function p(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var m=function(t){function e(t){var n,r,u;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,n=!(u=d(e).call(this))||"object"!==c(u)&&"function"!=typeof u?h(r):u,t=t||{};var s=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.forEach(function(e){a(t,e,n[e])})}return t}({},e.defaults,t);return n._root=null,n._svg=null,n._panningContainer=null,n._view=null,n._treeGenerator=null,n._linkPathGenerator=null,n._visibleNodes=null,n._links=null,n._zoomListener=null,n.setTheme(s.theme),n.setOrientation(s.orientation),n.setData(s.data),n.setElement(s.element),n.setWidthWithoutMargins(s.widthWithoutMargins),n.setHeightWithoutMargins(s.heightWithoutMargins),n.setMargins(s.margins),n.setDuration(s.duration),n.setAllowPan(s.allowPan),n.setAllowZoom(s.allowZoom),n.setAllowFocus(s.allowFocus),n.setAllowNodeCentering(s.allowNodeCentering),n.setMinScale(s.minScale),n.setMaxScale(s.maxScale),n.setIsFlatData(s.isFlatData),n.setNodeDepthMultiplier(s.nodeDepthMultiplier),n.loadOnDemandSettings=new i.default(h(h(n)),s.loadOnDemandSettings),n.nodeSettings=new o.default(h(h(n)),s.nodeSettings),n._getId=s.getId,n._getChildren=s.getChildren,n._getParentId=s.getParentId,n}var n,u,m;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(e,s.a),n=e,(u=[{key:"_nodeEnter",value:function(t,e){throw"The function _nodeEnter must be implemented"}},{key:"_nodeUpdate",value:function(t,e,n){throw"The function _nodeUpdate must be implemented"}},{key:"_nodeExit",value:function(t,e,n){throw"The function _nodeExit must be implemented"}},{key:"_getLinkPathGenerator",value:function(){throw"The function _getLinkPathGenerator must be implemented"}},{key:"_linkEnter",value:function(t,e,n,r){throw"The function _linkEnter must be implemented"}},{key:"_linkUpdate",value:function(t,e,n,r,o){throw"The function _linkUpdate must be implemented"}},{key:"_linkExit",value:function(t,e,n,r,o){throw"The function _linkExit must be implemented"}},{key:"_getNodeSize",value:function(){throw"The function _getNodeSize must be implemented"}},{key:"focusToNode",value:function(t){this.removeSelection(this.getRoot());var e=t;"object"!==c(e)&&null!==e&&(e=this.getNode(e));var n=null;for(n=e.parent;n;)n._children&&this.expand(n),n=n.parent;if(this.getAllowFocus()){for(n=e.parent;n;)this.hideSiblings(n),n=n.parent;this.updateTreeWithFocusOnNode(e),e.selected=!0}return this.update(this.getRoot()),this.centerNode(e),this}},{key:"getIsFlatData",value:function(){return this._isFlatData}},{key:"setIsFlatData",value:function(t){return this._isFlatData=t,this}},{key:"regenerateNodeData",value:function(){var t=this;if(this.getIsFlatData()){if(!this._getParentId)throw"If you are providing flat structured data, then you must set the getParentId accessor property.";var e=r.default.stratify().id(function(e,n,r){return t.getId.call(t,e)}).parentId(function(e,n,r){return t.getParentId.call(t,e)});this._root=e(this.getData())}else{if(!this._getChildren)throw"If you are providing hierarchical structured data, then you must set the getChildren accessor property.";this._root=r.default.hierarchy(this.getData(),function(e){return t.getChildren.call(t,e)})}return this}},{key:"getTheme",value:function(){return this._theme}},{key:"setTheme",value:function(t){return this._theme=t,this}},{key:"getOrientation",value:function(){return this._orientation}},{key:"setOrientation",value:function(t){return this._orientation=t,this}},{key:"getData",value:function(){return this._data}},{key:"setData",value:function(t){return this._data=t,this}},{key:"getNodeDepthMultiplier",value:function(){return this._nodeDepthMultiplier}},{key:"setNodeDepthMultiplier",value:function(t){return this._nodeDepthMultiplier=t,this}},{key:"getDuration",value:function(){return this._duration}},{key:"setDuration",value:function(t){return this._duration=t,this}},{key:"getAllowPan",value:function(){return this._allowPan}},{key:"setAllowPan",value:function(t){return this._allowPan=t,this}},{key:"getAllowZoom",value:function(){return this._allowZoom}},{key:"setAllowZoom",value:function(t){return this._allowZoom=t,this}},{key:"getAllowFocus",value:function(){return this._allowFocus}},{key:"setAllowFocus",value:function(t){return this._allowFocus=t,this}},{key:"getAllowNodeCentering",value:function(){return this._allowNodeCentering}},{key:"setAllowNodeCentering",value:function(t){return this._allowNodeCentering=t,this}},{key:"getMinScale",value:function(){return this._minScale}},{key:"setMinScale",value:function(t){return this._minScale=t,this}},{key:"getMaxScale",value:function(){return this._maxScale}},{key:"setMaxScale",value:function(t){return this._maxScale=t,this}},{key:"getLoadOnDemandSettings",value:function(){return this.loadOnDemandSettings}},{key:"getNodeSettings",value:function(){return this.nodeSettings}},{key:"getElement",value:function(){return this._element}},{key:"setElement",value:function(t){return this._element=t,this}},{key:"getRoot",value:function(){return this._root}},{key:"getSvg",value:function(){return this._svg}},{key:"getView",value:function(){return this._view}},{key:"getPanningContainer",value:function(){return this._panningContainer}},{key:"getTreeGenerator",value:function(){return this._treeGenerator}},{key:"getNode",value:function(t){var e=this,n=t;"object"===c(n)&&null!==n&&(n=this.getId(n));return function t(e,n,r){if(r(e))return e;var o=n(e),i=o.find(r);if(!i){var u=!0,s=!1,c=void 0;try{for(var a,l=o[Symbol.iterator]();!(u=(a=l.next()).done)&&!(i=t(a.value,n,r));u=!0);}catch(t){s=!0,c=t}finally{try{u||null==l.return||l.return()}finally{if(s)throw c}}}return i}(this.getRoot(),function(t){return t._children?t._children:[]},function(t){return e.getId(t.data)==n})}},{key:"getDataItem",value:function(t){return this.getNode(t).data}},{key:"getNodes",value:function(){return this._nodes}},{key:"getVisibleNodes",value:function(){return this._visibleNodes}},{key:"getLinks",value:function(){return this._links}},{key:"getZoomListener",value:function(){return this._zoomListener}},{key:"getId",value:function(t){return this._getId(t)}},{key:"getChildren",value:function(t){return this._getChildren(t)}},{key:"getParentId",value:function(t){return this._getParentId(t)}},{key:"setIdAccessor",value:function(t){return this._getId=t,this}},{key:"setChildrenAccessor",value:function(t){return this._getChildren=t,this}},{key:"setParentIdAccessor",value:function(t){return this._getParentId=t,this}},{key:"getWidth",value:function(){return this.getWidthWithoutMargins()-this.getMargins().left-this.getMargins().right}},{key:"getHeight",value:function(){return this.getHeightWithoutMargins()-this.getMargins().top-this.getMargins().bottom}},{key:"setMargins",value:function(t){return this._margins=t,this}},{key:"getMargins",value:function(){return this._margins}},{key:"setWidthWithoutMargins",value:function(t){return this._widthWithoutMargin=t,this}},{key:"getWidthWithoutMargins",value:function(){return this._widthWithoutMargin}},{key:"setHeightWithoutMargins",value:function(t){return this._heightWithoutMargin=t,this}},{key:"getHeightWithoutMargins",value:function(){return this._heightWithoutMargin}},{key:"updateDimensions",value:function(){this.getSvg().attr("viewBox","0 0 "+this.getWidthWithoutMargins()+" "+this.getHeightWithoutMargins());var t,e,n=this.getMargins(),r=!1,o=this.nodeSettings.getSizingMode();return"string"==typeof o&&(o=o.trim().toLowerCase()),"nodesize"===o?(this.getTreeGenerator().nodeSize(this._getNodeSize()),!1===this.getAllowFocus()&&(r=!0)):this.getTreeGenerator().size([this.getHeight(),this.getWidth()]),!1===r?this.getView().attr("transform","translate("+n.left+","+n.top+")"):this.getView().attr("transform","translate("+n.left+", "+(this.getHeight()/2+n.top)+")"),"topToBottom"===this.getOrientation()?(t=!1===r?this.getWidth()/2:0,e=this.getHeight()/4):(t=!1===r?this.getHeight()/2:0,e=0),this.getRoot().x0=t,this.getRoot().y0=e,this.getZoomListener()&&this.getZoomListener().extent([[0,0],[this.getWidthWithoutMargins(),this.getHeightWithoutMargins()]]),this}},{key:"validateSettings",value:function(){if(!this.getElement())throw"Need to pass in an element as part of the options";if(!this.getData())throw"Need to pass in data as part of the options";if(!this._getId)throw"Need to define the getId function as part of the options";return this.loadOnDemandSettings.validateSettings(),this}},{key:"initialize",value:function(){var t=this;for(this.validateSettings(),this.regenerateNodeData();this.getElement().firstChild;)this.getElement().removeChild(this.getElement().firstChild);return this._svg=r.default.select(this.getElement()).append("svg").classed("mitch-d3-tree",!0).classed(this.getTheme(),!0).attr("preserveAspectRatio","xMidYMid meet").style("width","100%").style("height","100%"),this._view=this.getSvg().append("g").classed("view",!0),this._treeGenerator=r.default.tree(),this._panningContainer=this.getView().append("g").classed("panningContainer",!0),this._zoomListener=r.default.zoom().scaleExtent([this.getMinScale(),this.getMaxScale()]).on("zoom",function(){var e=r.default.event.transform;t.getPanningContainer().attr("transform",e)}),this.getSvg().call(this.getZoomListener()),!1===this.getAllowPan()&&this.getSvg().on("mousedown.zoom",null).on("touchstart.zoom",null).on("touchmove.zoom",null).on("touchend.zoom",null),!1===this.getAllowZoom()&&this.getSvg().on("dblclick.zoom",null).on("wheel.zoom",null),this.updateDimensions(),this._populateUnderlyingChildren(this.getRoot()),this.getRoot().children&&this.getRoot().children.forEach(this.collapseRecursively),this.removeSelection(this.getRoot()),this.update(this.getRoot()),this.centerNode(this.getRoot()),this}},{key:"expand",value:function(t){return t.children=t._children,this}},{key:"expandRecursively",value:function(t){return function t(e){e.children&&(e.children.forEach(t),e.children=e._children)}(t),this}},{key:"collapse",value:function(t){return t.children=null,this}},{key:"collapseRecursively",value:function(t){return function t(e){e.children&&(e.children.forEach(t),e.children=null)}(t),this}},{key:"_populateUnderlyingChildren",value:function(t){return function t(e){e.children&&(e._children=e.children,e._children.forEach(t))}(t),this}},{key:"removeSelection",value:function(t){return function t(e){e.selected=!1,e.children&&e.children.forEach(t)}(t),this}},{key:"centerNode",value:function(t){var e,n,o,i,u=r.default.zoomTransform(this.getSvg().node()).k;return"toptobottom"===this.getOrientation().toLowerCase()?(e=-t.x0,n=-t.y0,o=e*u+this.getWidth()/2,i=n*u+this.getHeight()/2):(e=-t.y0,n=-t.x0,o=e*u+this.getWidth()/4,i=n*u+this.getHeight()/2),this.getSvg().transition().duration(this.getDuration()).call(this.getZoomListener().transform,r.default.zoomIdentity.translate(o,i).scale(u)),this}},{key:"_onNodeClick",value:function(t,e,n){var r={type:this.getAllowFocus()?"focus":t.children?"collapse":"expand",continue:!0,nodeDataItem:t,nodeDataItemIndex:e,nodeDataItems:n};return this.emit("nodeClick",r),!1!==r.continue&&(this.getAllowFocus()?this.nodeFocus.call(this,t):this.nodeToggle.call(this,t),!0)}},{key:"_createNode",value:function(t,e){var n=r.default.hierarchy(e);return n.depth=t.depth+1,n.height=t.height-1,n.parent=t,n.id=this.getId.call(this,e),n}},{key:"_addUnderlyingChildNode",value:function(t,e){var n=this._createNode(t,e);return t._children.push(n),n}},{key:"_processLoadedDataForNodeFocus",value:function(t,e){var n=this;t._children=[],e.forEach(function(e){return n._addUnderlyingChildNode(t,e)}),this._populateUnderlyingChildren(t),this.updateTreeWithFocusOnNode(t);var r=t.selected;return this.removeSelection(this.getRoot()),t.selected=!0,this.update(t),!0!==this.getAllowNodeCentering()||!1!==r&&void 0!==r||this.centerNode(t),this}},{key:"nodeFocus",value:function(t){var e=this;if(!t.children&&!t._children&&this.loadOnDemandSettings.isEnabled()&&this.loadOnDemandSettings.hasChildren(t.data)){this.loadOnDemandSettings.loadChildren(t.data,function(n){return e._processLoadedDataForNodeFocus(t,n)})}else{this.updateTreeWithFocusOnNode(t);var n=t.selected;this.removeSelection(this.getRoot()),t.selected=!0,this.update(t),!0!==this.getAllowNodeCentering()||!1!==n&&void 0!==n||this.centerNode(t)}return this}},{key:"_processLoadedDataForNodeToggle",value:function(t,e){var n=this;return t._children=[],e.forEach(function(e){return n._addUnderlyingChildNode(t,e)}),this.expand(t),this.update(t),!0===this.getAllowNodeCentering()&&this.centerNode(t),this}},{key:"nodeToggle",value:function(t){var e=this;if(!t.children&&!t._children&&this.loadOnDemandSettings.isEnabled()&&this.loadOnDemandSettings.hasChildren(t.data)){this.loadOnDemandSettings.loadChildren(t.data,function(n){return e._processLoadedDataForNodeToggle(t,n)})}else t.children?this.collapse(t):this.expand(t),this.update(t),!0===this.getAllowNodeCentering()&&this.centerNode(t);return this}},{key:"hideSiblings",value:function(t){var e=this,n=t.parent;if(n){var r=this.getId(t.data);n.children.filter(function(t){return e.getId(t.data)!=r}).forEach(this.collapseRecursively),n.children=[],n.children.push(t)}return this}},{key:"updateTreeWithFocusOnNode",value:function(t){if(!t.children&&t._children)this.hideSiblings(t),this.expand(t),t.children.forEach(this.collapseRecursively);else if(t.children){!1===!t.children.some(function(t,e,n){return t.children})&&(this.collapseRecursively(t),this.expand(t))}return this}},{key:"_updateNodes",value:function(t,e){var n=this;e.forEach(function(t){return t.y=t.depth*n.getNodeDepthMultiplier()});var r=(e=this.getPanningContainer().selectAll("g.node").data(e,function(t){return n.getId.call(n,t.data)})).enter().append("g").classed("node",!0).attr("transform",function(e,r,o){return"toptobottom"===n.getOrientation().toLowerCase()?"translate("+t.x0+","+t.y0+")":"translate("+t.y0+","+t.x0+")"}).on("click",function(t,e,r){return n._onNodeClick.call(n,t,e,r)});this._nodeEnter(r,e);var o=r.merge(e),i=o.transition().duration(this.getDuration());o.classed("collapsed",function(t,e,r){return!(t.children||!t._children)||!(!n.loadOnDemandSettings.isEnabled()||!n.loadOnDemandSettings.hasChildren(t.data)||t.children||t._children)}).classed("expanded",function(t,e,n){return t.children}).classed("childless",function(t,e,n){return!t.children&&!t._children}).classed("selected",function(t,e,n){return t.selected}),this._nodeUpdate(o,i,e);var u=e.exit(),s=u.transition().duration(this.getDuration());return this._nodeExit(u,s,e),this}},{key:"_updateLinks",value:function(t,e){var n=this,r=this._getLinkPathGenerator(),o=this.getPanningContainer().selectAll("path.link").data(e,function(t){return n.getId.call(n,t.data)}),i=o.enter().insert("path","g").classed("link",!0);this._linkEnter(t,i,o,r);var u=i.merge(o),s=u.transition().duration(this.getDuration());this._linkUpdate(t,u,s,o,r);var c=o.exit(),a=c.transition().duration(this.getDuration());return this._linkExit(t,c,a,o,r),this.getVisibleNodes().forEach(function(t){t.x0=t.x,t.y0=t.y}),this}},{key:"update",value:function(t){var e=this.getTreeGenerator()(this.getRoot());return this._visibleNodes=e.descendants(),this._nodes=[this.getRoot()].concat(p(function t(e,n){var r=[],o=n(e);if(o){var i=!0,u=!1,s=void 0;try{for(var c,a=o[Symbol.iterator]();!(i=(c=a.next()).done);i=!0){var l=c.value;r.push(l);var d=t(l,n);d&&(r=[].concat(p(r),p(d)))}}catch(t){u=!0,s=t}finally{try{i||null==a.return||a.return()}finally{if(u)throw s}}}return r}(this.getRoot(),function(t){return t._children}))),this._links=e.descendants().slice(1),this._updateNodes(t,this.getVisibleNodes())._updateLinks(t,this.getLinks()),this}}])&&l(n.prototype,u),m&&l(n,m),e}();m.defaults={theme:"default",orientation:"leftToRight",allowPan:!0,allowZoom:!0,allowFocus:!0,allowNodeCentering:!0,minScale:1,maxScale:2,nodeDepthMultiplier:300,isFlatData:!1,getId:null,getParentId:null,getChildren:null,widthWithoutMargins:960,heightWithoutMargins:800,margins:{top:40,right:20,bottom:40,left:100},duration:750,loadOnDemandSettings:{},nodeSettings:{}},e.default=m},"./src/js/BoxedNodeSettings.js":
/*!*************************************!*\
  !*** ./src/js/BoxedNodeSettings.js ***!
  \*************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./NodeSettings */"./src/js/NodeSettings.js");function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function a(t,e){return(a=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var l=function(t){function e(t,n){var r;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),r=s(this,c(e).call(this,t,n));var o=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.forEach(function(e){i(t,e,n[e])})}return t}({},e.defaults,n);return r._bodyBoxWidth=o.bodyBoxWidth,r._bodyBoxHeight=o.bodyBoxHeight,r._bodyBoxPadding=o.bodyBoxPadding,r._titleBoxWidth=o.titleBoxWidth,r._titleBoxHeight=o.titleBoxHeight,r._titleBoxPadding=o.titleBoxPadding,r}var n,o,l;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&a(t,e)}(e,r["default"]),n=e,(o=[{key:"getBodyBoxWidth",value:function(){return this._bodyBoxWidth}},{key:"setBodyBoxWidth",value:function(t){return this._bodyBoxWidth=t,this}},{key:"getBodyBoxHeight",value:function(){return this._bodyBoxHeight}},{key:"setBodyBoxHeight",value:function(t){return this._bodyBoxHeight=t,this}},{key:"setBodyBoxPadding",value:function(t){return this._bodyBoxPadding=t,this}},{key:"getBodyBoxPadding",value:function(){return this._bodyBoxPadding}},{key:"getTitleBoxWidth",value:function(){return this._titleBoxWidth?this._titleBoxWidth:this.getBodyBoxWidth()/2}},{key:"setTitleBoxWidth",value:function(t){return this._titleBoxWidth=t,this}},{key:"getTitleBoxHeight",value:function(){return this._titleBoxHeight}},{key:"setTitleBoxHeight",value:function(t){return this._titleBoxHeight=t,this}},{key:"getTitleBoxPadding",value:function(){return this._titleBoxPadding}},{key:"setTitleBoxPadding",value:function(t){return this._titleBoxPadding=t,this}}])&&u(n.prototype,o),l&&u(n,l),e}();l.defaults={bodyBoxWidth:200,bodyBoxHeight:75,bodyBoxPadding:{top:5,right:10,bottom:5,left:10},titleBoxWidth:null,titleBoxHeight:40,titleBoxPadding:{top:2,right:5,bottom:2,left:5}},e.default=l},"./src/js/BoxedTree.js":
/*!*****************************!*\
  !*** ./src/js/BoxedTree.js ***!
  \*****************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./CustomD3 */"./src/js/CustomD3.js"),o=n(/*! d3plus-text */"./node_modules/d3plus-text/es/index.js"),i=n(/*! ./BaseTree */"./src/js/BaseTree.js"),u=n(/*! ./BoxedNodeSettings */"./src/js/BoxedNodeSettings.js");function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function l(t,e,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=d(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function f(t,e){return(f=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function h(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var p=function(t){function e(t){var n,r,o;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,n=!(o=d(e).call(this,t))||"object"!==s(o)&&"function"!=typeof o?h(r):o;var a=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.forEach(function(e){c(t,e,n[e])})}return t}({},i.default.defaults,e.defaults,t);return n._getBodyDisplayText=a.getBodyDisplayText,n._getTitleDisplayText=a.getTitleDisplayText,n.nodeSettings=new u.default(h(h(n)),a.nodeSettings),n}var n,p,m;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&f(t,e)}(e,i["default"]),n=e,(p=[{key:"initialize",value:function(){return l(d(e.prototype),"initialize",this).call(this),this.getSvg().classed("boxed-tree",!0),this}},{key:"_nodeEnter",value:function(t,e){var n=this,i=n.nodeSettings.getBodyBoxWidth(),u=n.nodeSettings.getBodyBoxHeight(),s=n.nodeSettings.getBodyBoxPadding(),c=n.nodeSettings.getTitleBoxWidth(),a=n.nodeSettings.getTitleBoxHeight(),l=n.nodeSettings.getTitleBoxPadding(),d=t.append("g").classed("body-group",!0);return d.append("rect").classed("body-box",!0).attr("width",1e-6).attr("height",1e-6),d.each(function(t,e,c){var l=r.default.select(this),d=[];d.push(t);var f=s.top;n.getTitleDisplayText.call(n,t)&&(f+=a/2);(new o.TextBox).select(this).data(d).text(function(t,e,r){return n.getBodyDisplayText.call(n,t)}).textAnchor("middle").verticalAlign("middle").fontSize(13).x(s.left).y(f-u/2).width(i-s.left-s.right).height(u-f-s.bottom).ellipsis(function(e,r){return l.append("title").text(n.getBodyDisplayText(t)),e.replace(/\.|,$/g,"")+"..."}).render()}),t.append("g").classed("title-group",!0).attr("transform","translate("+-c/3+", "+(-a/2-u/2)+")").each(function(t,e,i){if(n.getTitleDisplayText.call(n,t)){var u=r.default.select(this),s=[];s.push(t),u.append("rect").classed("title-box",!0).attr("width",c).attr("height",a);(new o.TextBox).select(this).data(s).text(function(t,e,r){return n.getTitleDisplayText.call(n,t)}).textAnchor("middle").verticalAlign("middle").x(l.left).y(l.top).fontWeight(700).fontMin(6).fontMax(16).fontResize(!0).width(c-l.left-l.right).height(a-l.top-l.bottom).render()}}),n}},{key:"_nodeUpdate",value:function(t,e,n){"toptobottom"===this.getOrientation().toLowerCase()?e.attr("transform",function(t,e,n){return"translate("+t.x+","+t.y+")"}):e.attr("transform",function(t,e,n){return"translate("+t.y+","+t.x+")"});var r=this.nodeSettings.getBodyBoxWidth(),o=this.nodeSettings.getBodyBoxHeight();return t.select(".node .body-group .body-box").attr("y",-o/2).attr("width",r).attr("height",o),t.select(".d3plus-textBox").style("fill-opacity",1),this}},{key:"_nodeExit",value:function(t,e,n){var r=this,o=this.nodeSettings.getBodyBoxWidth(),i=this.nodeSettings.getBodyBoxHeight();return e.attr("transform",function(t,e,n){for(var u=t.parent;u.parent&&!u.parent.children;)u=u.parent;return"toptobottom"===r.getOrientation().toLowerCase()?"translate("+(u.x+o/2)+","+(u.y+i)+")":"translate("+(u.y+o)+","+(u.x+i/2)+")"}).remove(),e.select(".node .body-group rect").attr("width",1e-6).attr("height",1e-6),e.select(".node .body-group .d3plus-textBox").style("fill-opacity",1e-6).attr("transform",function(t,e,n){return"translate(0,"+-i/2+")"}).selectAll("text").style("font-size",0).attr("y",0).attr("x",0),e.select(".node .title-group").attr("transform","translate(0, "+-i/2+")"),e.select(".node .title-group rect").attr("width",1e-6).attr("height",1e-6),e.select(".node .title-group .d3plus-textBox").style("fill-opacity",1e-6).attr("transform","translate(0,0)").selectAll("text").style("font-size",0).attr("y",0).attr("x",0),e.select(".d3plus-textBox").style("fill-opacity",1e-6),this}},{key:"_getNodeSize",value:function(){return"toptobottom"===this.getOrientation().toLowerCase()?[this.nodeSettings.getBodyBoxWidth()+this.nodeSettings.getHorizontalSpacing(),this.nodeSettings.getBodyBoxHeight()+this.nodeSettings.getVerticalSpacing()]:[this.nodeSettings.getBodyBoxHeight()+this.nodeSettings.getVerticalSpacing(),this.nodeSettings.getBodyBoxWidth()+this.nodeSettings.getHorizontalSpacing()]}},{key:"_linkEnter",value:function(t,e,n,r){return e.attr("d",function(e,n,o){var i={x:t.x0,y:t.y0};return r({source:i,target:i})}),this}},{key:"_linkUpdate",value:function(t,e,n,r,o){return n.attr("d",function(t,e,n){var r=t,i=t.parent;return o({source:r,target:i})}),this}},{key:"_linkExit",value:function(t,e,n,r,o){var i=this;return n.attr("d",function(t,e,n){for(var r=t.parent;r.parent&&!r.parent.children;)r=r.parent;var u=null;if("toptobottom"===i.getOrientation().toLowerCase()){var s=i.nodeSettings.getBodyBoxHeight();u={x:r.x,y:r.y+s}}else{var c=i.nodeSettings.getBodyBoxWidth();u={x:r.x,y:r.y+c}}var a={x:r.x,y:r.y};return o({source:u,target:a})}),this}},{key:"_getLinkPathGenerator",value:function(){var t=this.nodeSettings.getBodyBoxWidth(),e=this.nodeSettings.getBodyBoxHeight();return"toptobottom"===this.getOrientation().toLowerCase()?r.default.linkVertical().source(function(n){return[n.source.x+t/2,n.source.y-e/2]}).target(function(n){return[n.target.x+t/2,n.target.y+e/2]}):r.default.linkHorizontal().source(function(t){return[t.source.y,t.source.x]}).target(function(e){return[e.target.y+t,e.target.x]})}},{key:"validateSettings",value:function(){if(l(d(e.prototype),"validateSettings",this).call(this),!this._getBodyDisplayText)throw"Need to define the getBodyDisplayText function as part of the options";return this}},{key:"setBodyDisplayTextAccessor",value:function(t){return this._getBodyDisplayText=t,this}},{key:"getBodyDisplayText",value:function(t){return this._getBodyDisplayText(t.data)}},{key:"setTitleDisplayTextAccessor",value:function(t){return this._getTitleDisplayText=t,this}},{key:"getTitleDisplayText",value:function(t){return this._getTitleDisplayText(t.data)}},{key:"centerNode",value:function(t){var n=this.nodeSettings.getBodyBoxWidth(),r=this.nodeSettings.getBodyBoxHeight();return"toptobottom"===this.getOrientation().toLowerCase()?(t.x0=t.x0,t.y0=t.y0+r/2):(t.y0=t.y0+n/2,t.x0=t.x0),l(d(e.prototype),"centerNode",this).call(this,t)}}])&&a(n.prototype,p),m&&a(n,m),e}();p.defaults={getBodyDisplayText:null,getTitleDisplayText:function(t){return null}},e.default=p},"./src/js/CircleNodeSettings.js":
/*!**************************************!*\
  !*** ./src/js/CircleNodeSettings.js ***!
  \**************************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./NodeSettings */"./src/js/NodeSettings.js");function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var c=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,u(e).apply(this,arguments))}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,r["default"]),e}();e.default=c},"./src/js/CircleTree.js":
/*!******************************!*\
  !*** ./src/js/CircleTree.js ***!
  \******************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! ./CustomD3 */"./src/js/CustomD3.js"),o=n(/*! ./BaseTree */"./src/js/BaseTree.js"),i=n(/*! ./CircleNodeSettings */"./src/js/CircleNodeSettings.js");function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function a(t,e,n){return(a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=l(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function l(t){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function f(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var h=function(t){function e(t){var n,r,c;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),r=this,n=!(c=l(e).call(this,t))||"object"!==u(c)&&"function"!=typeof c?f(r):c;var a=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.forEach(function(e){s(t,e,n[e])})}return t}({},o.default.defaults,e.defaults,t);return n._getDisplayText=a.getDisplayText,n.nodeSettings=new i.default(f(f(n)),a.nodeSettings),n}var n,h,p;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}(e,o["default"]),n=e,(h=[{key:"initialize",value:function(){return a(l(e.prototype),"initialize",this).call(this),this.getSvg().classed("circle-tree",!0),this}},{key:"_nodeEnter",value:function(t,e){var n=this;return t.append("circle").attr("r",1e-6),t.append("text").text(function(t,e,r){return n.getDisplayText.call(n,t)}),this}},{key:"_nodeUpdate",value:function(t,e,n){return t.classed("middle",function(t,e,n){var r=!1;if(t.parent&&t.parent.children.length%2!=0){var o=t.parent.children;o.indexOf(t)===Math.floor(o.length/2)&&(r=!0)}return r}),"toptobottom"===this.getOrientation().toLowerCase()?e.attr("transform",function(t,e,n){return"translate("+t.x+","+t.y+")"}):e.attr("transform",function(t,e,n){return"translate("+t.y+","+t.x+")"}),t.select("text").style("fill-opacity",1),this}},{key:"_nodeExit",value:function(t,e,n){var r=this;return e.attr("transform",function(t,e,n){for(var o=t.parent;o.parent&&!o.parent.children;)o=o.parent;return"toptobottom"===r.getOrientation().toLowerCase()?"translate("+o.x+","+o.y+")":"translate("+o.y+","+o.x+")"}).remove(),e.select("circle").attr("r",1e-6),e.select("text").style("fill-opacity",1e-6),this}},{key:"_getNodeSize",value:function(){return[this.nodeSettings.getVerticalSpacing(),this.nodeSettings.getHorizontalSpacing()]}},{key:"_linkEnter",value:function(t,e,n,r){return e.attr("d",function(e,n,o){var i={x:t.x0,y:t.y0};return r({source:i,target:i})}),this}},{key:"_linkUpdate",value:function(t,e,n,r,o){return n.attr("d",function(t,e,n){var r=t,i=t.parent;return o({source:r,target:i})}),this}},{key:"_linkExit",value:function(t,e,n,r,o){return n.attr("d",function(t,e,n){for(var r=t.parent;r.parent&&!r.parent.children;)r=r.parent;var i={x:r.x,y:r.y},u={x:r.x,y:r.y};return o({source:i,target:u})}),this}},{key:"_getLinkPathGenerator",value:function(){return"toptobottom"===this.getOrientation().toLowerCase()?r.default.linkVertical().source(function(t){return[t.source.x,t.source.y]}).target(function(t){return[t.target.x,t.target.y]}):r.default.linkHorizontal().source(function(t){return[t.source.y,t.source.x]}).target(function(t){return[t.target.y,t.target.x]})}},{key:"validateSettings",value:function(){if(a(l(e.prototype),"validateSettings",this).call(this),!this.getDisplayText)throw"Need to define the getDisplayText function as part of the options";return this}},{key:"setDisplayTextAccessor",value:function(t){return this._getDisplayText=t,this}},{key:"getDisplayText",value:function(t){return this._getDisplayText(t.data)}}])&&c(n.prototype,h),p&&c(n,p),e}();h.defaults={getDisplayText:function(t){return null}},e.default=h},"./src/js/CustomD3.js":
/*!****************************!*\
  !*** ./src/js/CustomD3.js ***!
  \****************************/
/*! exports provided: default */function(t,e,n){"use strict";n.r(e);var r=n(/*! d3-selection */"./node_modules/d3-selection/src/index.js"),o=n(/*! d3-hierarchy */"./node_modules/d3-hierarchy/src/index.js"),i=n(/*! d3-zoom */"./node_modules/d3-zoom/src/index.js"),u=n(/*! d3-shape */"./node_modules/d3-shape/src/index.js");function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var c=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),r.forEach(function(e){s(t,e,n[e])})}return t}({select:r.select,selectAll:r.selectAll,get event(){return r.event},linkHorizontal:u.linkHorizontal,linkVertical:u.linkVertical},o,i);e.default=c},"./src/js/LoadOnDemandSettings.js":
/*!****************************************!*\
  !*** ./src/js/LoadOnDemandSettings.js ***!
  \****************************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n.r(e);var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var o=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.forEach(function(e){r(t,e,n[e])})}return t}({},t.defaults,n);this._ownerObject=e,this._hasChildren=o.hasChildren,this._loadChildren=o.loadChildren}var e,n,i;return e=t,(n=[{key:"back",value:function(){return this._ownerObject}},{key:"validateSettings",value:function(){if(!this.hasChildren&&this.loadChildren)throw"With load on demand enabled, you need to define hasChildren as part of the options";if(!this.loadChildren&&this.hasChildren)throw"With load on demand enabled, you need to define loadChildren as part of the options";return this}},{key:"loadChildren",value:function(t,e){return this._loadChildren.call(this._ownerObject,t,e)}},{key:"hasChildren",value:function(t){return this._hasChildren.call(this._ownerObject,t)}},{key:"setLoadChildrenMethod",value:function(t){return this._loadChildren=t,this}},{key:"setHasChildrenMethod",value:function(t){return this._hasChildren=t,this}},{key:"isEnabled",value:function(){return this._hasChildren||this._loadChildren}}])&&o(e.prototype,n),i&&o(e,i),t}();i.defaults={hasChildren:null,loadChildren:null},e.default=i},"./src/js/NodeSettings.js":
/*!********************************!*\
  !*** ./src/js/NodeSettings.js ***!
  \********************************/
/*! exports provided: default */function(t,e,n){"use strict";function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n.r(e);var i=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var o=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.forEach(function(e){r(t,e,n[e])})}return t}({},t.defaults,n);this._ownerObject=e,this._sizingMode=o.sizingMode,this._horizontalSpacing=o.horizontalSpacing,this._verticalSpacing=o.verticalSpacing}var e,n,i;return e=t,(n=[{key:"back",value:function(){return this._ownerObject}},{key:"getHorizontalSpacing",value:function(){return this._horizontalSpacing}},{key:"setHorizontalSpacing",value:function(t){return this._horizontalSpacing=t,this}},{key:"getVerticalSpacing",value:function(){return this._verticalSpacing}},{key:"setVerticalSpacing",value:function(t){return this._verticalSpacing=t,this}},{key:"getSizingMode",value:function(){return this._sizingMode}},{key:"setSizingMode",value:function(t){return this._sizingMode=t,this}}])&&o(e.prototype,n),i&&o(e,i),t}();i.defaults={sizingMode:"size",horizontalSpacing:25,verticalSpacing:25},e.default=i},events:
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! no static exports found */function(t,e){t.exports=require("events")}}).default});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2FycmF5LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYXNjZW5kaW5nLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYmlzZWN0LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYmlzZWN0b3IuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Nyb3NzLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZGVzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2RldmlhdGlvbi5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2V4dGVudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2hpc3RvZ3JhbS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9tYXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9tZWFuLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWVkaWFuLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9taW4uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9wYWlycy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3Blcm11dGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9xdWFudGlsZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3JhbmdlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc2Nhbi5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3NodWZmbGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9zdW0uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvZnJlZWRtYW5EaWFjb25pcy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RocmVzaG9sZC9zY290dC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RocmVzaG9sZC9zdHVyZ2VzLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdGlja3MuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90cmFuc3Bvc2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy92YXJpYW5jZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3ppcC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMvZW50cmllcy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL2tleXMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWNvbGxlY3Rpb24vc3JjL21hcC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMvbmVzdC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtY29sbGVjdGlvbi9zcmMvc2V0LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1jb2xsZWN0aW9uL3NyYy92YWx1ZXMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9jb2xvci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2N1YmVoZWxpeC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2RlZmluZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvbGFiLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvbWF0aC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtZGlzcGF0Y2gvc3JjL2Rpc3BhdGNoLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1kaXNwYXRjaC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWRyYWcvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9kcmFnLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9ldmVudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWRyYWcvc3JjL25vZHJhZy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvbm9ldmVudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvYmFjay5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvYm91bmNlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9jaXJjbGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2N1YmljLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9lbGFzdGljLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9leHAuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9saW5lYXIuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL3BvbHkuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL3F1YWQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL3Npbi5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9hY2Nlc3NvcnMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvY2x1c3Rlci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvYW5jZXN0b3JzLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9jb3VudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvZGVzY2VuZGFudHMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2guanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2hBZnRlci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvZWFjaEJlZm9yZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2xlYXZlcy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvbGlua3MuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L3BhdGguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L3NvcnQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L3N1bS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9wYWNrL2VuY2xvc2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvcGFjay9pbmRleC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9wYWNrL3NpYmxpbmdzLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3BhcnRpdGlvbi5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9zdHJhdGlmeS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvYmluYXJ5LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvZGljZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvcmVzcXVhcmlmeS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL3JvdW5kLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc2xpY2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9zbGljZURpY2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9zcXVhcmlmeS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2FycmF5LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvYmFzaXMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9iYXNpc0Nsb3NlZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2NvbG9yLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9jdWJlaGVsaXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9kYXRlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvZGlzY3JldGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9oY2wuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9oc2wuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9odWUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2xhYi5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL251bWJlci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL29iamVjdC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3BpZWNld2lzZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3F1YW50aXplLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcmdiLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcm91bmQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy90cmFuc2Zvcm0vZGVjb21wb3NlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL3BhcnNlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdmFsdWUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy96b29tLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1wYXRoL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtcGF0aC9zcmMvcGF0aC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvY3JlYXRvci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9sb2NhbC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9tYXRjaGVyLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL21vdXNlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL25hbWVzcGFjZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2VzLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3BvaW50LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3RBbGwuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2FwcGVuZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vYXR0ci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vY2FsbC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vY2xhc3NlZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vY2xvbmUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2RhdGEuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2RhdHVtLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kaXNwYXRjaC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZWFjaC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZW1wdHkuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VudGVyLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9leGl0LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2h0bWwuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbnNlcnQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2pvaW4uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2xvd2VyLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9tZXJnZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbm9kZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vbm9kZXMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL29uLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9vcmRlci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3JhaXNlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9yZW1vdmUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2VsZWN0QWxsLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zaXplLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zb3J0LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zcGFyc2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3N0eWxlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi90ZXh0LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdG9yLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdG9yQWxsLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NvdXJjZUV2ZW50LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3RvdWNoLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3RvdWNoZXMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvd2luZG93LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvYXJjLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvYXJlYS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2FyZWFSYWRpYWwuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvYmFzaXMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9iYXNpc0Nsb3NlZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2Jhc2lzT3Blbi5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2J1bmRsZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhcmRpbmFsLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2FyZGluYWxDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXJkaW5hbE9wZW4uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXRtdWxsUm9tLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2F0bXVsbFJvbUNsb3NlZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhdG11bGxSb21PcGVuLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvbGluZWFyLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvbGluZWFyQ2xvc2VkLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvbW9ub3RvbmUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9uYXR1cmFsLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvcmFkaWFsLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvc3RlcC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2Rlc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbGluZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2xpbmVSYWRpYWwuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9saW5rL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbWF0aC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL25vb3AuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vZmZzZXQvZGl2ZXJnaW5nLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L2V4cGFuZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29mZnNldC9ub25lLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L3NpbGhvdWV0dGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vZmZzZXQvd2lnZ2xlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvYXBwZWFyYW5jZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL2FzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL2Rlc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9pbnNpZGVPdXQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9ub25lLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvcmV2ZXJzZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3BpZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3BvaW50LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvcG9pbnRSYWRpYWwuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zdGFjay5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9jaXJjbGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvY3Jvc3MuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvZGlhbW9uZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9zcXVhcmUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvc3Rhci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC90cmlhbmdsZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC93eWUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdGltZXIvc3JjL2ludGVydmFsLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvdGltZW91dC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdGltZXIvc3JjL3RpbWVyLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9hY3RpdmUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9pbnRlcnJ1cHQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvc2VsZWN0aW9uL2ludGVycnVwdC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvc2VsZWN0aW9uL3RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vYXR0ci5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9hdHRyVHdlZW4uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZGVsYXkuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZHVyYXRpb24uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZWFzZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vaW50ZXJwb2xhdGUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vb24uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vcmVtb3ZlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3NjaGVkdWxlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3NlbGVjdC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zZWxlY3RBbGwuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2VsZWN0aW9uLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3N0eWxlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3N0eWxlVHdlZW4uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdGV4dC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90cmFuc2l0aW9uLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3R3ZWVuLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDMtem9vbS9zcmMvZXZlbnQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXpvb20vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9ub2V2ZW50LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy90cmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzLXpvb20vc3JjL3pvb20uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL0Jhc2VDbGFzcy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDNwbHVzLWNvbW1vbi9lcy9zcmMvUkVTRVQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL2FjY2Vzc29yLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kM3BsdXMtY29tbW9uL2VzL3NyYy9hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL2F0dHJpemUuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL2Nsb3Nlc3QuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL2NvbmZpZ1ByZXAuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kM3BsdXMtY29tbW9uL2VzL3NyYy9lbGVtLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kM3BsdXMtY29tbW9uL2VzL3NyYy9pc09iamVjdC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDNwbHVzLWNvbW1vbi9lcy9zcmMvbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL3BhcnNlU2lkZXMuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy1jb21tb24vZXMvc3JjL3ByZWZpeC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDNwbHVzLWNvbW1vbi9lcy9zcmMvc3R5bGl6ZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDNwbHVzLWNvbW1vbi9lcy9zcmMvdXVpZC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDNwbHVzLXRleHQvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy10ZXh0L2VzL3NyYy9UZXh0Qm94LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kM3BsdXMtdGV4dC9lcy9zcmMvY29tYmluaW5nTWFya3MuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy10ZXh0L2VzL3NyYy9mb250RXhpc3RzLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kM3BsdXMtdGV4dC9lcy9zcmMvcnRsLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kM3BsdXMtdGV4dC9lcy9zcmMvc3RyaW5naWZ5LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL25vZGVfbW9kdWxlcy9kM3BsdXMtdGV4dC9lcy9zcmMvc3RyaXAuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy10ZXh0L2VzL3NyYy90ZXh0U3BsaXQuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy10ZXh0L2VzL3NyYy90ZXh0V2lkdGguanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vbm9kZV9tb2R1bGVzL2QzcGx1cy10ZXh0L2VzL3NyYy90ZXh0V3JhcC5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDNwbHVzLXRleHQvZXMvc3JjL3RpdGxlQ2FzZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9ub2RlX21vZHVsZXMvZDNwbHVzLXRleHQvZXMvc3JjL3RyaW0uanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL3NyYy9qcy9CYXNlVHJlZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9zcmMvanMvQm94ZWROb2RlU2V0dGluZ3MuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vc3JjL2pzL0JveGVkVHJlZS5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9zcmMvanMvQ2lyY2xlTm9kZVNldHRpbmdzLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL3NyYy9qcy9DaXJjbGVUcmVlLmpzIiwid2VicGFjazovL2QzLm1pdGNoVHJlZS8uL3NyYy9qcy9DdXN0b21EMy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvLi9zcmMvanMvTG9hZE9uRGVtYW5kU2V0dGluZ3MuanMiLCJ3ZWJwYWNrOi8vZDMubWl0Y2hUcmVlLy4vc3JjL2pzL05vZGVTZXR0aW5ncy5qcyIsIndlYnBhY2s6Ly9kMy5taXRjaFRyZWUvZXh0ZXJuYWwgXCJldmVudHNcIiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJnbG9iYWwiLCJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsInNsaWNlIiwibWFwIiwiYXJyYXkiLCJBcnJheSIsImEiLCJiIiwiTmFOIiwiYmlzZWN0UmlnaHQiLCJiaXNlY3RMZWZ0IiwiX2FzY2VuZGluZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX2Jpc2VjdG9yX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJhc2NlbmRpbmdCaXNlY3QiLCJyaWdodCIsImxlZnQiLCJjb21wYXJlIiwiZiIsImxlbmd0aCIsIngiLCJsbyIsImhpIiwibWlkIiwiX3BhaXJzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJ2YWx1ZXMwIiwidmFsdWVzMSIsInJlZHVjZSIsImkwIiwiaTEiLCJ2YWx1ZTAiLCJuMCIsIm4xIiwidmFsdWVzIiwiX3ZhcmlhbmNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJ2IiwiTWF0aCIsInNxcnQiLCJ2YWx1ZW9mIiwibWluIiwibWF4IiwiX2FycmF5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfYmlzZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfY29uc3RhbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9leHRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9pZGVudGl0eV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiX3JhbmdlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfdGlja3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsIl90aHJlc2hvbGRfc3R1cmdlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiZG9tYWluIiwidGhyZXNob2xkIiwiaGlzdG9ncmFtIiwiZGF0YSIsInh6IiwieDAiLCJ4MSIsInR6IiwiaXNBcnJheSIsImNlaWwiLCJzaGlmdCIsInBvcCIsImJpbiIsImJpbnMiLCJwdXNoIiwiXyIsImFyZ3VtZW50cyIsInRocmVzaG9sZHMiLCJfYmlzZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfYXNjZW5kaW5nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfYmlzZWN0b3JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9jcm9zc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiX2Rlc2NlbmRpbmdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9kZXZpYXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9leHRlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsIl9oaXN0b2dyYW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsIl90aHJlc2hvbGRfZnJlZWRtYW5EaWFjb25pc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiX3RocmVzaG9sZF9zY290dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fIiwiX3RocmVzaG9sZF9zdHVyZ2VzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fIiwiX21heF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXyIsIl9tZWFuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fIiwiX21lZGlhbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfXyIsIl9tZXJnZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfXyIsIl9taW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE1X18iLCJfcGFpcnNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE2X18iLCJfcGVybXV0ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTdfXyIsIl9xdWFudGlsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMThfXyIsIl9yYW5nZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTlfXyIsIl9zY2FuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMF9fIiwiX3NodWZmbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIxX18iLCJfc3VtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMl9fIiwiX3RpY2tzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yM19fIiwiX3RyYW5zcG9zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjRfXyIsIl92YXJpYW5jZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjVfXyIsIl96aXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI2X18iLCJfbnVtYmVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJzdW0iLCJpc05hTiIsIl9udW1iZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9xdWFudGlsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwibnVtYmVycyIsInNvcnQiLCJhcnJheXMiLCJtZXJnZWQiLCJqIiwicGFpciIsInBhaXJzIiwiaW5kZXhlcyIsInBlcm11dGVzIiwiZmxvb3IiLCJzdGFydCIsInN0b3AiLCJzdGVwIiwicmFuZ2UiLCJ4aSIsInhqIiwicmFuZG9tIiwiX251bWJlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX3F1YW50aWxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJwb3ciLCJfZGV2aWF0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJsb2ciLCJMTjIiLCJ0aWNrSW5jcmVtZW50IiwidGlja1N0ZXAiLCJlMTAiLCJlNSIsImUyIiwiY291bnQiLCJwb3dlciIsIkxOMTAiLCJlcnJvciIsInN0ZXAwIiwiYWJzIiwic3RlcDEiLCJyZXZlcnNlIiwidGlja3MiLCJpc0Zpbml0ZSIsIl9taW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIm1hdHJpeCIsInRyYW5zcG9zZSIsInJvdyIsImRlbHRhIiwibWVhbiIsIl90cmFuc3Bvc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImVudHJpZXMiLCJfbmVzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3NldF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX21hcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX2tleXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl92YWx1ZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9lbnRyaWVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJrZXlzIiwicHJlZml4IiwiTWFwIiwiZWFjaCIsInNldCIsImNvbnN0cnVjdG9yIiwiaGFzIiwidGhpcyIsInJlbW92ZSIsImNsZWFyIiwic2l6ZSIsImVtcHR5IiwiX21hcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiY3JlYXRlT2JqZWN0Iiwic2V0T2JqZWN0IiwiY3JlYXRlTWFwIiwic2V0TWFwIiwic29ydFZhbHVlcyIsInJvbGx1cCIsIm5lc3QiLCJzb3J0S2V5cyIsImFwcGx5IiwiZGVwdGgiLCJjcmVhdGVSZXN1bHQiLCJzZXRSZXN1bHQiLCJrZXlWYWx1ZSIsInZhbHVlc0J5S2V5IiwicmVzdWx0Iiwic29ydEtleSIsImsiLCJvcmRlciIsIlNldCIsInByb3RvIiwiYWRkIiwiQ29sb3IiLCJkYXJrZXIiLCJicmlnaHRlciIsImNvbG9yIiwicmdiQ29udmVydCIsInJnYiIsIlJnYiIsImhzbENvbnZlcnQiLCJoc2wiLCJfZGVmaW5lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJyZUkiLCJyZU4iLCJyZVAiLCJyZUhleDMiLCJyZUhleDYiLCJyZVJnYkludGVnZXIiLCJSZWdFeHAiLCJyZVJnYlBlcmNlbnQiLCJyZVJnYmFJbnRlZ2VyIiwicmVSZ2JhUGVyY2VudCIsInJlSHNsUGVyY2VudCIsInJlSHNsYVBlcmNlbnQiLCJuYW1lZCIsImFsaWNlYmx1ZSIsImFudGlxdWV3aGl0ZSIsImFxdWEiLCJhcXVhbWFyaW5lIiwiYXp1cmUiLCJiZWlnZSIsImJpc3F1ZSIsImJsYWNrIiwiYmxhbmNoZWRhbG1vbmQiLCJibHVlIiwiYmx1ZXZpb2xldCIsImJyb3duIiwiYnVybHl3b29kIiwiY2FkZXRibHVlIiwiY2hhcnRyZXVzZSIsImNob2NvbGF0ZSIsImNvcmFsIiwiY29ybmZsb3dlcmJsdWUiLCJjb3Juc2lsayIsImNyaW1zb24iLCJjeWFuIiwiZGFya2JsdWUiLCJkYXJrY3lhbiIsImRhcmtnb2xkZW5yb2QiLCJkYXJrZ3JheSIsImRhcmtncmVlbiIsImRhcmtncmV5IiwiZGFya2toYWtpIiwiZGFya21hZ2VudGEiLCJkYXJrb2xpdmVncmVlbiIsImRhcmtvcmFuZ2UiLCJkYXJrb3JjaGlkIiwiZGFya3JlZCIsImRhcmtzYWxtb24iLCJkYXJrc2VhZ3JlZW4iLCJkYXJrc2xhdGVibHVlIiwiZGFya3NsYXRlZ3JheSIsImRhcmtzbGF0ZWdyZXkiLCJkYXJrdHVycXVvaXNlIiwiZGFya3Zpb2xldCIsImRlZXBwaW5rIiwiZGVlcHNreWJsdWUiLCJkaW1ncmF5IiwiZGltZ3JleSIsImRvZGdlcmJsdWUiLCJmaXJlYnJpY2siLCJmbG9yYWx3aGl0ZSIsImZvcmVzdGdyZWVuIiwiZnVjaHNpYSIsImdhaW5zYm9ybyIsImdob3N0d2hpdGUiLCJnb2xkIiwiZ29sZGVucm9kIiwiZ3JheSIsImdyZWVuIiwiZ3JlZW55ZWxsb3ciLCJncmV5IiwiaG9uZXlkZXciLCJob3RwaW5rIiwiaW5kaWFucmVkIiwiaW5kaWdvIiwiaXZvcnkiLCJraGFraSIsImxhdmVuZGVyIiwibGF2ZW5kZXJibHVzaCIsImxhd25ncmVlbiIsImxlbW9uY2hpZmZvbiIsImxpZ2h0Ymx1ZSIsImxpZ2h0Y29yYWwiLCJsaWdodGN5YW4iLCJsaWdodGdvbGRlbnJvZHllbGxvdyIsImxpZ2h0Z3JheSIsImxpZ2h0Z3JlZW4iLCJsaWdodGdyZXkiLCJsaWdodHBpbmsiLCJsaWdodHNhbG1vbiIsImxpZ2h0c2VhZ3JlZW4iLCJsaWdodHNreWJsdWUiLCJsaWdodHNsYXRlZ3JheSIsImxpZ2h0c2xhdGVncmV5IiwibGlnaHRzdGVlbGJsdWUiLCJsaWdodHllbGxvdyIsImxpbWUiLCJsaW1lZ3JlZW4iLCJsaW5lbiIsIm1hZ2VudGEiLCJtYXJvb24iLCJtZWRpdW1hcXVhbWFyaW5lIiwibWVkaXVtYmx1ZSIsIm1lZGl1bW9yY2hpZCIsIm1lZGl1bXB1cnBsZSIsIm1lZGl1bXNlYWdyZWVuIiwibWVkaXVtc2xhdGVibHVlIiwibWVkaXVtc3ByaW5nZ3JlZW4iLCJtZWRpdW10dXJxdW9pc2UiLCJtZWRpdW12aW9sZXRyZWQiLCJtaWRuaWdodGJsdWUiLCJtaW50Y3JlYW0iLCJtaXN0eXJvc2UiLCJtb2NjYXNpbiIsIm5hdmFqb3doaXRlIiwibmF2eSIsIm9sZGxhY2UiLCJvbGl2ZSIsIm9saXZlZHJhYiIsIm9yYW5nZSIsIm9yYW5nZXJlZCIsIm9yY2hpZCIsInBhbGVnb2xkZW5yb2QiLCJwYWxlZ3JlZW4iLCJwYWxldHVycXVvaXNlIiwicGFsZXZpb2xldHJlZCIsInBhcGF5YXdoaXAiLCJwZWFjaHB1ZmYiLCJwZXJ1IiwicGluayIsInBsdW0iLCJwb3dkZXJibHVlIiwicHVycGxlIiwicmViZWNjYXB1cnBsZSIsInJlZCIsInJvc3licm93biIsInJveWFsYmx1ZSIsInNhZGRsZWJyb3duIiwic2FsbW9uIiwic2FuZHlicm93biIsInNlYWdyZWVuIiwic2Vhc2hlbGwiLCJzaWVubmEiLCJzaWx2ZXIiLCJza3libHVlIiwic2xhdGVibHVlIiwic2xhdGVncmF5Iiwic2xhdGVncmV5Iiwic25vdyIsInNwcmluZ2dyZWVuIiwic3RlZWxibHVlIiwidGFuIiwidGVhbCIsInRoaXN0bGUiLCJ0b21hdG8iLCJ0dXJxdW9pc2UiLCJ2aW9sZXQiLCJ3aGVhdCIsIndoaXRlIiwid2hpdGVzbW9rZSIsInllbGxvdyIsInllbGxvd2dyZWVuIiwiZm9ybWF0IiwidHJpbSIsInRvTG93ZXJDYXNlIiwiZXhlYyIsInBhcnNlSW50IiwicmdibiIsInJnYmEiLCJoc2xhIiwiZyIsIm9wYWNpdHkiLCJoZXgiLCJyb3VuZCIsInRvU3RyaW5nIiwiaCIsIkhzbCIsImhzbDJyZ2IiLCJtMSIsIm0yIiwiZGlzcGxheWFibGUiLCJjdWJlaGVsaXgiLCJDdWJlaGVsaXgiLCJfY29sb3JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9tYXRoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJBIiwiQiIsIkMiLCJEIiwiRSIsIkVEIiwiRUIiLCJCQ19EQSIsImJsIiwiYXRhbjIiLCJjdWJlaGVsaXhDb252ZXJ0IiwiY29zaCIsImNvcyIsInNpbmgiLCJzaW4iLCJleHRlbmQiLCJwYXJlbnQiLCJkZWZpbml0aW9uIiwiX2NvbG9yX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfbGFiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfY3ViZWhlbGl4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJsYWIiLCJMYWIiLCJsY2giLCJoY2wiLCJIY2wiLCJYbiIsIlluIiwiWm4iLCJ0MCIsInQxIiwidDIiLCJ0MyIsImxhYkNvbnZlcnQiLCJ6IiwicmdiMmxyZ2IiLCJ5IiwieHl6MmxhYiIsImxhYjJ4eXoiLCJscmdiMnJnYiIsImhjbENvbnZlcnQiLCJkZWcycmFkIiwicmFkMmRlZyIsIlBJIiwibm9vcCIsImRpc3BhdGNoIiwiRXJyb3IiLCJEaXNwYXRjaCIsInR5cGUiLCJjYWxsYmFjayIsImNvbmNhdCIsIm9uIiwidHlwZW5hbWUiLCJ0eXBlcyIsIlQiLCJzcGxpdCIsImluZGV4T2YiLCJjb3B5IiwidGhhdCIsImFyZ3MiLCJfZGlzcGF0Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImQzX2Rpc3BhdGNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJkM19zZWxlY3Rpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9ub2RyYWdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9ub2V2ZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJfY29uc3RhbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9ldmVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiZGVmYXVsdEZpbHRlciIsImJ1dHRvbiIsImRlZmF1bHRDb250YWluZXIiLCJwYXJlbnROb2RlIiwiZGVmYXVsdFN1YmplY3QiLCJkZWZhdWx0VG91Y2hhYmxlIiwibW91c2Vkb3dueCIsIm1vdXNlZG93bnkiLCJtb3VzZW1vdmluZyIsInRvdWNoZW5kaW5nIiwiZmlsdGVyIiwiY29udGFpbmVyIiwic3ViamVjdCIsInRvdWNoYWJsZSIsImdlc3R1cmVzIiwibGlzdGVuZXJzIiwiYWN0aXZlIiwiY2xpY2tEaXN0YW5jZTIiLCJkcmFnIiwic2VsZWN0aW9uIiwibW91c2Vkb3duZWQiLCJ0b3VjaHN0YXJ0ZWQiLCJ0b3VjaG1vdmVkIiwidG91Y2hlbmRlZCIsInN0eWxlIiwiZ2VzdHVyZSIsImJlZm9yZXN0YXJ0IiwidmlldyIsIm1vdXNlbW92ZWQiLCJtb3VzZXVwcGVkIiwiY2xpZW50WCIsImNsaWVudFkiLCJkeCIsImR5IiwibW91c2UiLCJ0b3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJpZGVudGlmaWVyIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImlkIiwicG9pbnQiLCJzdWJsaXN0ZW5lcnMiLCJwMCIsImNsaWNrRGlzdGFuY2UiLCJEcmFnRXZlbnQiLCJ0YXJnZXQiLCJfZHJhZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX25vZHJhZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwieWVzZHJhZyIsImQzX3NlbGVjdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX25vZXZlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIm5vY2xpY2siLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsIk1velVzZXJTZWxlY3QiLCJfX25vc2VsZWN0Iiwibm9wcm9wYWdhdGlvbiIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwiYmFja0luIiwiYmFja091dCIsImJhY2tJbk91dCIsImN1c3RvbSIsIm92ZXJzaG9vdCIsImJvdW5jZUluIiwiYm91bmNlT3V0IiwiYm91bmNlSW5PdXQiLCJiMSIsImIyIiwiYjMiLCJiNCIsImI1IiwiYjYiLCJiNyIsImI4IiwiYjkiLCJiMCIsImNpcmNsZUluIiwiY2lyY2xlT3V0IiwiY2lyY2xlSW5PdXQiLCJjdWJpY0luIiwiY3ViaWNPdXQiLCJjdWJpY0luT3V0IiwiZWxhc3RpY0luIiwiZWxhc3RpY091dCIsImVsYXN0aWNJbk91dCIsInRhdSIsImFzaW4iLCJhbXBsaXR1ZGUiLCJwZXJpb2QiLCJleHBJbiIsImV4cE91dCIsImV4cEluT3V0IiwiX2xpbmVhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3F1YWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9jdWJpY19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX3BvbHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9zaW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9leHBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9jaXJjbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsIl9ib3VuY2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsIl9iYWNrX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJfZWxhc3RpY19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fIiwibGluZWFyIiwicG9seUluIiwicG9seU91dCIsInBvbHlJbk91dCIsImUiLCJleHBvbmVudCIsInF1YWRJbiIsInF1YWRPdXQiLCJxdWFkSW5PdXQiLCJzaW5JbiIsInNpbk91dCIsInNpbkluT3V0IiwicGkiLCJoYWxmUGkiLCJvcHRpb25hbCIsInJlcXVpcmVkIiwic2h1ZmZsZSIsImRlZmF1bHRTZXBhcmF0aW9uIiwibWVhblhSZWR1Y2UiLCJtYXhZUmVkdWNlIiwic2VwYXJhdGlvbiIsIm5vZGVTaXplIiwiY2x1c3RlciIsInByZXZpb3VzTm9kZSIsImVhY2hBZnRlciIsIm5vZGUiLCJjaGlsZHJlbiIsIm1lYW5YIiwibWF4WSIsImxlYWZMZWZ0IiwibGVhZlJpZ2h0IiwiY29uc3RhbnRaZXJvIiwibm9kZXMiLCJjdXJyZW50IiwibmV4dCIsImhpZXJhcmNoeSIsImNvbXB1dGVIZWlnaHQiLCJOb2RlIiwiX2NvdW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfZWFjaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX2VhY2hCZWZvcmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9lYWNoQWZ0ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9zdW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9zb3J0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfcGF0aF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fIiwiX2FuY2VzdG9yc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiX2Rlc2NlbmRhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJfbGVhdmVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18iLCJfbGlua3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX18iLCJjaGlsZCIsImNoaWxkcyIsInZhbHVlZCIsImRlZmF1bHRDaGlsZHJlbiIsImVhY2hCZWZvcmUiLCJjb3B5RGF0YSIsImhlaWdodCIsInBhdGgiLCJhbmNlc3RvcnMiLCJkZXNjZW5kYW50cyIsImxlYXZlcyIsImxpbmtzIiwic291cmNlIiwiZW5kIiwiYW5jZXN0b3IiLCJhTm9kZXMiLCJiTm9kZXMiLCJsZWFzdENvbW1vbkFuY2VzdG9yIiwic3BsaWNlIiwiX2NsdXN0ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9oaWVyYXJjaHlfaW5kZXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9wYWNrX2luZGV4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJfcGFja19zaWJsaW5nc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiX3BhY2tfZW5jbG9zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiX3BhcnRpdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiX3N0cmF0aWZ5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJfdHJlZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiX3RyZWVtYXBfaW5kZXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyIsIl90cmVlbWFwX2JpbmFyeV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fIiwiX3RyZWVtYXBfZGljZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIl90cmVlbWFwX3NsaWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fIiwiX3RyZWVtYXBfc2xpY2VEaWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fIiwiX3RyZWVtYXBfc3F1YXJpZnlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX18iLCJfdHJlZW1hcF9yZXNxdWFyaWZ5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNF9fIiwiZXh0ZW5kQmFzaXMiLCJlbmNsb3Nlc1dlYWtBbGwiLCJlbmNsb3Nlc05vdCIsImVuY2xvc2VCYXNpczIiLCJlbmNsb3NlQmFzaXMzIiwiZHIiLCJlbmNsb3Nlc1dlYWsiLCJlbmNsb3NlQmFzaXMiLCJ5MSIsInIxIiwieDIiLCJ5MiIsInIyIiwieDIxIiwieTIxIiwicjIxIiwieDMiLCJ5MyIsInIzIiwiYTIiLCJhMyIsImMyIiwiYzMiLCJkMSIsImQyIiwiZDMiLCJhYiIsInhhIiwieGIiLCJ5YSIsInliIiwiY2lyY2xlcyIsIl9zaWJsaW5nc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX2FjY2Vzc29yc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiZGVmYXVsdFJhZGl1cyIsInJhZGl1c0xlYWYiLCJyYWRpdXMiLCJwYWNrQ2hpbGRyZW4iLCJwYWRkaW5nIiwidHJhbnNsYXRlQ2hpbGQiLCJwYWNrIiwicGFja0VuY2xvc2UiLCJfZW5jbG9zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwicGxhY2UiLCJpbnRlcnNlY3RzIiwic2NvcmUiLCJjaXJjbGUiLCJwcmV2aW91cyIsImFhIiwiY2EiLCJzaiIsInNrIiwiX3RyZWVtYXBfcm91bmRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl90cmVlbWFwX2RpY2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInBhcnRpdGlvbiIsInkwIiwicG9zaXRpb25Ob2RlIiwiX2FjY2Vzc29yc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwia2V5UHJlZml4IiwicHJlcm9vdCIsImFtYmlndW91cyIsImRlZmF1bHRJZCIsImRlZmF1bHRQYXJlbnRJZCIsInBhcmVudElkIiwic3RyYXRpZnkiLCJub2RlSWQiLCJub2RlS2V5Iiwibm9kZUJ5S2V5IiwiX2hpZXJhcmNoeV9pbmRleF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwibmV4dExlZnQiLCJuZXh0UmlnaHQiLCJtb3ZlU3VidHJlZSIsIndtIiwid3AiLCJjaGFuZ2UiLCJuZXh0QW5jZXN0b3IiLCJ2aW0iLCJUcmVlTm9kZSIsInRyZWUiLCJ0cmVlUm9vdCIsImZpcnN0V2FsayIsInNlY29uZFdhbGsiLCJzaXplTm9kZSIsImJvdHRvbSIsInR4Iiwia3giLCJreSIsInNpYmxpbmdzIiwidyIsImV4ZWN1dGVTaGlmdHMiLCJtaWRwb2ludCIsInZpcCIsInZvcCIsInZvbSIsInNpcCIsInNvcCIsInNpbSIsInNvbSIsImFwcG9ydGlvbiIsInN1bXMiLCJ2YWx1ZU9mZnNldCIsInZhbHVlVGFyZ2V0IiwidmFsdWVMZWZ0IiwidmFsdWVSaWdodCIsInhrIiwieWsiLCJfcm91bmRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9zcXVhcmlmeV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX2FjY2Vzc29yc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX2NvbnN0YW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJ0aWxlIiwicGFkZGluZ1N0YWNrIiwicGFkZGluZ0lubmVyIiwicGFkZGluZ1RvcCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsInRyZWVtYXAiLCJwYWRkaW5nT3V0ZXIiLCJfZGljZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3NsaWNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfc3F1YXJpZnlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsInJhdGlvIiwicmVzcXVhcmlmeSIsInJvd3MiLCJfc3F1YXJpZnkiLCJkaWNlIiwicGhpIiwic3F1YXJpZnlSYXRpbyIsIm5vZGVWYWx1ZSIsInN1bVZhbHVlIiwibWluVmFsdWUiLCJtYXhWYWx1ZSIsIm5ld1JhdGlvIiwibWluUmF0aW8iLCJhbHBoYSIsImJldGEiLCJzcXVhcmlmeSIsIl92YWx1ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwibmIiLCJuYSIsImJhc2lzIiwidjAiLCJ2MSIsInYyIiwidjMiLCJfYmFzaXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImh1ZSIsImdhbW1hIiwibm9nYW1tYSIsIl9jb25zdGFudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiZXhwb25lbnRpYWwiLCJjdWJlaGVsaXhMb25nIiwiZDNfY29sb3JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImN1YmVoZWxpeEdhbW1hIiwiRGF0ZSIsInNldFRpbWUiLCJoY2xMb25nIiwiaHNsTG9uZyIsIl9hcnJheV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX2Jhc2lzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJfYmFzaXNDbG9zZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9kYXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJfZGlzY3JldGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9odWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsIl9udW1iZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsIl9vYmplY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyIsIl9yb3VuZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fIiwiX3N0cmluZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIl90cmFuc2Zvcm1faW5kZXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX18iLCJfem9vbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXyIsIl9yZ2JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX18iLCJfaHNsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNF9fIiwiX2xhYl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTVfXyIsIl9oY2xfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE2X18iLCJfY3ViZWhlbGl4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xN19fIiwiX3BpZWNld2lzZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMThfXyIsIl9xdWFudGl6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTlfXyIsInBpZWNld2lzZSIsImludGVycG9sYXRlIiwiSSIsImludGVycG9sYXRvciIsInNhbXBsZXMiLCJyZ2JCYXNpcyIsInJnYkJhc2lzQ2xvc2VkIiwiX2Jhc2lzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfYmFzaXNDbG9zZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9jb2xvcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwicmdiU3BsaW5lIiwic3BsaW5lIiwiY29sb3JzIiwicmdiR2FtbWEiLCJyZUEiLCJyZUIiLCJhbSIsImJtIiwiYnMiLCJiaSIsImxhc3RJbmRleCIsInEiLCJpbmRleCIsIm9uZSIsInplcm8iLCJqb2luIiwiaWRlbnRpdHkiLCJkZWdyZWVzIiwidHJhbnNsYXRlWCIsInRyYW5zbGF0ZVkiLCJyb3RhdGUiLCJza2V3WCIsInNjYWxlWCIsInNjYWxlWSIsImF0YW4iLCJpbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcyIsImludGVycG9sYXRlVHJhbnNmb3JtU3ZnIiwiX3BhcnNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJpbnRlcnBvbGF0ZVRyYW5zZm9ybSIsInBhcnNlIiwicHhDb21tYSIsInB4UGFyZW4iLCJkZWdQYXJlbiIsInRyYW5zbGF0ZSIsInNjYWxlIiwicGFyc2VDc3MiLCJwYXJzZVN2ZyIsImNzc05vZGUiLCJjc3NSb290IiwiY3NzVmlldyIsInN2Z05vZGUiLCJfZGVjb21wb3NlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJjcmVhdGVFbGVtZW50IiwiZGVmYXVsdFZpZXciLCJ0cmFuc2Zvcm0iLCJnZXRDb21wdXRlZFN0eWxlIiwiYXBwZW5kQ2hpbGQiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicmVtb3ZlQ2hpbGQiLCJjcmVhdGVFbGVtZW50TlMiLCJzZXRBdHRyaWJ1dGUiLCJiYXNlVmFsIiwiY29uc29saWRhdGUiLCJfcmdiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfYXJyYXlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9kYXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJfbnVtYmVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJfb2JqZWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfc3RyaW5nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJfY29uc3RhbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsInZhbHVlT2YiLCJyaG8iLCJTUVJUMiIsImV4cCIsInAxIiwiUyIsInV4MCIsInV5MCIsIncwIiwidXgxIiwidXkxIiwidzEiLCJyMCIsImNvc2hyMCIsInUiLCJkdXJhdGlvbiIsIl9wYXRoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJ0YXVFcHNpbG9uIiwiUGF0aCIsIl94MCIsIl95MCIsIl94MSIsIl95MSIsIm1vdmVUbyIsImNsb3NlUGF0aCIsImxpbmVUbyIsInF1YWRyYXRpY0N1cnZlVG8iLCJiZXppZXJDdXJ2ZVRvIiwiYXJjVG8iLCJ4MDEiLCJ5MDEiLCJsMDFfMiIsIngyMCIsInkyMCIsImwyMV8yIiwibDIwXzIiLCJsMjEiLCJsMDEiLCJhY29zIiwidDAxIiwidDIxIiwiYXJjIiwiYTAiLCJhMSIsImNjdyIsImN3IiwiZGEiLCJyZWN0IiwiX2NyZWF0b3JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9zZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9uYW1lc3BhY2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9uYW1lc3BhY2VzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJmdWxsbmFtZSIsImxvY2FsIiwib3duZXJEb2N1bWVudCIsInNwYWNlIiwidXJpIiwibmFtZXNwYWNlVVJJIiwiX2NyZWF0ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX2NyZWF0b3JfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9sb2NhbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX21hdGNoZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9tb3VzZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiX25hbWVzcGFjZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiX25hbWVzcGFjZXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsIl9wb2ludF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiX3NlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiX3NlbGVjdEFsbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fIiwiX3NlbGVjdGlvbl9pbmRleF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIl9zZWxlY3Rvcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXyIsIl9zZWxlY3RvckFsbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXyIsIl9zZWxlY3Rpb25fc3R5bGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX18iLCJfdG91Y2hfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE0X18iLCJfdG91Y2hlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTVfXyIsIl93aW5kb3dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE2X18iLCJfc2VsZWN0aW9uX29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xN19fIiwibmV4dElkIiwiTG9jYWwiLCJzZWxlY3RvciIsIm1hdGNoZXMiLCJfc291cmNlRXZlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9wb2ludF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiZXZlbnQiLCJfbmFtZXNwYWNlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwieGh0bWwiLCJzdmciLCJ4bGluayIsInhtbCIsInhtbG5zIiwib3duZXJTVkdFbGVtZW50IiwiY3JlYXRlU1ZHUG9pbnQiLCJtYXRyaXhUcmFuc2Zvcm0iLCJnZXRTY3JlZW5DVE0iLCJpbnZlcnNlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50TGVmdCIsInRvcCIsImNsaWVudFRvcCIsIl9zZWxlY3Rpb25faW5kZXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInF1ZXJ5U2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2VsZWN0IiwiZ2V0QXR0cmlidXRlTlMiLCJnZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwiY2xhc3NBcnJheSIsInN0cmluZyIsImNsYXNzTGlzdCIsIkNsYXNzTGlzdCIsIl9ub2RlIiwiX25hbWVzIiwiY2xhc3NlZEFkZCIsIm5hbWVzIiwibGlzdCIsImNsYXNzZWRSZW1vdmUiLCJjb250YWlucyIsInNlbGVjdGlvbl9jbG9uZVNoYWxsb3ciLCJpbnNlcnRCZWZvcmUiLCJjbG9uZU5vZGUiLCJuZXh0U2libGluZyIsInNlbGVjdGlvbl9jbG9uZURlZXAiLCJkZWVwIiwiX2luZGV4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfZW50ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsImJpbmRJbmRleCIsImdyb3VwIiwiZW50ZXIiLCJ1cGRhdGUiLCJleGl0IiwiZ3JvdXBMZW5ndGgiLCJkYXRhTGVuZ3RoIiwiX19kYXRhX18iLCJiaW5kS2V5Iiwibm9kZUJ5S2V5VmFsdWUiLCJrZXlWYWx1ZXMiLCJwYXJlbnRzIiwiX3BhcmVudHMiLCJncm91cHMiLCJfZ3JvdXBzIiwiZW50ZXJHcm91cCIsInVwZGF0ZUdyb3VwIiwiX25leHQiLCJfZW50ZXIiLCJfZXhpdCIsIl93aW5kb3dfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImRpc3BhdGNoRXZlbnQiLCJwYXJhbXMiLCJ3aW5kb3ciLCJDdXN0b21FdmVudCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJkZXRhaWwiLCJFbnRlck5vZGUiLCJfc3BhcnNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfaW5kZXhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsImRhdHVtIiwiX3BhcmVudCIsIl9tYXRjaGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJtYXRjaCIsInN1Ymdyb3VwcyIsInN1Ymdyb3VwIiwiaHRtbFJlbW92ZSIsImlubmVySFRNTCIsIlNlbGVjdGlvbiIsIl9zZWxlY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9zZWxlY3RBbGxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9maWx0ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9kYXRhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJfZW50ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9leGl0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfam9pbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fIiwiX21lcmdlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18iLCJfb3JkZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyIsIl9zb3J0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18iLCJfY2FsbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIl9ub2Rlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXyIsIl9ub2RlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fIiwiX3NpemVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX18iLCJfZW1wdHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE0X18iLCJfZWFjaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTVfXyIsIl9hdHRyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNl9fIiwiX3N0eWxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xN19fIiwiX3Byb3BlcnR5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xOF9fIiwiX2NsYXNzZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE5X18iLCJfdGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjBfXyIsIl9odG1sX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMV9fIiwiX3JhaXNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMl9fIiwiX2xvd2VyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yM19fIiwiX2FwcGVuZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjRfXyIsIl9pbnNlcnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI1X18iLCJfcmVtb3ZlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yNl9fIiwiX2Nsb25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yN19fIiwiX2RhdHVtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOF9fIiwiX29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOV9fIiwiX2Rpc3BhdGNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zMF9fIiwic2VsZWN0QWxsIiwibWVyZ2UiLCJhdHRyIiwiY2xhc3NlZCIsInRleHQiLCJodG1sIiwicmFpc2UiLCJsb3dlciIsImFwcGVuZCIsImluc2VydCIsImNsb25lIiwiX3NlbGVjdG9yX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJjb25zdGFudE51bGwiLCJiZWZvcmUiLCJvbmVudGVyIiwib251cGRhdGUiLCJvbmV4aXQiLCJwcmV2aW91c1NpYmxpbmciLCJmaXJzdENoaWxkIiwiZ3JvdXBzMCIsImdyb3VwczEiLCJtMCIsIm1lcmdlcyIsImdyb3VwMCIsImdyb3VwMSIsImN1c3RvbUV2ZW50IiwiZmlsdGVyRXZlbnRzIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJmaWx0ZXJDb250ZXh0TGlzdGVuZXIiLCJsaXN0ZW5lciIsImNvbnRleHRMaXN0ZW5lciIsInJlbGF0ZWQiLCJyZWxhdGVkVGFyZ2V0IiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJldmVudDEiLCJldmVudDAiLCJvblJlbW92ZSIsIl9fb24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2FwdHVyZSIsIm9uQWRkIiwid3JhcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzb3VyY2VFdmVudCIsInR5cGVuYW1lcyIsInBhcnNlVHlwZW5hbWVzIiwic3Vibm9kZSIsIl9zZWxlY3RvckFsbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiYXNjZW5kaW5nIiwiY29tcGFyZU5vZGUiLCJzb3J0Z3JvdXBzIiwic29ydGdyb3VwIiwic3R5bGVWYWx1ZSIsInByaW9yaXR5IiwicmVtb3ZlUHJvcGVydHkiLCJzZXRQcm9wZXJ0eSIsInRleHRSZW1vdmUiLCJ0ZXh0Q29udGVudCIsIm5vbmUiLCJfc2VsZWN0aW9uX29uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJ0b3VjaCIsInBvaW50cyIsImQzX3BhdGhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9jb25zdGFudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiYXJjSW5uZXJSYWRpdXMiLCJpbm5lclJhZGl1cyIsImFyY091dGVyUmFkaXVzIiwib3V0ZXJSYWRpdXMiLCJhcmNTdGFydEFuZ2xlIiwic3RhcnRBbmdsZSIsImFyY0VuZEFuZ2xlIiwiZW5kQW5nbGUiLCJhcmNQYWRBbmdsZSIsInBhZEFuZ2xlIiwiY29ybmVyVGFuZ2VudHMiLCJyYyIsIm94Iiwib3kiLCJ4MTEiLCJ5MTEiLCJ4MTAiLCJ5MTAiLCJ4MDAiLCJ5MDAiLCJjeDAiLCJjeTAiLCJjeDEiLCJjeTEiLCJkeDAiLCJkeTAiLCJkeDEiLCJkeTEiLCJjeCIsImN5IiwiY29ybmVyUmFkaXVzIiwicGFkUmFkaXVzIiwiY29udGV4dCIsImJ1ZmZlciIsImEwMSIsImExMSIsImEwMCIsImExMCIsImRhMCIsImRhMSIsImFwIiwicnAiLCJyYzAiLCJyYzEiLCJvYyIsIngzMiIsInkzMiIsImludGVyc2VjdCIsImF4IiwiYXkiLCJieCIsImJ5Iiwia2MiLCJsYyIsImNlbnRyb2lkIiwiX2N1cnZlX2xpbmVhcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX2xpbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9wb2ludF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiZGVmaW5lZCIsImN1cnZlIiwib3V0cHV0IiwiYXJlYSIsImRlZmluZWQwIiwieDB6IiwieTB6IiwiYXJlYVN0YXJ0IiwibGluZVN0YXJ0IiwibGluZUVuZCIsImFyZWFFbmQiLCJhcmVhbGluZSIsImxpbmVYMCIsImxpbmVZMCIsImxpbmVZMSIsImxpbmVYMSIsIl9jdXJ2ZV9yYWRpYWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9hcmVhX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfbGluZVJhZGlhbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiYW5nbGUiLCJsaW5lU3RhcnRBbmdsZSIsImxpbmVFbmRBbmdsZSIsImxpbmVJbm5lclJhZGl1cyIsImxpbmVPdXRlclJhZGl1cyIsIl9jdXJ2ZSIsIl9jb250ZXh0IiwiQmFzaXMiLCJfbGluZSIsIl9wb2ludCIsIl9ub29wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJCYXNpc0Nsb3NlZCIsIl94MiIsIl94MyIsIl94NCIsIl95MiIsIl95MyIsIl95NCIsIkJhc2lzT3BlbiIsIkJ1bmRsZSIsIl9iYXNpcyIsIl9iZXRhIiwiX3giLCJfeSIsImJ1bmRsZSIsIl9rIiwiQ2FyZGluYWwiLCJ0ZW5zaW9uIiwiY2FyZGluYWwiLCJDYXJkaW5hbENsb3NlZCIsIl9jYXJkaW5hbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX3g1IiwiX3k1IiwiQ2FyZGluYWxPcGVuIiwiX2NhcmRpbmFsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfbWF0aF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX2wwMV9hIiwiX2wwMV8yYSIsIl9sMTJfYSIsIl9sMTJfMmEiLCJfbDIzX2EiLCJfbDIzXzJhIiwiQ2F0bXVsbFJvbSIsIl9hbHBoYSIsIngyMyIsInkyMyIsImNhdG11bGxSb20iLCJfY2FyZGluYWxDbG9zZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9ub29wX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfY2F0bXVsbFJvbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiQ2F0bXVsbFJvbUNsb3NlZCIsIl9jYXJkaW5hbE9wZW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9jYXRtdWxsUm9tX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJDYXRtdWxsUm9tT3BlbiIsIkxpbmVhciIsIkxpbmVhckNsb3NlZCIsInNpZ24iLCJzbG9wZTMiLCJoMCIsImgxIiwiczAiLCJzMSIsInNsb3BlMiIsIk1vbm90b25lWCIsIk1vbm90b25lWSIsIlJlZmxlY3RDb250ZXh0IiwibW9ub3RvbmVYIiwibW9ub3RvbmVZIiwiX3QwIiwiTmF0dXJhbCIsImNvbnRyb2xQb2ludHMiLCJweCIsInB5IiwiY3VydmVSYWRpYWxMaW5lYXIiLCJjdXJ2ZVJhZGlhbCIsIlJhZGlhbCIsInJhZGlhbCIsIlN0ZXAiLCJfdCIsInN0ZXBCZWZvcmUiLCJzdGVwQWZ0ZXIiLCJfYXJjX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfbGluZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX3BpZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiX2FyZWFSYWRpYWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9saW5lUmFkaWFsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfcG9pbnRSYWRpYWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsIl9saW5rX2luZGV4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18iLCJfc3ltYm9sX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJfc3ltYm9sX2NpcmNsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fIiwiX3N5bWJvbF9jcm9zc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIl9zeW1ib2xfZGlhbW9uZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXyIsIl9zeW1ib2xfc3F1YXJlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fIiwiX3N5bWJvbF9zdGFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fIiwiX3N5bWJvbF90cmlhbmdsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfXyIsIl9zeW1ib2xfd3llX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNV9fIiwiX2N1cnZlX2Jhc2lzQ2xvc2VkX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNl9fIiwiX2N1cnZlX2Jhc2lzT3Blbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTdfXyIsIl9jdXJ2ZV9iYXNpc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMThfXyIsIl9jdXJ2ZV9idW5kbGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE5X18iLCJfY3VydmVfY2FyZGluYWxDbG9zZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIwX18iLCJfY3VydmVfY2FyZGluYWxPcGVuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMV9fIiwiX2N1cnZlX2NhcmRpbmFsX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yMl9fIiwiX2N1cnZlX2NhdG11bGxSb21DbG9zZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzIzX18iLCJfY3VydmVfY2F0bXVsbFJvbU9wZW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI0X18iLCJfY3VydmVfY2F0bXVsbFJvbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMjVfXyIsIl9jdXJ2ZV9saW5lYXJDbG9zZWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI2X18iLCJfY3VydmVfbGluZWFyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yN19fIiwiX2N1cnZlX21vbm90b25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yOF9fIiwiX2N1cnZlX25hdHVyYWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzI5X18iLCJfY3VydmVfc3RlcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzBfXyIsIl9zdGFja19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzFfXyIsIl9vZmZzZXRfZXhwYW5kX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zMl9fIiwiX29mZnNldF9kaXZlcmdpbmdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzMzX18iLCJfb2Zmc2V0X25vbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM0X18iLCJfb2Zmc2V0X3NpbGhvdWV0dGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzM1X18iLCJfb2Zmc2V0X3dpZ2dsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzZfXyIsIl9vcmRlcl9hcHBlYXJhbmNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zN19fIiwiX29yZGVyX2FzY2VuZGluZ19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMzhfXyIsIl9vcmRlcl9kZXNjZW5kaW5nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zOV9fIiwiX29yZGVyX2luc2lkZU91dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNDBfXyIsIl9vcmRlcl9ub25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80MV9fIiwiX29yZGVyX3JldmVyc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzQyX18iLCJfcG9pbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsImxpbmUiLCJsaW5lUmFkaWFsIiwiX2xpbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsImxpbmtIb3Jpem9udGFsIiwibGlua1ZlcnRpY2FsIiwibGlua1JhZGlhbCIsIl9wb2ludFJhZGlhbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwibGlua1NvdXJjZSIsImxpbmtUYXJnZXQiLCJsaW5rIiwiYXJndiIsImN1cnZlSG9yaXpvbnRhbCIsImN1cnZlVmVydGljYWwiLCJwMiIsInAzIiwiZXBzaWxvbiIsInNlcmllcyIsInlwIiwieW4iLCJfbm9uZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiczIiLCJzaSIsInNpajAiLCJzMyIsInBlYWsiLCJ2aSIsInZqIiwiSW5maW5pdHkiLCJwZWFrcyIsIl9hcHBlYXJhbmNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJ0b3BzIiwiYm90dG9tcyIsIl9kZXNjZW5kaW5nX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfaWRlbnRpdHlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9tYXRoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJwaWUiLCJhcmNzIiwicGEiLCJfb2Zmc2V0X25vbmVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9vcmRlcl9ub25lX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJzdGFja1ZhbHVlIiwib2Zmc2V0Iiwic3RhY2siLCJveiIsImt6Iiwic3oiLCJzaWoiLCJraSIsInN5bWJvbHMiLCJfc3ltYm9sX2NpcmNsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX3N5bWJvbF9jcm9zc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX3N5bWJvbF9kaWFtb25kX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJfc3ltYm9sX3N0YXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9zeW1ib2xfc3F1YXJlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfc3ltYm9sX3RyaWFuZ2xlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJfc3ltYm9sX3d5ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiX2NvbnN0YW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18iLCJzeW1ib2wiLCJkcmF3IiwidGFuMzAiLCJ0YW4zMF8yIiwia3IiLCJzcXJ0MyIsIl90aW1lcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3RpbWVvdXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9pbnRlcnZhbF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiZGVsYXkiLCJ0aW1lIiwidG90YWwiLCJyZXN0YXJ0IiwidGljayIsImVsYXBzZWQiLCJub3ciLCJUaW1lciIsInRpbWVyIiwidGltZXJGbHVzaCIsInRhc2tIZWFkIiwidGFza1RhaWwiLCJmcmFtZSIsInRpbWVvdXQiLCJpbnRlcnZhbCIsInBva2VEZWxheSIsImNsb2NrTGFzdCIsImNsb2NrTm93IiwiY2xvY2tTa2V3IiwiY2xvY2siLCJwZXJmb3JtYW5jZSIsInNldEZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2xlYXJOb3ciLCJfY2FsbCIsIl90aW1lIiwid2FrZSIsInNsZWVwIiwibmFwIiwicG9rZSIsImNsZWFySW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsIlR5cGVFcnJvciIsIl90cmFuc2l0aW9uX2luZGV4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfdHJhbnNpdGlvbl9zY2hlZHVsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwic2NoZWR1bGUiLCJzY2hlZHVsZXMiLCJfX3RyYW5zaXRpb24iLCJzdGF0ZSIsIl90cmFuc2l0aW9uX2luZGV4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfYWN0aXZlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJfaW50ZXJydXB0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJfdHJhbnNpdGlvbl9zY2hlZHVsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX2ludGVycnVwdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX3RyYW5zaXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsImludGVycnVwdCIsInRyYW5zaXRpb24iLCJfaW50ZXJydXB0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJkM19lYXNlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJkM190aW1lcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiZGVmYXVsdFRpbWluZyIsImVhc2UiLCJpbmhlcml0IiwidGltaW5nIiwiX2lkIiwiX25hbWUiLCJkM19pbnRlcnBvbGF0ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3R3ZWVuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJfaW50ZXJwb2xhdGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsImF0dHJUd2VlbiIsInZhbHVlMDAiLCJ2YWx1ZTEwIiwiaW50ZXJwb2xhdGUwIiwidmFsdWUxIiwidHdlZW4iLCJfdmFsdWUiLCJfc2NoZWR1bGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImVhc2VDb25zdGFudCIsIlRyYW5zaXRpb24iLCJuZXdJZCIsIl9hdHRyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJfYXR0clR3ZWVuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJfZGVsYXlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9kdXJhdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiX2Vhc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9maWx0ZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsIl9vbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiX3JlbW92ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fIiwiX3NlbGVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIl9zZWxlY3RBbGxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX18iLCJfc2VsZWN0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fIiwiX3N0eWxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fIiwiX3N0eWxlVHdlZW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzE0X18iLCJfdGV4dF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTVfXyIsIl90cmFuc2l0aW9uX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xNl9fIiwiX3R3ZWVuX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xN19fIiwic2VsZWN0aW9uX3Byb3RvdHlwZSIsInN0eWxlVHdlZW4iLCJkM19pbnRlcnBvbGF0ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwib24wIiwib24xIiwic2l0IiwiZXZlcnkiLCJvbkZ1bmN0aW9uIiwiQ1JFQVRFRCIsIlNDSEVEVUxFRCIsIlNUQVJUSU5HIiwiU1RBUlRFRCIsIlJVTk5JTkciLCJFTkRJTkciLCJFTkRFRCIsImluaXQiLCJkM190aW1lcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiZW1wdHlPbiIsImVtcHR5VHdlZW4iLCJzZWxmIiwiX3NjaGVkdWxlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJzdHlsZVJlbW92ZSIsInN0eWxlUmVtb3ZlRW5kIiwic3R5bGVGdW5jdGlvbiIsInN0eWxlQ29uc3RhbnQiLCJfdHdlZW5fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInRleHRGdW5jdGlvbiIsInRleHRDb25zdGFudCIsIl9zY2hlZHVsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiaWQwIiwiaWQxIiwidHdlZW5WYWx1ZSIsInR3ZWVuMCIsInR3ZWVuMSIsIlpvb21FdmVudCIsIl96b29tX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfdHJhbnNmb3JtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJUcmFuc2Zvcm0iLCJhcHBseVgiLCJhcHBseVkiLCJpbnZlcnQiLCJsb2NhdGlvbiIsImludmVydFgiLCJpbnZlcnRZIiwicmVzY2FsZVgiLCJyZXNjYWxlWSIsIl9fem9vbSIsImQzX2RyYWdfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsImQzX2ludGVycG9sYXRlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJkM19zZWxlY3Rpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsImQzX3RyYW5zaXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9jb25zdGFudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiX2V2ZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJfdHJhbnNmb3JtX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18iLCJfbm9ldmVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiZGVmYXVsdEV4dGVudCIsIlNWR0VsZW1lbnQiLCJ3aWR0aCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiZGVmYXVsdFRyYW5zZm9ybSIsImRlZmF1bHRXaGVlbERlbHRhIiwiZGVsdGFZIiwiZGVsdGFNb2RlIiwiZGVmYXVsdENvbnN0cmFpbiIsImV4dGVudCIsInRyYW5zbGF0ZUV4dGVudCIsInRvdWNoc3RhcnRpbmciLCJjb25zdHJhaW4iLCJ3aGVlbERlbHRhIiwic2NhbGVFeHRlbnQiLCJ0b3VjaERlbGF5Iiwid2hlZWxEZWxheSIsInpvb20iLCJ3aGVlbGVkIiwiZGJsY2xpY2tlZCIsImNlbnRlciIsIkdlc3R1cmUiLCJ3aGVlbCIsIm1vdmVkIiwiazEiLCJzaGlmdEtleSIsInN0YXJ0ZWQiLCJ0b3VjaDAiLCJ0b3VjaDEiLCJsMCIsImwxIiwiZHAiLCJkbCIsImNvbGxlY3Rpb24iLCJzY2FsZUJ5Iiwic2NhbGVUbyIsInRyYW5zbGF0ZUJ5IiwidHJhbnNsYXRlVG8iLCJlbWl0IiwiX3NyY19hY2Nlc3Nvcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3NyY19hc3NpZ25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9zcmNfYXR0cml6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX3NyY19CYXNlQ2xhc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9zcmNfY2xvc2VzdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiX3NyY19jb25maWdQcmVwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18iLCJfc3JjX2NvbnN0YW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJfc3JjX2VsZW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsIl9zcmNfaXNPYmplY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyIsIl9zcmNfbWVyZ2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXyIsIl9zcmNfcGFyc2VTaWRlc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIl9zcmNfcHJlZml4X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fIiwiX3NyY19SRVNFVF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXyIsIl9zcmNfc3R5bGl6ZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfXyIsIl9zcmNfdXVpZF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTRfXyIsIl9hc3NpZ25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9pc09iamVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX3V1aWRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9SRVNFVF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwibmVzdGVkUmVzZXQiLCJvYmoiLCJkZWZhdWx0cyIsIm5lc3RlZEtleSIsInN0YXJ0c1dpdGgiLCJkZWZhdWx0VmFsdWUiLCJ1bmRlZmluZWQiLCJCYXNlQ2xhc3MiLCJfb24iLCJfdXVpZCIsImNvbmZpZyIsIl9jb25maWdEZWZhdWx0IiwiX19wcm90b19fIiwiaW5jbHVkZXMiLCJrJDEiLCJ2JDEiLCJjb25maWckMSIsImskMiIsImFzc2lnbiIsImRlZiIsIl9pc09iamVjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwib2JqZWN0cyIsImxlbiIsImxvb3AiLCJmb3JFYWNoIiwicHJvcCIsImFyciIsInByZXYiLCJjdXJyIiwiY29uZmlnUHJlcCIsInRoaXMkMSIsIl9zaGFwZUNvbmZpZyIsIm5ld0NvbmZpZyIsIl9kdXJhdGlvbiIsIndyYXBGdW5jdGlvbiIsImZ1bmMiLCJfX2QzcGx1c19fIiwiZmVhdHVyZSIsInBhcnNlRXZlbnRzIiwibmV3T2JqIiwia2V5RXZhbCIsImQzX3RyYW5zaXRpb25fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9hdHRyaXplX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJjb25kaXRpb24iLCJjbGFzc05hbWUiLCJ0YWciLCJlbGVtIiwiaXRlbSIsIkVsZW1lbnQiLCJkM19hcnJheV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiZDNfY29sbGVjdGlvbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwib2JqZWN0TWVyZ2UiLCJhZ2dzIiwiYXZhaWxhYmxlS2V5cyIsIm5ld09iamVjdCIsImZyb20iLCJTdHJpbmciLCJOdW1iZXIiLCJzaWRlcyIsImFjYyIsImRpcmVjdGlvbiIsInBhcnNlRmxvYXQiLCJib2R5Iiwic3Vic3RyaW5nIiwiX3NyY19mb250RXhpc3RzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfc3JjX3J0bF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwiX3NyY19zdHJpbmdpZnlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl9zcmNfc3RyaXBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyIsIl9zcmNfVGV4dEJveF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fIiwiX3NyY190ZXh0U3BsaXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9zcmNfdGV4dFdpZHRoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18iLCJfc3JjX3RleHRXcmFwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18iLCJfc3JjX3RpdGxlQ2FzZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiX3NyY190cmltX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18iLCJkM19hcnJheV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiZDNwbHVzX2NvbW1vbl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiX2ZvbnRFeGlzdHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyIsIl9ydGxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyIsIl9zdHJpcF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fIiwiX3RleHRTcGxpdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fIiwiX3RleHRXaWR0aF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fIiwiX3RleHRXcmFwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18iLCJfdHJpbV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyIsIlRleHRCb3giLCJfYXJpYUhpZGRlbiIsIl9kZWxheSIsIl9lbGxpcHNpcyIsInJlcGxhY2UiLCJfZm9udENvbG9yIiwiX2ZvbnRGYW1pbHkiLCJfZm9udE1heCIsIl9mb250TWluIiwiX2ZvbnRPcGFjaXR5IiwiX2ZvbnRSZXNpemUiLCJfZm9udFNpemUiLCJfZm9udFdlaWdodCIsIl9oZWlnaHQiLCJfbGluZUhlaWdodCIsIl9tYXhMaW5lcyIsIl9vdmVyZmxvdyIsIl9wYWRkaW5nIiwiX3BvaW50ZXJFdmVudHMiLCJfcm90YXRlIiwiX3JvdGF0ZUFuY2hvciIsIl9zcGxpdCIsIl90ZXh0IiwiX3RleHRBbmNob3IiLCJfdmVydGljYWxBbGlnbiIsIl93aWR0aCIsInJlbmRlciIsIl9zZWxlY3QiLCJib3hlcyIsIl9kYXRhIiwic2l6ZXMiLCJ3cmFwUmVzdWx0cyIsInJlc2l6ZSIsImxIUmF0aW8iLCJmUyIsImxIIiwibGluZURhdGEiLCJmb250LWZhbWlseSIsImZvbnQtc2l6ZSIsImZvbnQtd2VpZ2h0IiwibGluZS1oZWlnaHQiLCJ3cmFwcGVyIiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImxpbmVIZWlnaHQiLCJtYXhMaW5lcyIsIm92ZXJmbG93IiwiZk1heCIsImZNaW4iLCJ2QSIsIndvcmRzIiwiYXJlYU1vZCIsImJveEFyZWEiLCJtYXhXaWR0aCIsInRleHRBcmVhIiwiYXJlYVJhdGlvIiwid2lkdGhSYXRpbyIsInNpemVSYXRpbyIsImhlaWdodE1heCIsImNoZWNrU2l6ZSIsInRydW5jYXRlIiwibGluZXMiLCJ0cnVuY2F0ZWQiLCJ0SCIsInlQIiwiYUgiLCJmQyIsImZGIiwiZk8iLCJmVyIsInRBIiwid2lkdGhzIiwicm90YXRlQW5jaG9yIiwicnRsIiwidGV4dFN0eWxlIiwidGV4dHMiLCJldmVudHMiLCJhcmlhSGlkZGVuIiwiZWxsaXBzaXMiLCJmb250Q29sb3IiLCJmb250TWF4IiwiZm9udE1pbiIsImZvbnRPcGFjaXR5IiwiZm9udFJlc2l6ZSIsInBvaW50ZXJFdmVudHMiLCJ0ZXh0QW5jaG9yIiwidmVydGljYWxBbGlnbiIsImRlamF2dSIsIm1hY29zIiwibW9ub3NwYWNlIiwicHJvcG9ydGlvbmFsIiwiX3RleHRXaWR0aF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3RyaW1fX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsImNoZWNrZWQiLCJmb250IiwiZmFtIiwiSlNPTiIsInN0cmluZ2lmeSIsImRpYWNyaXRpY3MiLCJjaGFyIiwicmV0IiwidGVzdCIsInByZWZpeENoYXJzIiwic3BsaXRDaGFycyIsInNwbGl0V29yZHMiLCJzdWZmaXhDaGFycyIsIl9zdHJpbmdpZnlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9jb21iaW5pbmdNYXJrc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fIiwibm9TcGFjZVJhbmdlIiwiYnVybWVzZVJhbmdlIiwibm9TcGFjZUxhbmd1YWdlIiwic3BsaXRBbGxDaGFycyIsInNlbnRlbmNlIiwiZm9udC1zdHlsZSIsImZvbnQtdmFyaWFudCIsImdldENvbnRleHQiLCJtZWFzdXJlVGV4dCIsIl90ZXh0U3BsaXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9zdHJpbmdpZnlfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyIsIl90cmltX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJ0ZXh0V3JhcCIsInRleHRQcm9nIiwid2lkdGhQcm9nIiwid29yZCIsIndvcmRXaWR0aCIsIl90ZXh0U3BsaXRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImxvd2VyY2FzZSIsInVwcGVyY2FzZSIsInN0ciIsInNtYWxscyIsImJpZ3MiLCJiaWdsb3ciLCJzdHJpcHBlZCIsImNoYXJBdCIsImJpZ2luZGV4IiwidG9VcHBlckNhc2UiLCJzdWJzdHIiLCJ0cmltTGVmdCIsInRyaW1SaWdodCIsIl9qc19Cb3hlZFRyZWVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9qc19DaXJjbGVUcmVlX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18iLCJib3hlZFRyZWUiLCJCb3hlZFRyZWUiLCJjaXJjbGVUcmVlIiwiQ2lyY2xlVHJlZSIsIkJhc2VUcmVlIiwib3B0aW9ucyIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwiX2dldFByb3RvdHlwZU9mIiwibWVyZ2VkT3B0aW9ucyIsIl9vYmplY3RTcHJlYWQiLCJfcm9vdCIsIl9zdmciLCJfcGFubmluZ0NvbnRhaW5lciIsIl92aWV3IiwiX3RyZWVHZW5lcmF0b3IiLCJfbGlua1BhdGhHZW5lcmF0b3IiLCJfdmlzaWJsZU5vZGVzIiwiX2xpbmtzIiwiX3pvb21MaXN0ZW5lciIsInNldFRoZW1lIiwidGhlbWUiLCJzZXRPcmllbnRhdGlvbiIsIm9yaWVudGF0aW9uIiwic2V0RGF0YSIsInNldEVsZW1lbnQiLCJlbGVtZW50Iiwic2V0V2lkdGhXaXRob3V0TWFyZ2lucyIsIndpZHRoV2l0aG91dE1hcmdpbnMiLCJzZXRIZWlnaHRXaXRob3V0TWFyZ2lucyIsImhlaWdodFdpdGhvdXRNYXJnaW5zIiwic2V0TWFyZ2lucyIsIm1hcmdpbnMiLCJzZXREdXJhdGlvbiIsInNldEFsbG93UGFuIiwiYWxsb3dQYW4iLCJzZXRBbGxvd1pvb20iLCJhbGxvd1pvb20iLCJzZXRBbGxvd0ZvY3VzIiwiYWxsb3dGb2N1cyIsInNldEFsbG93Tm9kZUNlbnRlcmluZyIsImFsbG93Tm9kZUNlbnRlcmluZyIsInNldE1pblNjYWxlIiwibWluU2NhbGUiLCJzZXRNYXhTY2FsZSIsIm1heFNjYWxlIiwic2V0SXNGbGF0RGF0YSIsImlzRmxhdERhdGEiLCJzZXROb2RlRGVwdGhNdWx0aXBsaWVyIiwibm9kZURlcHRoTXVsdGlwbGllciIsImxvYWRPbkRlbWFuZFNldHRpbmdzIiwiTG9hZE9uRGVtYW5kU2V0dGluZ3MiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwibm9kZVNldHRpbmdzIiwiTm9kZVNldHRpbmdzIiwiX2dldElkIiwiZ2V0SWQiLCJfZ2V0Q2hpbGRyZW4iLCJnZXRDaGlsZHJlbiIsIl9nZXRQYXJlbnRJZCIsImdldFBhcmVudElkIiwiRXZlbnRFbWl0dGVyIiwibm9kZUVudGVyIiwibm9kZVVwZGF0ZSIsIm5vZGVVcGRhdGVUcmFuc2l0aW9uIiwibm9kZUV4aXQiLCJub2RlRXhpdFRyYW5zaXRpb24iLCJsaW5rRW50ZXIiLCJsaW5rUGF0aEdlbmVyYXRvciIsImxpbmtVcGRhdGUiLCJsaW5rVXBkYXRlVHJhbnNpdGlvbiIsImxpbmtFeGl0IiwibGlua0V4aXRUcmFuc2l0aW9uIiwiaWRPck5vZGVEYXRhSXRlbSIsInJlbW92ZVNlbGVjdGlvbiIsImdldFJvb3QiLCJub2RlRGF0YUl0ZW0iLCJfdHlwZW9mIiwiZ2V0Tm9kZSIsIl9jaGlsZHJlbiIsImV4cGFuZCIsImdldEFsbG93Rm9jdXMiLCJoaWRlU2libGluZ3MiLCJ1cGRhdGVUcmVlV2l0aEZvY3VzT25Ob2RlIiwic2VsZWN0ZWQiLCJjZW50ZXJOb2RlIiwiX2lzRmxhdERhdGEiLCJuZXdJc0ZsYXREYXRhIiwiX3RoaXMyIiwiZ2V0SXNGbGF0RGF0YSIsInN0cmF0aWZpZXIiLCJnZXREYXRhIiwiX3RoZW1lIiwiX29yaWVudGF0aW9uIiwibmV3RGF0YSIsIl9ub2RlRGVwdGhNdWx0aXBsaWVyIiwibmV3Tm9kZURlcHRoTXVsdGlwbGllciIsIm5ld0R1cmF0aW9uIiwiX2FsbG93UGFuIiwibmV3QWxsb3dQYW4iLCJfYWxsb3dab29tIiwibmV3QWxsb3dab29tIiwiX2FsbG93Rm9jdXMiLCJuZXdBbGxvd0ZvY3VzIiwiX2FsbG93Tm9kZUNlbnRlcmluZyIsIm5ld0FsbG93Tm9kZUNlbnRlcmluZyIsIl9taW5TY2FsZSIsIm5ld01pblNjYWxlIiwiX21heFNjYWxlIiwibmV3TWF4U2NhbGUiLCJfZWxlbWVudCIsIm5ld0VsZW1lbnQiLCJpZE9yRGF0YUl0ZW0iLCJfdGhpczMiLCJyZWN1cnNpdmVGaW5kIiwiaGllcmFyY2hpY2FsT2JqZWN0IiwiZmluZENvbmRpdGlvbiIsImZvdW5kTm9kZSIsImZpbmQiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uIiwiX2RpZEl0ZXJhdG9yRXJyb3IiLCJfaXRlcmF0b3JFcnJvciIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiaXRlcmF0b3IiLCJkb25lIiwiZXJyIiwicmV0dXJuIiwiX25vZGVzIiwiZGF0YUl0ZW0iLCJuZXdJZEFjY2Vzc29yIiwibmV3Q2hpbGRyZW5BY2Nlc3NvciIsIm5ld1BhcmVudElkQWNjZXNzb3IiLCJnZXRXaWR0aFdpdGhvdXRNYXJnaW5zIiwiZ2V0TWFyZ2lucyIsImdldEhlaWdodFdpdGhvdXRNYXJnaW5zIiwibmV3TWFyZ2lucyIsIl9tYXJnaW5zIiwibmV3V2lkdGhXaXRob3V0TWFyZ2luIiwiX3dpZHRoV2l0aG91dE1hcmdpbiIsIm5ld0hlaWdodFdpdGhvdXRNYXJnaW4iLCJfaGVpZ2h0V2l0aG91dE1hcmdpbiIsImdldFN2ZyIsIm5lZWRUb0NlbnRlclZpZXciLCJzaXppbmdNb2RlIiwiZ2V0U2l6aW5nTW9kZSIsImdldFRyZWVHZW5lcmF0b3IiLCJfZ2V0Tm9kZVNpemUiLCJnZXRIZWlnaHQiLCJnZXRXaWR0aCIsImdldFZpZXciLCJnZXRPcmllbnRhdGlvbiIsImdldFpvb21MaXN0ZW5lciIsImdldEVsZW1lbnQiLCJ2YWxpZGF0ZVNldHRpbmdzIiwiX3RoaXM0IiwicmVnZW5lcmF0ZU5vZGVEYXRhIiwiZ2V0VGhlbWUiLCJnZXRNaW5TY2FsZSIsImdldE1heFNjYWxlIiwiZ2V0UGFubmluZ0NvbnRhaW5lciIsImdldEFsbG93UGFuIiwiZ2V0QWxsb3dab29tIiwidXBkYXRlRGltZW5zaW9ucyIsIl9wb3B1bGF0ZVVuZGVybHlpbmdDaGlsZHJlbiIsImNvbGxhcHNlUmVjdXJzaXZlbHkiLCJyZWN1cnNpdmUiLCJkaXJlY3ROb2RlRGF0YUl0ZW0iLCJyZWMiLCJ6b29tVHJhbnNmb3JtIiwiZ2V0RHVyYXRpb24iLCJ6b29tSWRlbnRpdHkiLCJjb250aW51ZSIsIm5vZGVEYXRhSXRlbUluZGV4Iiwibm9kZURhdGFJdGVtcyIsIm5vZGVGb2N1cyIsIm5vZGVUb2dnbGUiLCJwYXJlbnROb2RlRGF0YUl0ZW0iLCJuZXdOb2RlIiwiX2NyZWF0ZU5vZGUiLCJfdGhpczUiLCJjdXJyZW50SXRlbSIsIl9hZGRVbmRlcmx5aW5nQ2hpbGROb2RlIiwid2FzU2VsZWN0ZWQiLCJnZXRBbGxvd05vZGVDZW50ZXJpbmciLCJfdGhpczYiLCJpc0VuYWJsZWQiLCJoYXNDaGlsZHJlbiIsImxvYWRDaGlsZHJlbiIsIl9wcm9jZXNzTG9hZGVkRGF0YUZvck5vZGVGb2N1cyIsIl90aGlzNyIsIl90aGlzOCIsIl9wcm9jZXNzTG9hZGVkRGF0YUZvck5vZGVUb2dnbGUiLCJjb2xsYXBzZSIsIl90aGlzOSIsInNvbWUiLCJfdGhpczEwIiwiZ2V0Tm9kZURlcHRoTXVsdGlwbGllciIsIl9vbk5vZGVDbGljayIsIl9ub2RlRW50ZXIiLCJfbm9kZVVwZGF0ZSIsIl9ub2RlRXhpdCIsIl90aGlzMTEiLCJfZ2V0TGlua1BhdGhHZW5lcmF0b3IiLCJfbGlua0VudGVyIiwiX2xpbmtVcGRhdGUiLCJfbGlua0V4aXQiLCJnZXRWaXNpYmxlTm9kZXMiLCJ0cmVlRGF0YSIsInRyZWVHZW5lcmF0b3IiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJyZWN1cnNpdmVHZXQiLCJhbGxJdGVtcyIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yIiwiX2RpZEl0ZXJhdG9yRXJyb3IyIiwiX2l0ZXJhdG9yRXJyb3IyIiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsIl91cGRhdGVOb2RlcyIsIl91cGRhdGVMaW5rcyIsImdldExpbmtzIiwiQm94ZWROb2RlU2V0dGluZ3MiLCJvd25lck9iamVjdCIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2JvZHlCb3hXaWR0aCIsImJvZHlCb3hXaWR0aCIsIl9ib2R5Qm94SGVpZ2h0IiwiYm9keUJveEhlaWdodCIsIl9ib2R5Qm94UGFkZGluZyIsImJvZHlCb3hQYWRkaW5nIiwiX3RpdGxlQm94V2lkdGgiLCJ0aXRsZUJveFdpZHRoIiwiX3RpdGxlQm94SGVpZ2h0IiwidGl0bGVCb3hIZWlnaHQiLCJfdGl0bGVCb3hQYWRkaW5nIiwidGl0bGVCb3hQYWRkaW5nIiwibmV3UGFkZGluZyIsImdldEJvZHlCb3hXaWR0aCIsIl9nZXRCb2R5RGlzcGxheVRleHQiLCJnZXRCb2R5RGlzcGxheVRleHQiLCJfZ2V0VGl0bGVEaXNwbGF5VGV4dCIsImdldFRpdGxlRGlzcGxheVRleHQiLCJfZ2V0Iiwibm9kZUJvZHlCb3hXaWR0aCIsIm5vZGVCb2R5Qm94SGVpZ2h0IiwiZ2V0Qm9keUJveEhlaWdodCIsIm5vZGVCb2R5Qm94UGFkZGluZyIsImdldEJvZHlCb3hQYWRkaW5nIiwibm9kZVRpdGxlQm94V2lkdGgiLCJnZXRUaXRsZUJveFdpZHRoIiwibm9kZVRpdGxlQm94SGVpZ2h0IiwiZ2V0VGl0bGVCb3hIZWlnaHQiLCJub2RlVGl0bGVCb3hQYWRkaW5nIiwiZ2V0VGl0bGVCb3hQYWRkaW5nIiwiYm9keUdyb3VwcyIsInNpbmdsZWRPdXREYXRhIiwicmVjYWxjdWxhdGVkUGFkZGluZ1RvcCIsImQzUGx1c1RleHRCb3giLCJoaWdoZXN0Q29sbGFwc2luZ1BhcmVudCIsImdldEhvcml6b250YWxTcGFjaW5nIiwiZ2V0VmVydGljYWxTcGFjaW5nIiwic291cmNlQ29vcmRpbmF0ZSIsInRhcmdldENvb3JkaW5hdGUiLCJuZXdCb2R5RGlzcGxheVRleHRBY2Nlc3NvciIsIm5ld1RpdGxlRGlzcGxheVRleHRBY2Nlc3NvciIsIkNpcmNsZU5vZGVTZXR0aW5ncyIsIl9nZXREaXNwbGF5VGV4dCIsImdldERpc3BsYXlUZXh0IiwiaXNNaWRkbGVDaGlsZCIsIm5ld0Rpc3BsYXlUZXh0QWNjZXNzb3IiLCJfb3duZXJPYmplY3QiLCJfaGFzQ2hpbGRyZW4iLCJfbG9hZENoaWxkcmVuIiwicHJvY2Vzc0RhdGEiLCJuZXdMb2FkQ2hpbGRyZW5NZXRob2QiLCJuZXdIYXNDaGlsZHJlbk1ldGhvZCIsIl9zaXppbmdNb2RlIiwiX2hvcml6b250YWxTcGFjaW5nIiwiaG9yaXpvbnRhbFNwYWNpbmciLCJfdmVydGljYWxTcGFjaW5nIiwidmVydGljYWxTcGFjaW5nIiwibmV3SG9yaXpvbnRhbFNwYWNpbmciLCJuZXdWZXJ0aWNhbFNwYWNpbmciLCJuZXdTaXppbmdNb2RlIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBQUEsRUFBQUMsR0FDQSxpQkFBQUMsU0FBQSxpQkFBQUMsT0FDQUEsT0FBQUQsUUFBQUQsSUFDQSxtQkFBQUcsZUFBQUMsSUFDQUQsT0FBQSxlQUFBSCxHQUNBLGlCQUFBQyxRQUNBQSxRQUFBLFVBQUFELEtBRUFELEVBQUEsR0FBQUEsRUFBQSxPQUErQkEsRUFBQSxhQUFBQyxLQVIvQixDQVNDSyxPQUFBLFdBQ0QsbUJDVEEsSUFBQUMsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBUCxRQUdBLElBQUFDLEVBQUFJLEVBQUFFLEdBQUEsQ0FDQUMsRUFBQUQsRUFDQUUsR0FBQSxFQUNBVCxRQUFBLElBVUEsT0FOQVUsRUFBQUgsR0FBQUksS0FBQVYsRUFBQUQsUUFBQUMsSUFBQUQsUUFBQU0sR0FHQUwsRUFBQVEsR0FBQSxFQUdBUixFQUFBRCxRQTBEQSxPQXJEQU0sRUFBQU0sRUFBQUYsRUFHQUosRUFBQU8sRUFBQVIsRUFHQUMsRUFBQVEsRUFBQSxTQUFBZCxFQUFBZSxFQUFBQyxHQUNBVixFQUFBVyxFQUFBakIsRUFBQWUsSUFDQUcsT0FBQUMsZUFBQW5CLEVBQUFlLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNWLEVBQUFnQixFQUFBLFNBQUF0QixHQUNBLG9CQUFBdUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQW5CLEVBQUF1QixPQUFBQyxZQUFBLENBQXdEQyxN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QUMsUUFBQSxRQUNBQyxXQUFBLFFBQ0FDLFVBQUEsU0FDQUMsWUFBQSxTQUNBQyxZQUFBLFFBQ0FDLFFBQUEsU0FDQUMsVUFBQSxTQUNBQyxXQUFBLFNBQ0FDLEtBQUEsU0FDQUMsVUFBQSxTQUNBQyxLQUFBLFFBQ0FDLE1BQUEsTUFDQUMsWUFBQSxTQUNBQyxLQUFBLFFBQ0FDLFNBQUEsU0FDQUMsUUFBQSxTQUNBQyxVQUFBLFNBQ0FDLE9BQUEsUUFDQUMsTUFBQSxTQUNBQyxNQUFBLFNBQ0FDLFNBQUEsU0FDQUMsY0FBQSxTQUNBQyxVQUFBLFFBQ0FDLGFBQUEsU0FDQUMsVUFBQSxTQUNBQyxXQUFBLFNBQ0FDLFVBQUEsU0FDQUMscUJBQUEsU0FDQUMsVUFBQSxTQUNBQyxXQUFBLFFBQ0FDLFVBQUEsU0FDQUMsVUFBQSxTQUNBQyxZQUFBLFNBQ0FDLGNBQUEsUUFDQUMsYUFBQSxRQUNBQyxlQUFBLFFBQ0FDLGVBQUEsUUFDQUMsZUFBQSxTQUNBQyxZQUFBLFNBQ0FDLEtBQUEsTUFDQUMsVUFBQSxRQUNBQyxNQUFBLFNBQ0FDLFFBQUEsU0FDQUMsT0FBQSxRQUNBQyxpQkFBQSxRQUNBQyxXQUFBLElBQ0FDLGFBQUEsU0FDQUMsYUFBQSxRQUNBQyxlQUFBLFFBQ0FDLGdCQUFBLFFBQ0FDLGtCQUFBLE1BQ0FDLGdCQUFBLFFBQ0FDLGdCQUFBLFNBQ0FDLGFBQUEsUUFDQUMsVUFBQSxTQUNBQyxVQUFBLFNBQ0FDLFNBQUEsU0FDQUMsWUFBQSxTQUNBQyxLQUFBLElBQ0FDLFFBQUEsU0FDQUMsTUFBQSxRQUNBQyxVQUFBLFFBQ0FDLE9BQUEsU0FDQUMsVUFBQSxTQUNBQyxPQUFBLFNBQ0FDLGNBQUEsU0FDQUMsVUFBQSxTQUNBQyxjQUFBLFNBQ0FDLGNBQUEsU0FDQUMsV0FBQSxTQUNBQyxVQUFBLFNBQ0FDLEtBQUEsU0FDQUMsS0FBQSxTQUNBQyxLQUFBLFNBQ0FDLFdBQUEsU0FDQUMsT0FBQSxRQUNBQyxjQUFBLFFBQ0FDLElBQUEsU0FDQUMsVUFBQSxTQUNBQyxVQUFBLFFBQ0FDLFlBQUEsUUFDQUMs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QmlKLEdBRWxCLE9BREFqNkQsS0FBSys1RCxjQUFnQkUsRUFDZGo2RCxrREFXVWs2RCxHQUVqQixPQURBbDZELEtBQUs4NUQsYUFBZUksRUFDYmw2RCx5Q0FVUCxPQUFPQSxLQUFLODVELGNBQWdCOTVELEtBQUsrNUQsbURBOEJ6QzdOLEVBQXFCbFIsU0FBVyxDQUs1QjBaLFlBQWEsS0FRYkMsYUFBYyxNQUdIekk7Ozs7c1dDaEpURyxhQVFGLFNBQUFBLEVBQVl3SyxFQUFhek4sZ0dBQVNFLENBQUF0cEQsS0FBQXFzRCxHQUM5QixJQUFJN0Msb1VBQWFDLENBQUEsR0FDVjRDLEVBQWFyUixTQUNib08sR0FHUHBwRCxLQUFLNjVELGFBQWVoRCxFQUNwQjcyRCxLQUFLbTZELFlBQWMzUSxFQUFjdUksV0FDakMveEQsS0FBS282RCxtQkFBcUI1USxFQUFjNlEsa0JBQ3hDcjZELEtBQUtzNkQsaUJBQW1COVEsRUFBYytRLHNFQVN0QyxPQUFPdjZELEtBQUs2NUQsNERBU1osT0FBTzc1RCxLQUFLbzZELGdFQVNLSSxHQUVqQixPQURBeDZELEtBQUtvNkQsbUJBQXFCSSxFQUNuQng2RCxrREFTUCxPQUFPQSxLQUFLczZELDREQVNHRyxHQUVmLE9BREF6NkQsS0FBS3M2RCxpQkFBbUJHLEVBQ2pCejZELDZDQVNQLE9BQU9BLEtBQUttNkQsa0RBU0ZPLEdBRVYsT0FEQTE2RCxLQUFLbTZELFlBQWNPLEVBQ1oxNkQsMENBSWZxc0QsRUFBYXJSLFNBQVcsQ0FDcEIrVyxXQUFZLE9BQ1pzSSxrQkFBbUIsR0FDbkJFLGdCQUFpQixJQUdObE87Ozs7NENDaEdmeDRELEVBQUFELFFBQUErbUUsUUFBQSIsImZpbGUiOiJkMy1taXRjaC10cmVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoXCJtaXRjaFRyZWVcIiwgW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wibWl0Y2hUcmVlXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcImQzXCJdID0gcm9vdFtcImQzXCJdIHx8IHt9LCByb290W1wiZDNcIl1bXCJtaXRjaFRyZWVcIl0gPSBmYWN0b3J5KCk7XG59KShnbG9iYWwsIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuIiwidmFyIGFycmF5ID0gQXJyYXkucHJvdG90eXBlO1xuXG5leHBvcnQgdmFyIHNsaWNlID0gYXJyYXkuc2xpY2U7XG5leHBvcnQgdmFyIG1hcCA9IGFycmF5Lm1hcDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiBhID49IGIgPyAwIDogTmFOO1xufVxuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcbmltcG9ydCBiaXNlY3RvciBmcm9tIFwiLi9iaXNlY3RvclwiO1xuXG52YXIgYXNjZW5kaW5nQmlzZWN0ID0gYmlzZWN0b3IoYXNjZW5kaW5nKTtcbmV4cG9ydCB2YXIgYmlzZWN0UmlnaHQgPSBhc2NlbmRpbmdCaXNlY3QucmlnaHQ7XG5leHBvcnQgdmFyIGJpc2VjdExlZnQgPSBhc2NlbmRpbmdCaXNlY3QubGVmdDtcbmV4cG9ydCBkZWZhdWx0IGJpc2VjdFJpZ2h0O1xuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29tcGFyZSkge1xuICBpZiAoY29tcGFyZS5sZW5ndGggPT09IDEpIGNvbXBhcmUgPSBhc2NlbmRpbmdDb21wYXJhdG9yKGNvbXBhcmUpO1xuICByZXR1cm4ge1xuICAgIGxlZnQ6IGZ1bmN0aW9uKGEsIHgsIGxvLCBoaSkge1xuICAgICAgaWYgKGxvID09IG51bGwpIGxvID0gMDtcbiAgICAgIGlmIChoaSA9PSBudWxsKSBoaSA9IGEubGVuZ3RoO1xuICAgICAgd2hpbGUgKGxvIDwgaGkpIHtcbiAgICAgICAgdmFyIG1pZCA9IGxvICsgaGkgPj4+IDE7XG4gICAgICAgIGlmIChjb21wYXJlKGFbbWlkXSwgeCkgPCAwKSBsbyA9IG1pZCArIDE7XG4gICAgICAgIGVsc2UgaGkgPSBtaWQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gbG87XG4gICAgfSxcbiAgICByaWdodDogZnVuY3Rpb24oYSwgeCwgbG8sIGhpKSB7XG4gICAgICBpZiAobG8gPT0gbnVsbCkgbG8gPSAwO1xuICAgICAgaWYgKGhpID09IG51bGwpIGhpID0gYS5sZW5ndGg7XG4gICAgICB3aGlsZSAobG8gPCBoaSkge1xuICAgICAgICB2YXIgbWlkID0gbG8gKyBoaSA+Pj4gMTtcbiAgICAgICAgaWYgKGNvbXBhcmUoYVttaWRdLCB4KSA+IDApIGhpID0gbWlkO1xuICAgICAgICBlbHNlIGxvID0gbWlkICsgMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsbztcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFzY2VuZGluZ0NvbXBhcmF0b3IoZikge1xuICByZXR1cm4gZnVuY3Rpb24oZCwgeCkge1xuICAgIHJldHVybiBhc2NlbmRpbmcoZihkKSwgeCk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCB7cGFpcn0gZnJvbSBcIi4vcGFpcnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzMCwgdmFsdWVzMSwgcmVkdWNlKSB7XG4gIHZhciBuMCA9IHZhbHVlczAubGVuZ3RoLFxuICAgICAgbjEgPSB2YWx1ZXMxLmxlbmd0aCxcbiAgICAgIHZhbHVlcyA9IG5ldyBBcnJheShuMCAqIG4xKSxcbiAgICAgIGkwLFxuICAgICAgaTEsXG4gICAgICBpLFxuICAgICAgdmFsdWUwO1xuXG4gIGlmIChyZWR1Y2UgPT0gbnVsbCkgcmVkdWNlID0gcGFpcjtcblxuICBmb3IgKGkwID0gaSA9IDA7IGkwIDwgbjA7ICsraTApIHtcbiAgICBmb3IgKHZhbHVlMCA9IHZhbHVlczBbaTBdLCBpMSA9IDA7IGkxIDwgbjE7ICsraTEsICsraSkge1xuICAgICAgdmFsdWVzW2ldID0gcmVkdWNlKHZhbHVlMCwgdmFsdWVzMVtpMV0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB2YWx1ZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBiIDwgYSA/IC0xIDogYiA+IGEgPyAxIDogYiA+PSBhID8gMCA6IE5hTjtcbn1cbiIsImltcG9ydCB2YXJpYW5jZSBmcm9tIFwiLi92YXJpYW5jZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhcnJheSwgZikge1xuICB2YXIgdiA9IHZhcmlhbmNlKGFycmF5LCBmKTtcbiAgcmV0dXJuIHYgPyBNYXRoLnNxcnQodikgOiB2O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWluLFxuICAgICAgbWF4O1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAobWluID4gdmFsdWUpIG1pbiA9IHZhbHVlO1xuICAgICAgICAgICAgaWYgKG1heCA8IHZhbHVlKSBtYXggPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1pbiA9IG1heCA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKG1pbiA+IHZhbHVlKSBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICAgIGlmIChtYXggPCB2YWx1ZSkgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIFttaW4sIG1heF07XG59XG4iLCJpbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IGJpc2VjdCBmcm9tIFwiLi9iaXNlY3RcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGV4dGVudCBmcm9tIFwiLi9leHRlbnRcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eVwiO1xuaW1wb3J0IHJhbmdlIGZyb20gXCIuL3JhbmdlXCI7XG5pbXBvcnQge3RpY2tTdGVwfSBmcm9tIFwiLi90aWNrc1wiO1xuaW1wb3J0IHN0dXJnZXMgZnJvbSBcIi4vdGhyZXNob2xkL3N0dXJnZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB2YWx1ZSA9IGlkZW50aXR5LFxuICAgICAgZG9tYWluID0gZXh0ZW50LFxuICAgICAgdGhyZXNob2xkID0gc3R1cmdlcztcblxuICBmdW5jdGlvbiBoaXN0b2dyYW0oZGF0YSkge1xuICAgIHZhciBpLFxuICAgICAgICBuID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIHgsXG4gICAgICAgIHZhbHVlcyA9IG5ldyBBcnJheShuKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhbHVlc1tpXSA9IHZhbHVlKGRhdGFbaV0sIGksIGRhdGEpO1xuICAgIH1cblxuICAgIHZhciB4eiA9IGRvbWFpbih2YWx1ZXMpLFxuICAgICAgICB4MCA9IHh6WzBdLFxuICAgICAgICB4MSA9IHh6WzFdLFxuICAgICAgICB0eiA9IHRocmVzaG9sZCh2YWx1ZXMsIHgwLCB4MSk7XG5cbiAgICAvLyBDb252ZXJ0IG51bWJlciBvZiB0aHJlc2hvbGRzIGludG8gdW5pZm9ybSB0aHJlc2hvbGRzLlxuICAgIGlmICghQXJyYXkuaXNBcnJheSh0eikpIHtcbiAgICAgIHR6ID0gdGlja1N0ZXAoeDAsIHgxLCB0eik7XG4gICAgICB0eiA9IHJhbmdlKE1hdGguY2VpbCh4MCAvIHR6KSAqIHR6LCB4MSwgdHopOyAvLyBleGNsdXNpdmVcbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgYW55IHRocmVzaG9sZHMgb3V0c2lkZSB0aGUgZG9tYWluLlxuICAgIHZhciBtID0gdHoubGVuZ3RoO1xuICAgIHdoaWxlICh0elswXSA8PSB4MCkgdHouc2hpZnQoKSwgLS1tO1xuICAgIHdoaWxlICh0elttIC0gMV0gPiB4MSkgdHoucG9wKCksIC0tbTtcblxuICAgIHZhciBiaW5zID0gbmV3IEFycmF5KG0gKyAxKSxcbiAgICAgICAgYmluO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSBiaW5zLlxuICAgIGZvciAoaSA9IDA7IGkgPD0gbTsgKytpKSB7XG4gICAgICBiaW4gPSBiaW5zW2ldID0gW107XG4gICAgICBiaW4ueDAgPSBpID4gMCA/IHR6W2kgLSAxXSA6IHgwO1xuICAgICAgYmluLngxID0gaSA8IG0gPyB0eltpXSA6IHgxO1xuICAgIH1cblxuICAgIC8vIEFzc2lnbiBkYXRhIHRvIGJpbnMgYnkgdmFsdWUsIGlnbm9yaW5nIGFueSBvdXRzaWRlIHRoZSBkb21haW4uXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgeCA9IHZhbHVlc1tpXTtcbiAgICAgIGlmICh4MCA8PSB4ICYmIHggPD0geDEpIHtcbiAgICAgICAgYmluc1tiaXNlY3QodHosIHgsIDAsIG0pXS5wdXNoKGRhdGFbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBiaW5zO1xuICB9XG5cbiAgaGlzdG9ncmFtLnZhbHVlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHZhbHVlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgaGlzdG9ncmFtKSA6IHZhbHVlO1xuICB9O1xuXG4gIGhpc3RvZ3JhbS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbX1swXSwgX1sxXV0pLCBoaXN0b2dyYW0pIDogZG9tYWluO1xuICB9O1xuXG4gIGhpc3RvZ3JhbS50aHJlc2hvbGRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRocmVzaG9sZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogQXJyYXkuaXNBcnJheShfKSA/IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpIDogY29uc3RhbnQoXyksIGhpc3RvZ3JhbSkgOiB0aHJlc2hvbGQ7XG4gIH07XG5cbiAgcmV0dXJuIGhpc3RvZ3JhbTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHg7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgYmlzZWN0LCBiaXNlY3RSaWdodCwgYmlzZWN0TGVmdH0gZnJvbSBcIi4vYmlzZWN0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYXNjZW5kaW5nfSBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBiaXNlY3Rvcn0gZnJvbSBcIi4vYmlzZWN0b3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjcm9zc30gZnJvbSBcIi4vY3Jvc3NcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBkZXNjZW5kaW5nfSBmcm9tIFwiLi9kZXNjZW5kaW5nXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZGV2aWF0aW9ufSBmcm9tIFwiLi9kZXZpYXRpb25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBleHRlbnR9IGZyb20gXCIuL2V4dGVudFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGhpc3RvZ3JhbX0gZnJvbSBcIi4vaGlzdG9ncmFtXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGhyZXNob2xkRnJlZWRtYW5EaWFjb25pc30gZnJvbSBcIi4vdGhyZXNob2xkL2ZyZWVkbWFuRGlhY29uaXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aHJlc2hvbGRTY290dH0gZnJvbSBcIi4vdGhyZXNob2xkL3Njb3R0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGhyZXNob2xkU3R1cmdlc30gZnJvbSBcIi4vdGhyZXNob2xkL3N0dXJnZXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtYXh9IGZyb20gXCIuL21heFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1lYW59IGZyb20gXCIuL21lYW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtZWRpYW59IGZyb20gXCIuL21lZGlhblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1lcmdlfSBmcm9tIFwiLi9tZXJnZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1pbn0gZnJvbSBcIi4vbWluXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFpcnN9IGZyb20gXCIuL3BhaXJzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGVybXV0ZX0gZnJvbSBcIi4vcGVybXV0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YW50aWxlfSBmcm9tIFwiLi9xdWFudGlsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmdlfSBmcm9tIFwiLi9yYW5nZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjYW59IGZyb20gXCIuL3NjYW5cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzaHVmZmxlfSBmcm9tIFwiLi9zaHVmZmxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3VtfSBmcm9tIFwiLi9zdW1cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aWNrcywgdGlja0luY3JlbWVudCwgdGlja1N0ZXB9IGZyb20gXCIuL3RpY2tzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJhbnNwb3NlfSBmcm9tIFwiLi90cmFuc3Bvc2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2YXJpYW5jZX0gZnJvbSBcIi4vdmFyaWFuY2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB6aXB9IGZyb20gXCIuL3ppcFwiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWF4O1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsICYmIHZhbHVlID4gbWF4KSB7XG4gICAgICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1heCA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiB2YWx1ZSA+IG1heCkge1xuICAgICAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1heDtcbn1cbiIsImltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBtID0gbixcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgc3VtID0gMDtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHN1bSArPSB2YWx1ZTtcbiAgICAgIGVsc2UgLS1tO1xuICAgIH1cbiAgfVxuXG4gIGVsc2Uge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAoIWlzTmFOKHZhbHVlID0gbnVtYmVyKHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSkpIHN1bSArPSB2YWx1ZTtcbiAgICAgIGVsc2UgLS1tO1xuICAgIH1cbiAgfVxuXG4gIGlmIChtKSByZXR1cm4gc3VtIC8gbTtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuaW1wb3J0IHF1YW50aWxlIGZyb20gXCIuL3F1YW50aWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgbiA9IHZhbHVlcy5sZW5ndGgsXG4gICAgICBpID0gLTEsXG4gICAgICB2YWx1ZSxcbiAgICAgIG51bWJlcnMgPSBbXTtcblxuICBpZiAodmFsdWVvZiA9PSBudWxsKSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVzW2ldKSkpIHtcbiAgICAgICAgbnVtYmVycy5wdXNoKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKCFpc05hTih2YWx1ZSA9IG51bWJlcih2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkpKSB7XG4gICAgICAgIG51bWJlcnMucHVzaCh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHF1YW50aWxlKG51bWJlcnMuc29ydChhc2NlbmRpbmcpLCAwLjUpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXlzKSB7XG4gIHZhciBuID0gYXJyYXlzLmxlbmd0aCxcbiAgICAgIG0sXG4gICAgICBpID0gLTEsXG4gICAgICBqID0gMCxcbiAgICAgIG1lcmdlZCxcbiAgICAgIGFycmF5O1xuXG4gIHdoaWxlICgrK2kgPCBuKSBqICs9IGFycmF5c1tpXS5sZW5ndGg7XG4gIG1lcmdlZCA9IG5ldyBBcnJheShqKTtcblxuICB3aGlsZSAoLS1uID49IDApIHtcbiAgICBhcnJheSA9IGFycmF5c1tuXTtcbiAgICBtID0gYXJyYXkubGVuZ3RoO1xuICAgIHdoaWxlICgtLW0gPj0gMCkge1xuICAgICAgbWVyZ2VkWy0tal0gPSBhcnJheVttXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2VkO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIGkgPSAtMSxcbiAgICAgIHZhbHVlLFxuICAgICAgbWluO1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlc1tpXSkgIT0gbnVsbCAmJiB2YWx1ZSA+PSB2YWx1ZSkge1xuICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHsgLy8gQ29tcGFyZSB0aGUgcmVtYWluaW5nIHZhbHVlcy5cbiAgICAgICAgICBpZiAoKHZhbHVlID0gdmFsdWVzW2ldKSAhPSBudWxsICYmIG1pbiA+IHZhbHVlKSB7XG4gICAgICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBlbHNlIHtcbiAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBGaW5kIHRoZSBmaXJzdCBjb21wYXJhYmxlIHZhbHVlLlxuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWVzW2ldLCBpLCB2YWx1ZXMpKSAhPSBudWxsICYmIHZhbHVlID49IHZhbHVlKSB7XG4gICAgICAgIG1pbiA9IHZhbHVlO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgeyAvLyBDb21wYXJlIHRoZSByZW1haW5pbmcgdmFsdWVzLlxuICAgICAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlc1tpXSwgaSwgdmFsdWVzKSkgIT0gbnVsbCAmJiBtaW4gPiB2YWx1ZSkge1xuICAgICAgICAgICAgbWluID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1pbjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHggPT09IG51bGwgPyBOYU4gOiAreDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gIGlmIChmID09IG51bGwpIGYgPSBwYWlyO1xuICB2YXIgaSA9IDAsIG4gPSBhcnJheS5sZW5ndGggLSAxLCBwID0gYXJyYXlbMF0sIHBhaXJzID0gbmV3IEFycmF5KG4gPCAwID8gMCA6IG4pO1xuICB3aGlsZSAoaSA8IG4pIHBhaXJzW2ldID0gZihwLCBwID0gYXJyYXlbKytpXSk7XG4gIHJldHVybiBwYWlycztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhaXIoYSwgYikge1xuICByZXR1cm4gW2EsIGJdO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXksIGluZGV4ZXMpIHtcbiAgdmFyIGkgPSBpbmRleGVzLmxlbmd0aCwgcGVybXV0ZXMgPSBuZXcgQXJyYXkoaSk7XG4gIHdoaWxlIChpLS0pIHBlcm11dGVzW2ldID0gYXJyYXlbaW5kZXhlc1tpXV07XG4gIHJldHVybiBwZXJtdXRlcztcbn1cbiIsImltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgcCwgdmFsdWVvZikge1xuICBpZiAodmFsdWVvZiA9PSBudWxsKSB2YWx1ZW9mID0gbnVtYmVyO1xuICBpZiAoIShuID0gdmFsdWVzLmxlbmd0aCkpIHJldHVybjtcbiAgaWYgKChwID0gK3ApIDw9IDAgfHwgbiA8IDIpIHJldHVybiArdmFsdWVvZih2YWx1ZXNbMF0sIDAsIHZhbHVlcyk7XG4gIGlmIChwID49IDEpIHJldHVybiArdmFsdWVvZih2YWx1ZXNbbiAtIDFdLCBuIC0gMSwgdmFsdWVzKTtcbiAgdmFyIG4sXG4gICAgICBpID0gKG4gLSAxKSAqIHAsXG4gICAgICBpMCA9IE1hdGguZmxvb3IoaSksXG4gICAgICB2YWx1ZTAgPSArdmFsdWVvZih2YWx1ZXNbaTBdLCBpMCwgdmFsdWVzKSxcbiAgICAgIHZhbHVlMSA9ICt2YWx1ZW9mKHZhbHVlc1tpMCArIDFdLCBpMCArIDEsIHZhbHVlcyk7XG4gIHJldHVybiB2YWx1ZTAgKyAodmFsdWUxIC0gdmFsdWUwKSAqIChpIC0gaTApO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RhcnQsIHN0b3AsIHN0ZXApIHtcbiAgc3RhcnQgPSArc3RhcnQsIHN0b3AgPSArc3RvcCwgc3RlcCA9IChuID0gYXJndW1lbnRzLmxlbmd0aCkgPCAyID8gKHN0b3AgPSBzdGFydCwgc3RhcnQgPSAwLCAxKSA6IG4gPCAzID8gMSA6ICtzdGVwO1xuXG4gIHZhciBpID0gLTEsXG4gICAgICBuID0gTWF0aC5tYXgoMCwgTWF0aC5jZWlsKChzdG9wIC0gc3RhcnQpIC8gc3RlcCkpIHwgMCxcbiAgICAgIHJhbmdlID0gbmV3IEFycmF5KG4pO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgcmFuZ2VbaV0gPSBzdGFydCArIGkgKiBzdGVwO1xuICB9XG5cbiAgcmV0dXJuIHJhbmdlO1xufVxuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCBjb21wYXJlKSB7XG4gIGlmICghKG4gPSB2YWx1ZXMubGVuZ3RoKSkgcmV0dXJuO1xuICB2YXIgbixcbiAgICAgIGkgPSAwLFxuICAgICAgaiA9IDAsXG4gICAgICB4aSxcbiAgICAgIHhqID0gdmFsdWVzW2pdO1xuXG4gIGlmIChjb21wYXJlID09IG51bGwpIGNvbXBhcmUgPSBhc2NlbmRpbmc7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBpZiAoY29tcGFyZSh4aSA9IHZhbHVlc1tpXSwgeGopIDwgMCB8fCBjb21wYXJlKHhqLCB4aikgIT09IDApIHtcbiAgICAgIHhqID0geGksIGogPSBpO1xuICAgIH1cbiAgfVxuXG4gIGlmIChjb21wYXJlKHhqLCB4aikgPT09IDApIHJldHVybiBqO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJyYXksIGkwLCBpMSkge1xuICB2YXIgbSA9IChpMSA9PSBudWxsID8gYXJyYXkubGVuZ3RoIDogaTEpIC0gKGkwID0gaTAgPT0gbnVsbCA/IDAgOiAraTApLFxuICAgICAgdCxcbiAgICAgIGk7XG5cbiAgd2hpbGUgKG0pIHtcbiAgICBpID0gTWF0aC5yYW5kb20oKSAqIG0tLSB8IDA7XG4gICAgdCA9IGFycmF5W20gKyBpMF07XG4gICAgYXJyYXlbbSArIGkwXSA9IGFycmF5W2kgKyBpMF07XG4gICAgYXJyYXlbaSArIGkwXSA9IHQ7XG4gIH1cblxuICByZXR1cm4gYXJyYXk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgaSA9IC0xLFxuICAgICAgdmFsdWUsXG4gICAgICBzdW0gPSAwO1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKHZhbHVlID0gK3ZhbHVlc1tpXSkgc3VtICs9IHZhbHVlOyAvLyBOb3RlOiB6ZXJvIGFuZCBudWxsIGFyZSBlcXVpdmFsZW50LlxuICAgIH1cbiAgfVxuXG4gIGVsc2Uge1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodmFsdWUgPSArdmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpIHN1bSArPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3VtO1xufVxuIiwiaW1wb3J0IHttYXB9IGZyb20gXCIuLi9hcnJheVwiO1xuaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi4vYXNjZW5kaW5nXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuLi9udW1iZXJcIjtcbmltcG9ydCBxdWFudGlsZSBmcm9tIFwiLi4vcXVhbnRpbGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCBtaW4sIG1heCkge1xuICB2YWx1ZXMgPSBtYXAuY2FsbCh2YWx1ZXMsIG51bWJlcikuc29ydChhc2NlbmRpbmcpO1xuICByZXR1cm4gTWF0aC5jZWlsKChtYXggLSBtaW4pIC8gKDIgKiAocXVhbnRpbGUodmFsdWVzLCAwLjc1KSAtIHF1YW50aWxlKHZhbHVlcywgMC4yNSkpICogTWF0aC5wb3codmFsdWVzLmxlbmd0aCwgLTEgLyAzKSkpO1xufVxuIiwiaW1wb3J0IGRldmlhdGlvbiBmcm9tIFwiLi4vZGV2aWF0aW9uXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgbWluLCBtYXgpIHtcbiAgcmV0dXJuIE1hdGguY2VpbCgobWF4IC0gbWluKSAvICgzLjUgKiBkZXZpYXRpb24odmFsdWVzKSAqIE1hdGgucG93KHZhbHVlcy5sZW5ndGgsIC0xIC8gMykpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcykge1xuICByZXR1cm4gTWF0aC5jZWlsKE1hdGgubG9nKHZhbHVlcy5sZW5ndGgpIC8gTWF0aC5MTjIpICsgMTtcbn1cbiIsInZhciBlMTAgPSBNYXRoLnNxcnQoNTApLFxuICAgIGU1ID0gTWF0aC5zcXJ0KDEwKSxcbiAgICBlMiA9IE1hdGguc3FydCgyKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RhcnQsIHN0b3AsIGNvdW50KSB7XG4gIHZhciByZXZlcnNlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbixcbiAgICAgIHRpY2tzLFxuICAgICAgc3RlcDtcblxuICBzdG9wID0gK3N0b3AsIHN0YXJ0ID0gK3N0YXJ0LCBjb3VudCA9ICtjb3VudDtcbiAgaWYgKHN0YXJ0ID09PSBzdG9wICYmIGNvdW50ID4gMCkgcmV0dXJuIFtzdGFydF07XG4gIGlmIChyZXZlcnNlID0gc3RvcCA8IHN0YXJ0KSBuID0gc3RhcnQsIHN0YXJ0ID0gc3RvcCwgc3RvcCA9IG47XG4gIGlmICgoc3RlcCA9IHRpY2tJbmNyZW1lbnQoc3RhcnQsIHN0b3AsIGNvdW50KSkgPT09IDAgfHwgIWlzRmluaXRlKHN0ZXApKSByZXR1cm4gW107XG5cbiAgaWYgKHN0ZXAgPiAwKSB7XG4gICAgc3RhcnQgPSBNYXRoLmNlaWwoc3RhcnQgLyBzdGVwKTtcbiAgICBzdG9wID0gTWF0aC5mbG9vcihzdG9wIC8gc3RlcCk7XG4gICAgdGlja3MgPSBuZXcgQXJyYXkobiA9IE1hdGguY2VpbChzdG9wIC0gc3RhcnQgKyAxKSk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHRpY2tzW2ldID0gKHN0YXJ0ICsgaSkgKiBzdGVwO1xuICB9IGVsc2Uge1xuICAgIHN0YXJ0ID0gTWF0aC5mbG9vcihzdGFydCAqIHN0ZXApO1xuICAgIHN0b3AgPSBNYXRoLmNlaWwoc3RvcCAqIHN0ZXApO1xuICAgIHRpY2tzID0gbmV3IEFycmF5KG4gPSBNYXRoLmNlaWwoc3RhcnQgLSBzdG9wICsgMSkpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB0aWNrc1tpXSA9IChzdGFydCAtIGkpIC8gc3RlcDtcbiAgfVxuXG4gIGlmIChyZXZlcnNlKSB0aWNrcy5yZXZlcnNlKCk7XG5cbiAgcmV0dXJuIHRpY2tzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAgPSAoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHBvd2VyID0gTWF0aC5mbG9vcihNYXRoLmxvZyhzdGVwKSAvIE1hdGguTE4xMCksXG4gICAgICBlcnJvciA9IHN0ZXAgLyBNYXRoLnBvdygxMCwgcG93ZXIpO1xuICByZXR1cm4gcG93ZXIgPj0gMFxuICAgICAgPyAoZXJyb3IgPj0gZTEwID8gMTAgOiBlcnJvciA+PSBlNSA/IDUgOiBlcnJvciA+PSBlMiA/IDIgOiAxKSAqIE1hdGgucG93KDEwLCBwb3dlcilcbiAgICAgIDogLU1hdGgucG93KDEwLCAtcG93ZXIpIC8gKGVycm9yID49IGUxMCA/IDEwIDogZXJyb3IgPj0gZTUgPyA1IDogZXJyb3IgPj0gZTIgPyAyIDogMSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aWNrU3RlcChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAwID0gTWF0aC5hYnMoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHN0ZXAxID0gTWF0aC5wb3coMTAsIE1hdGguZmxvb3IoTWF0aC5sb2coc3RlcDApIC8gTWF0aC5MTjEwKSksXG4gICAgICBlcnJvciA9IHN0ZXAwIC8gc3RlcDE7XG4gIGlmIChlcnJvciA+PSBlMTApIHN0ZXAxICo9IDEwO1xuICBlbHNlIGlmIChlcnJvciA+PSBlNSkgc3RlcDEgKj0gNTtcbiAgZWxzZSBpZiAoZXJyb3IgPj0gZTIpIHN0ZXAxICo9IDI7XG4gIHJldHVybiBzdG9wIDwgc3RhcnQgPyAtc3RlcDEgOiBzdGVwMTtcbn1cbiIsImltcG9ydCBtaW4gZnJvbSBcIi4vbWluXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdHJpeCkge1xuICBpZiAoIShuID0gbWF0cml4Lmxlbmd0aCkpIHJldHVybiBbXTtcbiAgZm9yICh2YXIgaSA9IC0xLCBtID0gbWluKG1hdHJpeCwgbGVuZ3RoKSwgdHJhbnNwb3NlID0gbmV3IEFycmF5KG0pOyArK2kgPCBtOykge1xuICAgIGZvciAodmFyIGogPSAtMSwgbiwgcm93ID0gdHJhbnNwb3NlW2ldID0gbmV3IEFycmF5KG4pOyArK2ogPCBuOykge1xuICAgICAgcm93W2pdID0gbWF0cml4W2pdW2ldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJhbnNwb3NlO1xufVxuXG5mdW5jdGlvbiBsZW5ndGgoZCkge1xuICByZXR1cm4gZC5sZW5ndGg7XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgdmFyIG4gPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgbSA9IDAsXG4gICAgICBpID0gLTEsXG4gICAgICBtZWFuID0gMCxcbiAgICAgIHZhbHVlLFxuICAgICAgZGVsdGEsXG4gICAgICBzdW0gPSAwO1xuXG4gIGlmICh2YWx1ZW9mID09IG51bGwpIHtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgaWYgKCFpc05hTih2YWx1ZSA9IG51bWJlcih2YWx1ZXNbaV0pKSkge1xuICAgICAgICBkZWx0YSA9IHZhbHVlIC0gbWVhbjtcbiAgICAgICAgbWVhbiArPSBkZWx0YSAvICsrbTtcbiAgICAgICAgc3VtICs9IGRlbHRhICogKHZhbHVlIC0gbWVhbik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZWxzZSB7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICghaXNOYU4odmFsdWUgPSBudW1iZXIodmFsdWVvZih2YWx1ZXNbaV0sIGksIHZhbHVlcykpKSkge1xuICAgICAgICBkZWx0YSA9IHZhbHVlIC0gbWVhbjtcbiAgICAgICAgbWVhbiArPSBkZWx0YSAvICsrbTtcbiAgICAgICAgc3VtICs9IGRlbHRhICogKHZhbHVlIC0gbWVhbik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKG0gPiAxKSByZXR1cm4gc3VtIC8gKG0gLSAxKTtcbn1cbiIsImltcG9ydCB0cmFuc3Bvc2UgZnJvbSBcIi4vdHJhbnNwb3NlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdHJhbnNwb3NlKGFyZ3VtZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXApIHtcbiAgdmFyIGVudHJpZXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG1hcCkgZW50cmllcy5wdXNoKHtrZXk6IGtleSwgdmFsdWU6IG1hcFtrZXldfSk7XG4gIHJldHVybiBlbnRyaWVzO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIG5lc3R9IGZyb20gXCIuL25lc3RcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZXR9IGZyb20gXCIuL3NldFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1hcH0gZnJvbSBcIi4vbWFwXCI7XG5leHBvcnQge2RlZmF1bHQgYXMga2V5c30gZnJvbSBcIi4va2V5c1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZhbHVlc30gZnJvbSBcIi4vdmFsdWVzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZW50cmllc30gZnJvbSBcIi4vZW50cmllc1wiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWFwKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBtYXApIGtleXMucHVzaChrZXkpO1xuICByZXR1cm4ga2V5cztcbn1cbiIsImV4cG9ydCB2YXIgcHJlZml4ID0gXCIkXCI7XG5cbmZ1bmN0aW9uIE1hcCgpIHt9XG5cbk1hcC5wcm90b3R5cGUgPSBtYXAucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTWFwLFxuICBoYXM6IGZ1bmN0aW9uKGtleSkge1xuICAgIHJldHVybiAocHJlZml4ICsga2V5KSBpbiB0aGlzO1xuICB9LFxuICBnZXQ6IGZ1bmN0aW9uKGtleSkge1xuICAgIHJldHVybiB0aGlzW3ByZWZpeCArIGtleV07XG4gIH0sXG4gIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHRoaXNbcHJlZml4ICsga2V5XSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uKGtleSkge1xuICAgIHZhciBwcm9wZXJ0eSA9IHByZWZpeCArIGtleTtcbiAgICByZXR1cm4gcHJvcGVydHkgaW4gdGhpcyAmJiBkZWxldGUgdGhpc1twcm9wZXJ0eV07XG4gIH0sXG4gIGNsZWFyOiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgZGVsZXRlIHRoaXNbcHJvcGVydHldO1xuICB9LFxuICBrZXlzOiBmdW5jdGlvbigpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSBrZXlzLnB1c2gocHJvcGVydHkuc2xpY2UoMSkpO1xuICAgIHJldHVybiBrZXlzO1xuICB9LFxuICB2YWx1ZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgdmFsdWVzLnB1c2godGhpc1twcm9wZXJ0eV0pO1xuICAgIHJldHVybiB2YWx1ZXM7XG4gIH0sXG4gIGVudHJpZXM6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIGVudHJpZXMucHVzaCh7a2V5OiBwcm9wZXJ0eS5zbGljZSgxKSwgdmFsdWU6IHRoaXNbcHJvcGVydHldfSk7XG4gICAgcmV0dXJuIGVudHJpZXM7XG4gIH0sXG4gIHNpemU6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzaXplID0gMDtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiB0aGlzKSBpZiAocHJvcGVydHlbMF0gPT09IHByZWZpeCkgKytzaXplO1xuICAgIHJldHVybiBzaXplO1xuICB9LFxuICBlbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gdGhpcykgaWYgKHByb3BlcnR5WzBdID09PSBwcmVmaXgpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZWFjaDogZnVuY3Rpb24oZikge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHRoaXMpIGlmIChwcm9wZXJ0eVswXSA9PT0gcHJlZml4KSBmKHRoaXNbcHJvcGVydHldLCBwcm9wZXJ0eS5zbGljZSgxKSwgdGhpcyk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIG1hcChvYmplY3QsIGYpIHtcbiAgdmFyIG1hcCA9IG5ldyBNYXA7XG5cbiAgLy8gQ29weSBjb25zdHJ1Y3Rvci5cbiAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIE1hcCkgb2JqZWN0LmVhY2goZnVuY3Rpb24odmFsdWUsIGtleSkgeyBtYXAuc2V0KGtleSwgdmFsdWUpOyB9KTtcblxuICAvLyBJbmRleCBhcnJheSBieSBudW1lcmljIGluZGV4IG9yIHNwZWNpZmllZCBrZXkgZnVuY3Rpb24uXG4gIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkob2JqZWN0KSkge1xuICAgIHZhciBpID0gLTEsXG4gICAgICAgIG4gPSBvYmplY3QubGVuZ3RoLFxuICAgICAgICBvO1xuXG4gICAgaWYgKGYgPT0gbnVsbCkgd2hpbGUgKCsraSA8IG4pIG1hcC5zZXQoaSwgb2JqZWN0W2ldKTtcbiAgICBlbHNlIHdoaWxlICgrK2kgPCBuKSBtYXAuc2V0KGYobyA9IG9iamVjdFtpXSwgaSwgb2JqZWN0KSwgbyk7XG4gIH1cblxuICAvLyBDb252ZXJ0IG9iamVjdCB0byBtYXAuXG4gIGVsc2UgaWYgKG9iamVjdCkgZm9yICh2YXIga2V5IGluIG9iamVjdCkgbWFwLnNldChrZXksIG9iamVjdFtrZXldKTtcblxuICByZXR1cm4gbWFwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtYXA7XG4iLCJpbXBvcnQgbWFwIGZyb20gXCIuL21hcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGtleXMgPSBbXSxcbiAgICAgIHNvcnRLZXlzID0gW10sXG4gICAgICBzb3J0VmFsdWVzLFxuICAgICAgcm9sbHVwLFxuICAgICAgbmVzdDtcblxuICBmdW5jdGlvbiBhcHBseShhcnJheSwgZGVwdGgsIGNyZWF0ZVJlc3VsdCwgc2V0UmVzdWx0KSB7XG4gICAgaWYgKGRlcHRoID49IGtleXMubGVuZ3RoKSB7XG4gICAgICBpZiAoc29ydFZhbHVlcyAhPSBudWxsKSBhcnJheS5zb3J0KHNvcnRWYWx1ZXMpO1xuICAgICAgcmV0dXJuIHJvbGx1cCAhPSBudWxsID8gcm9sbHVwKGFycmF5KSA6IGFycmF5O1xuICAgIH1cblxuICAgIHZhciBpID0gLTEsXG4gICAgICAgIG4gPSBhcnJheS5sZW5ndGgsXG4gICAgICAgIGtleSA9IGtleXNbZGVwdGgrK10sXG4gICAgICAgIGtleVZhbHVlLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgdmFsdWVzQnlLZXkgPSBtYXAoKSxcbiAgICAgICAgdmFsdWVzLFxuICAgICAgICByZXN1bHQgPSBjcmVhdGVSZXN1bHQoKTtcblxuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodmFsdWVzID0gdmFsdWVzQnlLZXkuZ2V0KGtleVZhbHVlID0ga2V5KHZhbHVlID0gYXJyYXlbaV0pICsgXCJcIikpIHtcbiAgICAgICAgdmFsdWVzLnB1c2godmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWVzQnlLZXkuc2V0KGtleVZhbHVlLCBbdmFsdWVdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YWx1ZXNCeUtleS5lYWNoKGZ1bmN0aW9uKHZhbHVlcywga2V5KSB7XG4gICAgICBzZXRSZXN1bHQocmVzdWx0LCBrZXksIGFwcGx5KHZhbHVlcywgZGVwdGgsIGNyZWF0ZVJlc3VsdCwgc2V0UmVzdWx0KSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gZW50cmllcyhtYXAsIGRlcHRoKSB7XG4gICAgaWYgKCsrZGVwdGggPiBrZXlzLmxlbmd0aCkgcmV0dXJuIG1hcDtcbiAgICB2YXIgYXJyYXksIHNvcnRLZXkgPSBzb3J0S2V5c1tkZXB0aCAtIDFdO1xuICAgIGlmIChyb2xsdXAgIT0gbnVsbCAmJiBkZXB0aCA+PSBrZXlzLmxlbmd0aCkgYXJyYXkgPSBtYXAuZW50cmllcygpO1xuICAgIGVsc2UgYXJyYXkgPSBbXSwgbWFwLmVhY2goZnVuY3Rpb24odiwgaykgeyBhcnJheS5wdXNoKHtrZXk6IGssIHZhbHVlczogZW50cmllcyh2LCBkZXB0aCl9KTsgfSk7XG4gICAgcmV0dXJuIHNvcnRLZXkgIT0gbnVsbCA/IGFycmF5LnNvcnQoZnVuY3Rpb24oYSwgYikgeyByZXR1cm4gc29ydEtleShhLmtleSwgYi5rZXkpOyB9KSA6IGFycmF5O1xuICB9XG5cbiAgcmV0dXJuIG5lc3QgPSB7XG4gICAgb2JqZWN0OiBmdW5jdGlvbihhcnJheSkgeyByZXR1cm4gYXBwbHkoYXJyYXksIDAsIGNyZWF0ZU9iamVjdCwgc2V0T2JqZWN0KTsgfSxcbiAgICBtYXA6IGZ1bmN0aW9uKGFycmF5KSB7IHJldHVybiBhcHBseShhcnJheSwgMCwgY3JlYXRlTWFwLCBzZXRNYXApOyB9LFxuICAgIGVudHJpZXM6IGZ1bmN0aW9uKGFycmF5KSB7IHJldHVybiBlbnRyaWVzKGFwcGx5KGFycmF5LCAwLCBjcmVhdGVNYXAsIHNldE1hcCksIDApOyB9LFxuICAgIGtleTogZnVuY3Rpb24oZCkgeyBrZXlzLnB1c2goZCk7IHJldHVybiBuZXN0OyB9LFxuICAgIHNvcnRLZXlzOiBmdW5jdGlvbihvcmRlcikgeyBzb3J0S2V5c1trZXlzLmxlbmd0aCAtIDFdID0gb3JkZXI7IHJldHVybiBuZXN0OyB9LFxuICAgIHNvcnRWYWx1ZXM6IGZ1bmN0aW9uKG9yZGVyKSB7IHNvcnRWYWx1ZXMgPSBvcmRlcjsgcmV0dXJuIG5lc3Q7IH0sXG4gICAgcm9sbHVwOiBmdW5jdGlvbihmKSB7IHJvbGx1cCA9IGY7IHJldHVybiBuZXN0OyB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU9iamVjdCgpIHtcbiAgcmV0dXJuIHt9O1xufVxuXG5mdW5jdGlvbiBzZXRPYmplY3Qob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1hcCgpIHtcbiAgcmV0dXJuIG1hcCgpO1xufVxuXG5mdW5jdGlvbiBzZXRNYXAobWFwLCBrZXksIHZhbHVlKSB7XG4gIG1hcC5zZXQoa2V5LCB2YWx1ZSk7XG59XG4iLCJpbXBvcnQge2RlZmF1bHQgYXMgbWFwLCBwcmVmaXh9IGZyb20gXCIuL21hcFwiO1xuXG5mdW5jdGlvbiBTZXQoKSB7fVxuXG52YXIgcHJvdG8gPSBtYXAucHJvdG90eXBlO1xuXG5TZXQucHJvdG90eXBlID0gc2V0LnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFNldCxcbiAgaGFzOiBwcm90by5oYXMsXG4gIGFkZDogZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YWx1ZSArPSBcIlwiO1xuICAgIHRoaXNbcHJlZml4ICsgdmFsdWVdID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIHJlbW92ZTogcHJvdG8ucmVtb3ZlLFxuICBjbGVhcjogcHJvdG8uY2xlYXIsXG4gIHZhbHVlczogcHJvdG8ua2V5cyxcbiAgc2l6ZTogcHJvdG8uc2l6ZSxcbiAgZW1wdHk6IHByb3RvLmVtcHR5LFxuICBlYWNoOiBwcm90by5lYWNoXG59O1xuXG5mdW5jdGlvbiBzZXQob2JqZWN0LCBmKSB7XG4gIHZhciBzZXQgPSBuZXcgU2V0O1xuXG4gIC8vIENvcHkgY29uc3RydWN0b3IuXG4gIGlmIChvYmplY3QgaW5zdGFuY2VvZiBTZXQpIG9iamVjdC5lYWNoKGZ1bmN0aW9uKHZhbHVlKSB7IHNldC5hZGQodmFsdWUpOyB9KTtcblxuICAvLyBPdGhlcndpc2UsIGFzc3VtZSBpdOKAmXMgYW4gYXJyYXkuXG4gIGVsc2UgaWYgKG9iamVjdCkge1xuICAgIHZhciBpID0gLTEsIG4gPSBvYmplY3QubGVuZ3RoO1xuICAgIGlmIChmID09IG51bGwpIHdoaWxlICgrK2kgPCBuKSBzZXQuYWRkKG9iamVjdFtpXSk7XG4gICAgZWxzZSB3aGlsZSAoKytpIDwgbikgc2V0LmFkZChmKG9iamVjdFtpXSwgaSwgb2JqZWN0KSk7XG4gIH1cblxuICByZXR1cm4gc2V0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBzZXQ7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihtYXApIHtcbiAgdmFyIHZhbHVlcyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gbWFwKSB2YWx1ZXMucHVzaChtYXBba2V5XSk7XG4gIHJldHVybiB2YWx1ZXM7XG59XG4iLCJpbXBvcnQgZGVmaW5lLCB7ZXh0ZW5kfSBmcm9tIFwiLi9kZWZpbmVcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENvbG9yKCkge31cblxuZXhwb3J0IHZhciBkYXJrZXIgPSAwLjc7XG5leHBvcnQgdmFyIGJyaWdodGVyID0gMSAvIGRhcmtlcjtcblxudmFyIHJlSSA9IFwiXFxcXHMqKFsrLV0/XFxcXGQrKVxcXFxzKlwiLFxuICAgIHJlTiA9IFwiXFxcXHMqKFsrLV0/XFxcXGQqXFxcXC4/XFxcXGQrKD86W2VFXVsrLV0/XFxcXGQrKT8pXFxcXHMqXCIsXG4gICAgcmVQID0gXCJcXFxccyooWystXT9cXFxcZCpcXFxcLj9cXFxcZCsoPzpbZUVdWystXT9cXFxcZCspPyklXFxcXHMqXCIsXG4gICAgcmVIZXgzID0gL14jKFswLTlhLWZdezN9KSQvLFxuICAgIHJlSGV4NiA9IC9eIyhbMC05YS1mXXs2fSkkLyxcbiAgICByZVJnYkludGVnZXIgPSBuZXcgUmVnRXhwKFwiXnJnYlxcXFwoXCIgKyBbcmVJLCByZUksIHJlSV0gKyBcIlxcXFwpJFwiKSxcbiAgICByZVJnYlBlcmNlbnQgPSBuZXcgUmVnRXhwKFwiXnJnYlxcXFwoXCIgKyBbcmVQLCByZVAsIHJlUF0gKyBcIlxcXFwpJFwiKSxcbiAgICByZVJnYmFJbnRlZ2VyID0gbmV3IFJlZ0V4cChcIl5yZ2JhXFxcXChcIiArIFtyZUksIHJlSSwgcmVJLCByZU5dICsgXCJcXFxcKSRcIiksXG4gICAgcmVSZ2JhUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJecmdiYVxcXFwoXCIgKyBbcmVQLCByZVAsIHJlUCwgcmVOXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlSHNsUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJeaHNsXFxcXChcIiArIFtyZU4sIHJlUCwgcmVQXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlSHNsYVBlcmNlbnQgPSBuZXcgUmVnRXhwKFwiXmhzbGFcXFxcKFwiICsgW3JlTiwgcmVQLCByZVAsIHJlTl0gKyBcIlxcXFwpJFwiKTtcblxudmFyIG5hbWVkID0ge1xuICBhbGljZWJsdWU6IDB4ZjBmOGZmLFxuICBhbnRpcXVld2hpdGU6IDB4ZmFlYmQ3LFxuICBhcXVhOiAweDAwZmZmZixcbiAgYXF1YW1hcmluZTogMHg3ZmZmZDQsXG4gIGF6dXJlOiAweGYwZmZmZixcbiAgYmVpZ2U6IDB4ZjVmNWRjLFxuICBiaXNxdWU6IDB4ZmZlNGM0LFxuICBibGFjazogMHgwMDAwMDAsXG4gIGJsYW5jaGVkYWxtb25kOiAweGZmZWJjZCxcbiAgYmx1ZTogMHgwMDAwZmYsXG4gIGJsdWV2aW9sZXQ6IDB4OGEyYmUyLFxuICBicm93bjogMHhhNTJhMmEsXG4gIGJ1cmx5d29vZDogMHhkZWI4ODcsXG4gIGNhZGV0Ymx1ZTogMHg1ZjllYTAsXG4gIGNoYXJ0cmV1c2U6IDB4N2ZmZjAwLFxuICBjaG9jb2xhdGU6IDB4ZDI2OTFlLFxuICBjb3JhbDogMHhmZjdmNTAsXG4gIGNvcm5mbG93ZXJibHVlOiAweDY0OTVlZCxcbiAgY29ybnNpbGs6IDB4ZmZmOGRjLFxuICBjcmltc29uOiAweGRjMTQzYyxcbiAgY3lhbjogMHgwMGZmZmYsXG4gIGRhcmtibHVlOiAweDAwMDA4YixcbiAgZGFya2N5YW46IDB4MDA4YjhiLFxuICBkYXJrZ29sZGVucm9kOiAweGI4ODYwYixcbiAgZGFya2dyYXk6IDB4YTlhOWE5LFxuICBkYXJrZ3JlZW46IDB4MDA2NDAwLFxuICBkYXJrZ3JleTogMHhhOWE5YTksXG4gIGRhcmtraGFraTogMHhiZGI3NmIsXG4gIGRhcmttYWdlbnRhOiAweDhiMDA4YixcbiAgZGFya29saXZlZ3JlZW46IDB4NTU2YjJmLFxuICBkYXJrb3JhbmdlOiAweGZmOGMwMCxcbiAgZGFya29yY2hpZDogMHg5OTMyY2MsXG4gIGRhcmtyZWQ6IDB4OGIwMDAwLFxuICBkYXJrc2FsbW9uOiAweGU5OTY3YSxcbiAgZGFya3NlYWdyZWVuOiAweDhmYmM4ZixcbiAgZGFya3NsYXRlYmx1ZTogMHg0ODNkOGIsXG4gIGRhcmtzbGF0ZWdyYXk6IDB4MmY0ZjRmLFxuICBkYXJrc2xhdGVncmV5OiAweDJmNGY0ZixcbiAgZGFya3R1cnF1b2lzZTogMHgwMGNlZDEsXG4gIGRhcmt2aW9sZXQ6IDB4OTQwMGQzLFxuICBkZWVwcGluazogMHhmZjE0OTMsXG4gIGRlZXBza3libHVlOiAweDAwYmZmZixcbiAgZGltZ3JheTogMHg2OTY5NjksXG4gIGRpbWdyZXk6IDB4Njk2OTY5LFxuICBkb2RnZXJibHVlOiAweDFlOTBmZixcbiAgZmlyZWJyaWNrOiAweGIyMjIyMixcbiAgZmxvcmFsd2hpdGU6IDB4ZmZmYWYwLFxuICBmb3Jlc3RncmVlbjogMHgyMjhiMjIsXG4gIGZ1Y2hzaWE6IDB4ZmYwMGZmLFxuICBnYWluc2Jvcm86IDB4ZGNkY2RjLFxuICBnaG9zdHdoaXRlOiAweGY4ZjhmZixcbiAgZ29sZDogMHhmZmQ3MDAsXG4gIGdvbGRlbnJvZDogMHhkYWE1MjAsXG4gIGdyYXk6IDB4ODA4MDgwLFxuICBncmVlbjogMHgwMDgwMDAsXG4gIGdyZWVueWVsbG93OiAweGFkZmYyZixcbiAgZ3JleTogMHg4MDgwODAsXG4gIGhvbmV5ZGV3OiAweGYwZmZmMCxcbiAgaG90cGluazogMHhmZjY5YjQsXG4gIGluZGlhbnJlZDogMHhjZDVjNWMsXG4gIGluZGlnbzogMHg0YjAwODIsXG4gIGl2b3J5OiAweGZmZmZmMCxcbiAga2hha2k6IDB4ZjBlNjhjLFxuICBsYXZlbmRlcjogMHhlNmU2ZmEsXG4gIGxhdmVuZGVyYmx1c2g6IDB4ZmZmMGY1LFxuICBsYXduZ3JlZW46IDB4N2NmYzAwLFxuICBsZW1vbmNoaWZmb246IDB4ZmZmYWNkLFxuICBsaWdodGJsdWU6IDB4YWRkOGU2LFxuICBsaWdodGNvcmFsOiAweGYwODA4MCxcbiAgbGlnaHRjeWFuOiAweGUwZmZmZixcbiAgbGlnaHRnb2xkZW5yb2R5ZWxsb3c6IDB4ZmFmYWQyLFxuICBsaWdodGdyYXk6IDB4ZDNkM2QzLFxuICBsaWdodGdyZWVuOiAweDkwZWU5MCxcbiAgbGlnaHRncmV5OiAweGQzZDNkMyxcbiAgbGlnaHRwaW5rOiAweGZmYjZjMSxcbiAgbGlnaHRzYWxtb246IDB4ZmZhMDdhLFxuICBsaWdodHNlYWdyZWVuOiAweDIwYjJhYSxcbiAgbGlnaHRza3libHVlOiAweDg3Y2VmYSxcbiAgbGlnaHRzbGF0ZWdyYXk6IDB4Nzc4ODk5LFxuICBsaWdodHNsYXRlZ3JleTogMHg3Nzg4OTksXG4gIGxpZ2h0c3RlZWxibHVlOiAweGIwYzRkZSxcbiAgbGlnaHR5ZWxsb3c6IDB4ZmZmZmUwLFxuICBsaW1lOiAweDAwZmYwMCxcbiAgbGltZWdyZWVuOiAweDMyY2QzMixcbiAgbGluZW46IDB4ZmFmMGU2LFxuICBtYWdlbnRhOiAweGZmMDBmZixcbiAgbWFyb29uOiAweDgwMDAwMCxcbiAgbWVkaXVtYXF1YW1hcmluZTogMHg2NmNkYWEsXG4gIG1lZGl1bWJsdWU6IDB4MDAwMGNkLFxuICBtZWRpdW1vcmNoaWQ6IDB4YmE1NWQzLFxuICBtZWRpdW1wdXJwbGU6IDB4OTM3MGRiLFxuICBtZWRpdW1zZWFncmVlbjogMHgzY2IzNzEsXG4gIG1lZGl1bXNsYXRlYmx1ZTogMHg3YjY4ZWUsXG4gIG1lZGl1bXNwcmluZ2dyZWVuOiAweDAwZmE5YSxcbiAgbWVkaXVtdHVycXVvaXNlOiAweDQ4ZDFjYyxcbiAgbWVkaXVtdmlvbGV0cmVkOiAweGM3MTU4NSxcbiAgbWlkbmlnaHRibHVlOiAweDE5MTk3MCxcbiAgbWludGNyZWFtOiAweGY1ZmZmYSxcbiAgbWlzdHlyb3NlOiAweGZmZTRlMSxcbiAgbW9jY2FzaW46IDB4ZmZlNGI1LFxuICBuYXZham93aGl0ZTogMHhmZmRlYWQsXG4gIG5hdnk6IDB4MDAwMDgwLFxuICBvbGRsYWNlOiAweGZkZjVlNixcbiAgb2xpdmU6IDB4ODA4MDAwLFxuICBvbGl2ZWRyYWI6IDB4NmI4ZTIzLFxuICBvcmFuZ2U6IDB4ZmZhNTAwLFxuICBvcmFuZ2VyZWQ6IDB4ZmY0NTAwLFxuICBvcmNoaWQ6IDB4ZGE3MGQ2LFxuICBwYWxlZ29sZGVucm9kOiAweGVlZThhYSxcbiAgcGFsZWdyZWVuOiAweDk4ZmI5OCxcbiAgcGFsZXR1cnF1b2lzZTogMHhhZmVlZWUsXG4gIHBhbGV2aW9sZXRyZWQ6IDB4ZGI3MDkzLFxuICBwYXBheWF3aGlwOiAweGZmZWZkNSxcbiAgcGVhY2hwdWZmOiAweGZmZGFiOSxcbiAgcGVydTogMHhjZDg1M2YsXG4gIHBpbms6IDB4ZmZjMGNiLFxuICBwbHVtOiAweGRkYTBkZCxcbiAgcG93ZGVyYmx1ZTogMHhiMGUwZTYsXG4gIHB1cnBsZTogMHg4MDAwODAsXG4gIHJlYmVjY2FwdXJwbGU6IDB4NjYzMzk5LFxuICByZWQ6IDB4ZmYwMDAwLFxuICByb3N5YnJvd246IDB4YmM4ZjhmLFxuICByb3lhbGJsdWU6IDB4NDE2OWUxLFxuICBzYWRkbGVicm93bjogMHg4YjQ1MTMsXG4gIHNhbG1vbjogMHhmYTgwNzIsXG4gIHNhbmR5YnJvd246IDB4ZjRhNDYwLFxuICBzZWFncmVlbjogMHgyZThiNTcsXG4gIHNlYXNoZWxsOiAweGZmZjVlZSxcbiAgc2llbm5hOiAweGEwNTIyZCxcbiAgc2lsdmVyOiAweGMwYzBjMCxcbiAgc2t5Ymx1ZTogMHg4N2NlZWIsXG4gIHNsYXRlYmx1ZTogMHg2YTVhY2QsXG4gIHNsYXRlZ3JheTogMHg3MDgwOTAsXG4gIHNsYXRlZ3JleTogMHg3MDgwOTAsXG4gIHNub3c6IDB4ZmZmYWZhLFxuICBzcHJpbmdncmVlbjogMHgwMGZmN2YsXG4gIHN0ZWVsYmx1ZTogMHg0NjgyYjQsXG4gIHRhbjogMHhkMmI0OGMsXG4gIHRlYWw6IDB4MDA4MDgwLFxuICB0aGlzdGxlOiAweGQ4YmZkOCxcbiAgdG9tYXRvOiAweGZmNjM0NyxcbiAgdHVycXVvaXNlOiAweDQwZTBkMCxcbiAgdmlvbGV0OiAweGVlODJlZSxcbiAgd2hlYXQ6IDB4ZjVkZWIzLFxuICB3aGl0ZTogMHhmZmZmZmYsXG4gIHdoaXRlc21va2U6IDB4ZjVmNWY1LFxuICB5ZWxsb3c6IDB4ZmZmZjAwLFxuICB5ZWxsb3dncmVlbjogMHg5YWNkMzJcbn07XG5cbmRlZmluZShDb2xvciwgY29sb3IsIHtcbiAgZGlzcGxheWFibGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnJnYigpLmRpc3BsYXlhYmxlKCk7XG4gIH0sXG4gIGhleDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucmdiKCkuaGV4KCk7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5yZ2IoKSArIFwiXCI7XG4gIH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb2xvcihmb3JtYXQpIHtcbiAgdmFyIG07XG4gIGZvcm1hdCA9IChmb3JtYXQgKyBcIlwiKS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgcmV0dXJuIChtID0gcmVIZXgzLmV4ZWMoZm9ybWF0KSkgPyAobSA9IHBhcnNlSW50KG1bMV0sIDE2KSwgbmV3IFJnYigobSA+PiA4ICYgMHhmKSB8IChtID4+IDQgJiAweDBmMCksIChtID4+IDQgJiAweGYpIHwgKG0gJiAweGYwKSwgKChtICYgMHhmKSA8PCA0KSB8IChtICYgMHhmKSwgMSkpIC8vICNmMDBcbiAgICAgIDogKG0gPSByZUhleDYuZXhlYyhmb3JtYXQpKSA/IHJnYm4ocGFyc2VJbnQobVsxXSwgMTYpKSAvLyAjZmYwMDAwXG4gICAgICA6IChtID0gcmVSZ2JJbnRlZ2VyLmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0sIG1bMl0sIG1bM10sIDEpIC8vIHJnYigyNTUsIDAsIDApXG4gICAgICA6IChtID0gcmVSZ2JQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIDEpIC8vIHJnYigxMDAlLCAwJSwgMCUpXG4gICAgICA6IChtID0gcmVSZ2JhSW50ZWdlci5leGVjKGZvcm1hdCkpID8gcmdiYShtWzFdLCBtWzJdLCBtWzNdLCBtWzRdKSAvLyByZ2JhKDI1NSwgMCwgMCwgMSlcbiAgICAgIDogKG0gPSByZVJnYmFQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyByZ2JhKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIG1bNF0pIC8vIHJnYigxMDAlLCAwJSwgMCUsIDEpXG4gICAgICA6IChtID0gcmVIc2xQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBoc2xhKG1bMV0sIG1bMl0gLyAxMDAsIG1bM10gLyAxMDAsIDEpIC8vIGhzbCgxMjAsIDUwJSwgNTAlKVxuICAgICAgOiAobSA9IHJlSHNsYVBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IGhzbGEobVsxXSwgbVsyXSAvIDEwMCwgbVszXSAvIDEwMCwgbVs0XSkgLy8gaHNsYSgxMjAsIDUwJSwgNTAlLCAxKVxuICAgICAgOiBuYW1lZC5oYXNPd25Qcm9wZXJ0eShmb3JtYXQpID8gcmdibihuYW1lZFtmb3JtYXRdKVxuICAgICAgOiBmb3JtYXQgPT09IFwidHJhbnNwYXJlbnRcIiA/IG5ldyBSZ2IoTmFOLCBOYU4sIE5hTiwgMClcbiAgICAgIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gcmdibihuKSB7XG4gIHJldHVybiBuZXcgUmdiKG4gPj4gMTYgJiAweGZmLCBuID4+IDggJiAweGZmLCBuICYgMHhmZiwgMSk7XG59XG5cbmZ1bmN0aW9uIHJnYmEociwgZywgYiwgYSkge1xuICBpZiAoYSA8PSAwKSByID0gZyA9IGIgPSBOYU47XG4gIHJldHVybiBuZXcgUmdiKHIsIGcsIGIsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmdiQ29udmVydChvKSB7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBDb2xvcikpIG8gPSBjb2xvcihvKTtcbiAgaWYgKCFvKSByZXR1cm4gbmV3IFJnYjtcbiAgbyA9IG8ucmdiKCk7XG4gIHJldHVybiBuZXcgUmdiKG8uciwgby5nLCBvLmIsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZ2IociwgZywgYiwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IHJnYkNvbnZlcnQocikgOiBuZXcgUmdiKHIsIGcsIGIsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJnYihyLCBnLCBiLCBvcGFjaXR5KSB7XG4gIHRoaXMuciA9ICtyO1xuICB0aGlzLmcgPSArZztcbiAgdGhpcy5iID0gK2I7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoUmdiLCByZ2IsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBicmlnaHRlciA6IE1hdGgucG93KGJyaWdodGVyLCBrKTtcbiAgICByZXR1cm4gbmV3IFJnYih0aGlzLnIgKiBrLCB0aGlzLmcgKiBrLCB0aGlzLmIgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IFJnYih0aGlzLnIgKiBrLCB0aGlzLmcgKiBrLCB0aGlzLmIgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBkaXNwbGF5YWJsZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICgwIDw9IHRoaXMuciAmJiB0aGlzLnIgPD0gMjU1KVxuICAgICAgICAmJiAoMCA8PSB0aGlzLmcgJiYgdGhpcy5nIDw9IDI1NSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5iICYmIHRoaXMuYiA8PSAyNTUpXG4gICAgICAgICYmICgwIDw9IHRoaXMub3BhY2l0eSAmJiB0aGlzLm9wYWNpdHkgPD0gMSk7XG4gIH0sXG4gIGhleDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwiI1wiICsgaGV4KHRoaXMucikgKyBoZXgodGhpcy5nKSArIGhleCh0aGlzLmIpO1xuICB9LFxuICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGEgPSB0aGlzLm9wYWNpdHk7IGEgPSBpc05hTihhKSA/IDEgOiBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBhKSk7XG4gICAgcmV0dXJuIChhID09PSAxID8gXCJyZ2IoXCIgOiBcInJnYmEoXCIpXG4gICAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMucikgfHwgMCkpICsgXCIsIFwiXG4gICAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMuZykgfHwgMCkpICsgXCIsIFwiXG4gICAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMuYikgfHwgMCkpXG4gICAgICAgICsgKGEgPT09IDEgPyBcIilcIiA6IFwiLCBcIiArIGEgKyBcIilcIik7XG4gIH1cbn0pKTtcblxuZnVuY3Rpb24gaGV4KHZhbHVlKSB7XG4gIHZhbHVlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHZhbHVlKSB8fCAwKSk7XG4gIHJldHVybiAodmFsdWUgPCAxNiA/IFwiMFwiIDogXCJcIikgKyB2YWx1ZS50b1N0cmluZygxNik7XG59XG5cbmZ1bmN0aW9uIGhzbGEoaCwgcywgbCwgYSkge1xuICBpZiAoYSA8PSAwKSBoID0gcyA9IGwgPSBOYU47XG4gIGVsc2UgaWYgKGwgPD0gMCB8fCBsID49IDEpIGggPSBzID0gTmFOO1xuICBlbHNlIGlmIChzIDw9IDApIGggPSBOYU47XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHNsQ29udmVydChvKSB7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbmV3IEhzbChvLmgsIG8ucywgby5sLCBvLm9wYWNpdHkpO1xuICBpZiAoIShvIGluc3RhbmNlb2YgQ29sb3IpKSBvID0gY29sb3Iobyk7XG4gIGlmICghbykgcmV0dXJuIG5ldyBIc2w7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbztcbiAgbyA9IG8ucmdiKCk7XG4gIHZhciByID0gby5yIC8gMjU1LFxuICAgICAgZyA9IG8uZyAvIDI1NSxcbiAgICAgIGIgPSBvLmIgLyAyNTUsXG4gICAgICBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKSxcbiAgICAgIG1heCA9IE1hdGgubWF4KHIsIGcsIGIpLFxuICAgICAgaCA9IE5hTixcbiAgICAgIHMgPSBtYXggLSBtaW4sXG4gICAgICBsID0gKG1heCArIG1pbikgLyAyO1xuICBpZiAocykge1xuICAgIGlmIChyID09PSBtYXgpIGggPSAoZyAtIGIpIC8gcyArIChnIDwgYikgKiA2O1xuICAgIGVsc2UgaWYgKGcgPT09IG1heCkgaCA9IChiIC0gcikgLyBzICsgMjtcbiAgICBlbHNlIGggPSAociAtIGcpIC8gcyArIDQ7XG4gICAgcyAvPSBsIDwgMC41ID8gbWF4ICsgbWluIDogMiAtIG1heCAtIG1pbjtcbiAgICBoICo9IDYwO1xuICB9IGVsc2Uge1xuICAgIHMgPSBsID4gMCAmJiBsIDwgMSA/IDAgOiBoO1xuICB9XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoc2woaCwgcywgbCwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGhzbENvbnZlcnQoaCkgOiBuZXcgSHNsKGgsIHMsIGwsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZnVuY3Rpb24gSHNsKGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgdGhpcy5oID0gK2g7XG4gIHRoaXMucyA9ICtzO1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShIc2wsIGhzbCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgSHNsKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IEhzbCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgaCA9IHRoaXMuaCAlIDM2MCArICh0aGlzLmggPCAwKSAqIDM2MCxcbiAgICAgICAgcyA9IGlzTmFOKGgpIHx8IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zLFxuICAgICAgICBsID0gdGhpcy5sLFxuICAgICAgICBtMiA9IGwgKyAobCA8IDAuNSA/IGwgOiAxIC0gbCkgKiBzLFxuICAgICAgICBtMSA9IDIgKiBsIC0gbTI7XG4gICAgcmV0dXJuIG5ldyBSZ2IoXG4gICAgICBoc2wycmdiKGggPj0gMjQwID8gaCAtIDI0MCA6IGggKyAxMjAsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGgsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGggPCAxMjAgPyBoICsgMjQwIDogaCAtIDEyMCwgbTEsIG0yKSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH0sXG4gIGRpc3BsYXlhYmxlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKDAgPD0gdGhpcy5zICYmIHRoaXMucyA8PSAxIHx8IGlzTmFOKHRoaXMucykpXG4gICAgICAgICYmICgwIDw9IHRoaXMubCAmJiB0aGlzLmwgPD0gMSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5vcGFjaXR5ICYmIHRoaXMub3BhY2l0eSA8PSAxKTtcbiAgfVxufSkpO1xuXG4vKiBGcm9tIEZ2RCAxMy4zNywgQ1NTIENvbG9yIE1vZHVsZSBMZXZlbCAzICovXG5mdW5jdGlvbiBoc2wycmdiKGgsIG0xLCBtMikge1xuICByZXR1cm4gKGggPCA2MCA/IG0xICsgKG0yIC0gbTEpICogaCAvIDYwXG4gICAgICA6IGggPCAxODAgPyBtMlxuICAgICAgOiBoIDwgMjQwID8gbTEgKyAobTIgLSBtMSkgKiAoMjQwIC0gaCkgLyA2MFxuICAgICAgOiBtMSkgKiAyNTU7XG59XG4iLCJpbXBvcnQgZGVmaW5lLCB7ZXh0ZW5kfSBmcm9tIFwiLi9kZWZpbmVcIjtcbmltcG9ydCB7Q29sb3IsIHJnYkNvbnZlcnQsIFJnYiwgZGFya2VyLCBicmlnaHRlcn0gZnJvbSBcIi4vY29sb3JcIjtcbmltcG9ydCB7ZGVnMnJhZCwgcmFkMmRlZ30gZnJvbSBcIi4vbWF0aFwiO1xuXG52YXIgQSA9IC0wLjE0ODYxLFxuICAgIEIgPSArMS43ODI3NyxcbiAgICBDID0gLTAuMjkyMjcsXG4gICAgRCA9IC0wLjkwNjQ5LFxuICAgIEUgPSArMS45NzI5NCxcbiAgICBFRCA9IEUgKiBELFxuICAgIEVCID0gRSAqIEIsXG4gICAgQkNfREEgPSBCICogQyAtIEQgKiBBO1xuXG5mdW5jdGlvbiBjdWJlaGVsaXhDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBDdWJlaGVsaXgpIHJldHVybiBuZXcgQ3ViZWhlbGl4KG8uaCwgby5zLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBSZ2IpKSBvID0gcmdiQ29udmVydChvKTtcbiAgdmFyIHIgPSBvLnIgLyAyNTUsXG4gICAgICBnID0gby5nIC8gMjU1LFxuICAgICAgYiA9IG8uYiAvIDI1NSxcbiAgICAgIGwgPSAoQkNfREEgKiBiICsgRUQgKiByIC0gRUIgKiBnKSAvIChCQ19EQSArIEVEIC0gRUIpLFxuICAgICAgYmwgPSBiIC0gbCxcbiAgICAgIGsgPSAoRSAqIChnIC0gbCkgLSBDICogYmwpIC8gRCxcbiAgICAgIHMgPSBNYXRoLnNxcnQoayAqIGsgKyBibCAqIGJsKSAvIChFICogbCAqICgxIC0gbCkpLCAvLyBOYU4gaWYgbD0wIG9yIGw9MVxuICAgICAgaCA9IHMgPyBNYXRoLmF0YW4yKGssIGJsKSAqIHJhZDJkZWcgLSAxMjAgOiBOYU47XG4gIHJldHVybiBuZXcgQ3ViZWhlbGl4KGggPCAwID8gaCArIDM2MCA6IGgsIHMsIGwsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGN1YmVoZWxpeChoLCBzLCBsLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gY3ViZWhlbGl4Q29udmVydChoKSA6IG5ldyBDdWJlaGVsaXgoaCwgcywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ3ViZWhlbGl4KGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgdGhpcy5oID0gK2g7XG4gIHRoaXMucyA9ICtzO1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShDdWJlaGVsaXgsIGN1YmVoZWxpeCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgQ3ViZWhlbGl4KHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IEN1YmVoZWxpeCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgaCA9IGlzTmFOKHRoaXMuaCkgPyAwIDogKHRoaXMuaCArIDEyMCkgKiBkZWcycmFkLFxuICAgICAgICBsID0gK3RoaXMubCxcbiAgICAgICAgYSA9IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zICogbCAqICgxIC0gbCksXG4gICAgICAgIGNvc2ggPSBNYXRoLmNvcyhoKSxcbiAgICAgICAgc2luaCA9IE1hdGguc2luKGgpO1xuICAgIHJldHVybiBuZXcgUmdiKFxuICAgICAgMjU1ICogKGwgKyBhICogKEEgKiBjb3NoICsgQiAqIHNpbmgpKSxcbiAgICAgIDI1NSAqIChsICsgYSAqIChDICogY29zaCArIEQgKiBzaW5oKSksXG4gICAgICAyNTUgKiAobCArIGEgKiAoRSAqIGNvc2gpKSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH1cbn0pKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnN0cnVjdG9yLCBmYWN0b3J5LCBwcm90b3R5cGUpIHtcbiAgY29uc3RydWN0b3IucHJvdG90eXBlID0gZmFjdG9yeS5wcm90b3R5cGUgPSBwcm90b3R5cGU7XG4gIHByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGNvbnN0cnVjdG9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kKHBhcmVudCwgZGVmaW5pdGlvbikge1xuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwYXJlbnQucHJvdG90eXBlKTtcbiAgZm9yICh2YXIga2V5IGluIGRlZmluaXRpb24pIHByb3RvdHlwZVtrZXldID0gZGVmaW5pdGlvbltrZXldO1xuICByZXR1cm4gcHJvdG90eXBlO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNvbG9yLCByZ2IsIGhzbH0gZnJvbSBcIi4vY29sb3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsYWIsIGhjbCwgbGNoLCBncmF5fSBmcm9tIFwiLi9sYWJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdWJlaGVsaXh9IGZyb20gXCIuL2N1YmVoZWxpeFwiO1xuIiwiaW1wb3J0IGRlZmluZSwge2V4dGVuZH0gZnJvbSBcIi4vZGVmaW5lXCI7XG5pbXBvcnQge0NvbG9yLCByZ2JDb252ZXJ0LCBSZ2J9IGZyb20gXCIuL2NvbG9yXCI7XG5pbXBvcnQge2RlZzJyYWQsIHJhZDJkZWd9IGZyb20gXCIuL21hdGhcIjtcblxuLy8gaHR0cHM6Ly9iZXRhLm9ic2VydmFibGVocS5jb20vQG1ib3N0b2NrL2xhYi1hbmQtcmdiXG52YXIgSyA9IDE4LFxuICAgIFhuID0gMC45NjQyMixcbiAgICBZbiA9IDEsXG4gICAgWm4gPSAwLjgyNTIxLFxuICAgIHQwID0gNCAvIDI5LFxuICAgIHQxID0gNiAvIDI5LFxuICAgIHQyID0gMyAqIHQxICogdDEsXG4gICAgdDMgPSB0MSAqIHQxICogdDE7XG5cbmZ1bmN0aW9uIGxhYkNvbnZlcnQobykge1xuICBpZiAobyBpbnN0YW5jZW9mIExhYikgcmV0dXJuIG5ldyBMYWIoby5sLCBvLmEsIG8uYiwgby5vcGFjaXR5KTtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIY2wpIHtcbiAgICBpZiAoaXNOYU4oby5oKSkgcmV0dXJuIG5ldyBMYWIoby5sLCAwLCAwLCBvLm9wYWNpdHkpO1xuICAgIHZhciBoID0gby5oICogZGVnMnJhZDtcbiAgICByZXR1cm4gbmV3IExhYihvLmwsIE1hdGguY29zKGgpICogby5jLCBNYXRoLnNpbihoKSAqIG8uYywgby5vcGFjaXR5KTtcbiAgfVxuICBpZiAoIShvIGluc3RhbmNlb2YgUmdiKSkgbyA9IHJnYkNvbnZlcnQobyk7XG4gIHZhciByID0gcmdiMmxyZ2Ioby5yKSxcbiAgICAgIGcgPSByZ2IybHJnYihvLmcpLFxuICAgICAgYiA9IHJnYjJscmdiKG8uYiksXG4gICAgICB5ID0geHl6MmxhYigoMC4yMjI1MDQ1ICogciArIDAuNzE2ODc4NiAqIGcgKyAwLjA2MDYxNjkgKiBiKSAvIFluKSwgeCwgejtcbiAgaWYgKHIgPT09IGcgJiYgZyA9PT0gYikgeCA9IHogPSB5OyBlbHNlIHtcbiAgICB4ID0geHl6MmxhYigoMC40MzYwNzQ3ICogciArIDAuMzg1MDY0OSAqIGcgKyAwLjE0MzA4MDQgKiBiKSAvIFhuKTtcbiAgICB6ID0geHl6MmxhYigoMC4wMTM5MzIyICogciArIDAuMDk3MTA0NSAqIGcgKyAwLjcxNDE3MzMgKiBiKSAvIFpuKTtcbiAgfVxuICByZXR1cm4gbmV3IExhYigxMTYgKiB5IC0gMTYsIDUwMCAqICh4IC0geSksIDIwMCAqICh5IC0geiksIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBncmF5KGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIG5ldyBMYWIobCwgMCwgMCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsYWIobCwgYSwgYiwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGxhYkNvbnZlcnQobCkgOiBuZXcgTGFiKGwsIGEsIGIsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIExhYihsLCBhLCBiLCBvcGFjaXR5KSB7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLmEgPSArYTtcbiAgdGhpcy5iID0gK2I7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoTGFiLCBsYWIsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgTGFiKHRoaXMubCArIEsgKiAoayA9PSBudWxsID8gMSA6IGspLCB0aGlzLmEsIHRoaXMuYiwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgZGFya2VyOiBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBMYWIodGhpcy5sIC0gSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMuYSwgdGhpcy5iLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB5ID0gKHRoaXMubCArIDE2KSAvIDExNixcbiAgICAgICAgeCA9IGlzTmFOKHRoaXMuYSkgPyB5IDogeSArIHRoaXMuYSAvIDUwMCxcbiAgICAgICAgeiA9IGlzTmFOKHRoaXMuYikgPyB5IDogeSAtIHRoaXMuYiAvIDIwMDtcbiAgICB4ID0gWG4gKiBsYWIyeHl6KHgpO1xuICAgIHkgPSBZbiAqIGxhYjJ4eXooeSk7XG4gICAgeiA9IFpuICogbGFiMnh5eih6KTtcbiAgICByZXR1cm4gbmV3IFJnYihcbiAgICAgIGxyZ2IycmdiKCAzLjEzMzg1NjEgKiB4IC0gMS42MTY4NjY3ICogeSAtIDAuNDkwNjE0NiAqIHopLFxuICAgICAgbHJnYjJyZ2IoLTAuOTc4NzY4NCAqIHggKyAxLjkxNjE0MTUgKiB5ICsgMC4wMzM0NTQwICogeiksXG4gICAgICBscmdiMnJnYiggMC4wNzE5NDUzICogeCAtIDAuMjI4OTkxNCAqIHkgKyAxLjQwNTI0MjcgKiB6KSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH1cbn0pKTtcblxuZnVuY3Rpb24geHl6MmxhYih0KSB7XG4gIHJldHVybiB0ID4gdDMgPyBNYXRoLnBvdyh0LCAxIC8gMykgOiB0IC8gdDIgKyB0MDtcbn1cblxuZnVuY3Rpb24gbGFiMnh5eih0KSB7XG4gIHJldHVybiB0ID4gdDEgPyB0ICogdCAqIHQgOiB0MiAqICh0IC0gdDApO1xufVxuXG5mdW5jdGlvbiBscmdiMnJnYih4KSB7XG4gIHJldHVybiAyNTUgKiAoeCA8PSAwLjAwMzEzMDggPyAxMi45MiAqIHggOiAxLjA1NSAqIE1hdGgucG93KHgsIDEgLyAyLjQpIC0gMC4wNTUpO1xufVxuXG5mdW5jdGlvbiByZ2IybHJnYih4KSB7XG4gIHJldHVybiAoeCAvPSAyNTUpIDw9IDAuMDQwNDUgPyB4IC8gMTIuOTIgOiBNYXRoLnBvdygoeCArIDAuMDU1KSAvIDEuMDU1LCAyLjQpO1xufVxuXG5mdW5jdGlvbiBoY2xDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIY2wpIHJldHVybiBuZXcgSGNsKG8uaCwgby5jLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBMYWIpKSBvID0gbGFiQ29udmVydChvKTtcbiAgaWYgKG8uYSA9PT0gMCAmJiBvLmIgPT09IDApIHJldHVybiBuZXcgSGNsKE5hTiwgMCwgby5sLCBvLm9wYWNpdHkpO1xuICB2YXIgaCA9IE1hdGguYXRhbjIoby5iLCBvLmEpICogcmFkMmRlZztcbiAgcmV0dXJuIG5ldyBIY2woaCA8IDAgPyBoICsgMzYwIDogaCwgTWF0aC5zcXJ0KG8uYSAqIG8uYSArIG8uYiAqIG8uYiksIG8ubCwgby5vcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxjaChsLCBjLCBoLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaGNsQ29udmVydChsKSA6IG5ldyBIY2woaCwgYywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGNsKGgsIGMsIGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBoY2xDb252ZXJ0KGgpIDogbmV3IEhjbChoLCBjLCBsLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBIY2woaCwgYywgbCwgb3BhY2l0eSkge1xuICB0aGlzLmggPSAraDtcbiAgdGhpcy5jID0gK2M7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLm9wYWNpdHkgPSArb3BhY2l0eTtcbn1cblxuZGVmaW5lKEhjbCwgaGNsLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IEhjbCh0aGlzLmgsIHRoaXMuYywgdGhpcy5sICsgSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgSGNsKHRoaXMuaCwgdGhpcy5jLCB0aGlzLmwgLSBLICogKGsgPT0gbnVsbCA/IDEgOiBrKSwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gbGFiQ29udmVydCh0aGlzKS5yZ2IoKTtcbiAgfVxufSkpO1xuIiwiZXhwb3J0IHZhciBkZWcycmFkID0gTWF0aC5QSSAvIDE4MDtcbmV4cG9ydCB2YXIgcmFkMmRlZyA9IDE4MCAvIE1hdGguUEk7XG4iLCJ2YXIgbm9vcCA9IHt2YWx1ZTogZnVuY3Rpb24oKSB7fX07XG5cbmZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IGFyZ3VtZW50cy5sZW5ndGgsIF8gPSB7fSwgdDsgaSA8IG47ICsraSkge1xuICAgIGlmICghKHQgPSBhcmd1bWVudHNbaV0gKyBcIlwiKSB8fCAodCBpbiBfKSkgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCB0eXBlOiBcIiArIHQpO1xuICAgIF9bdF0gPSBbXTtcbiAgfVxuICByZXR1cm4gbmV3IERpc3BhdGNoKF8pO1xufVxuXG5mdW5jdGlvbiBEaXNwYXRjaChfKSB7XG4gIHRoaXMuXyA9IF87XG59XG5cbmZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcywgdHlwZXMpIHtcbiAgcmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XFxzKy8pLm1hcChmdW5jdGlvbih0KSB7XG4gICAgdmFyIG5hbWUgPSBcIlwiLCBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSBuYW1lID0gdC5zbGljZShpICsgMSksIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIGlmICh0ICYmICF0eXBlcy5oYXNPd25Qcm9wZXJ0eSh0KSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHQpO1xuICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07XG4gIH0pO1xufVxuXG5EaXNwYXRjaC5wcm90b3R5cGUgPSBkaXNwYXRjaC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBEaXNwYXRjaCxcbiAgb246IGZ1bmN0aW9uKHR5cGVuYW1lLCBjYWxsYmFjaykge1xuICAgIHZhciBfID0gdGhpcy5fLFxuICAgICAgICBUID0gcGFyc2VUeXBlbmFtZXModHlwZW5hbWUgKyBcIlwiLCBfKSxcbiAgICAgICAgdCxcbiAgICAgICAgaSA9IC0xLFxuICAgICAgICBuID0gVC5sZW5ndGg7XG5cbiAgICAvLyBJZiBubyBjYWxsYmFjayB3YXMgc3BlY2lmaWVkLCByZXR1cm4gdGhlIGNhbGxiYWNrIG9mIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpICYmICh0ID0gZ2V0KF9bdF0sIHR5cGVuYW1lLm5hbWUpKSkgcmV0dXJuIHQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSWYgYSB0eXBlIHdhcyBzcGVjaWZpZWQsIHNldCB0aGUgY2FsbGJhY2sgZm9yIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIC8vIE90aGVyd2lzZSwgaWYgYSBudWxsIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJlbW92ZSBjYWxsYmFja3Mgb2YgdGhlIGdpdmVuIG5hbWUuXG4gICAgaWYgKGNhbGxiYWNrICE9IG51bGwgJiYgdHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgY2FsbGJhY2s6IFwiICsgY2FsbGJhY2spO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgY2FsbGJhY2spO1xuICAgICAgZWxzZSBpZiAoY2FsbGJhY2sgPT0gbnVsbCkgZm9yICh0IGluIF8pIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgbnVsbCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIGNvcHk6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjb3B5ID0ge30sIF8gPSB0aGlzLl87XG4gICAgZm9yICh2YXIgdCBpbiBfKSBjb3B5W3RdID0gX1t0XS5zbGljZSgpO1xuICAgIHJldHVybiBuZXcgRGlzcGF0Y2goY29weSk7XG4gIH0sXG4gIGNhbGw6IGZ1bmN0aW9uKHR5cGUsIHRoYXQpIHtcbiAgICBpZiAoKG4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMikgPiAwKSBmb3IgKHZhciBhcmdzID0gbmV3IEFycmF5KG4pLCBpID0gMCwgbiwgdDsgaSA8IG47ICsraSkgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMl07XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7XG4gIH0sXG4gIGFwcGx5OiBmdW5jdGlvbih0eXBlLCB0aGF0LCBhcmdzKSB7XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHZhciB0ID0gdGhpcy5fW3R5cGVdLCBpID0gMCwgbiA9IHQubGVuZ3RoOyBpIDwgbjsgKytpKSB0W2ldLnZhbHVlLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBnZXQodHlwZSwgbmFtZSkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoLCBjOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKChjID0gdHlwZVtpXSkubmFtZSA9PT0gbmFtZSkge1xuICAgICAgcmV0dXJuIGMudmFsdWU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNldCh0eXBlLCBuYW1lLCBjYWxsYmFjaykge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKHR5cGVbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgdHlwZVtpXSA9IG5vb3AsIHR5cGUgPSB0eXBlLnNsaWNlKDAsIGkpLmNvbmNhdCh0eXBlLnNsaWNlKGkgKyAxKSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgaWYgKGNhbGxiYWNrICE9IG51bGwpIHR5cGUucHVzaCh7bmFtZTogbmFtZSwgdmFsdWU6IGNhbGxiYWNrfSk7XG4gIHJldHVybiB0eXBlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkaXNwYXRjaDtcbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBkaXNwYXRjaH0gZnJvbSBcIi4vZGlzcGF0Y2hcIjtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiaW1wb3J0IHtkaXNwYXRjaH0gZnJvbSBcImQzLWRpc3BhdGNoXCI7XG5pbXBvcnQge2V2ZW50LCBjdXN0b21FdmVudCwgc2VsZWN0LCBtb3VzZSwgdG91Y2h9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBub2RyYWcsIHt5ZXNkcmFnfSBmcm9tIFwiLi9ub2RyYWdcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudFwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgRHJhZ0V2ZW50IGZyb20gXCIuL2V2ZW50XCI7XG5cbi8vIElnbm9yZSByaWdodC1jbGljaywgc2luY2UgdGhhdCBzaG91bGQgb3BlbiB0aGUgY29udGV4dCBtZW51LlxuZnVuY3Rpb24gZGVmYXVsdEZpbHRlcigpIHtcbiAgcmV0dXJuICFldmVudC5idXR0b247XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRDb250YWluZXIoKSB7XG4gIHJldHVybiB0aGlzLnBhcmVudE5vZGU7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRTdWJqZWN0KGQpIHtcbiAgcmV0dXJuIGQgPT0gbnVsbCA/IHt4OiBldmVudC54LCB5OiBldmVudC55fSA6IGQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUb3VjaGFibGUoKSB7XG4gIHJldHVybiBcIm9udG91Y2hzdGFydFwiIGluIHRoaXM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZmlsdGVyID0gZGVmYXVsdEZpbHRlcixcbiAgICAgIGNvbnRhaW5lciA9IGRlZmF1bHRDb250YWluZXIsXG4gICAgICBzdWJqZWN0ID0gZGVmYXVsdFN1YmplY3QsXG4gICAgICB0b3VjaGFibGUgPSBkZWZhdWx0VG91Y2hhYmxlLFxuICAgICAgZ2VzdHVyZXMgPSB7fSxcbiAgICAgIGxpc3RlbmVycyA9IGRpc3BhdGNoKFwic3RhcnRcIiwgXCJkcmFnXCIsIFwiZW5kXCIpLFxuICAgICAgYWN0aXZlID0gMCxcbiAgICAgIG1vdXNlZG93bngsXG4gICAgICBtb3VzZWRvd255LFxuICAgICAgbW91c2Vtb3ZpbmcsXG4gICAgICB0b3VjaGVuZGluZyxcbiAgICAgIGNsaWNrRGlzdGFuY2UyID0gMDtcblxuICBmdW5jdGlvbiBkcmFnKHNlbGVjdGlvbikge1xuICAgIHNlbGVjdGlvblxuICAgICAgICAub24oXCJtb3VzZWRvd24uZHJhZ1wiLCBtb3VzZWRvd25lZClcbiAgICAgIC5maWx0ZXIodG91Y2hhYmxlKVxuICAgICAgICAub24oXCJ0b3VjaHN0YXJ0LmRyYWdcIiwgdG91Y2hzdGFydGVkKVxuICAgICAgICAub24oXCJ0b3VjaG1vdmUuZHJhZ1wiLCB0b3VjaG1vdmVkKVxuICAgICAgICAub24oXCJ0b3VjaGVuZC5kcmFnIHRvdWNoY2FuY2VsLmRyYWdcIiwgdG91Y2hlbmRlZClcbiAgICAgICAgLnN0eWxlKFwidG91Y2gtYWN0aW9uXCIsIFwibm9uZVwiKVxuICAgICAgICAuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJyZ2JhKDAsMCwwLDApXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gbW91c2Vkb3duZWQoKSB7XG4gICAgaWYgKHRvdWNoZW5kaW5nIHx8ICFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnZXN0dXJlID0gYmVmb3Jlc3RhcnQoXCJtb3VzZVwiLCBjb250YWluZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgbW91c2UsIHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKCFnZXN0dXJlKSByZXR1cm47XG4gICAgc2VsZWN0KGV2ZW50LnZpZXcpLm9uKFwibW91c2Vtb3ZlLmRyYWdcIiwgbW91c2Vtb3ZlZCwgdHJ1ZSkub24oXCJtb3VzZXVwLmRyYWdcIiwgbW91c2V1cHBlZCwgdHJ1ZSk7XG4gICAgbm9kcmFnKGV2ZW50LnZpZXcpO1xuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBtb3VzZW1vdmluZyA9IGZhbHNlO1xuICAgIG1vdXNlZG93bnggPSBldmVudC5jbGllbnRYO1xuICAgIG1vdXNlZG93bnkgPSBldmVudC5jbGllbnRZO1xuICAgIGdlc3R1cmUoXCJzdGFydFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdXNlbW92ZWQoKSB7XG4gICAgbm9ldmVudCgpO1xuICAgIGlmICghbW91c2Vtb3ZpbmcpIHtcbiAgICAgIHZhciBkeCA9IGV2ZW50LmNsaWVudFggLSBtb3VzZWRvd254LCBkeSA9IGV2ZW50LmNsaWVudFkgLSBtb3VzZWRvd255O1xuICAgICAgbW91c2Vtb3ZpbmcgPSBkeCAqIGR4ICsgZHkgKiBkeSA+IGNsaWNrRGlzdGFuY2UyO1xuICAgIH1cbiAgICBnZXN0dXJlcy5tb3VzZShcImRyYWdcIik7XG4gIH1cblxuICBmdW5jdGlvbiBtb3VzZXVwcGVkKCkge1xuICAgIHNlbGVjdChldmVudC52aWV3KS5vbihcIm1vdXNlbW92ZS5kcmFnIG1vdXNldXAuZHJhZ1wiLCBudWxsKTtcbiAgICB5ZXNkcmFnKGV2ZW50LnZpZXcsIG1vdXNlbW92aW5nKTtcbiAgICBub2V2ZW50KCk7XG4gICAgZ2VzdHVyZXMubW91c2UoXCJlbmRcIik7XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaHN0YXJ0ZWQoKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIGMgPSBjb250YWluZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCBnZXN0dXJlO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKGdlc3R1cmUgPSBiZWZvcmVzdGFydCh0b3VjaGVzW2ldLmlkZW50aWZpZXIsIGMsIHRvdWNoLCB0aGlzLCBhcmd1bWVudHMpKSB7XG4gICAgICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICAgICAgZ2VzdHVyZShcInN0YXJ0XCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNobW92ZWQoKSB7XG4gICAgdmFyIHRvdWNoZXMgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCBnZXN0dXJlO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKGdlc3R1cmUgPSBnZXN0dXJlc1t0b3VjaGVzW2ldLmlkZW50aWZpZXJdKSB7XG4gICAgICAgIG5vZXZlbnQoKTtcbiAgICAgICAgZ2VzdHVyZShcImRyYWdcIik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2hlbmRlZCgpIHtcbiAgICB2YXIgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIGdlc3R1cmU7XG5cbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIDUwMCk7IC8vIEdob3N0IGNsaWNrcyBhcmUgZGVsYXllZCFcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoZ2VzdHVyZSA9IGdlc3R1cmVzW3RvdWNoZXNbaV0uaWRlbnRpZmllcl0pIHtcbiAgICAgICAgbm9wcm9wYWdhdGlvbigpO1xuICAgICAgICBnZXN0dXJlKFwiZW5kXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGJlZm9yZXN0YXJ0KGlkLCBjb250YWluZXIsIHBvaW50LCB0aGF0LCBhcmdzKSB7XG4gICAgdmFyIHAgPSBwb2ludChjb250YWluZXIsIGlkKSwgcywgZHgsIGR5LFxuICAgICAgICBzdWJsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuY29weSgpO1xuXG4gICAgaWYgKCFjdXN0b21FdmVudChuZXcgRHJhZ0V2ZW50KGRyYWcsIFwiYmVmb3Jlc3RhcnRcIiwgcywgaWQsIGFjdGl2ZSwgcFswXSwgcFsxXSwgMCwgMCwgc3VibGlzdGVuZXJzKSwgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKGV2ZW50LnN1YmplY3QgPSBzID0gc3ViamVjdC5hcHBseSh0aGF0LCBhcmdzKSkgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZHggPSBzLnggLSBwWzBdIHx8IDA7XG4gICAgICBkeSA9IHMueSAtIHBbMV0gfHwgMDtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0pKSByZXR1cm47XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gZ2VzdHVyZSh0eXBlKSB7XG4gICAgICB2YXIgcDAgPSBwLCBuO1xuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgXCJzdGFydFwiOiBnZXN0dXJlc1tpZF0gPSBnZXN0dXJlLCBuID0gYWN0aXZlKys7IGJyZWFrO1xuICAgICAgICBjYXNlIFwiZW5kXCI6IGRlbGV0ZSBnZXN0dXJlc1tpZF0sIC0tYWN0aXZlOyAvLyBub2JyZWFrXG4gICAgICAgIGNhc2UgXCJkcmFnXCI6IHAgPSBwb2ludChjb250YWluZXIsIGlkKSwgbiA9IGFjdGl2ZTsgYnJlYWs7XG4gICAgICB9XG4gICAgICBjdXN0b21FdmVudChuZXcgRHJhZ0V2ZW50KGRyYWcsIHR5cGUsIHMsIGlkLCBuLCBwWzBdICsgZHgsIHBbMV0gKyBkeSwgcFswXSAtIHAwWzBdLCBwWzFdIC0gcDBbMV0sIHN1Ymxpc3RlbmVycyksIHN1Ymxpc3RlbmVycy5hcHBseSwgc3VibGlzdGVuZXJzLCBbdHlwZSwgdGhhdCwgYXJnc10pO1xuICAgIH07XG4gIH1cblxuICBkcmFnLmZpbHRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmaWx0ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGRyYWcpIDogZmlsdGVyO1xuICB9O1xuXG4gIGRyYWcuY29udGFpbmVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvbnRhaW5lciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIGRyYWcpIDogY29udGFpbmVyO1xuICB9O1xuXG4gIGRyYWcuc3ViamVjdCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzdWJqZWN0ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgZHJhZykgOiBzdWJqZWN0O1xuICB9O1xuXG4gIGRyYWcudG91Y2hhYmxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRvdWNoYWJsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgZHJhZykgOiB0b3VjaGFibGU7XG4gIH07XG5cbiAgZHJhZy5vbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZSA9IGxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHZhbHVlID09PSBsaXN0ZW5lcnMgPyBkcmFnIDogdmFsdWU7XG4gIH07XG5cbiAgZHJhZy5jbGlja0Rpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsaWNrRGlzdGFuY2UyID0gKF8gPSArXykgKiBfLCBkcmFnKSA6IE1hdGguc3FydChjbGlja0Rpc3RhbmNlMik7XG4gIH07XG5cbiAgcmV0dXJuIGRyYWc7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEcmFnRXZlbnQodGFyZ2V0LCB0eXBlLCBzdWJqZWN0LCBpZCwgYWN0aXZlLCB4LCB5LCBkeCwgZHksIGRpc3BhdGNoKSB7XG4gIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICB0aGlzLnR5cGUgPSB0eXBlO1xuICB0aGlzLnN1YmplY3QgPSBzdWJqZWN0O1xuICB0aGlzLmlkZW50aWZpZXIgPSBpZDtcbiAgdGhpcy5hY3RpdmUgPSBhY3RpdmU7XG4gIHRoaXMueCA9IHg7XG4gIHRoaXMueSA9IHk7XG4gIHRoaXMuZHggPSBkeDtcbiAgdGhpcy5keSA9IGR5O1xuICB0aGlzLl8gPSBkaXNwYXRjaDtcbn1cblxuRHJhZ0V2ZW50LnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uKCkge1xuICB2YXIgdmFsdWUgPSB0aGlzLl8ub24uYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICByZXR1cm4gdmFsdWUgPT09IHRoaXMuXyA/IHRoaXMgOiB2YWx1ZTtcbn07XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZHJhZ30gZnJvbSBcIi4vZHJhZ1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGRyYWdEaXNhYmxlLCB5ZXNkcmFnIGFzIGRyYWdFbmFibGV9IGZyb20gXCIuL25vZHJhZ1wiO1xuIiwiaW1wb3J0IHtzZWxlY3R9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBub2V2ZW50IGZyb20gXCIuL25vZXZlbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmlldykge1xuICB2YXIgcm9vdCA9IHZpZXcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgc2VsZWN0aW9uID0gc2VsZWN0KHZpZXcpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIiwgbm9ldmVudCwgdHJ1ZSk7XG4gIGlmIChcIm9uc2VsZWN0c3RhcnRcIiBpbiByb290KSB7XG4gICAgc2VsZWN0aW9uLm9uKFwic2VsZWN0c3RhcnQuZHJhZ1wiLCBub2V2ZW50LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICByb290Ll9fbm9zZWxlY3QgPSByb290LnN0eWxlLk1velVzZXJTZWxlY3Q7XG4gICAgcm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0ID0gXCJub25lXCI7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHllc2RyYWcodmlldywgbm9jbGljaykge1xuICB2YXIgcm9vdCA9IHZpZXcuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgICAgc2VsZWN0aW9uID0gc2VsZWN0KHZpZXcpLm9uKFwiZHJhZ3N0YXJ0LmRyYWdcIiwgbnVsbCk7XG4gIGlmIChub2NsaWNrKSB7XG4gICAgc2VsZWN0aW9uLm9uKFwiY2xpY2suZHJhZ1wiLCBub2V2ZW50LCB0cnVlKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBzZWxlY3Rpb24ub24oXCJjbGljay5kcmFnXCIsIG51bGwpOyB9LCAwKTtcbiAgfVxuICBpZiAoXCJvbnNlbGVjdHN0YXJ0XCIgaW4gcm9vdCkge1xuICAgIHNlbGVjdGlvbi5vbihcInNlbGVjdHN0YXJ0LmRyYWdcIiwgbnVsbCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0ID0gcm9vdC5fX25vc2VsZWN0O1xuICAgIGRlbGV0ZSByb290Ll9fbm9zZWxlY3Q7XG4gIH1cbn1cbiIsImltcG9ydCB7ZXZlbnR9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oKSB7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJ2YXIgb3ZlcnNob290ID0gMS43MDE1ODtcblxuZXhwb3J0IHZhciBiYWNrSW4gPSAoZnVuY3Rpb24gY3VzdG9tKHMpIHtcbiAgcyA9ICtzO1xuXG4gIGZ1bmN0aW9uIGJhY2tJbih0KSB7XG4gICAgcmV0dXJuIHQgKiB0ICogKChzICsgMSkgKiB0IC0gcyk7XG4gIH1cblxuICBiYWNrSW4ub3ZlcnNob290ID0gY3VzdG9tO1xuXG4gIHJldHVybiBiYWNrSW47XG59KShvdmVyc2hvb3QpO1xuXG5leHBvcnQgdmFyIGJhY2tPdXQgPSAoZnVuY3Rpb24gY3VzdG9tKHMpIHtcbiAgcyA9ICtzO1xuXG4gIGZ1bmN0aW9uIGJhY2tPdXQodCkge1xuICAgIHJldHVybiAtLXQgKiB0ICogKChzICsgMSkgKiB0ICsgcykgKyAxO1xuICB9XG5cbiAgYmFja091dC5vdmVyc2hvb3QgPSBjdXN0b207XG5cbiAgcmV0dXJuIGJhY2tPdXQ7XG59KShvdmVyc2hvb3QpO1xuXG5leHBvcnQgdmFyIGJhY2tJbk91dCA9IChmdW5jdGlvbiBjdXN0b20ocykge1xuICBzID0gK3M7XG5cbiAgZnVuY3Rpb24gYmFja0luT3V0KHQpIHtcbiAgICByZXR1cm4gKCh0ICo9IDIpIDwgMSA/IHQgKiB0ICogKChzICsgMSkgKiB0IC0gcykgOiAodCAtPSAyKSAqIHQgKiAoKHMgKyAxKSAqIHQgKyBzKSArIDIpIC8gMjtcbiAgfVxuXG4gIGJhY2tJbk91dC5vdmVyc2hvb3QgPSBjdXN0b207XG5cbiAgcmV0dXJuIGJhY2tJbk91dDtcbn0pKG92ZXJzaG9vdCk7XG4iLCJ2YXIgYjEgPSA0IC8gMTEsXG4gICAgYjIgPSA2IC8gMTEsXG4gICAgYjMgPSA4IC8gMTEsXG4gICAgYjQgPSAzIC8gNCxcbiAgICBiNSA9IDkgLyAxMSxcbiAgICBiNiA9IDEwIC8gMTEsXG4gICAgYjcgPSAxNSAvIDE2LFxuICAgIGI4ID0gMjEgLyAyMixcbiAgICBiOSA9IDYzIC8gNjQsXG4gICAgYjAgPSAxIC8gYjEgLyBiMTtcblxuZXhwb3J0IGZ1bmN0aW9uIGJvdW5jZUluKHQpIHtcbiAgcmV0dXJuIDEgLSBib3VuY2VPdXQoMSAtIHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlT3V0KHQpIHtcbiAgcmV0dXJuICh0ID0gK3QpIDwgYjEgPyBiMCAqIHQgKiB0IDogdCA8IGIzID8gYjAgKiAodCAtPSBiMikgKiB0ICsgYjQgOiB0IDwgYjYgPyBiMCAqICh0IC09IGI1KSAqIHQgKyBiNyA6IGIwICogKHQgLT0gYjgpICogdCArIGI5O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlSW5PdXQodCkge1xuICByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyAxIC0gYm91bmNlT3V0KDEgLSB0KSA6IGJvdW5jZU91dCh0IC0gMSkgKyAxKSAvIDI7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gY2lyY2xlSW4odCkge1xuICByZXR1cm4gMSAtIE1hdGguc3FydCgxIC0gdCAqIHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2lyY2xlT3V0KHQpIHtcbiAgcmV0dXJuIE1hdGguc3FydCgxIC0gLS10ICogdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IDEgLSBNYXRoLnNxcnQoMSAtIHQgKiB0KSA6IE1hdGguc3FydCgxIC0gKHQgLT0gMikgKiB0KSArIDEpIC8gMjtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBjdWJpY0luKHQpIHtcbiAgcmV0dXJuIHQgKiB0ICogdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGN1YmljT3V0KHQpIHtcbiAgcmV0dXJuIC0tdCAqIHQgKiB0ICsgMTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGN1YmljSW5PdXQodCkge1xuICByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyB0ICogdCAqIHQgOiAodCAtPSAyKSAqIHQgKiB0ICsgMikgLyAyO1xufVxuIiwidmFyIHRhdSA9IDIgKiBNYXRoLlBJLFxuICAgIGFtcGxpdHVkZSA9IDEsXG4gICAgcGVyaW9kID0gMC4zO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNJbiA9IChmdW5jdGlvbiBjdXN0b20oYSwgcCkge1xuICB2YXIgcyA9IE1hdGguYXNpbigxIC8gKGEgPSBNYXRoLm1heCgxLCBhKSkpICogKHAgLz0gdGF1KTtcblxuICBmdW5jdGlvbiBlbGFzdGljSW4odCkge1xuICAgIHJldHVybiBhICogTWF0aC5wb3coMiwgMTAgKiAtLXQpICogTWF0aC5zaW4oKHMgLSB0KSAvIHApO1xuICB9XG5cbiAgZWxhc3RpY0luLmFtcGxpdHVkZSA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIGN1c3RvbShhLCBwICogdGF1KTsgfTtcbiAgZWxhc3RpY0luLnBlcmlvZCA9IGZ1bmN0aW9uKHApIHsgcmV0dXJuIGN1c3RvbShhLCBwKTsgfTtcblxuICByZXR1cm4gZWxhc3RpY0luO1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNPdXQgPSAoZnVuY3Rpb24gY3VzdG9tKGEsIHApIHtcbiAgdmFyIHMgPSBNYXRoLmFzaW4oMSAvIChhID0gTWF0aC5tYXgoMSwgYSkpKSAqIChwIC89IHRhdSk7XG5cbiAgZnVuY3Rpb24gZWxhc3RpY091dCh0KSB7XG4gICAgcmV0dXJuIDEgLSBhICogTWF0aC5wb3coMiwgLTEwICogKHQgPSArdCkpICogTWF0aC5zaW4oKHQgKyBzKSAvIHApO1xuICB9XG5cbiAgZWxhc3RpY091dC5hbXBsaXR1ZGUgPSBmdW5jdGlvbihhKSB7IHJldHVybiBjdXN0b20oYSwgcCAqIHRhdSk7IH07XG4gIGVsYXN0aWNPdXQucGVyaW9kID0gZnVuY3Rpb24ocCkgeyByZXR1cm4gY3VzdG9tKGEsIHApOyB9O1xuXG4gIHJldHVybiBlbGFzdGljT3V0O1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNJbk91dCA9IChmdW5jdGlvbiBjdXN0b20oYSwgcCkge1xuICB2YXIgcyA9IE1hdGguYXNpbigxIC8gKGEgPSBNYXRoLm1heCgxLCBhKSkpICogKHAgLz0gdGF1KTtcblxuICBmdW5jdGlvbiBlbGFzdGljSW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgPSB0ICogMiAtIDEpIDwgMFxuICAgICAgICA/IGEgKiBNYXRoLnBvdygyLCAxMCAqIHQpICogTWF0aC5zaW4oKHMgLSB0KSAvIHApXG4gICAgICAgIDogMiAtIGEgKiBNYXRoLnBvdygyLCAtMTAgKiB0KSAqIE1hdGguc2luKChzICsgdCkgLyBwKSkgLyAyO1xuICB9XG5cbiAgZWxhc3RpY0luT3V0LmFtcGxpdHVkZSA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIGN1c3RvbShhLCBwICogdGF1KTsgfTtcbiAgZWxhc3RpY0luT3V0LnBlcmlvZCA9IGZ1bmN0aW9uKHApIHsgcmV0dXJuIGN1c3RvbShhLCBwKTsgfTtcblxuICByZXR1cm4gZWxhc3RpY0luT3V0O1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIGV4cEluKHQpIHtcbiAgcmV0dXJuIE1hdGgucG93KDIsIDEwICogdCAtIDEwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4cE91dCh0KSB7XG4gIHJldHVybiAxIC0gTWF0aC5wb3coMiwgLTEwICogdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IE1hdGgucG93KDIsIDEwICogdCAtIDEwKSA6IDIgLSBNYXRoLnBvdygyLCAxMCAtIDEwICogdCkpIC8gMjtcbn1cbiIsImV4cG9ydCB7XG4gIGxpbmVhciBhcyBlYXNlTGluZWFyXG59IGZyb20gXCIuL2xpbmVhclwiO1xuXG5leHBvcnQge1xuICBxdWFkSW5PdXQgYXMgZWFzZVF1YWQsXG4gIHF1YWRJbiBhcyBlYXNlUXVhZEluLFxuICBxdWFkT3V0IGFzIGVhc2VRdWFkT3V0LFxuICBxdWFkSW5PdXQgYXMgZWFzZVF1YWRJbk91dFxufSBmcm9tIFwiLi9xdWFkXCI7XG5cbmV4cG9ydCB7XG4gIGN1YmljSW5PdXQgYXMgZWFzZUN1YmljLFxuICBjdWJpY0luIGFzIGVhc2VDdWJpY0luLFxuICBjdWJpY091dCBhcyBlYXNlQ3ViaWNPdXQsXG4gIGN1YmljSW5PdXQgYXMgZWFzZUN1YmljSW5PdXRcbn0gZnJvbSBcIi4vY3ViaWNcIjtcblxuZXhwb3J0IHtcbiAgcG9seUluT3V0IGFzIGVhc2VQb2x5LFxuICBwb2x5SW4gYXMgZWFzZVBvbHlJbixcbiAgcG9seU91dCBhcyBlYXNlUG9seU91dCxcbiAgcG9seUluT3V0IGFzIGVhc2VQb2x5SW5PdXRcbn0gZnJvbSBcIi4vcG9seVwiO1xuXG5leHBvcnQge1xuICBzaW5Jbk91dCBhcyBlYXNlU2luLFxuICBzaW5JbiBhcyBlYXNlU2luSW4sXG4gIHNpbk91dCBhcyBlYXNlU2luT3V0LFxuICBzaW5Jbk91dCBhcyBlYXNlU2luSW5PdXRcbn0gZnJvbSBcIi4vc2luXCI7XG5cbmV4cG9ydCB7XG4gIGV4cEluT3V0IGFzIGVhc2VFeHAsXG4gIGV4cEluIGFzIGVhc2VFeHBJbixcbiAgZXhwT3V0IGFzIGVhc2VFeHBPdXQsXG4gIGV4cEluT3V0IGFzIGVhc2VFeHBJbk91dFxufSBmcm9tIFwiLi9leHBcIjtcblxuZXhwb3J0IHtcbiAgY2lyY2xlSW5PdXQgYXMgZWFzZUNpcmNsZSxcbiAgY2lyY2xlSW4gYXMgZWFzZUNpcmNsZUluLFxuICBjaXJjbGVPdXQgYXMgZWFzZUNpcmNsZU91dCxcbiAgY2lyY2xlSW5PdXQgYXMgZWFzZUNpcmNsZUluT3V0XG59IGZyb20gXCIuL2NpcmNsZVwiO1xuXG5leHBvcnQge1xuICBib3VuY2VPdXQgYXMgZWFzZUJvdW5jZSxcbiAgYm91bmNlSW4gYXMgZWFzZUJvdW5jZUluLFxuICBib3VuY2VPdXQgYXMgZWFzZUJvdW5jZU91dCxcbiAgYm91bmNlSW5PdXQgYXMgZWFzZUJvdW5jZUluT3V0XG59IGZyb20gXCIuL2JvdW5jZVwiO1xuXG5leHBvcnQge1xuICBiYWNrSW5PdXQgYXMgZWFzZUJhY2ssXG4gIGJhY2tJbiBhcyBlYXNlQmFja0luLFxuICBiYWNrT3V0IGFzIGVhc2VCYWNrT3V0LFxuICBiYWNrSW5PdXQgYXMgZWFzZUJhY2tJbk91dFxufSBmcm9tIFwiLi9iYWNrXCI7XG5cbmV4cG9ydCB7XG4gIGVsYXN0aWNPdXQgYXMgZWFzZUVsYXN0aWMsXG4gIGVsYXN0aWNJbiBhcyBlYXNlRWxhc3RpY0luLFxuICBlbGFzdGljT3V0IGFzIGVhc2VFbGFzdGljT3V0LFxuICBlbGFzdGljSW5PdXQgYXMgZWFzZUVsYXN0aWNJbk91dFxufSBmcm9tIFwiLi9lbGFzdGljXCI7XG4iLCJleHBvcnQgZnVuY3Rpb24gbGluZWFyKHQpIHtcbiAgcmV0dXJuICt0O1xufVxuIiwidmFyIGV4cG9uZW50ID0gMztcblxuZXhwb3J0IHZhciBwb2x5SW4gPSAoZnVuY3Rpb24gY3VzdG9tKGUpIHtcbiAgZSA9ICtlO1xuXG4gIGZ1bmN0aW9uIHBvbHlJbih0KSB7XG4gICAgcmV0dXJuIE1hdGgucG93KHQsIGUpO1xuICB9XG5cbiAgcG9seUluLmV4cG9uZW50ID0gY3VzdG9tO1xuXG4gIHJldHVybiBwb2x5SW47XG59KShleHBvbmVudCk7XG5cbmV4cG9ydCB2YXIgcG9seU91dCA9IChmdW5jdGlvbiBjdXN0b20oZSkge1xuICBlID0gK2U7XG5cbiAgZnVuY3Rpb24gcG9seU91dCh0KSB7XG4gICAgcmV0dXJuIDEgLSBNYXRoLnBvdygxIC0gdCwgZSk7XG4gIH1cblxuICBwb2x5T3V0LmV4cG9uZW50ID0gY3VzdG9tO1xuXG4gIHJldHVybiBwb2x5T3V0O1xufSkoZXhwb25lbnQpO1xuXG5leHBvcnQgdmFyIHBvbHlJbk91dCA9IChmdW5jdGlvbiBjdXN0b20oZSkge1xuICBlID0gK2U7XG5cbiAgZnVuY3Rpb24gcG9seUluT3V0KHQpIHtcbiAgICByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyBNYXRoLnBvdyh0LCBlKSA6IDIgLSBNYXRoLnBvdygyIC0gdCwgZSkpIC8gMjtcbiAgfVxuXG4gIHBvbHlJbk91dC5leHBvbmVudCA9IGN1c3RvbTtcblxuICByZXR1cm4gcG9seUluT3V0O1xufSkoZXhwb25lbnQpO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHF1YWRJbih0KSB7XG4gIHJldHVybiB0ICogdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHF1YWRPdXQodCkge1xuICByZXR1cm4gdCAqICgyIC0gdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxdWFkSW5PdXQodCkge1xuICByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyB0ICogdCA6IC0tdCAqICgyIC0gdCkgKyAxKSAvIDI7XG59XG4iLCJ2YXIgcGkgPSBNYXRoLlBJLFxuICAgIGhhbGZQaSA9IHBpIC8gMjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNpbkluKHQpIHtcbiAgcmV0dXJuIDEgLSBNYXRoLmNvcyh0ICogaGFsZlBpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNpbk91dCh0KSB7XG4gIHJldHVybiBNYXRoLnNpbih0ICogaGFsZlBpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNpbkluT3V0KHQpIHtcbiAgcmV0dXJuICgxIC0gTWF0aC5jb3MocGkgKiB0KSkgLyAyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIG9wdGlvbmFsKGYpIHtcbiAgcmV0dXJuIGYgPT0gbnVsbCA/IG51bGwgOiByZXF1aXJlZChmKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlcXVpcmVkKGYpIHtcbiAgaWYgKHR5cGVvZiBmICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGY7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuXG5leHBvcnQgZnVuY3Rpb24gc2h1ZmZsZShhcnJheSkge1xuICB2YXIgbSA9IGFycmF5Lmxlbmd0aCxcbiAgICAgIHQsXG4gICAgICBpO1xuXG4gIHdoaWxlIChtKSB7XG4gICAgaSA9IE1hdGgucmFuZG9tKCkgKiBtLS0gfCAwO1xuICAgIHQgPSBhcnJheVttXTtcbiAgICBhcnJheVttXSA9IGFycmF5W2ldO1xuICAgIGFycmF5W2ldID0gdDtcbiAgfVxuXG4gIHJldHVybiBhcnJheTtcbn1cbiIsImZ1bmN0aW9uIGRlZmF1bHRTZXBhcmF0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEucGFyZW50ID09PSBiLnBhcmVudCA/IDEgOiAyO1xufVxuXG5mdW5jdGlvbiBtZWFuWChjaGlsZHJlbikge1xuICByZXR1cm4gY2hpbGRyZW4ucmVkdWNlKG1lYW5YUmVkdWNlLCAwKSAvIGNoaWxkcmVuLmxlbmd0aDtcbn1cblxuZnVuY3Rpb24gbWVhblhSZWR1Y2UoeCwgYykge1xuICByZXR1cm4geCArIGMueDtcbn1cblxuZnVuY3Rpb24gbWF4WShjaGlsZHJlbikge1xuICByZXR1cm4gMSArIGNoaWxkcmVuLnJlZHVjZShtYXhZUmVkdWNlLCAwKTtcbn1cblxuZnVuY3Rpb24gbWF4WVJlZHVjZSh5LCBjKSB7XG4gIHJldHVybiBNYXRoLm1heCh5LCBjLnkpO1xufVxuXG5mdW5jdGlvbiBsZWFmTGVmdChub2RlKSB7XG4gIHZhciBjaGlsZHJlbjtcbiAgd2hpbGUgKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgbm9kZSA9IGNoaWxkcmVuWzBdO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZnVuY3Rpb24gbGVhZlJpZ2h0KG5vZGUpIHtcbiAgdmFyIGNoaWxkcmVuO1xuICB3aGlsZSAoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSBub2RlID0gY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV07XG4gIHJldHVybiBub2RlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNlcGFyYXRpb24gPSBkZWZhdWx0U2VwYXJhdGlvbixcbiAgICAgIGR4ID0gMSxcbiAgICAgIGR5ID0gMSxcbiAgICAgIG5vZGVTaXplID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gY2x1c3Rlcihyb290KSB7XG4gICAgdmFyIHByZXZpb3VzTm9kZSxcbiAgICAgICAgeCA9IDA7XG5cbiAgICAvLyBGaXJzdCB3YWxrLCBjb21wdXRpbmcgdGhlIGluaXRpYWwgeCAmIHkgdmFsdWVzLlxuICAgIHJvb3QuZWFjaEFmdGVyKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgICAgbm9kZS54ID0gbWVhblgoY2hpbGRyZW4pO1xuICAgICAgICBub2RlLnkgPSBtYXhZKGNoaWxkcmVuKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGUueCA9IHByZXZpb3VzTm9kZSA/IHggKz0gc2VwYXJhdGlvbihub2RlLCBwcmV2aW91c05vZGUpIDogMDtcbiAgICAgICAgbm9kZS55ID0gMDtcbiAgICAgICAgcHJldmlvdXNOb2RlID0gbm9kZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHZhciBsZWZ0ID0gbGVhZkxlZnQocm9vdCksXG4gICAgICAgIHJpZ2h0ID0gbGVhZlJpZ2h0KHJvb3QpLFxuICAgICAgICB4MCA9IGxlZnQueCAtIHNlcGFyYXRpb24obGVmdCwgcmlnaHQpIC8gMixcbiAgICAgICAgeDEgPSByaWdodC54ICsgc2VwYXJhdGlvbihyaWdodCwgbGVmdCkgLyAyO1xuXG4gICAgLy8gU2Vjb25kIHdhbGssIG5vcm1hbGl6aW5nIHggJiB5IHRvIHRoZSBkZXNpcmVkIHNpemUuXG4gICAgcmV0dXJuIHJvb3QuZWFjaEFmdGVyKG5vZGVTaXplID8gZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZS54ID0gKG5vZGUueCAtIHJvb3QueCkgKiBkeDtcbiAgICAgIG5vZGUueSA9IChyb290LnkgLSBub2RlLnkpICogZHk7XG4gICAgfSA6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGUueCA9IChub2RlLnggLSB4MCkgLyAoeDEgLSB4MCkgKiBkeDtcbiAgICAgIG5vZGUueSA9ICgxIC0gKHJvb3QueSA/IG5vZGUueSAvIHJvb3QueSA6IDEpKSAqIGR5O1xuICAgIH0pO1xuICB9XG5cbiAgY2x1c3Rlci5zZXBhcmF0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNlcGFyYXRpb24gPSB4LCBjbHVzdGVyKSA6IHNlcGFyYXRpb247XG4gIH07XG5cbiAgY2x1c3Rlci5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gZmFsc2UsIGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIGNsdXN0ZXIpIDogKG5vZGVTaXplID8gbnVsbCA6IFtkeCwgZHldKTtcbiAgfTtcblxuICBjbHVzdGVyLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gdHJ1ZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgY2x1c3RlcikgOiAobm9kZVNpemUgPyBbZHgsIGR5XSA6IG51bGwpO1xuICB9O1xuXG4gIHJldHVybiBjbHVzdGVyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNvbnN0YW50WmVybygpIHtcbiAgcmV0dXJuIDA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBub2RlID0gdGhpcywgbm9kZXMgPSBbbm9kZV07XG4gIHdoaWxlIChub2RlID0gbm9kZS5wYXJlbnQpIHtcbiAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICB9XG4gIHJldHVybiBub2Rlcztcbn1cbiIsImZ1bmN0aW9uIGNvdW50KG5vZGUpIHtcbiAgdmFyIHN1bSA9IDAsXG4gICAgICBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4sXG4gICAgICBpID0gY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoO1xuICBpZiAoIWkpIHN1bSA9IDE7XG4gIGVsc2Ugd2hpbGUgKC0taSA+PSAwKSBzdW0gKz0gY2hpbGRyZW5baV0udmFsdWU7XG4gIG5vZGUudmFsdWUgPSBzdW07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lYWNoQWZ0ZXIoY291bnQpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBub2RlcyA9IFtdO1xuICB0aGlzLmVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgIG5vZGVzLnB1c2gobm9kZSk7XG4gIH0pO1xuICByZXR1cm4gbm9kZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgbm9kZSA9IHRoaXMsIGN1cnJlbnQsIG5leHQgPSBbbm9kZV0sIGNoaWxkcmVuLCBpLCBuO1xuICBkbyB7XG4gICAgY3VycmVudCA9IG5leHQucmV2ZXJzZSgpLCBuZXh0ID0gW107XG4gICAgd2hpbGUgKG5vZGUgPSBjdXJyZW50LnBvcCgpKSB7XG4gICAgICBjYWxsYmFjayhub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgaWYgKGNoaWxkcmVuKSBmb3IgKGkgPSAwLCBuID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIG5leHQucHVzaChjaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgfVxuICB9IHdoaWxlIChuZXh0Lmxlbmd0aCk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIG5vZGUgPSB0aGlzLCBub2RlcyA9IFtub2RlXSwgbmV4dCA9IFtdLCBjaGlsZHJlbiwgaSwgbjtcbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIG5leHQucHVzaChub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbikgZm9yIChpID0gMCwgbiA9IGNoaWxkcmVuLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZXMucHVzaChjaGlsZHJlbltpXSk7XG4gICAgfVxuICB9XG4gIHdoaWxlIChub2RlID0gbmV4dC5wb3AoKSkge1xuICAgIGNhbGxiYWNrKG5vZGUpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgdmFyIG5vZGUgPSB0aGlzLCBub2RlcyA9IFtub2RlXSwgY2hpbGRyZW4sIGk7XG4gIHdoaWxlIChub2RlID0gbm9kZXMucG9wKCkpIHtcbiAgICBjYWxsYmFjayhub2RlKSwgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIGlmIChjaGlsZHJlbikgZm9yIChpID0gY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIG5vZGVzLnB1c2goY2hpbGRyZW5baV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCBub2RlX2NvdW50IGZyb20gXCIuL2NvdW50XCI7XG5pbXBvcnQgbm9kZV9lYWNoIGZyb20gXCIuL2VhY2hcIjtcbmltcG9ydCBub2RlX2VhY2hCZWZvcmUgZnJvbSBcIi4vZWFjaEJlZm9yZVwiO1xuaW1wb3J0IG5vZGVfZWFjaEFmdGVyIGZyb20gXCIuL2VhY2hBZnRlclwiO1xuaW1wb3J0IG5vZGVfc3VtIGZyb20gXCIuL3N1bVwiO1xuaW1wb3J0IG5vZGVfc29ydCBmcm9tIFwiLi9zb3J0XCI7XG5pbXBvcnQgbm9kZV9wYXRoIGZyb20gXCIuL3BhdGhcIjtcbmltcG9ydCBub2RlX2FuY2VzdG9ycyBmcm9tIFwiLi9hbmNlc3RvcnNcIjtcbmltcG9ydCBub2RlX2Rlc2NlbmRhbnRzIGZyb20gXCIuL2Rlc2NlbmRhbnRzXCI7XG5pbXBvcnQgbm9kZV9sZWF2ZXMgZnJvbSBcIi4vbGVhdmVzXCI7XG5pbXBvcnQgbm9kZV9saW5rcyBmcm9tIFwiLi9saW5rc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoaWVyYXJjaHkoZGF0YSwgY2hpbGRyZW4pIHtcbiAgdmFyIHJvb3QgPSBuZXcgTm9kZShkYXRhKSxcbiAgICAgIHZhbHVlZCA9ICtkYXRhLnZhbHVlICYmIChyb290LnZhbHVlID0gZGF0YS52YWx1ZSksXG4gICAgICBub2RlLFxuICAgICAgbm9kZXMgPSBbcm9vdF0sXG4gICAgICBjaGlsZCxcbiAgICAgIGNoaWxkcyxcbiAgICAgIGksXG4gICAgICBuO1xuXG4gIGlmIChjaGlsZHJlbiA9PSBudWxsKSBjaGlsZHJlbiA9IGRlZmF1bHRDaGlsZHJlbjtcblxuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgaWYgKHZhbHVlZCkgbm9kZS52YWx1ZSA9ICtub2RlLmRhdGEudmFsdWU7XG4gICAgaWYgKChjaGlsZHMgPSBjaGlsZHJlbihub2RlLmRhdGEpKSAmJiAobiA9IGNoaWxkcy5sZW5ndGgpKSB7XG4gICAgICBub2RlLmNoaWxkcmVuID0gbmV3IEFycmF5KG4pO1xuICAgICAgZm9yIChpID0gbiAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIG5vZGVzLnB1c2goY2hpbGQgPSBub2RlLmNoaWxkcmVuW2ldID0gbmV3IE5vZGUoY2hpbGRzW2ldKSk7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IG5vZGU7XG4gICAgICAgIGNoaWxkLmRlcHRoID0gbm9kZS5kZXB0aCArIDE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJvb3QuZWFjaEJlZm9yZShjb21wdXRlSGVpZ2h0KTtcbn1cblxuZnVuY3Rpb24gbm9kZV9jb3B5KCkge1xuICByZXR1cm4gaGllcmFyY2h5KHRoaXMpLmVhY2hCZWZvcmUoY29weURhdGEpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0Q2hpbGRyZW4oZCkge1xuICByZXR1cm4gZC5jaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY29weURhdGEobm9kZSkge1xuICBub2RlLmRhdGEgPSBub2RlLmRhdGEuZGF0YTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVIZWlnaHQobm9kZSkge1xuICB2YXIgaGVpZ2h0ID0gMDtcbiAgZG8gbm9kZS5oZWlnaHQgPSBoZWlnaHQ7XG4gIHdoaWxlICgobm9kZSA9IG5vZGUucGFyZW50KSAmJiAobm9kZS5oZWlnaHQgPCArK2hlaWdodCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTm9kZShkYXRhKSB7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG4gIHRoaXMuZGVwdGggPVxuICB0aGlzLmhlaWdodCA9IDA7XG4gIHRoaXMucGFyZW50ID0gbnVsbDtcbn1cblxuTm9kZS5wcm90b3R5cGUgPSBoaWVyYXJjaHkucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTm9kZSxcbiAgY291bnQ6IG5vZGVfY291bnQsXG4gIGVhY2g6IG5vZGVfZWFjaCxcbiAgZWFjaEFmdGVyOiBub2RlX2VhY2hBZnRlcixcbiAgZWFjaEJlZm9yZTogbm9kZV9lYWNoQmVmb3JlLFxuICBzdW06IG5vZGVfc3VtLFxuICBzb3J0OiBub2RlX3NvcnQsXG4gIHBhdGg6IG5vZGVfcGF0aCxcbiAgYW5jZXN0b3JzOiBub2RlX2FuY2VzdG9ycyxcbiAgZGVzY2VuZGFudHM6IG5vZGVfZGVzY2VuZGFudHMsXG4gIGxlYXZlczogbm9kZV9sZWF2ZXMsXG4gIGxpbmtzOiBub2RlX2xpbmtzLFxuICBjb3B5OiBub2RlX2NvcHlcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGxlYXZlcyA9IFtdO1xuICB0aGlzLmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkge1xuICAgIGlmICghbm9kZS5jaGlsZHJlbikge1xuICAgICAgbGVhdmVzLnB1c2gobm9kZSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGxlYXZlcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgcm9vdCA9IHRoaXMsIGxpbmtzID0gW107XG4gIHJvb3QuZWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUgIT09IHJvb3QpIHsgLy8gRG9u4oCZdCBpbmNsdWRlIHRoZSByb2904oCZcyBwYXJlbnQsIGlmIGFueS5cbiAgICAgIGxpbmtzLnB1c2goe3NvdXJjZTogbm9kZS5wYXJlbnQsIHRhcmdldDogbm9kZX0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBsaW5rcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGVuZCkge1xuICB2YXIgc3RhcnQgPSB0aGlzLFxuICAgICAgYW5jZXN0b3IgPSBsZWFzdENvbW1vbkFuY2VzdG9yKHN0YXJ0LCBlbmQpLFxuICAgICAgbm9kZXMgPSBbc3RhcnRdO1xuICB3aGlsZSAoc3RhcnQgIT09IGFuY2VzdG9yKSB7XG4gICAgc3RhcnQgPSBzdGFydC5wYXJlbnQ7XG4gICAgbm9kZXMucHVzaChzdGFydCk7XG4gIH1cbiAgdmFyIGsgPSBub2Rlcy5sZW5ndGg7XG4gIHdoaWxlIChlbmQgIT09IGFuY2VzdG9yKSB7XG4gICAgbm9kZXMuc3BsaWNlKGssIDAsIGVuZCk7XG4gICAgZW5kID0gZW5kLnBhcmVudDtcbiAgfVxuICByZXR1cm4gbm9kZXM7XG59XG5cbmZ1bmN0aW9uIGxlYXN0Q29tbW9uQW5jZXN0b3IoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIGE7XG4gIHZhciBhTm9kZXMgPSBhLmFuY2VzdG9ycygpLFxuICAgICAgYk5vZGVzID0gYi5hbmNlc3RvcnMoKSxcbiAgICAgIGMgPSBudWxsO1xuICBhID0gYU5vZGVzLnBvcCgpO1xuICBiID0gYk5vZGVzLnBvcCgpO1xuICB3aGlsZSAoYSA9PT0gYikge1xuICAgIGMgPSBhO1xuICAgIGEgPSBhTm9kZXMucG9wKCk7XG4gICAgYiA9IGJOb2Rlcy5wb3AoKTtcbiAgfVxuICByZXR1cm4gYztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbXBhcmUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIG5vZGUuY2hpbGRyZW4uc29ydChjb21wYXJlKTtcbiAgICB9XG4gIH0pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgc3VtID0gK3ZhbHVlKG5vZGUuZGF0YSkgfHwgMCxcbiAgICAgICAgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLFxuICAgICAgICBpID0gY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoO1xuICAgIHdoaWxlICgtLWkgPj0gMCkgc3VtICs9IGNoaWxkcmVuW2ldLnZhbHVlO1xuICAgIG5vZGUudmFsdWUgPSBzdW07XG4gIH0pO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNsdXN0ZXJ9IGZyb20gXCIuL2NsdXN0ZXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBoaWVyYXJjaHl9IGZyb20gXCIuL2hpZXJhcmNoeS9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBhY2t9IGZyb20gXCIuL3BhY2svaW5kZXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwYWNrU2libGluZ3N9IGZyb20gXCIuL3BhY2svc2libGluZ3NcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwYWNrRW5jbG9zZX0gZnJvbSBcIi4vcGFjay9lbmNsb3NlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFydGl0aW9ufSBmcm9tIFwiLi9wYXJ0aXRpb25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdHJhdGlmeX0gZnJvbSBcIi4vc3RyYXRpZnlcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmVlfSBmcm9tIFwiLi90cmVlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcH0gZnJvbSBcIi4vdHJlZW1hcC9pbmRleFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBCaW5hcnl9IGZyb20gXCIuL3RyZWVtYXAvYmluYXJ5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcERpY2V9IGZyb20gXCIuL3RyZWVtYXAvZGljZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBTbGljZX0gZnJvbSBcIi4vdHJlZW1hcC9zbGljZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBTbGljZURpY2V9IGZyb20gXCIuL3RyZWVtYXAvc2xpY2VEaWNlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcFNxdWFyaWZ5fSBmcm9tIFwiLi90cmVlbWFwL3NxdWFyaWZ5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcFJlc3F1YXJpZnl9IGZyb20gXCIuL3RyZWVtYXAvcmVzcXVhcmlmeVwiO1xuIiwiaW1wb3J0IHtzaHVmZmxlLCBzbGljZX0gZnJvbSBcIi4uL2FycmF5XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNpcmNsZXMpIHtcbiAgdmFyIGkgPSAwLCBuID0gKGNpcmNsZXMgPSBzaHVmZmxlKHNsaWNlLmNhbGwoY2lyY2xlcykpKS5sZW5ndGgsIEIgPSBbXSwgcCwgZTtcblxuICB3aGlsZSAoaSA8IG4pIHtcbiAgICBwID0gY2lyY2xlc1tpXTtcbiAgICBpZiAoZSAmJiBlbmNsb3Nlc1dlYWsoZSwgcCkpICsraTtcbiAgICBlbHNlIGUgPSBlbmNsb3NlQmFzaXMoQiA9IGV4dGVuZEJhc2lzKEIsIHApKSwgaSA9IDA7XG4gIH1cblxuICByZXR1cm4gZTtcbn1cblxuZnVuY3Rpb24gZXh0ZW5kQmFzaXMoQiwgcCkge1xuICB2YXIgaSwgajtcblxuICBpZiAoZW5jbG9zZXNXZWFrQWxsKHAsIEIpKSByZXR1cm4gW3BdO1xuXG4gIC8vIElmIHdlIGdldCBoZXJlIHRoZW4gQiBtdXN0IGhhdmUgYXQgbGVhc3Qgb25lIGVsZW1lbnQuXG4gIGZvciAoaSA9IDA7IGkgPCBCLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKGVuY2xvc2VzTm90KHAsIEJbaV0pXG4gICAgICAgICYmIGVuY2xvc2VzV2Vha0FsbChlbmNsb3NlQmFzaXMyKEJbaV0sIHApLCBCKSkge1xuICAgICAgcmV0dXJuIFtCW2ldLCBwXTtcbiAgICB9XG4gIH1cblxuICAvLyBJZiB3ZSBnZXQgaGVyZSB0aGVuIEIgbXVzdCBoYXZlIGF0IGxlYXN0IHR3byBlbGVtZW50cy5cbiAgZm9yIChpID0gMDsgaSA8IEIubGVuZ3RoIC0gMTsgKytpKSB7XG4gICAgZm9yIChqID0gaSArIDE7IGogPCBCLmxlbmd0aDsgKytqKSB7XG4gICAgICBpZiAoZW5jbG9zZXNOb3QoZW5jbG9zZUJhc2lzMihCW2ldLCBCW2pdKSwgcClcbiAgICAgICAgICAmJiBlbmNsb3Nlc05vdChlbmNsb3NlQmFzaXMyKEJbaV0sIHApLCBCW2pdKVxuICAgICAgICAgICYmIGVuY2xvc2VzTm90KGVuY2xvc2VCYXNpczIoQltqXSwgcCksIEJbaV0pXG4gICAgICAgICAgJiYgZW5jbG9zZXNXZWFrQWxsKGVuY2xvc2VCYXNpczMoQltpXSwgQltqXSwgcCksIEIpKSB7XG4gICAgICAgIHJldHVybiBbQltpXSwgQltqXSwgcF07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgd2UgZ2V0IGhlcmUgdGhlbiBzb21ldGhpbmcgaXMgdmVyeSB3cm9uZy5cbiAgdGhyb3cgbmV3IEVycm9yO1xufVxuXG5mdW5jdGlvbiBlbmNsb3Nlc05vdChhLCBiKSB7XG4gIHZhciBkciA9IGEuciAtIGIuciwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICByZXR1cm4gZHIgPCAwIHx8IGRyICogZHIgPCBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZXNXZWFrKGEsIGIpIHtcbiAgdmFyIGRyID0gYS5yIC0gYi5yICsgMWUtNiwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICByZXR1cm4gZHIgPiAwICYmIGRyICogZHIgPiBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZXNXZWFrQWxsKGEsIEIpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBCLmxlbmd0aDsgKytpKSB7XG4gICAgaWYgKCFlbmNsb3Nlc1dlYWsoYSwgQltpXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VCYXNpcyhCKSB7XG4gIHN3aXRjaCAoQi5sZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBlbmNsb3NlQmFzaXMxKEJbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIGVuY2xvc2VCYXNpczIoQlswXSwgQlsxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gZW5jbG9zZUJhc2lzMyhCWzBdLCBCWzFdLCBCWzJdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMxKGEpIHtcbiAgcmV0dXJuIHtcbiAgICB4OiBhLngsXG4gICAgeTogYS55LFxuICAgIHI6IGEuclxuICB9O1xufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMyKGEsIGIpIHtcbiAgdmFyIHgxID0gYS54LCB5MSA9IGEueSwgcjEgPSBhLnIsXG4gICAgICB4MiA9IGIueCwgeTIgPSBiLnksIHIyID0gYi5yLFxuICAgICAgeDIxID0geDIgLSB4MSwgeTIxID0geTIgLSB5MSwgcjIxID0gcjIgLSByMSxcbiAgICAgIGwgPSBNYXRoLnNxcnQoeDIxICogeDIxICsgeTIxICogeTIxKTtcbiAgcmV0dXJuIHtcbiAgICB4OiAoeDEgKyB4MiArIHgyMSAvIGwgKiByMjEpIC8gMixcbiAgICB5OiAoeTEgKyB5MiArIHkyMSAvIGwgKiByMjEpIC8gMixcbiAgICByOiAobCArIHIxICsgcjIpIC8gMlxuICB9O1xufVxuXG5mdW5jdGlvbiBlbmNsb3NlQmFzaXMzKGEsIGIsIGMpIHtcbiAgdmFyIHgxID0gYS54LCB5MSA9IGEueSwgcjEgPSBhLnIsXG4gICAgICB4MiA9IGIueCwgeTIgPSBiLnksIHIyID0gYi5yLFxuICAgICAgeDMgPSBjLngsIHkzID0gYy55LCByMyA9IGMucixcbiAgICAgIGEyID0geDEgLSB4MixcbiAgICAgIGEzID0geDEgLSB4MyxcbiAgICAgIGIyID0geTEgLSB5MixcbiAgICAgIGIzID0geTEgLSB5MyxcbiAgICAgIGMyID0gcjIgLSByMSxcbiAgICAgIGMzID0gcjMgLSByMSxcbiAgICAgIGQxID0geDEgKiB4MSArIHkxICogeTEgLSByMSAqIHIxLFxuICAgICAgZDIgPSBkMSAtIHgyICogeDIgLSB5MiAqIHkyICsgcjIgKiByMixcbiAgICAgIGQzID0gZDEgLSB4MyAqIHgzIC0geTMgKiB5MyArIHIzICogcjMsXG4gICAgICBhYiA9IGEzICogYjIgLSBhMiAqIGIzLFxuICAgICAgeGEgPSAoYjIgKiBkMyAtIGIzICogZDIpIC8gKGFiICogMikgLSB4MSxcbiAgICAgIHhiID0gKGIzICogYzIgLSBiMiAqIGMzKSAvIGFiLFxuICAgICAgeWEgPSAoYTMgKiBkMiAtIGEyICogZDMpIC8gKGFiICogMikgLSB5MSxcbiAgICAgIHliID0gKGEyICogYzMgLSBhMyAqIGMyKSAvIGFiLFxuICAgICAgQSA9IHhiICogeGIgKyB5YiAqIHliIC0gMSxcbiAgICAgIEIgPSAyICogKHIxICsgeGEgKiB4YiArIHlhICogeWIpLFxuICAgICAgQyA9IHhhICogeGEgKyB5YSAqIHlhIC0gcjEgKiByMSxcbiAgICAgIHIgPSAtKEEgPyAoQiArIE1hdGguc3FydChCICogQiAtIDQgKiBBICogQykpIC8gKDIgKiBBKSA6IEMgLyBCKTtcbiAgcmV0dXJuIHtcbiAgICB4OiB4MSArIHhhICsgeGIgKiByLFxuICAgIHk6IHkxICsgeWEgKyB5YiAqIHIsXG4gICAgcjogclxuICB9O1xufVxuIiwiaW1wb3J0IHtwYWNrRW5jbG9zZX0gZnJvbSBcIi4vc2libGluZ3NcIjtcbmltcG9ydCB7b3B0aW9uYWx9IGZyb20gXCIuLi9hY2Nlc3NvcnNcIjtcbmltcG9ydCBjb25zdGFudCwge2NvbnN0YW50WmVyb30gZnJvbSBcIi4uL2NvbnN0YW50XCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRSYWRpdXMoZCkge1xuICByZXR1cm4gTWF0aC5zcXJ0KGQudmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHJhZGl1cyA9IG51bGwsXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nID0gY29uc3RhbnRaZXJvO1xuXG4gIGZ1bmN0aW9uIHBhY2socm9vdCkge1xuICAgIHJvb3QueCA9IGR4IC8gMiwgcm9vdC55ID0gZHkgLyAyO1xuICAgIGlmIChyYWRpdXMpIHtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShyYWRpdXNMZWFmKHJhZGl1cykpXG4gICAgICAgICAgLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4ocGFkZGluZywgMC41KSlcbiAgICAgICAgICAuZWFjaEJlZm9yZSh0cmFuc2xhdGVDaGlsZCgxKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShyYWRpdXNMZWFmKGRlZmF1bHRSYWRpdXMpKVxuICAgICAgICAgIC5lYWNoQWZ0ZXIocGFja0NoaWxkcmVuKGNvbnN0YW50WmVybywgMSkpXG4gICAgICAgICAgLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4ocGFkZGluZywgcm9vdC5yIC8gTWF0aC5taW4oZHgsIGR5KSkpXG4gICAgICAgICAgLmVhY2hCZWZvcmUodHJhbnNsYXRlQ2hpbGQoTWF0aC5taW4oZHgsIGR5KSAvICgyICogcm9vdC5yKSkpO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIHBhY2sucmFkaXVzID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhZGl1cyA9IG9wdGlvbmFsKHgpLCBwYWNrKSA6IHJhZGl1cztcbiAgfTtcblxuICBwYWNrLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZHggPSAreFswXSwgZHkgPSAreFsxXSwgcGFjaykgOiBbZHgsIGR5XTtcbiAgfTtcblxuICBwYWNrLnBhZGRpbmcgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZyA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCBwYWNrKSA6IHBhZGRpbmc7XG4gIH07XG5cbiAgcmV0dXJuIHBhY2s7XG59XG5cbmZ1bmN0aW9uIHJhZGl1c0xlYWYocmFkaXVzKSB7XG4gIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKCFub2RlLmNoaWxkcmVuKSB7XG4gICAgICBub2RlLnIgPSBNYXRoLm1heCgwLCArcmFkaXVzKG5vZGUpIHx8IDApO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFja0NoaWxkcmVuKHBhZGRpbmcsIGspIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSB7XG4gICAgICB2YXIgY2hpbGRyZW4sXG4gICAgICAgICAgaSxcbiAgICAgICAgICBuID0gY2hpbGRyZW4ubGVuZ3RoLFxuICAgICAgICAgIHIgPSBwYWRkaW5nKG5vZGUpICogayB8fCAwLFxuICAgICAgICAgIGU7XG5cbiAgICAgIGlmIChyKSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjaGlsZHJlbltpXS5yICs9IHI7XG4gICAgICBlID0gcGFja0VuY2xvc2UoY2hpbGRyZW4pO1xuICAgICAgaWYgKHIpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGNoaWxkcmVuW2ldLnIgLT0gcjtcbiAgICAgIG5vZGUuciA9IGUgKyByO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gdHJhbnNsYXRlQ2hpbGQoaykge1xuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIHZhciBwYXJlbnQgPSBub2RlLnBhcmVudDtcbiAgICBub2RlLnIgKj0gaztcbiAgICBpZiAocGFyZW50KSB7XG4gICAgICBub2RlLnggPSBwYXJlbnQueCArIGsgKiBub2RlLng7XG4gICAgICBub2RlLnkgPSBwYXJlbnQueSArIGsgKiBub2RlLnk7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IGVuY2xvc2UgZnJvbSBcIi4vZW5jbG9zZVwiO1xuXG5mdW5jdGlvbiBwbGFjZShiLCBhLCBjKSB7XG4gIHZhciBkeCA9IGIueCAtIGEueCwgeCwgYTIsXG4gICAgICBkeSA9IGIueSAtIGEueSwgeSwgYjIsXG4gICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICBpZiAoZDIpIHtcbiAgICBhMiA9IGEuciArIGMuciwgYTIgKj0gYTI7XG4gICAgYjIgPSBiLnIgKyBjLnIsIGIyICo9IGIyO1xuICAgIGlmIChhMiA+IGIyKSB7XG4gICAgICB4ID0gKGQyICsgYjIgLSBhMikgLyAoMiAqIGQyKTtcbiAgICAgIHkgPSBNYXRoLnNxcnQoTWF0aC5tYXgoMCwgYjIgLyBkMiAtIHggKiB4KSk7XG4gICAgICBjLnggPSBiLnggLSB4ICogZHggLSB5ICogZHk7XG4gICAgICBjLnkgPSBiLnkgLSB4ICogZHkgKyB5ICogZHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHggPSAoZDIgKyBhMiAtIGIyKSAvICgyICogZDIpO1xuICAgICAgeSA9IE1hdGguc3FydChNYXRoLm1heCgwLCBhMiAvIGQyIC0geCAqIHgpKTtcbiAgICAgIGMueCA9IGEueCArIHggKiBkeCAtIHkgKiBkeTtcbiAgICAgIGMueSA9IGEueSArIHggKiBkeSArIHkgKiBkeDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYy54ID0gYS54ICsgYy5yO1xuICAgIGMueSA9IGEueTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnRlcnNlY3RzKGEsIGIpIHtcbiAgdmFyIGRyID0gYS5yICsgYi5yIC0gMWUtNiwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICByZXR1cm4gZHIgPiAwICYmIGRyICogZHIgPiBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuZnVuY3Rpb24gc2NvcmUobm9kZSkge1xuICB2YXIgYSA9IG5vZGUuXyxcbiAgICAgIGIgPSBub2RlLm5leHQuXyxcbiAgICAgIGFiID0gYS5yICsgYi5yLFxuICAgICAgZHggPSAoYS54ICogYi5yICsgYi54ICogYS5yKSAvIGFiLFxuICAgICAgZHkgPSAoYS55ICogYi5yICsgYi55ICogYS5yKSAvIGFiO1xuICByZXR1cm4gZHggKiBkeCArIGR5ICogZHk7XG59XG5cbmZ1bmN0aW9uIE5vZGUoY2lyY2xlKSB7XG4gIHRoaXMuXyA9IGNpcmNsZTtcbiAgdGhpcy5uZXh0ID0gbnVsbDtcbiAgdGhpcy5wcmV2aW91cyA9IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWNrRW5jbG9zZShjaXJjbGVzKSB7XG4gIGlmICghKG4gPSBjaXJjbGVzLmxlbmd0aCkpIHJldHVybiAwO1xuXG4gIHZhciBhLCBiLCBjLCBuLCBhYSwgY2EsIGksIGosIGssIHNqLCBzaztcblxuICAvLyBQbGFjZSB0aGUgZmlyc3QgY2lyY2xlLlxuICBhID0gY2lyY2xlc1swXSwgYS54ID0gMCwgYS55ID0gMDtcbiAgaWYgKCEobiA+IDEpKSByZXR1cm4gYS5yO1xuXG4gIC8vIFBsYWNlIHRoZSBzZWNvbmQgY2lyY2xlLlxuICBiID0gY2lyY2xlc1sxXSwgYS54ID0gLWIuciwgYi54ID0gYS5yLCBiLnkgPSAwO1xuICBpZiAoIShuID4gMikpIHJldHVybiBhLnIgKyBiLnI7XG5cbiAgLy8gUGxhY2UgdGhlIHRoaXJkIGNpcmNsZS5cbiAgcGxhY2UoYiwgYSwgYyA9IGNpcmNsZXNbMl0pO1xuXG4gIC8vIEluaXRpYWxpemUgdGhlIGZyb250LWNoYWluIHVzaW5nIHRoZSBmaXJzdCB0aHJlZSBjaXJjbGVzIGEsIGIgYW5kIGMuXG4gIGEgPSBuZXcgTm9kZShhKSwgYiA9IG5ldyBOb2RlKGIpLCBjID0gbmV3IE5vZGUoYyk7XG4gIGEubmV4dCA9IGMucHJldmlvdXMgPSBiO1xuICBiLm5leHQgPSBhLnByZXZpb3VzID0gYztcbiAgYy5uZXh0ID0gYi5wcmV2aW91cyA9IGE7XG5cbiAgLy8gQXR0ZW1wdCB0byBwbGFjZSBlYWNoIHJlbWFpbmluZyBjaXJjbGXigKZcbiAgcGFjazogZm9yIChpID0gMzsgaSA8IG47ICsraSkge1xuICAgIHBsYWNlKGEuXywgYi5fLCBjID0gY2lyY2xlc1tpXSksIGMgPSBuZXcgTm9kZShjKTtcblxuICAgIC8vIEZpbmQgdGhlIGNsb3Nlc3QgaW50ZXJzZWN0aW5nIGNpcmNsZSBvbiB0aGUgZnJvbnQtY2hhaW4sIGlmIGFueS5cbiAgICAvLyDigJxDbG9zZW5lc3PigJ0gaXMgZGV0ZXJtaW5lZCBieSBsaW5lYXIgZGlzdGFuY2UgYWxvbmcgdGhlIGZyb250LWNoYWluLlxuICAgIC8vIOKAnEFoZWFk4oCdIG9yIOKAnGJlaGluZOKAnSBpcyBsaWtld2lzZSBkZXRlcm1pbmVkIGJ5IGxpbmVhciBkaXN0YW5jZS5cbiAgICBqID0gYi5uZXh0LCBrID0gYS5wcmV2aW91cywgc2ogPSBiLl8uciwgc2sgPSBhLl8ucjtcbiAgICBkbyB7XG4gICAgICBpZiAoc2ogPD0gc2spIHtcbiAgICAgICAgaWYgKGludGVyc2VjdHMoai5fLCBjLl8pKSB7XG4gICAgICAgICAgYiA9IGosIGEubmV4dCA9IGIsIGIucHJldmlvdXMgPSBhLCAtLWk7XG4gICAgICAgICAgY29udGludWUgcGFjaztcbiAgICAgICAgfVxuICAgICAgICBzaiArPSBqLl8uciwgaiA9IGoubmV4dDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpbnRlcnNlY3RzKGsuXywgYy5fKSkge1xuICAgICAgICAgIGEgPSBrLCBhLm5leHQgPSBiLCBiLnByZXZpb3VzID0gYSwgLS1pO1xuICAgICAgICAgIGNvbnRpbnVlIHBhY2s7XG4gICAgICAgIH1cbiAgICAgICAgc2sgKz0gay5fLnIsIGsgPSBrLnByZXZpb3VzO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKGogIT09IGsubmV4dCk7XG5cbiAgICAvLyBTdWNjZXNzISBJbnNlcnQgdGhlIG5ldyBjaXJjbGUgYyBiZXR3ZWVuIGEgYW5kIGIuXG4gICAgYy5wcmV2aW91cyA9IGEsIGMubmV4dCA9IGIsIGEubmV4dCA9IGIucHJldmlvdXMgPSBiID0gYztcblxuICAgIC8vIENvbXB1dGUgdGhlIG5ldyBjbG9zZXN0IGNpcmNsZSBwYWlyIHRvIHRoZSBjZW50cm9pZC5cbiAgICBhYSA9IHNjb3JlKGEpO1xuICAgIHdoaWxlICgoYyA9IGMubmV4dCkgIT09IGIpIHtcbiAgICAgIGlmICgoY2EgPSBzY29yZShjKSkgPCBhYSkge1xuICAgICAgICBhID0gYywgYWEgPSBjYTtcbiAgICAgIH1cbiAgICB9XG4gICAgYiA9IGEubmV4dDtcbiAgfVxuXG4gIC8vIENvbXB1dGUgdGhlIGVuY2xvc2luZyBjaXJjbGUgb2YgdGhlIGZyb250IGNoYWluLlxuICBhID0gW2IuX10sIGMgPSBiOyB3aGlsZSAoKGMgPSBjLm5leHQpICE9PSBiKSBhLnB1c2goYy5fKTsgYyA9IGVuY2xvc2UoYSk7XG5cbiAgLy8gVHJhbnNsYXRlIHRoZSBjaXJjbGVzIHRvIHB1dCB0aGUgZW5jbG9zaW5nIGNpcmNsZSBhcm91bmQgdGhlIG9yaWdpbi5cbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgYSA9IGNpcmNsZXNbaV0sIGEueCAtPSBjLngsIGEueSAtPSBjLnk7XG5cbiAgcmV0dXJuIGMucjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2lyY2xlcykge1xuICBwYWNrRW5jbG9zZShjaXJjbGVzKTtcbiAgcmV0dXJuIGNpcmNsZXM7XG59XG4iLCJpbXBvcnQgcm91bmROb2RlIGZyb20gXCIuL3RyZWVtYXAvcm91bmRcIjtcbmltcG9ydCB0cmVlbWFwRGljZSBmcm9tIFwiLi90cmVlbWFwL2RpY2VcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nID0gMCxcbiAgICAgIHJvdW5kID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gcGFydGl0aW9uKHJvb3QpIHtcbiAgICB2YXIgbiA9IHJvb3QuaGVpZ2h0ICsgMTtcbiAgICByb290LngwID1cbiAgICByb290LnkwID0gcGFkZGluZztcbiAgICByb290LngxID0gZHg7XG4gICAgcm9vdC55MSA9IGR5IC8gbjtcbiAgICByb290LmVhY2hCZWZvcmUocG9zaXRpb25Ob2RlKGR5LCBuKSk7XG4gICAgaWYgKHJvdW5kKSByb290LmVhY2hCZWZvcmUocm91bmROb2RlKTtcbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBvc2l0aW9uTm9kZShkeSwgbikge1xuICAgIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBpZiAobm9kZS5jaGlsZHJlbikge1xuICAgICAgICB0cmVlbWFwRGljZShub2RlLCBub2RlLngwLCBkeSAqIChub2RlLmRlcHRoICsgMSkgLyBuLCBub2RlLngxLCBkeSAqIChub2RlLmRlcHRoICsgMikgLyBuKTtcbiAgICAgIH1cbiAgICAgIHZhciB4MCA9IG5vZGUueDAsXG4gICAgICAgICAgeTAgPSBub2RlLnkwLFxuICAgICAgICAgIHgxID0gbm9kZS54MSAtIHBhZGRpbmcsXG4gICAgICAgICAgeTEgPSBub2RlLnkxIC0gcGFkZGluZztcbiAgICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICAgIGlmICh5MSA8IHkwKSB5MCA9IHkxID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIG5vZGUueDAgPSB4MDtcbiAgICAgIG5vZGUueTAgPSB5MDtcbiAgICAgIG5vZGUueDEgPSB4MTtcbiAgICAgIG5vZGUueTEgPSB5MTtcbiAgICB9O1xuICB9XG5cbiAgcGFydGl0aW9uLnJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdW5kID0gISF4LCBwYXJ0aXRpb24pIDogcm91bmQ7XG4gIH07XG5cbiAgcGFydGl0aW9uLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZHggPSAreFswXSwgZHkgPSAreFsxXSwgcGFydGl0aW9uKSA6IFtkeCwgZHldO1xuICB9O1xuXG4gIHBhcnRpdGlvbi5wYWRkaW5nID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmcgPSAreCwgcGFydGl0aW9uKSA6IHBhZGRpbmc7XG4gIH07XG5cbiAgcmV0dXJuIHBhcnRpdGlvbjtcbn1cbiIsImltcG9ydCB7cmVxdWlyZWR9IGZyb20gXCIuL2FjY2Vzc29yc1wiO1xuaW1wb3J0IHtOb2RlLCBjb21wdXRlSGVpZ2h0fSBmcm9tIFwiLi9oaWVyYXJjaHkvaW5kZXhcIjtcblxudmFyIGtleVByZWZpeCA9IFwiJFwiLCAvLyBQcm90ZWN0IGFnYWluc3Qga2V5cyBsaWtlIOKAnF9fcHJvdG9fX+KAnS5cbiAgICBwcmVyb290ID0ge2RlcHRoOiAtMX0sXG4gICAgYW1iaWd1b3VzID0ge307XG5cbmZ1bmN0aW9uIGRlZmF1bHRJZChkKSB7XG4gIHJldHVybiBkLmlkO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0UGFyZW50SWQoZCkge1xuICByZXR1cm4gZC5wYXJlbnRJZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBpZCA9IGRlZmF1bHRJZCxcbiAgICAgIHBhcmVudElkID0gZGVmYXVsdFBhcmVudElkO1xuXG4gIGZ1bmN0aW9uIHN0cmF0aWZ5KGRhdGEpIHtcbiAgICB2YXIgZCxcbiAgICAgICAgaSxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICByb290LFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIG5vZGUsXG4gICAgICAgIG5vZGVzID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBub2RlSWQsXG4gICAgICAgIG5vZGVLZXksXG4gICAgICAgIG5vZGVCeUtleSA9IHt9O1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgZCA9IGRhdGFbaV0sIG5vZGUgPSBub2Rlc1tpXSA9IG5ldyBOb2RlKGQpO1xuICAgICAgaWYgKChub2RlSWQgPSBpZChkLCBpLCBkYXRhKSkgIT0gbnVsbCAmJiAobm9kZUlkICs9IFwiXCIpKSB7XG4gICAgICAgIG5vZGVLZXkgPSBrZXlQcmVmaXggKyAobm9kZS5pZCA9IG5vZGVJZCk7XG4gICAgICAgIG5vZGVCeUtleVtub2RlS2V5XSA9IG5vZGVLZXkgaW4gbm9kZUJ5S2V5ID8gYW1iaWd1b3VzIDogbm9kZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBub2RlID0gbm9kZXNbaV0sIG5vZGVJZCA9IHBhcmVudElkKGRhdGFbaV0sIGksIGRhdGEpO1xuICAgICAgaWYgKG5vZGVJZCA9PSBudWxsIHx8ICEobm9kZUlkICs9IFwiXCIpKSB7XG4gICAgICAgIGlmIChyb290KSB0aHJvdyBuZXcgRXJyb3IoXCJtdWx0aXBsZSByb290c1wiKTtcbiAgICAgICAgcm9vdCA9IG5vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJlbnQgPSBub2RlQnlLZXlba2V5UHJlZml4ICsgbm9kZUlkXTtcbiAgICAgICAgaWYgKCFwYXJlbnQpIHRocm93IG5ldyBFcnJvcihcIm1pc3Npbmc6IFwiICsgbm9kZUlkKTtcbiAgICAgICAgaWYgKHBhcmVudCA9PT0gYW1iaWd1b3VzKSB0aHJvdyBuZXcgRXJyb3IoXCJhbWJpZ3VvdXM6IFwiICsgbm9kZUlkKTtcbiAgICAgICAgaWYgKHBhcmVudC5jaGlsZHJlbikgcGFyZW50LmNoaWxkcmVuLnB1c2gobm9kZSk7XG4gICAgICAgIGVsc2UgcGFyZW50LmNoaWxkcmVuID0gW25vZGVdO1xuICAgICAgICBub2RlLnBhcmVudCA9IHBhcmVudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXJvb3QpIHRocm93IG5ldyBFcnJvcihcIm5vIHJvb3RcIik7XG4gICAgcm9vdC5wYXJlbnQgPSBwcmVyb290O1xuICAgIHJvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7IG5vZGUuZGVwdGggPSBub2RlLnBhcmVudC5kZXB0aCArIDE7IC0tbjsgfSkuZWFjaEJlZm9yZShjb21wdXRlSGVpZ2h0KTtcbiAgICByb290LnBhcmVudCA9IG51bGw7XG4gICAgaWYgKG4gPiAwKSB0aHJvdyBuZXcgRXJyb3IoXCJjeWNsZVwiKTtcblxuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgc3RyYXRpZnkuaWQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaWQgPSByZXF1aXJlZCh4KSwgc3RyYXRpZnkpIDogaWQ7XG4gIH07XG5cbiAgc3RyYXRpZnkucGFyZW50SWQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFyZW50SWQgPSByZXF1aXJlZCh4KSwgc3RyYXRpZnkpIDogcGFyZW50SWQ7XG4gIH07XG5cbiAgcmV0dXJuIHN0cmF0aWZ5O1xufVxuIiwiaW1wb3J0IHtOb2RlfSBmcm9tIFwiLi9oaWVyYXJjaHkvaW5kZXhcIjtcblxuZnVuY3Rpb24gZGVmYXVsdFNlcGFyYXRpb24oYSwgYikge1xuICByZXR1cm4gYS5wYXJlbnQgPT09IGIucGFyZW50ID8gMSA6IDI7XG59XG5cbi8vIGZ1bmN0aW9uIHJhZGlhbFNlcGFyYXRpb24oYSwgYikge1xuLy8gICByZXR1cm4gKGEucGFyZW50ID09PSBiLnBhcmVudCA/IDEgOiAyKSAvIGEuZGVwdGg7XG4vLyB9XG5cbi8vIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byB0cmF2ZXJzZSB0aGUgbGVmdCBjb250b3VyIG9mIGEgc3VidHJlZSAob3Jcbi8vIHN1YmZvcmVzdCkuIEl0IHJldHVybnMgdGhlIHN1Y2Nlc3NvciBvZiB2IG9uIHRoaXMgY29udG91ci4gVGhpcyBzdWNjZXNzb3IgaXNcbi8vIGVpdGhlciBnaXZlbiBieSB0aGUgbGVmdG1vc3QgY2hpbGQgb2YgdiBvciBieSB0aGUgdGhyZWFkIG9mIHYuIFRoZSBmdW5jdGlvblxuLy8gcmV0dXJucyBudWxsIGlmIGFuZCBvbmx5IGlmIHYgaXMgb24gdGhlIGhpZ2hlc3QgbGV2ZWwgb2YgaXRzIHN1YnRyZWUuXG5mdW5jdGlvbiBuZXh0TGVmdCh2KSB7XG4gIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW47XG4gIHJldHVybiBjaGlsZHJlbiA/IGNoaWxkcmVuWzBdIDogdi50O1xufVxuXG4vLyBUaGlzIGZ1bmN0aW9uIHdvcmtzIGFuYWxvZ291c2x5IHRvIG5leHRMZWZ0LlxuZnVuY3Rpb24gbmV4dFJpZ2h0KHYpIHtcbiAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbjtcbiAgcmV0dXJuIGNoaWxkcmVuID8gY2hpbGRyZW5bY2hpbGRyZW4ubGVuZ3RoIC0gMV0gOiB2LnQ7XG59XG5cbi8vIFNoaWZ0cyB0aGUgY3VycmVudCBzdWJ0cmVlIHJvb3RlZCBhdCB3Ky4gVGhpcyBpcyBkb25lIGJ5IGluY3JlYXNpbmdcbi8vIHByZWxpbSh3KykgYW5kIG1vZCh3KykgYnkgc2hpZnQuXG5mdW5jdGlvbiBtb3ZlU3VidHJlZSh3bSwgd3AsIHNoaWZ0KSB7XG4gIHZhciBjaGFuZ2UgPSBzaGlmdCAvICh3cC5pIC0gd20uaSk7XG4gIHdwLmMgLT0gY2hhbmdlO1xuICB3cC5zICs9IHNoaWZ0O1xuICB3bS5jICs9IGNoYW5nZTtcbiAgd3AueiArPSBzaGlmdDtcbiAgd3AubSArPSBzaGlmdDtcbn1cblxuLy8gQWxsIG90aGVyIHNoaWZ0cywgYXBwbGllZCB0byB0aGUgc21hbGxlciBzdWJ0cmVlcyBiZXR3ZWVuIHctIGFuZCB3KywgYXJlXG4vLyBwZXJmb3JtZWQgYnkgdGhpcyBmdW5jdGlvbi4gVG8gcHJlcGFyZSB0aGUgc2hpZnRzLCB3ZSBoYXZlIHRvIGFkanVzdFxuLy8gY2hhbmdlKHcrKSwgc2hpZnQodyspLCBhbmQgY2hhbmdlKHctKS5cbmZ1bmN0aW9uIGV4ZWN1dGVTaGlmdHModikge1xuICB2YXIgc2hpZnQgPSAwLFxuICAgICAgY2hhbmdlID0gMCxcbiAgICAgIGNoaWxkcmVuID0gdi5jaGlsZHJlbixcbiAgICAgIGkgPSBjaGlsZHJlbi5sZW5ndGgsXG4gICAgICB3O1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICB3ID0gY2hpbGRyZW5baV07XG4gICAgdy56ICs9IHNoaWZ0O1xuICAgIHcubSArPSBzaGlmdDtcbiAgICBzaGlmdCArPSB3LnMgKyAoY2hhbmdlICs9IHcuYyk7XG4gIH1cbn1cblxuLy8gSWYgdmkt4oCZcyBhbmNlc3RvciBpcyBhIHNpYmxpbmcgb2YgdiwgcmV0dXJucyB2aS3igJlzIGFuY2VzdG9yLiBPdGhlcndpc2UsXG4vLyByZXR1cm5zIHRoZSBzcGVjaWZpZWQgKGRlZmF1bHQpIGFuY2VzdG9yLlxuZnVuY3Rpb24gbmV4dEFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpIHtcbiAgcmV0dXJuIHZpbS5hLnBhcmVudCA9PT0gdi5wYXJlbnQgPyB2aW0uYSA6IGFuY2VzdG9yO1xufVxuXG5mdW5jdGlvbiBUcmVlTm9kZShub2RlLCBpKSB7XG4gIHRoaXMuXyA9IG5vZGU7XG4gIHRoaXMucGFyZW50ID0gbnVsbDtcbiAgdGhpcy5jaGlsZHJlbiA9IG51bGw7XG4gIHRoaXMuQSA9IG51bGw7IC8vIGRlZmF1bHQgYW5jZXN0b3JcbiAgdGhpcy5hID0gdGhpczsgLy8gYW5jZXN0b3JcbiAgdGhpcy56ID0gMDsgLy8gcHJlbGltXG4gIHRoaXMubSA9IDA7IC8vIG1vZFxuICB0aGlzLmMgPSAwOyAvLyBjaGFuZ2VcbiAgdGhpcy5zID0gMDsgLy8gc2hpZnRcbiAgdGhpcy50ID0gbnVsbDsgLy8gdGhyZWFkXG4gIHRoaXMuaSA9IGk7IC8vIG51bWJlclxufVxuXG5UcmVlTm9kZS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKE5vZGUucHJvdG90eXBlKTtcblxuZnVuY3Rpb24gdHJlZVJvb3Qocm9vdCkge1xuICB2YXIgdHJlZSA9IG5ldyBUcmVlTm9kZShyb290LCAwKSxcbiAgICAgIG5vZGUsXG4gICAgICBub2RlcyA9IFt0cmVlXSxcbiAgICAgIGNoaWxkLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBpLFxuICAgICAgbjtcblxuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgaWYgKGNoaWxkcmVuID0gbm9kZS5fLmNoaWxkcmVuKSB7XG4gICAgICBub2RlLmNoaWxkcmVuID0gbmV3IEFycmF5KG4gPSBjaGlsZHJlbi5sZW5ndGgpO1xuICAgICAgZm9yIChpID0gbiAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIG5vZGVzLnB1c2goY2hpbGQgPSBub2RlLmNoaWxkcmVuW2ldID0gbmV3IFRyZWVOb2RlKGNoaWxkcmVuW2ldLCBpKSk7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgKHRyZWUucGFyZW50ID0gbmV3IFRyZWVOb2RlKG51bGwsIDApKS5jaGlsZHJlbiA9IFt0cmVlXTtcbiAgcmV0dXJuIHRyZWU7XG59XG5cbi8vIE5vZGUtbGluayB0cmVlIGRpYWdyYW0gdXNpbmcgdGhlIFJlaW5nb2xkLVRpbGZvcmQgXCJ0aWR5XCIgYWxnb3JpdGhtXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNlcGFyYXRpb24gPSBkZWZhdWx0U2VwYXJhdGlvbixcbiAgICAgIGR4ID0gMSxcbiAgICAgIGR5ID0gMSxcbiAgICAgIG5vZGVTaXplID0gbnVsbDtcblxuICBmdW5jdGlvbiB0cmVlKHJvb3QpIHtcbiAgICB2YXIgdCA9IHRyZWVSb290KHJvb3QpO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgbGF5b3V0IHVzaW5nIEJ1Y2hoZWltIGV0IGFsLuKAmXMgYWxnb3JpdGhtLlxuICAgIHQuZWFjaEFmdGVyKGZpcnN0V2FsayksIHQucGFyZW50Lm0gPSAtdC56O1xuICAgIHQuZWFjaEJlZm9yZShzZWNvbmRXYWxrKTtcblxuICAgIC8vIElmIGEgZml4ZWQgbm9kZSBzaXplIGlzIHNwZWNpZmllZCwgc2NhbGUgeCBhbmQgeS5cbiAgICBpZiAobm9kZVNpemUpIHJvb3QuZWFjaEJlZm9yZShzaXplTm9kZSk7XG5cbiAgICAvLyBJZiBhIGZpeGVkIHRyZWUgc2l6ZSBpcyBzcGVjaWZpZWQsIHNjYWxlIHggYW5kIHkgYmFzZWQgb24gdGhlIGV4dGVudC5cbiAgICAvLyBDb21wdXRlIHRoZSBsZWZ0LW1vc3QsIHJpZ2h0LW1vc3QsIGFuZCBkZXB0aC1tb3N0IG5vZGVzIGZvciBleHRlbnRzLlxuICAgIGVsc2Uge1xuICAgICAgdmFyIGxlZnQgPSByb290LFxuICAgICAgICAgIHJpZ2h0ID0gcm9vdCxcbiAgICAgICAgICBib3R0b20gPSByb290O1xuICAgICAgcm9vdC5lYWNoQmVmb3JlKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUueCA8IGxlZnQueCkgbGVmdCA9IG5vZGU7XG4gICAgICAgIGlmIChub2RlLnggPiByaWdodC54KSByaWdodCA9IG5vZGU7XG4gICAgICAgIGlmIChub2RlLmRlcHRoID4gYm90dG9tLmRlcHRoKSBib3R0b20gPSBub2RlO1xuICAgICAgfSk7XG4gICAgICB2YXIgcyA9IGxlZnQgPT09IHJpZ2h0ID8gMSA6IHNlcGFyYXRpb24obGVmdCwgcmlnaHQpIC8gMixcbiAgICAgICAgICB0eCA9IHMgLSBsZWZ0LngsXG4gICAgICAgICAga3ggPSBkeCAvIChyaWdodC54ICsgcyArIHR4KSxcbiAgICAgICAgICBreSA9IGR5IC8gKGJvdHRvbS5kZXB0aCB8fCAxKTtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIG5vZGUueCA9IChub2RlLnggKyB0eCkgKiBreDtcbiAgICAgICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIGt5O1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICAvLyBDb21wdXRlcyBhIHByZWxpbWluYXJ5IHgtY29vcmRpbmF0ZSBmb3Igdi4gQmVmb3JlIHRoYXQsIEZJUlNUIFdBTEsgaXNcbiAgLy8gYXBwbGllZCByZWN1cnNpdmVseSB0byB0aGUgY2hpbGRyZW4gb2YgdiwgYXMgd2VsbCBhcyB0aGUgZnVuY3Rpb25cbiAgLy8gQVBQT1JUSU9OLiBBZnRlciBzcGFjaW5nIG91dCB0aGUgY2hpbGRyZW4gYnkgY2FsbGluZyBFWEVDVVRFIFNISUZUUywgdGhlXG4gIC8vIG5vZGUgdiBpcyBwbGFjZWQgdG8gdGhlIG1pZHBvaW50IG9mIGl0cyBvdXRlcm1vc3QgY2hpbGRyZW4uXG4gIGZ1bmN0aW9uIGZpcnN0V2Fsayh2KSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbixcbiAgICAgICAgc2libGluZ3MgPSB2LnBhcmVudC5jaGlsZHJlbixcbiAgICAgICAgdyA9IHYuaSA/IHNpYmxpbmdzW3YuaSAtIDFdIDogbnVsbDtcbiAgICBpZiAoY2hpbGRyZW4pIHtcbiAgICAgIGV4ZWN1dGVTaGlmdHModik7XG4gICAgICB2YXIgbWlkcG9pbnQgPSAoY2hpbGRyZW5bMF0ueiArIGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdLnopIC8gMjtcbiAgICAgIGlmICh3KSB7XG4gICAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgICAgICB2Lm0gPSB2LnogLSBtaWRwb2ludDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHYueiA9IG1pZHBvaW50O1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodykge1xuICAgICAgdi56ID0gdy56ICsgc2VwYXJhdGlvbih2Ll8sIHcuXyk7XG4gICAgfVxuICAgIHYucGFyZW50LkEgPSBhcHBvcnRpb24odiwgdywgdi5wYXJlbnQuQSB8fCBzaWJsaW5nc1swXSk7XG4gIH1cblxuICAvLyBDb21wdXRlcyBhbGwgcmVhbCB4LWNvb3JkaW5hdGVzIGJ5IHN1bW1pbmcgdXAgdGhlIG1vZGlmaWVycyByZWN1cnNpdmVseS5cbiAgZnVuY3Rpb24gc2Vjb25kV2Fsayh2KSB7XG4gICAgdi5fLnggPSB2LnogKyB2LnBhcmVudC5tO1xuICAgIHYubSArPSB2LnBhcmVudC5tO1xuICB9XG5cbiAgLy8gVGhlIGNvcmUgb2YgdGhlIGFsZ29yaXRobS4gSGVyZSwgYSBuZXcgc3VidHJlZSBpcyBjb21iaW5lZCB3aXRoIHRoZVxuICAvLyBwcmV2aW91cyBzdWJ0cmVlcy4gVGhyZWFkcyBhcmUgdXNlZCB0byB0cmF2ZXJzZSB0aGUgaW5zaWRlIGFuZCBvdXRzaWRlXG4gIC8vIGNvbnRvdXJzIG9mIHRoZSBsZWZ0IGFuZCByaWdodCBzdWJ0cmVlIHVwIHRvIHRoZSBoaWdoZXN0IGNvbW1vbiBsZXZlbC4gVGhlXG4gIC8vIHZlcnRpY2VzIHVzZWQgZm9yIHRoZSB0cmF2ZXJzYWxzIGFyZSB2aSssIHZpLSwgdm8tLCBhbmQgdm8rLCB3aGVyZSB0aGVcbiAgLy8gc3VwZXJzY3JpcHQgbyBtZWFucyBvdXRzaWRlIGFuZCBpIG1lYW5zIGluc2lkZSwgdGhlIHN1YnNjcmlwdCAtIG1lYW5zIGxlZnRcbiAgLy8gc3VidHJlZSBhbmQgKyBtZWFucyByaWdodCBzdWJ0cmVlLiBGb3Igc3VtbWluZyB1cCB0aGUgbW9kaWZpZXJzIGFsb25nIHRoZVxuICAvLyBjb250b3VyLCB3ZSB1c2UgcmVzcGVjdGl2ZSB2YXJpYWJsZXMgc2krLCBzaS0sIHNvLSwgYW5kIHNvKy4gV2hlbmV2ZXIgdHdvXG4gIC8vIG5vZGVzIG9mIHRoZSBpbnNpZGUgY29udG91cnMgY29uZmxpY3QsIHdlIGNvbXB1dGUgdGhlIGxlZnQgb25lIG9mIHRoZVxuICAvLyBncmVhdGVzdCB1bmNvbW1vbiBhbmNlc3RvcnMgdXNpbmcgdGhlIGZ1bmN0aW9uIEFOQ0VTVE9SIGFuZCBjYWxsIE1PVkVcbiAgLy8gU1VCVFJFRSB0byBzaGlmdCB0aGUgc3VidHJlZSBhbmQgcHJlcGFyZSB0aGUgc2hpZnRzIG9mIHNtYWxsZXIgc3VidHJlZXMuXG4gIC8vIEZpbmFsbHksIHdlIGFkZCBhIG5ldyB0aHJlYWQgKGlmIG5lY2Vzc2FyeSkuXG4gIGZ1bmN0aW9uIGFwcG9ydGlvbih2LCB3LCBhbmNlc3Rvcikge1xuICAgIGlmICh3KSB7XG4gICAgICB2YXIgdmlwID0gdixcbiAgICAgICAgICB2b3AgPSB2LFxuICAgICAgICAgIHZpbSA9IHcsXG4gICAgICAgICAgdm9tID0gdmlwLnBhcmVudC5jaGlsZHJlblswXSxcbiAgICAgICAgICBzaXAgPSB2aXAubSxcbiAgICAgICAgICBzb3AgPSB2b3AubSxcbiAgICAgICAgICBzaW0gPSB2aW0ubSxcbiAgICAgICAgICBzb20gPSB2b20ubSxcbiAgICAgICAgICBzaGlmdDtcbiAgICAgIHdoaWxlICh2aW0gPSBuZXh0UmlnaHQodmltKSwgdmlwID0gbmV4dExlZnQodmlwKSwgdmltICYmIHZpcCkge1xuICAgICAgICB2b20gPSBuZXh0TGVmdCh2b20pO1xuICAgICAgICB2b3AgPSBuZXh0UmlnaHQodm9wKTtcbiAgICAgICAgdm9wLmEgPSB2O1xuICAgICAgICBzaGlmdCA9IHZpbS56ICsgc2ltIC0gdmlwLnogLSBzaXAgKyBzZXBhcmF0aW9uKHZpbS5fLCB2aXAuXyk7XG4gICAgICAgIGlmIChzaGlmdCA+IDApIHtcbiAgICAgICAgICBtb3ZlU3VidHJlZShuZXh0QW5jZXN0b3IodmltLCB2LCBhbmNlc3RvciksIHYsIHNoaWZ0KTtcbiAgICAgICAgICBzaXAgKz0gc2hpZnQ7XG4gICAgICAgICAgc29wICs9IHNoaWZ0O1xuICAgICAgICB9XG4gICAgICAgIHNpbSArPSB2aW0ubTtcbiAgICAgICAgc2lwICs9IHZpcC5tO1xuICAgICAgICBzb20gKz0gdm9tLm07XG4gICAgICAgIHNvcCArPSB2b3AubTtcbiAgICAgIH1cbiAgICAgIGlmICh2aW0gJiYgIW5leHRSaWdodCh2b3ApKSB7XG4gICAgICAgIHZvcC50ID0gdmltO1xuICAgICAgICB2b3AubSArPSBzaW0gLSBzb3A7XG4gICAgICB9XG4gICAgICBpZiAodmlwICYmICFuZXh0TGVmdCh2b20pKSB7XG4gICAgICAgIHZvbS50ID0gdmlwO1xuICAgICAgICB2b20ubSArPSBzaXAgLSBzb207XG4gICAgICAgIGFuY2VzdG9yID0gdjtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGFuY2VzdG9yO1xuICB9XG5cbiAgZnVuY3Rpb24gc2l6ZU5vZGUobm9kZSkge1xuICAgIG5vZGUueCAqPSBkeDtcbiAgICBub2RlLnkgPSBub2RlLmRlcHRoICogZHk7XG4gIH1cblxuICB0cmVlLnNlcGFyYXRpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2VwYXJhdGlvbiA9IHgsIHRyZWUpIDogc2VwYXJhdGlvbjtcbiAgfTtcblxuICB0cmVlLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobm9kZVNpemUgPSBmYWxzZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgdHJlZSkgOiAobm9kZVNpemUgPyBudWxsIDogW2R4LCBkeV0pO1xuICB9O1xuXG4gIHRyZWUubm9kZVNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobm9kZVNpemUgPSB0cnVlLCBkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCB0cmVlKSA6IChub2RlU2l6ZSA/IFtkeCwgZHldIDogbnVsbCk7XG4gIH07XG5cbiAgcmV0dXJuIHRyZWU7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBub2RlcyA9IHBhcmVudC5jaGlsZHJlbixcbiAgICAgIGksIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICBzdW0sIHN1bXMgPSBuZXcgQXJyYXkobiArIDEpO1xuXG4gIGZvciAoc3Vtc1swXSA9IHN1bSA9IGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgc3Vtc1tpICsgMV0gPSBzdW0gKz0gbm9kZXNbaV0udmFsdWU7XG4gIH1cblxuICBwYXJ0aXRpb24oMCwgbiwgcGFyZW50LnZhbHVlLCB4MCwgeTAsIHgxLCB5MSk7XG5cbiAgZnVuY3Rpb24gcGFydGl0aW9uKGksIGosIHZhbHVlLCB4MCwgeTAsIHgxLCB5MSkge1xuICAgIGlmIChpID49IGogLSAxKSB7XG4gICAgICB2YXIgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgbm9kZS54MCA9IHgwLCBub2RlLnkwID0geTA7XG4gICAgICBub2RlLngxID0geDEsIG5vZGUueTEgPSB5MTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgdmFsdWVPZmZzZXQgPSBzdW1zW2ldLFxuICAgICAgICB2YWx1ZVRhcmdldCA9ICh2YWx1ZSAvIDIpICsgdmFsdWVPZmZzZXQsXG4gICAgICAgIGsgPSBpICsgMSxcbiAgICAgICAgaGkgPSBqIC0gMTtcblxuICAgIHdoaWxlIChrIDwgaGkpIHtcbiAgICAgIHZhciBtaWQgPSBrICsgaGkgPj4+IDE7XG4gICAgICBpZiAoc3Vtc1ttaWRdIDwgdmFsdWVUYXJnZXQpIGsgPSBtaWQgKyAxO1xuICAgICAgZWxzZSBoaSA9IG1pZDtcbiAgICB9XG5cbiAgICBpZiAoKHZhbHVlVGFyZ2V0IC0gc3Vtc1trIC0gMV0pIDwgKHN1bXNba10gLSB2YWx1ZVRhcmdldCkgJiYgaSArIDEgPCBrKSAtLWs7XG5cbiAgICB2YXIgdmFsdWVMZWZ0ID0gc3Vtc1trXSAtIHZhbHVlT2Zmc2V0LFxuICAgICAgICB2YWx1ZVJpZ2h0ID0gdmFsdWUgLSB2YWx1ZUxlZnQ7XG5cbiAgICBpZiAoKHgxIC0geDApID4gKHkxIC0geTApKSB7XG4gICAgICB2YXIgeGsgPSAoeDAgKiB2YWx1ZVJpZ2h0ICsgeDEgKiB2YWx1ZUxlZnQpIC8gdmFsdWU7XG4gICAgICBwYXJ0aXRpb24oaSwgaywgdmFsdWVMZWZ0LCB4MCwgeTAsIHhrLCB5MSk7XG4gICAgICBwYXJ0aXRpb24oaywgaiwgdmFsdWVSaWdodCwgeGssIHkwLCB4MSwgeTEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgeWsgPSAoeTAgKiB2YWx1ZVJpZ2h0ICsgeTEgKiB2YWx1ZUxlZnQpIC8gdmFsdWU7XG4gICAgICBwYXJ0aXRpb24oaSwgaywgdmFsdWVMZWZ0LCB4MCwgeTAsIHgxLCB5ayk7XG4gICAgICBwYXJ0aXRpb24oaywgaiwgdmFsdWVSaWdodCwgeDAsIHlrLCB4MSwgeTEpO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBub2RlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGsgPSBwYXJlbnQudmFsdWUgJiYgKHgxIC0geDApIC8gcGFyZW50LnZhbHVlO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnkwID0geTAsIG5vZGUueTEgPSB5MTtcbiAgICBub2RlLngwID0geDAsIG5vZGUueDEgPSB4MCArPSBub2RlLnZhbHVlICogaztcbiAgfVxufVxuIiwiaW1wb3J0IHJvdW5kTm9kZSBmcm9tIFwiLi9yb3VuZFwiO1xuaW1wb3J0IHNxdWFyaWZ5IGZyb20gXCIuL3NxdWFyaWZ5XCI7XG5pbXBvcnQge3JlcXVpcmVkfSBmcm9tIFwiLi4vYWNjZXNzb3JzXCI7XG5pbXBvcnQgY29uc3RhbnQsIHtjb25zdGFudFplcm99IGZyb20gXCIuLi9jb25zdGFudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHRpbGUgPSBzcXVhcmlmeSxcbiAgICAgIHJvdW5kID0gZmFsc2UsXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nU3RhY2sgPSBbMF0sXG4gICAgICBwYWRkaW5nSW5uZXIgPSBjb25zdGFudFplcm8sXG4gICAgICBwYWRkaW5nVG9wID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ1JpZ2h0ID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ0JvdHRvbSA9IGNvbnN0YW50WmVybyxcbiAgICAgIHBhZGRpbmdMZWZ0ID0gY29uc3RhbnRaZXJvO1xuXG4gIGZ1bmN0aW9uIHRyZWVtYXAocm9vdCkge1xuICAgIHJvb3QueDAgPVxuICAgIHJvb3QueTAgPSAwO1xuICAgIHJvb3QueDEgPSBkeDtcbiAgICByb290LnkxID0gZHk7XG4gICAgcm9vdC5lYWNoQmVmb3JlKHBvc2l0aW9uTm9kZSk7XG4gICAgcGFkZGluZ1N0YWNrID0gWzBdO1xuICAgIGlmIChyb3VuZCkgcm9vdC5lYWNoQmVmb3JlKHJvdW5kTm9kZSk7XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICBmdW5jdGlvbiBwb3NpdGlvbk5vZGUobm9kZSkge1xuICAgIHZhciBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGhdLFxuICAgICAgICB4MCA9IG5vZGUueDAgKyBwLFxuICAgICAgICB5MCA9IG5vZGUueTAgKyBwLFxuICAgICAgICB4MSA9IG5vZGUueDEgLSBwLFxuICAgICAgICB5MSA9IG5vZGUueTEgLSBwO1xuICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICBpZiAoeTEgPCB5MCkgeTAgPSB5MSA9ICh5MCArIHkxKSAvIDI7XG4gICAgbm9kZS54MCA9IHgwO1xuICAgIG5vZGUueTAgPSB5MDtcbiAgICBub2RlLngxID0geDE7XG4gICAgbm9kZS55MSA9IHkxO1xuICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGggKyAxXSA9IHBhZGRpbmdJbm5lcihub2RlKSAvIDI7XG4gICAgICB4MCArPSBwYWRkaW5nTGVmdChub2RlKSAtIHA7XG4gICAgICB5MCArPSBwYWRkaW5nVG9wKG5vZGUpIC0gcDtcbiAgICAgIHgxIC09IHBhZGRpbmdSaWdodChub2RlKSAtIHA7XG4gICAgICB5MSAtPSBwYWRkaW5nQm90dG9tKG5vZGUpIC0gcDtcbiAgICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICAgIGlmICh5MSA8IHkwKSB5MCA9IHkxID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIHRpbGUobm9kZSwgeDAsIHkwLCB4MSwgeTEpO1xuICAgIH1cbiAgfVxuXG4gIHRyZWVtYXAucm91bmQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocm91bmQgPSAhIXgsIHRyZWVtYXApIDogcm91bmQ7XG4gIH07XG5cbiAgdHJlZW1hcC5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHRyZWVtYXApIDogW2R4LCBkeV07XG4gIH07XG5cbiAgdHJlZW1hcC50aWxlID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpbGUgPSByZXF1aXJlZCh4KSwgdHJlZW1hcCkgOiB0aWxlO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRyZWVtYXAucGFkZGluZ0lubmVyKHgpLnBhZGRpbmdPdXRlcih4KSA6IHRyZWVtYXAucGFkZGluZ0lubmVyKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nSW5uZXIgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0lubmVyID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBjb25zdGFudCgreCksIHRyZWVtYXApIDogcGFkZGluZ0lubmVyO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ091dGVyID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdHJlZW1hcC5wYWRkaW5nVG9wKHgpLnBhZGRpbmdSaWdodCh4KS5wYWRkaW5nQm90dG9tKHgpLnBhZGRpbmdMZWZ0KHgpIDogdHJlZW1hcC5wYWRkaW5nVG9wKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nVG9wID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdUb3AgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgdHJlZW1hcCkgOiBwYWRkaW5nVG9wO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ1JpZ2h0ID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdSaWdodCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdSaWdodDtcbiAgfTtcblxuICB0cmVlbWFwLnBhZGRpbmdCb3R0b20gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0JvdHRvbSA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdCb3R0b207XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nTGVmdCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nTGVmdCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdMZWZ0O1xuICB9O1xuXG4gIHJldHVybiB0cmVlbWFwO1xufVxuIiwiaW1wb3J0IHRyZWVtYXBEaWNlIGZyb20gXCIuL2RpY2VcIjtcbmltcG9ydCB0cmVlbWFwU2xpY2UgZnJvbSBcIi4vc2xpY2VcIjtcbmltcG9ydCB7cGhpLCBzcXVhcmlmeVJhdGlvfSBmcm9tIFwiLi9zcXVhcmlmeVwiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHJhdGlvKSB7XG5cbiAgZnVuY3Rpb24gcmVzcXVhcmlmeShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgaWYgKChyb3dzID0gcGFyZW50Ll9zcXVhcmlmeSkgJiYgKHJvd3MucmF0aW8gPT09IHJhdGlvKSkge1xuICAgICAgdmFyIHJvd3MsXG4gICAgICAgICAgcm93LFxuICAgICAgICAgIG5vZGVzLFxuICAgICAgICAgIGksXG4gICAgICAgICAgaiA9IC0xLFxuICAgICAgICAgIG4sXG4gICAgICAgICAgbSA9IHJvd3MubGVuZ3RoLFxuICAgICAgICAgIHZhbHVlID0gcGFyZW50LnZhbHVlO1xuXG4gICAgICB3aGlsZSAoKytqIDwgbSkge1xuICAgICAgICByb3cgPSByb3dzW2pdLCBub2RlcyA9IHJvdy5jaGlsZHJlbjtcbiAgICAgICAgZm9yIChpID0gcm93LnZhbHVlID0gMCwgbiA9IG5vZGVzLmxlbmd0aDsgaSA8IG47ICsraSkgcm93LnZhbHVlICs9IG5vZGVzW2ldLnZhbHVlO1xuICAgICAgICBpZiAocm93LmRpY2UpIHRyZWVtYXBEaWNlKHJvdywgeDAsIHkwLCB4MSwgeTAgKz0gKHkxIC0geTApICogcm93LnZhbHVlIC8gdmFsdWUpO1xuICAgICAgICBlbHNlIHRyZWVtYXBTbGljZShyb3csIHgwLCB5MCwgeDAgKz0gKHgxIC0geDApICogcm93LnZhbHVlIC8gdmFsdWUsIHkxKTtcbiAgICAgICAgdmFsdWUgLT0gcm93LnZhbHVlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJlbnQuX3NxdWFyaWZ5ID0gcm93cyA9IHNxdWFyaWZ5UmF0aW8ocmF0aW8sIHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpO1xuICAgICAgcm93cy5yYXRpbyA9IHJhdGlvO1xuICAgIH1cbiAgfVxuXG4gIHJlc3F1YXJpZnkucmF0aW8gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGN1c3RvbSgoeCA9ICt4KSA+IDEgPyB4IDogMSk7XG4gIH07XG5cbiAgcmV0dXJuIHJlc3F1YXJpZnk7XG59KShwaGkpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSkge1xuICBub2RlLngwID0gTWF0aC5yb3VuZChub2RlLngwKTtcbiAgbm9kZS55MCA9IE1hdGgucm91bmQobm9kZS55MCk7XG4gIG5vZGUueDEgPSBNYXRoLnJvdW5kKG5vZGUueDEpO1xuICBub2RlLnkxID0gTWF0aC5yb3VuZChub2RlLnkxKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIG5vZGVzID0gcGFyZW50LmNoaWxkcmVuLFxuICAgICAgbm9kZSxcbiAgICAgIGkgPSAtMSxcbiAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICBrID0gcGFyZW50LnZhbHVlICYmICh5MSAtIHkwKSAvIHBhcmVudC52YWx1ZTtcblxuICB3aGlsZSAoKytpIDwgbikge1xuICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS54MCA9IHgwLCBub2RlLngxID0geDE7XG4gICAgbm9kZS55MCA9IHkwLCBub2RlLnkxID0geTAgKz0gbm9kZS52YWx1ZSAqIGs7XG4gIH1cbn1cbiIsImltcG9ydCBkaWNlIGZyb20gXCIuL2RpY2VcIjtcbmltcG9ydCBzbGljZSBmcm9tIFwiLi9zbGljZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIChwYXJlbnQuZGVwdGggJiAxID8gc2xpY2UgOiBkaWNlKShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKTtcbn1cbiIsImltcG9ydCB0cmVlbWFwRGljZSBmcm9tIFwiLi9kaWNlXCI7XG5pbXBvcnQgdHJlZW1hcFNsaWNlIGZyb20gXCIuL3NsaWNlXCI7XG5cbmV4cG9ydCB2YXIgcGhpID0gKDEgKyBNYXRoLnNxcnQoNSkpIC8gMjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNxdWFyaWZ5UmF0aW8ocmF0aW8sIHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIHJvd3MgPSBbXSxcbiAgICAgIG5vZGVzID0gcGFyZW50LmNoaWxkcmVuLFxuICAgICAgcm93LFxuICAgICAgbm9kZVZhbHVlLFxuICAgICAgaTAgPSAwLFxuICAgICAgaTEgPSAwLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGR4LCBkeSxcbiAgICAgIHZhbHVlID0gcGFyZW50LnZhbHVlLFxuICAgICAgc3VtVmFsdWUsXG4gICAgICBtaW5WYWx1ZSxcbiAgICAgIG1heFZhbHVlLFxuICAgICAgbmV3UmF0aW8sXG4gICAgICBtaW5SYXRpbyxcbiAgICAgIGFscGhhLFxuICAgICAgYmV0YTtcblxuICB3aGlsZSAoaTAgPCBuKSB7XG4gICAgZHggPSB4MSAtIHgwLCBkeSA9IHkxIC0geTA7XG5cbiAgICAvLyBGaW5kIHRoZSBuZXh0IG5vbi1lbXB0eSBub2RlLlxuICAgIGRvIHN1bVZhbHVlID0gbm9kZXNbaTErK10udmFsdWU7IHdoaWxlICghc3VtVmFsdWUgJiYgaTEgPCBuKTtcbiAgICBtaW5WYWx1ZSA9IG1heFZhbHVlID0gc3VtVmFsdWU7XG4gICAgYWxwaGEgPSBNYXRoLm1heChkeSAvIGR4LCBkeCAvIGR5KSAvICh2YWx1ZSAqIHJhdGlvKTtcbiAgICBiZXRhID0gc3VtVmFsdWUgKiBzdW1WYWx1ZSAqIGFscGhhO1xuICAgIG1pblJhdGlvID0gTWF0aC5tYXgobWF4VmFsdWUgLyBiZXRhLCBiZXRhIC8gbWluVmFsdWUpO1xuXG4gICAgLy8gS2VlcCBhZGRpbmcgbm9kZXMgd2hpbGUgdGhlIGFzcGVjdCByYXRpbyBtYWludGFpbnMgb3IgaW1wcm92ZXMuXG4gICAgZm9yICg7IGkxIDwgbjsgKytpMSkge1xuICAgICAgc3VtVmFsdWUgKz0gbm9kZVZhbHVlID0gbm9kZXNbaTFdLnZhbHVlO1xuICAgICAgaWYgKG5vZGVWYWx1ZSA8IG1pblZhbHVlKSBtaW5WYWx1ZSA9IG5vZGVWYWx1ZTtcbiAgICAgIGlmIChub2RlVmFsdWUgPiBtYXhWYWx1ZSkgbWF4VmFsdWUgPSBub2RlVmFsdWU7XG4gICAgICBiZXRhID0gc3VtVmFsdWUgKiBzdW1WYWx1ZSAqIGFscGhhO1xuICAgICAgbmV3UmF0aW8gPSBNYXRoLm1heChtYXhWYWx1ZSAvIGJldGEsIGJldGEgLyBtaW5WYWx1ZSk7XG4gICAgICBpZiAobmV3UmF0aW8gPiBtaW5SYXRpbykgeyBzdW1WYWx1ZSAtPSBub2RlVmFsdWU7IGJyZWFrOyB9XG4gICAgICBtaW5SYXRpbyA9IG5ld1JhdGlvO1xuICAgIH1cblxuICAgIC8vIFBvc2l0aW9uIGFuZCByZWNvcmQgdGhlIHJvdyBvcmllbnRhdGlvbi5cbiAgICByb3dzLnB1c2gocm93ID0ge3ZhbHVlOiBzdW1WYWx1ZSwgZGljZTogZHggPCBkeSwgY2hpbGRyZW46IG5vZGVzLnNsaWNlKGkwLCBpMSl9KTtcbiAgICBpZiAocm93LmRpY2UpIHRyZWVtYXBEaWNlKHJvdywgeDAsIHkwLCB4MSwgdmFsdWUgPyB5MCArPSBkeSAqIHN1bVZhbHVlIC8gdmFsdWUgOiB5MSk7XG4gICAgZWxzZSB0cmVlbWFwU2xpY2Uocm93LCB4MCwgeTAsIHZhbHVlID8geDAgKz0gZHggKiBzdW1WYWx1ZSAvIHZhbHVlIDogeDEsIHkxKTtcbiAgICB2YWx1ZSAtPSBzdW1WYWx1ZSwgaTAgPSBpMTtcbiAgfVxuXG4gIHJldHVybiByb3dzO1xufVxuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHJhdGlvKSB7XG5cbiAgZnVuY3Rpb24gc3F1YXJpZnkocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICAgIHNxdWFyaWZ5UmF0aW8ocmF0aW8sIHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpO1xuICB9XG5cbiAgc3F1YXJpZnkucmF0aW8gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGN1c3RvbSgoeCA9ICt4KSA+IDEgPyB4IDogMSk7XG4gIH07XG5cbiAgcmV0dXJuIHNxdWFyaWZ5O1xufSkocGhpKTtcbiIsImltcG9ydCB2YWx1ZSBmcm9tIFwiLi92YWx1ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBuYiA9IGIgPyBiLmxlbmd0aCA6IDAsXG4gICAgICBuYSA9IGEgPyBNYXRoLm1pbihuYiwgYS5sZW5ndGgpIDogMCxcbiAgICAgIHggPSBuZXcgQXJyYXkobmEpLFxuICAgICAgYyA9IG5ldyBBcnJheShuYiksXG4gICAgICBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBuYTsgKytpKSB4W2ldID0gdmFsdWUoYVtpXSwgYltpXSk7XG4gIGZvciAoOyBpIDwgbmI7ICsraSkgY1tpXSA9IGJbaV07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbmE7ICsraSkgY1tpXSA9IHhbaV0odCk7XG4gICAgcmV0dXJuIGM7XG4gIH07XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gYmFzaXModDEsIHYwLCB2MSwgdjIsIHYzKSB7XG4gIHZhciB0MiA9IHQxICogdDEsIHQzID0gdDIgKiB0MTtcbiAgcmV0dXJuICgoMSAtIDMgKiB0MSArIDMgKiB0MiAtIHQzKSAqIHYwXG4gICAgICArICg0IC0gNiAqIHQyICsgMyAqIHQzKSAqIHYxXG4gICAgICArICgxICsgMyAqIHQxICsgMyAqIHQyIC0gMyAqIHQzKSAqIHYyXG4gICAgICArIHQzICogdjMpIC8gNjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCAtIDE7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSB0IDw9IDAgPyAodCA9IDApIDogdCA+PSAxID8gKHQgPSAxLCBuIC0gMSkgOiBNYXRoLmZsb29yKHQgKiBuKSxcbiAgICAgICAgdjEgPSB2YWx1ZXNbaV0sXG4gICAgICAgIHYyID0gdmFsdWVzW2kgKyAxXSxcbiAgICAgICAgdjAgPSBpID4gMCA/IHZhbHVlc1tpIC0gMV0gOiAyICogdjEgLSB2MixcbiAgICAgICAgdjMgPSBpIDwgbiAtIDEgPyB2YWx1ZXNbaSArIDJdIDogMiAqIHYyIC0gdjE7XG4gICAgcmV0dXJuIGJhc2lzKCh0IC0gaSAvIG4pICogbiwgdjAsIHYxLCB2MiwgdjMpO1xuICB9O1xufVxuIiwiaW1wb3J0IHtiYXNpc30gZnJvbSBcIi4vYmFzaXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aDtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IE1hdGguZmxvb3IoKCh0ICU9IDEpIDwgMCA/ICsrdCA6IHQpICogbiksXG4gICAgICAgIHYwID0gdmFsdWVzWyhpICsgbiAtIDEpICUgbl0sXG4gICAgICAgIHYxID0gdmFsdWVzW2kgJSBuXSxcbiAgICAgICAgdjIgPSB2YWx1ZXNbKGkgKyAxKSAlIG5dLFxuICAgICAgICB2MyA9IHZhbHVlc1soaSArIDIpICUgbl07XG4gICAgcmV0dXJuIGJhc2lzKCh0IC0gaSAvIG4pICogbiwgdjAsIHYxLCB2MiwgdjMpO1xuICB9O1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmZ1bmN0aW9uIGxpbmVhcihhLCBkKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGEgKyB0ICogZDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZXhwb25lbnRpYWwoYSwgYiwgeSkge1xuICByZXR1cm4gYSA9IE1hdGgucG93KGEsIHkpLCBiID0gTWF0aC5wb3coYiwgeSkgLSBhLCB5ID0gMSAvIHksIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3coYSArIHQgKiBiLCB5KTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGh1ZShhLCBiKSB7XG4gIHZhciBkID0gYiAtIGE7XG4gIHJldHVybiBkID8gbGluZWFyKGEsIGQgPiAxODAgfHwgZCA8IC0xODAgPyBkIC0gMzYwICogTWF0aC5yb3VuZChkIC8gMzYwKSA6IGQpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnYW1tYSh5KSB7XG4gIHJldHVybiAoeSA9ICt5KSA9PT0gMSA/IG5vZ2FtbWEgOiBmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGIgLSBhID8gZXhwb25lbnRpYWwoYSwgYiwgeSkgOiBjb25zdGFudChpc05hTihhKSA/IGIgOiBhKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9nYW1tYShhLCBiKSB7XG4gIHZhciBkID0gYiAtIGE7XG4gIHJldHVybiBkID8gbGluZWFyKGEsIGQpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCB7Y3ViZWhlbGl4IGFzIGNvbG9yQ3ViZWhlbGl4fSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciwge2h1ZX0gZnJvbSBcIi4vY29sb3JcIjtcblxuZnVuY3Rpb24gY3ViZWhlbGl4KGh1ZSkge1xuICByZXR1cm4gKGZ1bmN0aW9uIGN1YmVoZWxpeEdhbW1hKHkpIHtcbiAgICB5ID0gK3k7XG5cbiAgICBmdW5jdGlvbiBjdWJlaGVsaXgoc3RhcnQsIGVuZCkge1xuICAgICAgdmFyIGggPSBodWUoKHN0YXJ0ID0gY29sb3JDdWJlaGVsaXgoc3RhcnQpKS5oLCAoZW5kID0gY29sb3JDdWJlaGVsaXgoZW5kKSkuaCksXG4gICAgICAgICAgcyA9IGNvbG9yKHN0YXJ0LnMsIGVuZC5zKSxcbiAgICAgICAgICBsID0gY29sb3Ioc3RhcnQubCwgZW5kLmwpLFxuICAgICAgICAgIG9wYWNpdHkgPSBjb2xvcihzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgICBzdGFydC5oID0gaCh0KTtcbiAgICAgICAgc3RhcnQucyA9IHModCk7XG4gICAgICAgIHN0YXJ0LmwgPSBsKE1hdGgucG93KHQsIHkpKTtcbiAgICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgICB9O1xuICAgIH1cblxuICAgIGN1YmVoZWxpeC5nYW1tYSA9IGN1YmVoZWxpeEdhbW1hO1xuXG4gICAgcmV0dXJuIGN1YmVoZWxpeDtcbiAgfSkoMSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGN1YmVoZWxpeChodWUpO1xuZXhwb3J0IHZhciBjdWJlaGVsaXhMb25nID0gY3ViZWhlbGl4KGNvbG9yKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGQgPSBuZXcgRGF0ZTtcbiAgcmV0dXJuIGEgPSArYSwgYiAtPSBhLCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGQuc2V0VGltZShhICsgYiAqIHQpLCBkO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFuZ2UpIHtcbiAgdmFyIG4gPSByYW5nZS5sZW5ndGg7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIHJhbmdlW01hdGgubWF4KDAsIE1hdGgubWluKG4gLSAxLCBNYXRoLmZsb29yKHQgKiBuKSkpXTtcbiAgfTtcbn1cbiIsImltcG9ydCB7aGNsIGFzIGNvbG9ySGNsfSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciwge2h1ZX0gZnJvbSBcIi4vY29sb3JcIjtcblxuZnVuY3Rpb24gaGNsKGh1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHZhciBoID0gaHVlKChzdGFydCA9IGNvbG9ySGNsKHN0YXJ0KSkuaCwgKGVuZCA9IGNvbG9ySGNsKGVuZCkpLmgpLFxuICAgICAgICBjID0gY29sb3Ioc3RhcnQuYywgZW5kLmMpLFxuICAgICAgICBsID0gY29sb3Ioc3RhcnQubCwgZW5kLmwpLFxuICAgICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5oID0gaCh0KTtcbiAgICAgIHN0YXJ0LmMgPSBjKHQpO1xuICAgICAgc3RhcnQubCA9IGwodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBoY2woaHVlKTtcbmV4cG9ydCB2YXIgaGNsTG9uZyA9IGhjbChjb2xvcik7XG4iLCJpbXBvcnQge2hzbCBhcyBjb2xvckhzbH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgY29sb3IsIHtodWV9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmZ1bmN0aW9uIGhzbChodWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgaCA9IGh1ZSgoc3RhcnQgPSBjb2xvckhzbChzdGFydCkpLmgsIChlbmQgPSBjb2xvckhzbChlbmQpKS5oKSxcbiAgICAgICAgcyA9IGNvbG9yKHN0YXJ0LnMsIGVuZC5zKSxcbiAgICAgICAgbCA9IGNvbG9yKHN0YXJ0LmwsIGVuZC5sKSxcbiAgICAgICAgb3BhY2l0eSA9IGNvbG9yKHN0YXJ0Lm9wYWNpdHksIGVuZC5vcGFjaXR5KTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgc3RhcnQuaCA9IGgodCk7XG4gICAgICBzdGFydC5zID0gcyh0KTtcbiAgICAgIHN0YXJ0LmwgPSBsKHQpO1xuICAgICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgaHNsKGh1ZSk7XG5leHBvcnQgdmFyIGhzbExvbmcgPSBoc2woY29sb3IpO1xuIiwiaW1wb3J0IHtodWV9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIGkgPSBodWUoK2EsICtiKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgeCA9IGkodCk7XG4gICAgcmV0dXJuIHggLSAzNjAgKiBNYXRoLmZsb29yKHggLyAzNjApO1xuICB9O1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlfSBmcm9tIFwiLi92YWx1ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQXJyYXl9IGZyb20gXCIuL2FycmF5XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVCYXNpc30gZnJvbSBcIi4vYmFzaXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUJhc2lzQ2xvc2VkfSBmcm9tIFwiLi9iYXNpc0Nsb3NlZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlRGF0ZX0gZnJvbSBcIi4vZGF0ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlRGlzY3JldGV9IGZyb20gXCIuL2Rpc2NyZXRlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVIdWV9IGZyb20gXCIuL2h1ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlTnVtYmVyfSBmcm9tIFwiLi9udW1iZXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZU9iamVjdH0gZnJvbSBcIi4vb2JqZWN0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSb3VuZH0gZnJvbSBcIi4vcm91bmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVN0cmluZ30gZnJvbSBcIi4vc3RyaW5nXCI7XG5leHBvcnQge2ludGVycG9sYXRlVHJhbnNmb3JtQ3NzLCBpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2Z30gZnJvbSBcIi4vdHJhbnNmb3JtL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVab29tfSBmcm9tIFwiLi96b29tXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZ2IsIHJnYkJhc2lzIGFzIGludGVycG9sYXRlUmdiQmFzaXMsIHJnYkJhc2lzQ2xvc2VkIGFzIGludGVycG9sYXRlUmdiQmFzaXNDbG9zZWR9IGZyb20gXCIuL3JnYlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlSHNsLCBoc2xMb25nIGFzIGludGVycG9sYXRlSHNsTG9uZ30gZnJvbSBcIi4vaHNsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVMYWJ9IGZyb20gXCIuL2xhYlwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlSGNsLCBoY2xMb25nIGFzIGludGVycG9sYXRlSGNsTG9uZ30gZnJvbSBcIi4vaGNsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVDdWJlaGVsaXgsIGN1YmVoZWxpeExvbmcgYXMgaW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nfSBmcm9tIFwiLi9jdWJlaGVsaXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwaWVjZXdpc2V9IGZyb20gXCIuL3BpZWNld2lzZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YW50aXplfSBmcm9tIFwiLi9xdWFudGl6ZVwiO1xuIiwiaW1wb3J0IHtsYWIgYXMgY29sb3JMYWJ9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGNvbG9yIGZyb20gXCIuL2NvbG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxhYihzdGFydCwgZW5kKSB7XG4gIHZhciBsID0gY29sb3IoKHN0YXJ0ID0gY29sb3JMYWIoc3RhcnQpKS5sLCAoZW5kID0gY29sb3JMYWIoZW5kKSkubCksXG4gICAgICBhID0gY29sb3Ioc3RhcnQuYSwgZW5kLmEpLFxuICAgICAgYiA9IGNvbG9yKHN0YXJ0LmIsIGVuZC5iKSxcbiAgICAgIG9wYWNpdHkgPSBjb2xvcihzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgc3RhcnQubCA9IGwodCk7XG4gICAgc3RhcnQuYSA9IGEodCk7XG4gICAgc3RhcnQuYiA9IGIodCk7XG4gICAgc3RhcnQub3BhY2l0eSA9IG9wYWNpdHkodCk7XG4gICAgcmV0dXJuIHN0YXJ0ICsgXCJcIjtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEgPSArYSwgYiAtPSBhLCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGEgKyBiICogdDtcbiAgfTtcbn1cbiIsImltcG9ydCB2YWx1ZSBmcm9tIFwiLi92YWx1ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBpID0ge30sXG4gICAgICBjID0ge30sXG4gICAgICBrO1xuXG4gIGlmIChhID09PSBudWxsIHx8IHR5cGVvZiBhICE9PSBcIm9iamVjdFwiKSBhID0ge307XG4gIGlmIChiID09PSBudWxsIHx8IHR5cGVvZiBiICE9PSBcIm9iamVjdFwiKSBiID0ge307XG5cbiAgZm9yIChrIGluIGIpIHtcbiAgICBpZiAoayBpbiBhKSB7XG4gICAgICBpW2tdID0gdmFsdWUoYVtrXSwgYltrXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNba10gPSBiW2tdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgZm9yIChrIGluIGkpIGNba10gPSBpW2tdKHQpO1xuICAgIHJldHVybiBjO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGllY2V3aXNlKGludGVycG9sYXRlLCB2YWx1ZXMpIHtcbiAgdmFyIGkgPSAwLCBuID0gdmFsdWVzLmxlbmd0aCAtIDEsIHYgPSB2YWx1ZXNbMF0sIEkgPSBuZXcgQXJyYXkobiA8IDAgPyAwIDogbik7XG4gIHdoaWxlIChpIDwgbikgSVtpXSA9IGludGVycG9sYXRlKHYsIHYgPSB2YWx1ZXNbKytpXSk7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSBNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcih0ICo9IG4pKSk7XG4gICAgcmV0dXJuIElbaV0odCAtIGkpO1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW50ZXJwb2xhdG9yLCBuKSB7XG4gIHZhciBzYW1wbGVzID0gbmV3IEFycmF5KG4pO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkgc2FtcGxlc1tpXSA9IGludGVycG9sYXRvcihpIC8gKG4gLSAxKSk7XG4gIHJldHVybiBzYW1wbGVzO1xufVxuIiwiaW1wb3J0IHtyZ2IgYXMgY29sb3JSZ2J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGJhc2lzIGZyb20gXCIuL2Jhc2lzXCI7XG5pbXBvcnQgYmFzaXNDbG9zZWQgZnJvbSBcIi4vYmFzaXNDbG9zZWRcIjtcbmltcG9ydCBub2dhbW1hLCB7Z2FtbWF9IGZyb20gXCIuL2NvbG9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiByZ2JHYW1tYSh5KSB7XG4gIHZhciBjb2xvciA9IGdhbW1hKHkpO1xuXG4gIGZ1bmN0aW9uIHJnYihzdGFydCwgZW5kKSB7XG4gICAgdmFyIHIgPSBjb2xvcigoc3RhcnQgPSBjb2xvclJnYihzdGFydCkpLnIsIChlbmQgPSBjb2xvclJnYihlbmQpKS5yKSxcbiAgICAgICAgZyA9IGNvbG9yKHN0YXJ0LmcsIGVuZC5nKSxcbiAgICAgICAgYiA9IGNvbG9yKHN0YXJ0LmIsIGVuZC5iKSxcbiAgICAgICAgb3BhY2l0eSA9IG5vZ2FtbWEoc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5yID0gcih0KTtcbiAgICAgIHN0YXJ0LmcgPSBnKHQpO1xuICAgICAgc3RhcnQuYiA9IGIodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxuXG4gIHJnYi5nYW1tYSA9IHJnYkdhbW1hO1xuXG4gIHJldHVybiByZ2I7XG59KSgxKTtcblxuZnVuY3Rpb24gcmdiU3BsaW5lKHNwbGluZSkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sb3JzKSB7XG4gICAgdmFyIG4gPSBjb2xvcnMubGVuZ3RoLFxuICAgICAgICByID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBnID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBiID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBpLCBjb2xvcjtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBjb2xvciA9IGNvbG9yUmdiKGNvbG9yc1tpXSk7XG4gICAgICByW2ldID0gY29sb3IuciB8fCAwO1xuICAgICAgZ1tpXSA9IGNvbG9yLmcgfHwgMDtcbiAgICAgIGJbaV0gPSBjb2xvci5iIHx8IDA7XG4gICAgfVxuICAgIHIgPSBzcGxpbmUocik7XG4gICAgZyA9IHNwbGluZShnKTtcbiAgICBiID0gc3BsaW5lKGIpO1xuICAgIGNvbG9yLm9wYWNpdHkgPSAxO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBjb2xvci5yID0gcih0KTtcbiAgICAgIGNvbG9yLmcgPSBnKHQpO1xuICAgICAgY29sb3IuYiA9IGIodCk7XG4gICAgICByZXR1cm4gY29sb3IgKyBcIlwiO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgcmdiQmFzaXMgPSByZ2JTcGxpbmUoYmFzaXMpO1xuZXhwb3J0IHZhciByZ2JCYXNpc0Nsb3NlZCA9IHJnYlNwbGluZShiYXNpc0Nsb3NlZCk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhID0gK2EsIGIgLT0gYSwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKGEgKyBiICogdCk7XG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlclwiO1xuXG52YXIgcmVBID0gL1stK10/KD86XFxkK1xcLj9cXGQqfFxcLj9cXGQrKSg/OltlRV1bLStdP1xcZCspPy9nLFxuICAgIHJlQiA9IG5ldyBSZWdFeHAocmVBLnNvdXJjZSwgXCJnXCIpO1xuXG5mdW5jdGlvbiB6ZXJvKGIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiO1xuICB9O1xufVxuXG5mdW5jdGlvbiBvbmUoYikge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBiKHQpICsgXCJcIjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYmkgPSByZUEubGFzdEluZGV4ID0gcmVCLmxhc3RJbmRleCA9IDAsIC8vIHNjYW4gaW5kZXggZm9yIG5leHQgbnVtYmVyIGluIGJcbiAgICAgIGFtLCAvLyBjdXJyZW50IG1hdGNoIGluIGFcbiAgICAgIGJtLCAvLyBjdXJyZW50IG1hdGNoIGluIGJcbiAgICAgIGJzLCAvLyBzdHJpbmcgcHJlY2VkaW5nIGN1cnJlbnQgbnVtYmVyIGluIGIsIGlmIGFueVxuICAgICAgaSA9IC0xLCAvLyBpbmRleCBpbiBzXG4gICAgICBzID0gW10sIC8vIHN0cmluZyBjb25zdGFudHMgYW5kIHBsYWNlaG9sZGVyc1xuICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuXG4gIC8vIENvZXJjZSBpbnB1dHMgdG8gc3RyaW5ncy5cbiAgYSA9IGEgKyBcIlwiLCBiID0gYiArIFwiXCI7XG5cbiAgLy8gSW50ZXJwb2xhdGUgcGFpcnMgb2YgbnVtYmVycyBpbiBhICYgYi5cbiAgd2hpbGUgKChhbSA9IHJlQS5leGVjKGEpKVxuICAgICAgJiYgKGJtID0gcmVCLmV4ZWMoYikpKSB7XG4gICAgaWYgKChicyA9IGJtLmluZGV4KSA+IGJpKSB7IC8vIGEgc3RyaW5nIHByZWNlZGVzIHRoZSBuZXh0IG51bWJlciBpbiBiXG4gICAgICBicyA9IGIuc2xpY2UoYmksIGJzKTtcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBicztcbiAgICB9XG4gICAgaWYgKChhbSA9IGFtWzBdKSA9PT0gKGJtID0gYm1bMF0pKSB7IC8vIG51bWJlcnMgaW4gYSAmIGIgbWF0Y2hcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJtOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBibTtcbiAgICB9IGVsc2UgeyAvLyBpbnRlcnBvbGF0ZSBub24tbWF0Y2hpbmcgbnVtYmVyc1xuICAgICAgc1srK2ldID0gbnVsbDtcbiAgICAgIHEucHVzaCh7aTogaSwgeDogbnVtYmVyKGFtLCBibSl9KTtcbiAgICB9XG4gICAgYmkgPSByZUIubGFzdEluZGV4O1xuICB9XG5cbiAgLy8gQWRkIHJlbWFpbnMgb2YgYi5cbiAgaWYgKGJpIDwgYi5sZW5ndGgpIHtcbiAgICBicyA9IGIuc2xpY2UoYmkpO1xuICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgIGVsc2Ugc1srK2ldID0gYnM7XG4gIH1cblxuICAvLyBTcGVjaWFsIG9wdGltaXphdGlvbiBmb3Igb25seSBhIHNpbmdsZSBtYXRjaC5cbiAgLy8gT3RoZXJ3aXNlLCBpbnRlcnBvbGF0ZSBlYWNoIG9mIHRoZSBudW1iZXJzIGFuZCByZWpvaW4gdGhlIHN0cmluZy5cbiAgcmV0dXJuIHMubGVuZ3RoIDwgMiA/IChxWzBdXG4gICAgICA/IG9uZShxWzBdLngpXG4gICAgICA6IHplcm8oYikpXG4gICAgICA6IChiID0gcS5sZW5ndGgsIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbzsgaSA8IGI7ICsraSkgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgICAgIHJldHVybiBzLmpvaW4oXCJcIik7XG4gICAgICAgIH0pO1xufVxuIiwidmFyIGRlZ3JlZXMgPSAxODAgLyBNYXRoLlBJO1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0ge1xuICB0cmFuc2xhdGVYOiAwLFxuICB0cmFuc2xhdGVZOiAwLFxuICByb3RhdGU6IDAsXG4gIHNrZXdYOiAwLFxuICBzY2FsZVg6IDEsXG4gIHNjYWxlWTogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYiwgYywgZCwgZSwgZikge1xuICB2YXIgc2NhbGVYLCBzY2FsZVksIHNrZXdYO1xuICBpZiAoc2NhbGVYID0gTWF0aC5zcXJ0KGEgKiBhICsgYiAqIGIpKSBhIC89IHNjYWxlWCwgYiAvPSBzY2FsZVg7XG4gIGlmIChza2V3WCA9IGEgKiBjICsgYiAqIGQpIGMgLT0gYSAqIHNrZXdYLCBkIC09IGIgKiBza2V3WDtcbiAgaWYgKHNjYWxlWSA9IE1hdGguc3FydChjICogYyArIGQgKiBkKSkgYyAvPSBzY2FsZVksIGQgLz0gc2NhbGVZLCBza2V3WCAvPSBzY2FsZVk7XG4gIGlmIChhICogZCA8IGIgKiBjKSBhID0gLWEsIGIgPSAtYiwgc2tld1ggPSAtc2tld1gsIHNjYWxlWCA9IC1zY2FsZVg7XG4gIHJldHVybiB7XG4gICAgdHJhbnNsYXRlWDogZSxcbiAgICB0cmFuc2xhdGVZOiBmLFxuICAgIHJvdGF0ZTogTWF0aC5hdGFuMihiLCBhKSAqIGRlZ3JlZXMsXG4gICAgc2tld1g6IE1hdGguYXRhbihza2V3WCkgKiBkZWdyZWVzLFxuICAgIHNjYWxlWDogc2NhbGVYLFxuICAgIHNjYWxlWTogc2NhbGVZXG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuLi9udW1iZXJcIjtcbmltcG9ydCB7cGFyc2VDc3MsIHBhcnNlU3ZnfSBmcm9tIFwiLi9wYXJzZVwiO1xuXG5mdW5jdGlvbiBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZSwgcHhDb21tYSwgcHhQYXJlbiwgZGVnUGFyZW4pIHtcblxuICBmdW5jdGlvbiBwb3Aocykge1xuICAgIHJldHVybiBzLmxlbmd0aCA/IHMucG9wKCkgKyBcIiBcIiA6IFwiXCI7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGUoeGEsIHlhLCB4YiwgeWIsIHMsIHEpIHtcbiAgICBpZiAoeGEgIT09IHhiIHx8IHlhICE9PSB5Yikge1xuICAgICAgdmFyIGkgPSBzLnB1c2goXCJ0cmFuc2xhdGUoXCIsIG51bGwsIHB4Q29tbWEsIG51bGwsIHB4UGFyZW4pO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiB8fCB5Yikge1xuICAgICAgcy5wdXNoKFwidHJhbnNsYXRlKFwiICsgeGIgKyBweENvbW1hICsgeWIgKyBweFBhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByb3RhdGUoYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBpZiAoYSAtIGIgPiAxODApIGIgKz0gMzYwOyBlbHNlIGlmIChiIC0gYSA+IDE4MCkgYSArPSAzNjA7IC8vIHNob3J0ZXN0IHBhdGhcbiAgICAgIHEucHVzaCh7aTogcy5wdXNoKHBvcChzKSArIFwicm90YXRlKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInJvdGF0ZShcIiArIGIgKyBkZWdQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2tld1goYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBxLnB1c2goe2k6IHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiICsgYiArIGRlZ1BhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzY2FsZSh4YSwgeWEsIHhiLCB5YiwgcywgcSkge1xuICAgIGlmICh4YSAhPT0geGIgfHwgeWEgIT09IHliKSB7XG4gICAgICB2YXIgaSA9IHMucHVzaChwb3AocykgKyBcInNjYWxlKFwiLCBudWxsLCBcIixcIiwgbnVsbCwgXCIpXCIpO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiAhPT0gMSB8fCB5YiAhPT0gMSkge1xuICAgICAgcy5wdXNoKHBvcChzKSArIFwic2NhbGUoXCIgKyB4YiArIFwiLFwiICsgeWIgKyBcIilcIik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgcyA9IFtdLCAvLyBzdHJpbmcgY29uc3RhbnRzIGFuZCBwbGFjZWhvbGRlcnNcbiAgICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuICAgIGEgPSBwYXJzZShhKSwgYiA9IHBhcnNlKGIpO1xuICAgIHRyYW5zbGF0ZShhLnRyYW5zbGF0ZVgsIGEudHJhbnNsYXRlWSwgYi50cmFuc2xhdGVYLCBiLnRyYW5zbGF0ZVksIHMsIHEpO1xuICAgIHJvdGF0ZShhLnJvdGF0ZSwgYi5yb3RhdGUsIHMsIHEpO1xuICAgIHNrZXdYKGEuc2tld1gsIGIuc2tld1gsIHMsIHEpO1xuICAgIHNjYWxlKGEuc2NhbGVYLCBhLnNjYWxlWSwgYi5zY2FsZVgsIGIuc2NhbGVZLCBzLCBxKTtcbiAgICBhID0gYiA9IG51bGw7IC8vIGdjXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBxLmxlbmd0aCwgbztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZUNzcywgXCJweCwgXCIsIFwicHgpXCIsIFwiZGVnKVwiKTtcbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmcgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZVN2ZywgXCIsIFwiLCBcIilcIiwgXCIpXCIpO1xuIiwiaW1wb3J0IGRlY29tcG9zZSwge2lkZW50aXR5fSBmcm9tIFwiLi9kZWNvbXBvc2VcIjtcblxudmFyIGNzc05vZGUsXG4gICAgY3NzUm9vdCxcbiAgICBjc3NWaWV3LFxuICAgIHN2Z05vZGU7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNzcyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT09IFwibm9uZVwiKSByZXR1cm4gaWRlbnRpdHk7XG4gIGlmICghY3NzTm9kZSkgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJESVZcIiksIGNzc1Jvb3QgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIGNzc1ZpZXcgPSBkb2N1bWVudC5kZWZhdWx0VmlldztcbiAgY3NzTm9kZS5zdHlsZS50cmFuc2Zvcm0gPSB2YWx1ZTtcbiAgdmFsdWUgPSBjc3NWaWV3LmdldENvbXB1dGVkU3R5bGUoY3NzUm9vdC5hcHBlbmRDaGlsZChjc3NOb2RlKSwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShcInRyYW5zZm9ybVwiKTtcbiAgY3NzUm9vdC5yZW1vdmVDaGlsZChjc3NOb2RlKTtcbiAgdmFsdWUgPSB2YWx1ZS5zbGljZSg3LCAtMSkuc3BsaXQoXCIsXCIpO1xuICByZXR1cm4gZGVjb21wb3NlKCt2YWx1ZVswXSwgK3ZhbHVlWzFdLCArdmFsdWVbMl0sICt2YWx1ZVszXSwgK3ZhbHVlWzRdLCArdmFsdWVbNV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTdmcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBpZGVudGl0eTtcbiAgaWYgKCFzdmdOb2RlKSBzdmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJnXCIpO1xuICBzdmdOb2RlLnNldEF0dHJpYnV0ZShcInRyYW5zZm9ybVwiLCB2YWx1ZSk7XG4gIGlmICghKHZhbHVlID0gc3ZnTm9kZS50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpKSkgcmV0dXJuIGlkZW50aXR5O1xuICB2YWx1ZSA9IHZhbHVlLm1hdHJpeDtcbiAgcmV0dXJuIGRlY29tcG9zZSh2YWx1ZS5hLCB2YWx1ZS5iLCB2YWx1ZS5jLCB2YWx1ZS5kLCB2YWx1ZS5lLCB2YWx1ZS5mKTtcbn1cbiIsImltcG9ydCB7Y29sb3J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHJnYiBmcm9tIFwiLi9yZ2JcIjtcbmltcG9ydCBhcnJheSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IGRhdGUgZnJvbSBcIi4vZGF0ZVwiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXJcIjtcbmltcG9ydCBvYmplY3QgZnJvbSBcIi4vb2JqZWN0XCI7XG5pbXBvcnQgc3RyaW5nIGZyb20gXCIuL3N0cmluZ1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIHQgPSB0eXBlb2YgYiwgYztcbiAgcmV0dXJuIGIgPT0gbnVsbCB8fCB0ID09PSBcImJvb2xlYW5cIiA/IGNvbnN0YW50KGIpXG4gICAgICA6ICh0ID09PSBcIm51bWJlclwiID8gbnVtYmVyXG4gICAgICA6IHQgPT09IFwic3RyaW5nXCIgPyAoKGMgPSBjb2xvcihiKSkgPyAoYiA9IGMsIHJnYikgOiBzdHJpbmcpXG4gICAgICA6IGIgaW5zdGFuY2VvZiBjb2xvciA/IHJnYlxuICAgICAgOiBiIGluc3RhbmNlb2YgRGF0ZSA/IGRhdGVcbiAgICAgIDogQXJyYXkuaXNBcnJheShiKSA/IGFycmF5XG4gICAgICA6IHR5cGVvZiBiLnZhbHVlT2YgIT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgYi50b1N0cmluZyAhPT0gXCJmdW5jdGlvblwiIHx8IGlzTmFOKGIpID8gb2JqZWN0XG4gICAgICA6IG51bWJlcikoYSwgYik7XG59XG4iLCJ2YXIgcmhvID0gTWF0aC5TUVJUMixcbiAgICByaG8yID0gMixcbiAgICByaG80ID0gNCxcbiAgICBlcHNpbG9uMiA9IDFlLTEyO1xuXG5mdW5jdGlvbiBjb3NoKHgpIHtcbiAgcmV0dXJuICgoeCA9IE1hdGguZXhwKHgpKSArIDEgLyB4KSAvIDI7XG59XG5cbmZ1bmN0aW9uIHNpbmgoeCkge1xuICByZXR1cm4gKCh4ID0gTWF0aC5leHAoeCkpIC0gMSAvIHgpIC8gMjtcbn1cblxuZnVuY3Rpb24gdGFuaCh4KSB7XG4gIHJldHVybiAoKHggPSBNYXRoLmV4cCgyICogeCkpIC0gMSkgLyAoeCArIDEpO1xufVxuXG4vLyBwMCA9IFt1eDAsIHV5MCwgdzBdXG4vLyBwMSA9IFt1eDEsIHV5MSwgdzFdXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwMCwgcDEpIHtcbiAgdmFyIHV4MCA9IHAwWzBdLCB1eTAgPSBwMFsxXSwgdzAgPSBwMFsyXSxcbiAgICAgIHV4MSA9IHAxWzBdLCB1eTEgPSBwMVsxXSwgdzEgPSBwMVsyXSxcbiAgICAgIGR4ID0gdXgxIC0gdXgwLFxuICAgICAgZHkgPSB1eTEgLSB1eTAsXG4gICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5LFxuICAgICAgaSxcbiAgICAgIFM7XG5cbiAgLy8gU3BlY2lhbCBjYXNlIGZvciB1MCDiiYUgdTEuXG4gIGlmIChkMiA8IGVwc2lsb24yKSB7XG4gICAgUyA9IE1hdGgubG9nKHcxIC8gdzApIC8gcmhvO1xuICAgIGkgPSBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICB1eDAgKyB0ICogZHgsXG4gICAgICAgIHV5MCArIHQgKiBkeSxcbiAgICAgICAgdzAgKiBNYXRoLmV4cChyaG8gKiB0ICogUylcbiAgICAgIF07XG4gICAgfVxuICB9XG5cbiAgLy8gR2VuZXJhbCBjYXNlLlxuICBlbHNlIHtcbiAgICB2YXIgZDEgPSBNYXRoLnNxcnQoZDIpLFxuICAgICAgICBiMCA9ICh3MSAqIHcxIC0gdzAgKiB3MCArIHJobzQgKiBkMikgLyAoMiAqIHcwICogcmhvMiAqIGQxKSxcbiAgICAgICAgYjEgPSAodzEgKiB3MSAtIHcwICogdzAgLSByaG80ICogZDIpIC8gKDIgKiB3MSAqIHJobzIgKiBkMSksXG4gICAgICAgIHIwID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIwICogYjAgKyAxKSAtIGIwKSxcbiAgICAgICAgcjEgPSBNYXRoLmxvZyhNYXRoLnNxcnQoYjEgKiBiMSArIDEpIC0gYjEpO1xuICAgIFMgPSAocjEgLSByMCkgLyByaG87XG4gICAgaSA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBzID0gdCAqIFMsXG4gICAgICAgICAgY29zaHIwID0gY29zaChyMCksXG4gICAgICAgICAgdSA9IHcwIC8gKHJobzIgKiBkMSkgKiAoY29zaHIwICogdGFuaChyaG8gKiBzICsgcjApIC0gc2luaChyMCkpO1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgdXgwICsgdSAqIGR4LFxuICAgICAgICB1eTAgKyB1ICogZHksXG4gICAgICAgIHcwICogY29zaHIwIC8gY29zaChyaG8gKiBzICsgcjApXG4gICAgICBdO1xuICAgIH1cbiAgfVxuXG4gIGkuZHVyYXRpb24gPSBTICogMTAwMDtcblxuICByZXR1cm4gaTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBwYXRofSBmcm9tIFwiLi9wYXRoXCI7XG4iLCJ2YXIgcGkgPSBNYXRoLlBJLFxuICAgIHRhdSA9IDIgKiBwaSxcbiAgICBlcHNpbG9uID0gMWUtNixcbiAgICB0YXVFcHNpbG9uID0gdGF1IC0gZXBzaWxvbjtcblxuZnVuY3Rpb24gUGF0aCgpIHtcbiAgdGhpcy5feDAgPSB0aGlzLl95MCA9IC8vIHN0YXJ0IG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl94MSA9IHRoaXMuX3kxID0gbnVsbDsgLy8gZW5kIG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl8gPSBcIlwiO1xufVxuXG5mdW5jdGlvbiBwYXRoKCkge1xuICByZXR1cm4gbmV3IFBhdGg7XG59XG5cblBhdGgucHJvdG90eXBlID0gcGF0aC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBQYXRoLFxuICBtb3ZlVG86IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDAgPSB0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGNsb3NlUGF0aDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3gxICE9PSBudWxsKSB7XG4gICAgICB0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwO1xuICAgICAgdGhpcy5fICs9IFwiWlwiO1xuICAgIH1cbiAgfSxcbiAgbGluZVRvOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiTFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIHF1YWRyYXRpY0N1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeCwgeSkge1xuICAgIHRoaXMuXyArPSBcIlFcIiArICgreDEpICsgXCIsXCIgKyAoK3kxKSArIFwiLFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGJlemllckN1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCB4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiQ1wiICsgKCt4MSkgKyBcIixcIiArICgreTEpICsgXCIsXCIgKyAoK3gyKSArIFwiLFwiICsgKCt5MikgKyBcIixcIiArICh0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBhcmNUbzogZnVuY3Rpb24oeDEsIHkxLCB4MiwgeTIsIHIpIHtcbiAgICB4MSA9ICt4MSwgeTEgPSAreTEsIHgyID0gK3gyLCB5MiA9ICt5MiwgciA9ICtyO1xuICAgIHZhciB4MCA9IHRoaXMuX3gxLFxuICAgICAgICB5MCA9IHRoaXMuX3kxLFxuICAgICAgICB4MjEgPSB4MiAtIHgxLFxuICAgICAgICB5MjEgPSB5MiAtIHkxLFxuICAgICAgICB4MDEgPSB4MCAtIHgxLFxuICAgICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgICBsMDFfMiA9IHgwMSAqIHgwMSArIHkwMSAqIHkwMTtcblxuICAgIC8vIElzIHRoZSByYWRpdXMgbmVnYXRpdmU/IEVycm9yLlxuICAgIGlmIChyIDwgMCkgdGhyb3cgbmV3IEVycm9yKFwibmVnYXRpdmUgcmFkaXVzOiBcIiArIHIpO1xuXG4gICAgLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MSx5MSkuXG4gICAgaWYgKHRoaXMuX3gxID09PSBudWxsKSB7XG4gICAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPciwgaXMgKHgxLHkxKSBjb2luY2lkZW50IHdpdGggKHgwLHkwKT8gRG8gbm90aGluZy5cbiAgICBlbHNlIGlmICghKGwwMV8yID4gZXBzaWxvbikpO1xuXG4gICAgLy8gT3IsIGFyZSAoeDAseTApLCAoeDEseTEpIGFuZCAoeDIseTIpIGNvbGxpbmVhcj9cbiAgICAvLyBFcXVpdmFsZW50bHksIGlzICh4MSx5MSkgY29pbmNpZGVudCB3aXRoICh4Mix5Mik/XG4gICAgLy8gT3IsIGlzIHRoZSByYWRpdXMgemVybz8gTGluZSB0byAoeDEseTEpLlxuICAgIGVsc2UgaWYgKCEoTWF0aC5hYnMoeTAxICogeDIxIC0geTIxICogeDAxKSA+IGVwc2lsb24pIHx8ICFyKSB7XG4gICAgICB0aGlzLl8gKz0gXCJMXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPdGhlcndpc2UsIGRyYXcgYW4gYXJjIVxuICAgIGVsc2Uge1xuICAgICAgdmFyIHgyMCA9IHgyIC0geDAsXG4gICAgICAgICAgeTIwID0geTIgLSB5MCxcbiAgICAgICAgICBsMjFfMiA9IHgyMSAqIHgyMSArIHkyMSAqIHkyMSxcbiAgICAgICAgICBsMjBfMiA9IHgyMCAqIHgyMCArIHkyMCAqIHkyMCxcbiAgICAgICAgICBsMjEgPSBNYXRoLnNxcnQobDIxXzIpLFxuICAgICAgICAgIGwwMSA9IE1hdGguc3FydChsMDFfMiksXG4gICAgICAgICAgbCA9IHIgKiBNYXRoLnRhbigocGkgLSBNYXRoLmFjb3MoKGwyMV8yICsgbDAxXzIgLSBsMjBfMikgLyAoMiAqIGwyMSAqIGwwMSkpKSAvIDIpLFxuICAgICAgICAgIHQwMSA9IGwgLyBsMDEsXG4gICAgICAgICAgdDIxID0gbCAvIGwyMTtcblxuICAgICAgLy8gSWYgdGhlIHN0YXJ0IHRhbmdlbnQgaXMgbm90IGNvaW5jaWRlbnQgd2l0aCAoeDAseTApLCBsaW5lIHRvLlxuICAgICAgaWYgKE1hdGguYWJzKHQwMSAtIDEpID4gZXBzaWxvbikge1xuICAgICAgICB0aGlzLl8gKz0gXCJMXCIgKyAoeDEgKyB0MDEgKiB4MDEpICsgXCIsXCIgKyAoeTEgKyB0MDEgKiB5MDEpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwwLFwiICsgKCsoeTAxICogeDIwID4geDAxICogeTIwKSkgKyBcIixcIiArICh0aGlzLl94MSA9IHgxICsgdDIxICogeDIxKSArIFwiLFwiICsgKHRoaXMuX3kxID0geTEgKyB0MjEgKiB5MjEpO1xuICAgIH1cbiAgfSxcbiAgYXJjOiBmdW5jdGlvbih4LCB5LCByLCBhMCwgYTEsIGNjdykge1xuICAgIHggPSAreCwgeSA9ICt5LCByID0gK3I7XG4gICAgdmFyIGR4ID0gciAqIE1hdGguY29zKGEwKSxcbiAgICAgICAgZHkgPSByICogTWF0aC5zaW4oYTApLFxuICAgICAgICB4MCA9IHggKyBkeCxcbiAgICAgICAgeTAgPSB5ICsgZHksXG4gICAgICAgIGN3ID0gMSBeIGNjdyxcbiAgICAgICAgZGEgPSBjY3cgPyBhMCAtIGExIDogYTEgLSBhMDtcblxuICAgIC8vIElzIHRoZSByYWRpdXMgbmVnYXRpdmU/IEVycm9yLlxuICAgIGlmIChyIDwgMCkgdGhyb3cgbmV3IEVycm9yKFwibmVnYXRpdmUgcmFkaXVzOiBcIiArIHIpO1xuXG4gICAgLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MCx5MCkuXG4gICAgaWYgKHRoaXMuX3gxID09PSBudWxsKSB7XG4gICAgICB0aGlzLl8gKz0gXCJNXCIgKyB4MCArIFwiLFwiICsgeTA7XG4gICAgfVxuXG4gICAgLy8gT3IsIGlzICh4MCx5MCkgbm90IGNvaW5jaWRlbnQgd2l0aCB0aGUgcHJldmlvdXMgcG9pbnQ/IExpbmUgdG8gKHgwLHkwKS5cbiAgICBlbHNlIGlmIChNYXRoLmFicyh0aGlzLl94MSAtIHgwKSA+IGVwc2lsb24gfHwgTWF0aC5hYnModGhpcy5feTEgLSB5MCkgPiBlcHNpbG9uKSB7XG4gICAgICB0aGlzLl8gKz0gXCJMXCIgKyB4MCArIFwiLFwiICsgeTA7XG4gICAgfVxuXG4gICAgLy8gSXMgdGhpcyBhcmMgZW1wdHk/IFdl4oCZcmUgZG9uZS5cbiAgICBpZiAoIXIpIHJldHVybjtcblxuICAgIC8vIERvZXMgdGhlIGFuZ2xlIGdvIHRoZSB3cm9uZyB3YXk/IEZsaXAgdGhlIGRpcmVjdGlvbi5cbiAgICBpZiAoZGEgPCAwKSBkYSA9IGRhICUgdGF1ICsgdGF1O1xuXG4gICAgLy8gSXMgdGhpcyBhIGNvbXBsZXRlIGNpcmNsZT8gRHJhdyB0d28gYXJjcyB0byBjb21wbGV0ZSB0aGUgY2lyY2xlLlxuICAgIGlmIChkYSA+IHRhdUVwc2lsb24pIHtcbiAgICAgIHRoaXMuXyArPSBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiwwLDEsXCIgKyBjdyArIFwiLFwiICsgKHggLSBkeCkgKyBcIixcIiArICh5IC0gZHkpICsgXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwxLFwiICsgY3cgKyBcIixcIiArICh0aGlzLl94MSA9IHgwKSArIFwiLFwiICsgKHRoaXMuX3kxID0geTApO1xuICAgIH1cblxuICAgIC8vIElzIHRoaXMgYXJjIG5vbi1lbXB0eT8gRHJhdyBhbiBhcmMhXG4gICAgZWxzZSBpZiAoZGEgPiBlcHNpbG9uKSB7XG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCxcIiArICgrKGRhID49IHBpKSkgKyBcIixcIiArIGN3ICsgXCIsXCIgKyAodGhpcy5feDEgPSB4ICsgciAqIE1hdGguY29zKGExKSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkgKyByICogTWF0aC5zaW4oYTEpKTtcbiAgICB9XG4gIH0sXG4gIHJlY3Q6IGZ1bmN0aW9uKHgsIHksIHcsIGgpIHtcbiAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDAgPSB0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSAreSkgKyBcImhcIiArICgrdykgKyBcInZcIiArICgraCkgKyBcImhcIiArICgtdykgKyBcIlpcIjtcbiAgfSxcbiAgdG9TdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl87XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHBhdGg7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCBjcmVhdG9yIGZyb20gXCIuL2NyZWF0b3JcIjtcbmltcG9ydCBzZWxlY3QgZnJvbSBcIi4vc2VsZWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHNlbGVjdChjcmVhdG9yKG5hbWUpLmNhbGwoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSk7XG59XG4iLCJpbXBvcnQgbmFtZXNwYWNlIGZyb20gXCIuL25hbWVzcGFjZVwiO1xuaW1wb3J0IHt4aHRtbH0gZnJvbSBcIi4vbmFtZXNwYWNlc1wiO1xuXG5mdW5jdGlvbiBjcmVhdG9ySW5oZXJpdChuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgZG9jdW1lbnQgPSB0aGlzLm93bmVyRG9jdW1lbnQsXG4gICAgICAgIHVyaSA9IHRoaXMubmFtZXNwYWNlVVJJO1xuICAgIHJldHVybiB1cmkgPT09IHhodG1sICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5uYW1lc3BhY2VVUkkgPT09IHhodG1sXG4gICAgICAgID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKVxuICAgICAgICA6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh1cmksIG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdG9yRml4ZWQoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIGZ1bGxuYW1lID0gbmFtZXNwYWNlKG5hbWUpO1xuICByZXR1cm4gKGZ1bGxuYW1lLmxvY2FsXG4gICAgICA/IGNyZWF0b3JGaXhlZFxuICAgICAgOiBjcmVhdG9ySW5oZXJpdCkoZnVsbG5hbWUpO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNyZWF0ZX0gZnJvbSBcIi4vY3JlYXRlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3JlYXRvcn0gZnJvbSBcIi4vY3JlYXRvclwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGxvY2FsfSBmcm9tIFwiLi9sb2NhbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1hdGNoZXJ9IGZyb20gXCIuL21hdGNoZXJcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtb3VzZX0gZnJvbSBcIi4vbW91c2VcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBuYW1lc3BhY2V9IGZyb20gXCIuL25hbWVzcGFjZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG5hbWVzcGFjZXN9IGZyb20gXCIuL25hbWVzcGFjZXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjbGllbnRQb2ludH0gZnJvbSBcIi4vcG9pbnRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZWxlY3R9IGZyb20gXCIuL3NlbGVjdFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNlbGVjdEFsbH0gZnJvbSBcIi4vc2VsZWN0QWxsXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0aW9ufSBmcm9tIFwiLi9zZWxlY3Rpb24vaW5kZXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZWxlY3Rvcn0gZnJvbSBcIi4vc2VsZWN0b3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZWxlY3RvckFsbH0gZnJvbSBcIi4vc2VsZWN0b3JBbGxcIjtcbmV4cG9ydCB7c3R5bGVWYWx1ZSBhcyBzdHlsZX0gZnJvbSBcIi4vc2VsZWN0aW9uL3N0eWxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdG91Y2h9IGZyb20gXCIuL3RvdWNoXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdG91Y2hlc30gZnJvbSBcIi4vdG91Y2hlc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHdpbmRvd30gZnJvbSBcIi4vd2luZG93XCI7XG5leHBvcnQge2V2ZW50LCBjdXN0b21FdmVudH0gZnJvbSBcIi4vc2VsZWN0aW9uL29uXCI7XG4iLCJ2YXIgbmV4dElkID0gMDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9jYWwoKSB7XG4gIHJldHVybiBuZXcgTG9jYWw7XG59XG5cbmZ1bmN0aW9uIExvY2FsKCkge1xuICB0aGlzLl8gPSBcIkBcIiArICgrK25leHRJZCkudG9TdHJpbmcoMzYpO1xufVxuXG5Mb2NhbC5wcm90b3R5cGUgPSBsb2NhbC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBMb2NhbCxcbiAgZ2V0OiBmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIGlkID0gdGhpcy5fO1xuICAgIHdoaWxlICghKGlkIGluIG5vZGUpKSBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkgcmV0dXJuO1xuICAgIHJldHVybiBub2RlW2lkXTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbihub2RlLCB2YWx1ZSkge1xuICAgIHJldHVybiBub2RlW3RoaXMuX10gPSB2YWx1ZTtcbiAgfSxcbiAgcmVtb3ZlOiBmdW5jdGlvbihub2RlKSB7XG4gICAgcmV0dXJuIHRoaXMuXyBpbiBub2RlICYmIGRlbGV0ZSBub2RlW3RoaXMuX107XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fO1xuICB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm1hdGNoZXMoc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiaW1wb3J0IHNvdXJjZUV2ZW50IGZyb20gXCIuL3NvdXJjZUV2ZW50XCI7XG5pbXBvcnQgcG9pbnQgZnJvbSBcIi4vcG9pbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSkge1xuICB2YXIgZXZlbnQgPSBzb3VyY2VFdmVudCgpO1xuICBpZiAoZXZlbnQuY2hhbmdlZFRvdWNoZXMpIGV2ZW50ID0gZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF07XG4gIHJldHVybiBwb2ludChub2RlLCBldmVudCk7XG59XG4iLCJpbXBvcnQgbmFtZXNwYWNlcyBmcm9tIFwiLi9uYW1lc3BhY2VzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIHByZWZpeCA9IG5hbWUgKz0gXCJcIiwgaSA9IHByZWZpeC5pbmRleE9mKFwiOlwiKTtcbiAgaWYgKGkgPj0gMCAmJiAocHJlZml4ID0gbmFtZS5zbGljZSgwLCBpKSkgIT09IFwieG1sbnNcIikgbmFtZSA9IG5hbWUuc2xpY2UoaSArIDEpO1xuICByZXR1cm4gbmFtZXNwYWNlcy5oYXNPd25Qcm9wZXJ0eShwcmVmaXgpID8ge3NwYWNlOiBuYW1lc3BhY2VzW3ByZWZpeF0sIGxvY2FsOiBuYW1lfSA6IG5hbWU7XG59XG4iLCJleHBvcnQgdmFyIHhodG1sID0gXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc3ZnOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gIHhodG1sOiB4aHRtbCxcbiAgeGxpbms6IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLFxuICB4bWw6IFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsXG4gIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvXCJcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBldmVudCkge1xuICB2YXIgc3ZnID0gbm9kZS5vd25lclNWR0VsZW1lbnQgfHwgbm9kZTtcblxuICBpZiAoc3ZnLmNyZWF0ZVNWR1BvaW50KSB7XG4gICAgdmFyIHBvaW50ID0gc3ZnLmNyZWF0ZVNWR1BvaW50KCk7XG4gICAgcG9pbnQueCA9IGV2ZW50LmNsaWVudFgsIHBvaW50LnkgPSBldmVudC5jbGllbnRZO1xuICAgIHBvaW50ID0gcG9pbnQubWF0cml4VHJhbnNmb3JtKG5vZGUuZ2V0U2NyZWVuQ1RNKCkuaW52ZXJzZSgpKTtcbiAgICByZXR1cm4gW3BvaW50LngsIHBvaW50LnldO1xuICB9XG5cbiAgdmFyIHJlY3QgPSBub2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4gW2V2ZW50LmNsaWVudFggLSByZWN0LmxlZnQgLSBub2RlLmNsaWVudExlZnQsIGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcCAtIG5vZGUuY2xpZW50VG9wXTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9uLCByb290fSBmcm9tIFwiLi9zZWxlY3Rpb24vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIlxuICAgICAgPyBuZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcildXSwgW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pXG4gICAgICA6IG5ldyBTZWxlY3Rpb24oW1tzZWxlY3Rvcl1dLCByb290KTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9uLCByb290fSBmcm9tIFwiLi9zZWxlY3Rpb24vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIlxuICAgICAgPyBuZXcgU2VsZWN0aW9uKFtkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKV0sIFtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdKVxuICAgICAgOiBuZXcgU2VsZWN0aW9uKFtzZWxlY3RvciA9PSBudWxsID8gW10gOiBzZWxlY3Rvcl0sIHJvb3QpO1xufVxuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4uL2NyZWF0b3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgY3JlYXRlID0gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiBjcmVhdG9yKG5hbWUpO1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuYXBwZW5kQ2hpbGQoY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9KTtcbn1cbiIsImltcG9ydCBuYW1lc3BhY2UgZnJvbSBcIi4uL25hbWVzcGFjZVwiO1xuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlTlMoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50KG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHZhbHVlKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHYpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKTtcbiAgICByZXR1cm4gZnVsbG5hbWUubG9jYWxcbiAgICAgICAgPyBub2RlLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbClcbiAgICAgICAgOiBub2RlLmdldEF0dHJpYnV0ZShmdWxsbmFtZSk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJSZW1vdmVOUyA6IGF0dHJSZW1vdmUpIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uKVxuICAgICAgOiAoZnVsbG5hbWUubG9jYWwgPyBhdHRyQ29uc3RhbnROUyA6IGF0dHJDb25zdGFudCkpKShmdWxsbmFtZSwgdmFsdWUpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHNbMF07XG4gIGFyZ3VtZW50c1swXSA9IHRoaXM7XG4gIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZnVuY3Rpb24gY2xhc3NBcnJheShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy50cmltKCkuc3BsaXQoL158XFxzKy8pO1xufVxuXG5mdW5jdGlvbiBjbGFzc0xpc3Qobm9kZSkge1xuICByZXR1cm4gbm9kZS5jbGFzc0xpc3QgfHwgbmV3IENsYXNzTGlzdChub2RlKTtcbn1cblxuZnVuY3Rpb24gQ2xhc3NMaXN0KG5vZGUpIHtcbiAgdGhpcy5fbm9kZSA9IG5vZGU7XG4gIHRoaXMuX25hbWVzID0gY2xhc3NBcnJheShub2RlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIpO1xufVxuXG5DbGFzc0xpc3QucHJvdG90eXBlID0ge1xuICBhZGQ6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgaSA9IHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSk7XG4gICAgaWYgKGkgPCAwKSB7XG4gICAgICB0aGlzLl9uYW1lcy5wdXNoKG5hbWUpO1xuICAgICAgdGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB0aGlzLl9uYW1lcy5qb2luKFwiIFwiKSk7XG4gICAgfVxuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgaSA9IHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSk7XG4gICAgaWYgKGkgPj0gMCkge1xuICAgICAgdGhpcy5fbmFtZXMuc3BsaWNlKGksIDEpO1xuICAgICAgdGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB0aGlzLl9uYW1lcy5qb2luKFwiIFwiKSk7XG4gICAgfVxuICB9LFxuICBjb250YWluczogZnVuY3Rpb24obmFtZSkge1xuICAgIHJldHVybiB0aGlzLl9uYW1lcy5pbmRleE9mKG5hbWUpID49IDA7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNsYXNzZWRBZGQobm9kZSwgbmFtZXMpIHtcbiAgdmFyIGxpc3QgPSBjbGFzc0xpc3Qobm9kZSksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgd2hpbGUgKCsraSA8IG4pIGxpc3QuYWRkKG5hbWVzW2ldKTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZFJlbW92ZShub2RlLCBuYW1lcykge1xuICB2YXIgbGlzdCA9IGNsYXNzTGlzdChub2RlKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICB3aGlsZSAoKytpIDwgbikgbGlzdC5yZW1vdmUobmFtZXNbaV0pO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkVHJ1ZShuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgY2xhc3NlZEFkZCh0aGlzLCBuYW1lcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRGYWxzZShuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgY2xhc3NlZFJlbW92ZSh0aGlzLCBuYW1lcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRGdW5jdGlvbihuYW1lcywgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICh2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpID8gY2xhc3NlZEFkZCA6IGNsYXNzZWRSZW1vdmUpKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIG5hbWVzID0gY2xhc3NBcnJheShuYW1lICsgXCJcIik7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIGxpc3QgPSBjbGFzc0xpc3QodGhpcy5ub2RlKCkpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmICghbGlzdC5jb250YWlucyhuYW1lc1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLmVhY2goKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IGNsYXNzZWRGdW5jdGlvbiA6IHZhbHVlXG4gICAgICA/IGNsYXNzZWRUcnVlXG4gICAgICA6IGNsYXNzZWRGYWxzZSkobmFtZXMsIHZhbHVlKSk7XG59XG4iLCJmdW5jdGlvbiBzZWxlY3Rpb25fY2xvbmVTaGFsbG93KCkge1xuICByZXR1cm4gdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLmNsb25lTm9kZShmYWxzZSksIHRoaXMubmV4dFNpYmxpbmcpO1xufVxuXG5mdW5jdGlvbiBzZWxlY3Rpb25fY2xvbmVEZWVwKCkge1xuICByZXR1cm4gdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLmNsb25lTm9kZSh0cnVlKSwgdGhpcy5uZXh0U2libGluZyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGRlZXApIHtcbiAgcmV0dXJuIHRoaXMuc2VsZWN0KGRlZXAgPyBzZWxlY3Rpb25fY2xvbmVEZWVwIDogc2VsZWN0aW9uX2Nsb25lU2hhbGxvdyk7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCB7RW50ZXJOb2RlfSBmcm9tIFwiLi9lbnRlclwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuLi9jb25zdGFudFwiO1xuXG52YXIga2V5UHJlZml4ID0gXCIkXCI7IC8vIFByb3RlY3QgYWdhaW5zdCBrZXlzIGxpa2Ug4oCcX19wcm90b19f4oCdLlxuXG5mdW5jdGlvbiBiaW5kSW5kZXgocGFyZW50LCBncm91cCwgZW50ZXIsIHVwZGF0ZSwgZXhpdCwgZGF0YSkge1xuICB2YXIgaSA9IDAsXG4gICAgICBub2RlLFxuICAgICAgZ3JvdXBMZW5ndGggPSBncm91cC5sZW5ndGgsXG4gICAgICBkYXRhTGVuZ3RoID0gZGF0YS5sZW5ndGg7XG5cbiAgLy8gUHV0IGFueSBub24tbnVsbCBub2RlcyB0aGF0IGZpdCBpbnRvIHVwZGF0ZS5cbiAgLy8gUHV0IGFueSBudWxsIG5vZGVzIGludG8gZW50ZXIuXG4gIC8vIFB1dCBhbnkgcmVtYWluaW5nIGRhdGEgaW50byBlbnRlci5cbiAgZm9yICg7IGkgPCBkYXRhTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICBub2RlLl9fZGF0YV9fID0gZGF0YVtpXTtcbiAgICAgIHVwZGF0ZVtpXSA9IG5vZGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVudGVyW2ldID0gbmV3IEVudGVyTm9kZShwYXJlbnQsIGRhdGFbaV0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIFB1dCBhbnkgbm9uLW51bGwgbm9kZXMgdGhhdCBkb27igJl0IGZpdCBpbnRvIGV4aXQuXG4gIGZvciAoOyBpIDwgZ3JvdXBMZW5ndGg7ICsraSkge1xuICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgIGV4aXRbaV0gPSBub2RlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBiaW5kS2V5KHBhcmVudCwgZ3JvdXAsIGVudGVyLCB1cGRhdGUsIGV4aXQsIGRhdGEsIGtleSkge1xuICB2YXIgaSxcbiAgICAgIG5vZGUsXG4gICAgICBub2RlQnlLZXlWYWx1ZSA9IHt9LFxuICAgICAgZ3JvdXBMZW5ndGggPSBncm91cC5sZW5ndGgsXG4gICAgICBkYXRhTGVuZ3RoID0gZGF0YS5sZW5ndGgsXG4gICAgICBrZXlWYWx1ZXMgPSBuZXcgQXJyYXkoZ3JvdXBMZW5ndGgpLFxuICAgICAga2V5VmFsdWU7XG5cbiAgLy8gQ29tcHV0ZSB0aGUga2V5IGZvciBlYWNoIG5vZGUuXG4gIC8vIElmIG11bHRpcGxlIG5vZGVzIGhhdmUgdGhlIHNhbWUga2V5LCB0aGUgZHVwbGljYXRlcyBhcmUgYWRkZWQgdG8gZXhpdC5cbiAgZm9yIChpID0gMDsgaSA8IGdyb3VwTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICBrZXlWYWx1ZXNbaV0gPSBrZXlWYWx1ZSA9IGtleVByZWZpeCArIGtleS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKTtcbiAgICAgIGlmIChrZXlWYWx1ZSBpbiBub2RlQnlLZXlWYWx1ZSkge1xuICAgICAgICBleGl0W2ldID0gbm9kZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGVCeUtleVZhbHVlW2tleVZhbHVlXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gQ29tcHV0ZSB0aGUga2V5IGZvciBlYWNoIGRhdHVtLlxuICAvLyBJZiB0aGVyZSBhIG5vZGUgYXNzb2NpYXRlZCB3aXRoIHRoaXMga2V5LCBqb2luIGFuZCBhZGQgaXQgdG8gdXBkYXRlLlxuICAvLyBJZiB0aGVyZSBpcyBub3QgKG9yIHRoZSBrZXkgaXMgYSBkdXBsaWNhdGUpLCBhZGQgaXQgdG8gZW50ZXIuXG4gIGZvciAoaSA9IDA7IGkgPCBkYXRhTGVuZ3RoOyArK2kpIHtcbiAgICBrZXlWYWx1ZSA9IGtleVByZWZpeCArIGtleS5jYWxsKHBhcmVudCwgZGF0YVtpXSwgaSwgZGF0YSk7XG4gICAgaWYgKG5vZGUgPSBub2RlQnlLZXlWYWx1ZVtrZXlWYWx1ZV0pIHtcbiAgICAgIHVwZGF0ZVtpXSA9IG5vZGU7XG4gICAgICBub2RlLl9fZGF0YV9fID0gZGF0YVtpXTtcbiAgICAgIG5vZGVCeUtleVZhbHVlW2tleVZhbHVlXSA9IG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVudGVyW2ldID0gbmV3IEVudGVyTm9kZShwYXJlbnQsIGRhdGFbaV0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIEFkZCBhbnkgcmVtYWluaW5nIG5vZGVzIHRoYXQgd2VyZSBub3QgYm91bmQgdG8gZGF0YSB0byBleGl0LlxuICBmb3IgKGkgPSAwOyBpIDwgZ3JvdXBMZW5ndGg7ICsraSkge1xuICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAobm9kZUJ5S2V5VmFsdWVba2V5VmFsdWVzW2ldXSA9PT0gbm9kZSkpIHtcbiAgICAgIGV4aXRbaV0gPSBub2RlO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gIGlmICghdmFsdWUpIHtcbiAgICBkYXRhID0gbmV3IEFycmF5KHRoaXMuc2l6ZSgpKSwgaiA9IC0xO1xuICAgIHRoaXMuZWFjaChmdW5jdGlvbihkKSB7IGRhdGFbKytqXSA9IGQ7IH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgdmFyIGJpbmQgPSBrZXkgPyBiaW5kS2V5IDogYmluZEluZGV4LFxuICAgICAgcGFyZW50cyA9IHRoaXMuX3BhcmVudHMsXG4gICAgICBncm91cHMgPSB0aGlzLl9ncm91cHM7XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB2YWx1ZSA9IGNvbnN0YW50KHZhbHVlKTtcblxuICBmb3IgKHZhciBtID0gZ3JvdXBzLmxlbmd0aCwgdXBkYXRlID0gbmV3IEFycmF5KG0pLCBlbnRlciA9IG5ldyBBcnJheShtKSwgZXhpdCA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICB2YXIgcGFyZW50ID0gcGFyZW50c1tqXSxcbiAgICAgICAgZ3JvdXAgPSBncm91cHNbal0sXG4gICAgICAgIGdyb3VwTGVuZ3RoID0gZ3JvdXAubGVuZ3RoLFxuICAgICAgICBkYXRhID0gdmFsdWUuY2FsbChwYXJlbnQsIHBhcmVudCAmJiBwYXJlbnQuX19kYXRhX18sIGosIHBhcmVudHMpLFxuICAgICAgICBkYXRhTGVuZ3RoID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIGVudGVyR3JvdXAgPSBlbnRlcltqXSA9IG5ldyBBcnJheShkYXRhTGVuZ3RoKSxcbiAgICAgICAgdXBkYXRlR3JvdXAgPSB1cGRhdGVbal0gPSBuZXcgQXJyYXkoZGF0YUxlbmd0aCksXG4gICAgICAgIGV4aXRHcm91cCA9IGV4aXRbal0gPSBuZXcgQXJyYXkoZ3JvdXBMZW5ndGgpO1xuXG4gICAgYmluZChwYXJlbnQsIGdyb3VwLCBlbnRlckdyb3VwLCB1cGRhdGVHcm91cCwgZXhpdEdyb3VwLCBkYXRhLCBrZXkpO1xuXG4gICAgLy8gTm93IGNvbm5lY3QgdGhlIGVudGVyIG5vZGVzIHRvIHRoZWlyIGZvbGxvd2luZyB1cGRhdGUgbm9kZSwgc3VjaCB0aGF0XG4gICAgLy8gYXBwZW5kQ2hpbGQgY2FuIGluc2VydCB0aGUgbWF0ZXJpYWxpemVkIGVudGVyIG5vZGUgYmVmb3JlIHRoaXMgbm9kZSxcbiAgICAvLyByYXRoZXIgdGhhbiBhdCB0aGUgZW5kIG9mIHRoZSBwYXJlbnQgbm9kZS5cbiAgICBmb3IgKHZhciBpMCA9IDAsIGkxID0gMCwgcHJldmlvdXMsIG5leHQ7IGkwIDwgZGF0YUxlbmd0aDsgKytpMCkge1xuICAgICAgaWYgKHByZXZpb3VzID0gZW50ZXJHcm91cFtpMF0pIHtcbiAgICAgICAgaWYgKGkwID49IGkxKSBpMSA9IGkwICsgMTtcbiAgICAgICAgd2hpbGUgKCEobmV4dCA9IHVwZGF0ZUdyb3VwW2kxXSkgJiYgKytpMSA8IGRhdGFMZW5ndGgpO1xuICAgICAgICBwcmV2aW91cy5fbmV4dCA9IG5leHQgfHwgbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB1cGRhdGUgPSBuZXcgU2VsZWN0aW9uKHVwZGF0ZSwgcGFyZW50cyk7XG4gIHVwZGF0ZS5fZW50ZXIgPSBlbnRlcjtcbiAgdXBkYXRlLl9leGl0ID0gZXhpdDtcbiAgcmV0dXJuIHVwZGF0ZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiLCB2YWx1ZSlcbiAgICAgIDogdGhpcy5ub2RlKCkuX19kYXRhX187XG59XG4iLCJpbXBvcnQgZGVmYXVsdFZpZXcgZnJvbSBcIi4uL3dpbmRvd1wiO1xuXG5mdW5jdGlvbiBkaXNwYXRjaEV2ZW50KG5vZGUsIHR5cGUsIHBhcmFtcykge1xuICB2YXIgd2luZG93ID0gZGVmYXVsdFZpZXcobm9kZSksXG4gICAgICBldmVudCA9IHdpbmRvdy5DdXN0b21FdmVudDtcblxuICBpZiAodHlwZW9mIGV2ZW50ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBldmVudCA9IG5ldyBldmVudCh0eXBlLCBwYXJhbXMpO1xuICB9IGVsc2Uge1xuICAgIGV2ZW50ID0gd2luZG93LmRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiRXZlbnRcIik7XG4gICAgaWYgKHBhcmFtcykgZXZlbnQuaW5pdEV2ZW50KHR5cGUsIHBhcmFtcy5idWJibGVzLCBwYXJhbXMuY2FuY2VsYWJsZSksIGV2ZW50LmRldGFpbCA9IHBhcmFtcy5kZXRhaWw7XG4gICAgZWxzZSBldmVudC5pbml0RXZlbnQodHlwZSwgZmFsc2UsIGZhbHNlKTtcbiAgfVxuXG4gIG5vZGUuZGlzcGF0Y2hFdmVudChldmVudCk7XG59XG5cbmZ1bmN0aW9uIGRpc3BhdGNoQ29uc3RhbnQodHlwZSwgcGFyYW1zKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2hFdmVudCh0aGlzLCB0eXBlLCBwYXJhbXMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkaXNwYXRjaEZ1bmN0aW9uKHR5cGUsIHBhcmFtcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoRXZlbnQodGhpcywgdHlwZSwgcGFyYW1zLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0eXBlLCBwYXJhbXMpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaCgodHlwZW9mIHBhcmFtcyA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IGRpc3BhdGNoRnVuY3Rpb25cbiAgICAgIDogZGlzcGF0Y2hDb25zdGFudCkodHlwZSwgcGFyYW1zKSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaykge1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgaiA9IDAsIG0gPSBncm91cHMubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSBjYWxsYmFjay5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gIXRoaXMubm9kZSgpO1xufVxuIiwiaW1wb3J0IHNwYXJzZSBmcm9tIFwiLi9zcGFyc2VcIjtcbmltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZW50ZXIgfHwgdGhpcy5fZ3JvdXBzLm1hcChzcGFyc2UpLCB0aGlzLl9wYXJlbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEVudGVyTm9kZShwYXJlbnQsIGRhdHVtKSB7XG4gIHRoaXMub3duZXJEb2N1bWVudCA9IHBhcmVudC5vd25lckRvY3VtZW50O1xuICB0aGlzLm5hbWVzcGFjZVVSSSA9IHBhcmVudC5uYW1lc3BhY2VVUkk7XG4gIHRoaXMuX25leHQgPSBudWxsO1xuICB0aGlzLl9wYXJlbnQgPSBwYXJlbnQ7XG4gIHRoaXMuX19kYXRhX18gPSBkYXR1bTtcbn1cblxuRW50ZXJOb2RlLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IEVudGVyTm9kZSxcbiAgYXBwZW5kQ2hpbGQ6IGZ1bmN0aW9uKGNoaWxkKSB7IHJldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKGNoaWxkLCB0aGlzLl9uZXh0KTsgfSxcbiAgaW5zZXJ0QmVmb3JlOiBmdW5jdGlvbihjaGlsZCwgbmV4dCkgeyByZXR1cm4gdGhpcy5fcGFyZW50Lmluc2VydEJlZm9yZShjaGlsZCwgbmV4dCk7IH0sXG4gIHF1ZXJ5U2VsZWN0b3I6IGZ1bmN0aW9uKHNlbGVjdG9yKSB7IHJldHVybiB0aGlzLl9wYXJlbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7IH0sXG4gIHF1ZXJ5U2VsZWN0b3JBbGw6IGZ1bmN0aW9uKHNlbGVjdG9yKSB7IHJldHVybiB0aGlzLl9wYXJlbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7IH1cbn07XG4iLCJpbXBvcnQgc3BhcnNlIGZyb20gXCIuL3NwYXJzZVwiO1xuaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9leGl0IHx8IHRoaXMuX2dyb3Vwcy5tYXAoc3BhcnNlKSwgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBtYXRjaGVyIGZyb20gXCIuLi9tYXRjaGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIGlmICh0eXBlb2YgbWF0Y2ggIT09IFwiZnVuY3Rpb25cIikgbWF0Y2ggPSBtYXRjaGVyKG1hdGNoKTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gW10sIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgbWF0Y2guY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpIHtcbiAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMpO1xufVxuIiwiZnVuY3Rpb24gaHRtbFJlbW92ZSgpIHtcbiAgdGhpcy5pbm5lckhUTUwgPSBcIlwiO1xufVxuXG5mdW5jdGlvbiBodG1sQ29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaW5uZXJIVE1MID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGh0bWxGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHRoaXMuaW5uZXJIVE1MID0gdiA9PSBudWxsID8gXCJcIiA6IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCh2YWx1ZSA9PSBudWxsXG4gICAgICAgICAgPyBodG1sUmVtb3ZlIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyBodG1sRnVuY3Rpb25cbiAgICAgICAgICA6IGh0bWxDb25zdGFudCkodmFsdWUpKVxuICAgICAgOiB0aGlzLm5vZGUoKS5pbm5lckhUTUw7XG59XG4iLCJpbXBvcnQgc2VsZWN0aW9uX3NlbGVjdCBmcm9tIFwiLi9zZWxlY3RcIjtcbmltcG9ydCBzZWxlY3Rpb25fc2VsZWN0QWxsIGZyb20gXCIuL3NlbGVjdEFsbFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9maWx0ZXIgZnJvbSBcIi4vZmlsdGVyXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2RhdGEgZnJvbSBcIi4vZGF0YVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9lbnRlciBmcm9tIFwiLi9lbnRlclwiO1xuaW1wb3J0IHNlbGVjdGlvbl9leGl0IGZyb20gXCIuL2V4aXRcIjtcbmltcG9ydCBzZWxlY3Rpb25fam9pbiBmcm9tIFwiLi9qb2luXCI7XG5pbXBvcnQgc2VsZWN0aW9uX21lcmdlIGZyb20gXCIuL21lcmdlXCI7XG5pbXBvcnQgc2VsZWN0aW9uX29yZGVyIGZyb20gXCIuL29yZGVyXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NvcnQgZnJvbSBcIi4vc29ydFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9jYWxsIGZyb20gXCIuL2NhbGxcIjtcbmltcG9ydCBzZWxlY3Rpb25fbm9kZXMgZnJvbSBcIi4vbm9kZXNcIjtcbmltcG9ydCBzZWxlY3Rpb25fbm9kZSBmcm9tIFwiLi9ub2RlXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NpemUgZnJvbSBcIi4vc2l6ZVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9lbXB0eSBmcm9tIFwiLi9lbXB0eVwiO1xuaW1wb3J0IHNlbGVjdGlvbl9lYWNoIGZyb20gXCIuL2VhY2hcIjtcbmltcG9ydCBzZWxlY3Rpb25fYXR0ciBmcm9tIFwiLi9hdHRyXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3N0eWxlIGZyb20gXCIuL3N0eWxlXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3Byb3BlcnR5IGZyb20gXCIuL3Byb3BlcnR5XCI7XG5pbXBvcnQgc2VsZWN0aW9uX2NsYXNzZWQgZnJvbSBcIi4vY2xhc3NlZFwiO1xuaW1wb3J0IHNlbGVjdGlvbl90ZXh0IGZyb20gXCIuL3RleHRcIjtcbmltcG9ydCBzZWxlY3Rpb25faHRtbCBmcm9tIFwiLi9odG1sXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3JhaXNlIGZyb20gXCIuL3JhaXNlXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2xvd2VyIGZyb20gXCIuL2xvd2VyXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2FwcGVuZCBmcm9tIFwiLi9hcHBlbmRcIjtcbmltcG9ydCBzZWxlY3Rpb25faW5zZXJ0IGZyb20gXCIuL2luc2VydFwiO1xuaW1wb3J0IHNlbGVjdGlvbl9yZW1vdmUgZnJvbSBcIi4vcmVtb3ZlXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2Nsb25lIGZyb20gXCIuL2Nsb25lXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2RhdHVtIGZyb20gXCIuL2RhdHVtXCI7XG5pbXBvcnQgc2VsZWN0aW9uX29uIGZyb20gXCIuL29uXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2Rpc3BhdGNoIGZyb20gXCIuL2Rpc3BhdGNoXCI7XG5cbmV4cG9ydCB2YXIgcm9vdCA9IFtudWxsXTtcblxuZXhwb3J0IGZ1bmN0aW9uIFNlbGVjdGlvbihncm91cHMsIHBhcmVudHMpIHtcbiAgdGhpcy5fZ3JvdXBzID0gZ3JvdXBzO1xuICB0aGlzLl9wYXJlbnRzID0gcGFyZW50cztcbn1cblxuZnVuY3Rpb24gc2VsZWN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbihbW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF1dLCByb290KTtcbn1cblxuU2VsZWN0aW9uLnByb3RvdHlwZSA9IHNlbGVjdGlvbi5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBTZWxlY3Rpb24sXG4gIHNlbGVjdDogc2VsZWN0aW9uX3NlbGVjdCxcbiAgc2VsZWN0QWxsOiBzZWxlY3Rpb25fc2VsZWN0QWxsLFxuICBmaWx0ZXI6IHNlbGVjdGlvbl9maWx0ZXIsXG4gIGRhdGE6IHNlbGVjdGlvbl9kYXRhLFxuICBlbnRlcjogc2VsZWN0aW9uX2VudGVyLFxuICBleGl0OiBzZWxlY3Rpb25fZXhpdCxcbiAgam9pbjogc2VsZWN0aW9uX2pvaW4sXG4gIG1lcmdlOiBzZWxlY3Rpb25fbWVyZ2UsXG4gIG9yZGVyOiBzZWxlY3Rpb25fb3JkZXIsXG4gIHNvcnQ6IHNlbGVjdGlvbl9zb3J0LFxuICBjYWxsOiBzZWxlY3Rpb25fY2FsbCxcbiAgbm9kZXM6IHNlbGVjdGlvbl9ub2RlcyxcbiAgbm9kZTogc2VsZWN0aW9uX25vZGUsXG4gIHNpemU6IHNlbGVjdGlvbl9zaXplLFxuICBlbXB0eTogc2VsZWN0aW9uX2VtcHR5LFxuICBlYWNoOiBzZWxlY3Rpb25fZWFjaCxcbiAgYXR0cjogc2VsZWN0aW9uX2F0dHIsXG4gIHN0eWxlOiBzZWxlY3Rpb25fc3R5bGUsXG4gIHByb3BlcnR5OiBzZWxlY3Rpb25fcHJvcGVydHksXG4gIGNsYXNzZWQ6IHNlbGVjdGlvbl9jbGFzc2VkLFxuICB0ZXh0OiBzZWxlY3Rpb25fdGV4dCxcbiAgaHRtbDogc2VsZWN0aW9uX2h0bWwsXG4gIHJhaXNlOiBzZWxlY3Rpb25fcmFpc2UsXG4gIGxvd2VyOiBzZWxlY3Rpb25fbG93ZXIsXG4gIGFwcGVuZDogc2VsZWN0aW9uX2FwcGVuZCxcbiAgaW5zZXJ0OiBzZWxlY3Rpb25faW5zZXJ0LFxuICByZW1vdmU6IHNlbGVjdGlvbl9yZW1vdmUsXG4gIGNsb25lOiBzZWxlY3Rpb25fY2xvbmUsXG4gIGRhdHVtOiBzZWxlY3Rpb25fZGF0dW0sXG4gIG9uOiBzZWxlY3Rpb25fb24sXG4gIGRpc3BhdGNoOiBzZWxlY3Rpb25fZGlzcGF0Y2hcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNlbGVjdGlvbjtcbiIsImltcG9ydCBjcmVhdG9yIGZyb20gXCIuLi9jcmVhdG9yXCI7XG5pbXBvcnQgc2VsZWN0b3IgZnJvbSBcIi4uL3NlbGVjdG9yXCI7XG5cbmZ1bmN0aW9uIGNvbnN0YW50TnVsbCgpIHtcbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIGJlZm9yZSkge1xuICB2YXIgY3JlYXRlID0gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiBjcmVhdG9yKG5hbWUpLFxuICAgICAgc2VsZWN0ID0gYmVmb3JlID09IG51bGwgPyBjb25zdGFudE51bGwgOiB0eXBlb2YgYmVmb3JlID09PSBcImZ1bmN0aW9uXCIgPyBiZWZvcmUgOiBzZWxlY3RvcihiZWZvcmUpO1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuaW5zZXJ0QmVmb3JlKGNyZWF0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBzZWxlY3QuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCBudWxsKTtcbiAgfSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvbmVudGVyLCBvbnVwZGF0ZSwgb25leGl0KSB7XG4gIHZhciBlbnRlciA9IHRoaXMuZW50ZXIoKSwgdXBkYXRlID0gdGhpcywgZXhpdCA9IHRoaXMuZXhpdCgpO1xuICBlbnRlciA9IHR5cGVvZiBvbmVudGVyID09PSBcImZ1bmN0aW9uXCIgPyBvbmVudGVyKGVudGVyKSA6IGVudGVyLmFwcGVuZChvbmVudGVyICsgXCJcIik7XG4gIGlmIChvbnVwZGF0ZSAhPSBudWxsKSB1cGRhdGUgPSBvbnVwZGF0ZSh1cGRhdGUpO1xuICBpZiAob25leGl0ID09IG51bGwpIGV4aXQucmVtb3ZlKCk7IGVsc2Ugb25leGl0KGV4aXQpO1xuICByZXR1cm4gZW50ZXIgJiYgdXBkYXRlID8gZW50ZXIubWVyZ2UodXBkYXRlKS5vcmRlcigpIDogdXBkYXRlO1xufVxuIiwiZnVuY3Rpb24gbG93ZXIoKSB7XG4gIGlmICh0aGlzLnByZXZpb3VzU2libGluZykgdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLCB0aGlzLnBhcmVudE5vZGUuZmlyc3RDaGlsZCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lYWNoKGxvd2VyKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rpb24pIHtcblxuICBmb3IgKHZhciBncm91cHMwID0gdGhpcy5fZ3JvdXBzLCBncm91cHMxID0gc2VsZWN0aW9uLl9ncm91cHMsIG0wID0gZ3JvdXBzMC5sZW5ndGgsIG0xID0gZ3JvdXBzMS5sZW5ndGgsIG0gPSBNYXRoLm1pbihtMCwgbTEpLCBtZXJnZXMgPSBuZXcgQXJyYXkobTApLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwMCA9IGdyb3VwczBbal0sIGdyb3VwMSA9IGdyb3VwczFbal0sIG4gPSBncm91cDAubGVuZ3RoLCBtZXJnZSA9IG1lcmdlc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXAwW2ldIHx8IGdyb3VwMVtpXSkge1xuICAgICAgICBtZXJnZVtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm9yICg7IGogPCBtMDsgKytqKSB7XG4gICAgbWVyZ2VzW2pdID0gZ3JvdXBzMFtqXTtcbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKG1lcmdlcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIG5vZGUgPSBncm91cFtpXTtcbiAgICAgIGlmIChub2RlKSByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbm9kZXMgPSBuZXcgQXJyYXkodGhpcy5zaXplKCkpLCBpID0gLTE7XG4gIHRoaXMuZWFjaChmdW5jdGlvbigpIHsgbm9kZXNbKytpXSA9IHRoaXM7IH0pO1xuICByZXR1cm4gbm9kZXM7XG59XG4iLCJ2YXIgZmlsdGVyRXZlbnRzID0ge307XG5cbmV4cG9ydCB2YXIgZXZlbnQgPSBudWxsO1xuXG5pZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICBpZiAoIShcIm9ubW91c2VlbnRlclwiIGluIGVsZW1lbnQpKSB7XG4gICAgZmlsdGVyRXZlbnRzID0ge21vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsIG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIn07XG4gIH1cbn1cblxuZnVuY3Rpb24gZmlsdGVyQ29udGV4dExpc3RlbmVyKGxpc3RlbmVyLCBpbmRleCwgZ3JvdXApIHtcbiAgbGlzdGVuZXIgPSBjb250ZXh0TGlzdGVuZXIobGlzdGVuZXIsIGluZGV4LCBncm91cCk7XG4gIHJldHVybiBmdW5jdGlvbihldmVudCkge1xuICAgIHZhciByZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldDtcbiAgICBpZiAoIXJlbGF0ZWQgfHwgKHJlbGF0ZWQgIT09IHRoaXMgJiYgIShyZWxhdGVkLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHRoaXMpICYgOCkpKSB7XG4gICAgICBsaXN0ZW5lci5jYWxsKHRoaXMsIGV2ZW50KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNvbnRleHRMaXN0ZW5lcihsaXN0ZW5lciwgaW5kZXgsIGdyb3VwKSB7XG4gIHJldHVybiBmdW5jdGlvbihldmVudDEpIHtcbiAgICB2YXIgZXZlbnQwID0gZXZlbnQ7IC8vIEV2ZW50cyBjYW4gYmUgcmVlbnRyYW50IChlLmcuLCBmb2N1cykuXG4gICAgZXZlbnQgPSBldmVudDE7XG4gICAgdHJ5IHtcbiAgICAgIGxpc3RlbmVyLmNhbGwodGhpcywgdGhpcy5fX2RhdGFfXywgaW5kZXgsIGdyb3VwKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgZXZlbnQgPSBldmVudDA7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZXMpIHtcbiAgcmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XFxzKy8pLm1hcChmdW5jdGlvbih0KSB7XG4gICAgdmFyIG5hbWUgPSBcIlwiLCBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSBuYW1lID0gdC5zbGljZShpICsgMSksIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBvblJlbW92ZSh0eXBlbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG9uID0gdGhpcy5fX29uO1xuICAgIGlmICghb24pIHJldHVybjtcbiAgICBmb3IgKHZhciBqID0gMCwgaSA9IC0xLCBtID0gb24ubGVuZ3RoLCBvOyBqIDwgbTsgKytqKSB7XG4gICAgICBpZiAobyA9IG9uW2pdLCAoIXR5cGVuYW1lLnR5cGUgfHwgby50eXBlID09PSB0eXBlbmFtZS50eXBlKSAmJiBvLm5hbWUgPT09IHR5cGVuYW1lLm5hbWUpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKG8udHlwZSwgby5saXN0ZW5lciwgby5jYXB0dXJlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9uWysraV0gPSBvO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoKytpKSBvbi5sZW5ndGggPSBpO1xuICAgIGVsc2UgZGVsZXRlIHRoaXMuX19vbjtcbiAgfTtcbn1cblxuZnVuY3Rpb24gb25BZGQodHlwZW5hbWUsIHZhbHVlLCBjYXB0dXJlKSB7XG4gIHZhciB3cmFwID0gZmlsdGVyRXZlbnRzLmhhc093blByb3BlcnR5KHR5cGVuYW1lLnR5cGUpID8gZmlsdGVyQ29udGV4dExpc3RlbmVyIDogY29udGV4dExpc3RlbmVyO1xuICByZXR1cm4gZnVuY3Rpb24oZCwgaSwgZ3JvdXApIHtcbiAgICB2YXIgb24gPSB0aGlzLl9fb24sIG8sIGxpc3RlbmVyID0gd3JhcCh2YWx1ZSwgaSwgZ3JvdXApO1xuICAgIGlmIChvbikgZm9yICh2YXIgaiA9IDAsIG0gPSBvbi5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICAgIGlmICgobyA9IG9uW2pdKS50eXBlID09PSB0eXBlbmFtZS50eXBlICYmIG8ubmFtZSA9PT0gdHlwZW5hbWUubmFtZSkge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyLCBvLmNhcHR1cmUpO1xuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoby50eXBlLCBvLmxpc3RlbmVyID0gbGlzdGVuZXIsIG8uY2FwdHVyZSA9IGNhcHR1cmUpO1xuICAgICAgICBvLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHR5cGVuYW1lLnR5cGUsIGxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICBvID0ge3R5cGU6IHR5cGVuYW1lLnR5cGUsIG5hbWU6IHR5cGVuYW1lLm5hbWUsIHZhbHVlOiB2YWx1ZSwgbGlzdGVuZXI6IGxpc3RlbmVyLCBjYXB0dXJlOiBjYXB0dXJlfTtcbiAgICBpZiAoIW9uKSB0aGlzLl9fb24gPSBbb107XG4gICAgZWxzZSBvbi5wdXNoKG8pO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0eXBlbmFtZSwgdmFsdWUsIGNhcHR1cmUpIHtcbiAgdmFyIHR5cGVuYW1lcyA9IHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lICsgXCJcIiksIGksIG4gPSB0eXBlbmFtZXMubGVuZ3RoLCB0O1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciBvbiA9IHRoaXMubm9kZSgpLl9fb247XG4gICAgaWYgKG9uKSBmb3IgKHZhciBqID0gMCwgbSA9IG9uLmxlbmd0aCwgbzsgaiA8IG07ICsraikge1xuICAgICAgZm9yIChpID0gMCwgbyA9IG9uW2pdOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICgodCA9IHR5cGVuYW1lc1tpXSkudHlwZSA9PT0gby50eXBlICYmIHQubmFtZSA9PT0gby5uYW1lKSB7XG4gICAgICAgICAgcmV0dXJuIG8udmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgb24gPSB2YWx1ZSA/IG9uQWRkIDogb25SZW1vdmU7XG4gIGlmIChjYXB0dXJlID09IG51bGwpIGNhcHR1cmUgPSBmYWxzZTtcbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgdGhpcy5lYWNoKG9uKHR5cGVuYW1lc1tpXSwgdmFsdWUsIGNhcHR1cmUpKTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjdXN0b21FdmVudChldmVudDEsIGxpc3RlbmVyLCB0aGF0LCBhcmdzKSB7XG4gIHZhciBldmVudDAgPSBldmVudDtcbiAgZXZlbnQxLnNvdXJjZUV2ZW50ID0gZXZlbnQ7XG4gIGV2ZW50ID0gZXZlbnQxO1xuICB0cnkge1xuICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh0aGF0LCBhcmdzKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBldmVudCA9IGV2ZW50MDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gLTEsIG0gPSBncm91cHMubGVuZ3RoOyArK2ogPCBtOykge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gZ3JvdXAubGVuZ3RoIC0gMSwgbmV4dCA9IGdyb3VwW2ldLCBub2RlOyAtLWkgPj0gMDspIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgaWYgKG5leHQgJiYgbm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihuZXh0KSBeIDQpIG5leHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgbmV4dCk7XG4gICAgICAgIG5leHQgPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuIiwiZnVuY3Rpb24gcHJvcGVydHlSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gIH07XG59XG5cbmZ1bmN0aW9uIHByb3BlcnR5Q29uc3RhbnQobmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXNbbmFtZV0gPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlGdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIGRlbGV0ZSB0aGlzW25hbWVdO1xuICAgIGVsc2UgdGhpc1tuYW1lXSA9IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMVxuICAgICAgPyB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IHByb3BlcnR5UmVtb3ZlIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IHByb3BlcnR5RnVuY3Rpb25cbiAgICAgICAgICA6IHByb3BlcnR5Q29uc3RhbnQpKG5hbWUsIHZhbHVlKSlcbiAgICAgIDogdGhpcy5ub2RlKClbbmFtZV07XG59XG4iLCJmdW5jdGlvbiByYWlzZSgpIHtcbiAgaWYgKHRoaXMubmV4dFNpYmxpbmcpIHRoaXMucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh0aGlzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gocmFpc2UpO1xufVxuIiwiZnVuY3Rpb24gcmVtb3ZlKCkge1xuICB2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICBpZiAocGFyZW50KSBwYXJlbnQucmVtb3ZlQ2hpbGQodGhpcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lYWNoKHJlbW92ZSk7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBzZWxlY3RvciBmcm9tIFwiLi4vc2VsZWN0b3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgc3Vibm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAoc3Vibm9kZSA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkpIHtcbiAgICAgICAgaWYgKFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgc3ViZ3JvdXBbaV0gPSBzdWJub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJpbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcbmltcG9ydCBzZWxlY3RvckFsbCBmcm9tIFwiLi4vc2VsZWN0b3JBbGxcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0KSB7XG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc3ViZ3JvdXBzLnB1c2goc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHNpemUgPSAwO1xuICB0aGlzLmVhY2goZnVuY3Rpb24oKSB7ICsrc2l6ZTsgfSk7XG4gIHJldHVybiBzaXplO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbXBhcmUpIHtcbiAgaWYgKCFjb21wYXJlKSBjb21wYXJlID0gYXNjZW5kaW5nO1xuXG4gIGZ1bmN0aW9uIGNvbXBhcmVOb2RlKGEsIGIpIHtcbiAgICByZXR1cm4gYSAmJiBiID8gY29tcGFyZShhLl9fZGF0YV9fLCBiLl9fZGF0YV9fKSA6ICFhIC0gIWI7XG4gIH1cblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzb3J0Z3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzb3J0Z3JvdXAgPSBzb3J0Z3JvdXBzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBzb3J0Z3JvdXBbaV0gPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgICBzb3J0Z3JvdXAuc29ydChjb21wYXJlTm9kZSk7XG4gIH1cblxuICByZXR1cm4gbmV3IFNlbGVjdGlvbihzb3J0Z3JvdXBzLCB0aGlzLl9wYXJlbnRzKS5vcmRlcigpO1xufVxuXG5mdW5jdGlvbiBhc2NlbmRpbmcoYSwgYikge1xuICByZXR1cm4gYSA8IGIgPyAtMSA6IGEgPiBiID8gMSA6IGEgPj0gYiA/IDAgOiBOYU47XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih1cGRhdGUpIHtcbiAgcmV0dXJuIG5ldyBBcnJheSh1cGRhdGUubGVuZ3RoKTtcbn1cbiIsImltcG9ydCBkZWZhdWx0VmlldyBmcm9tIFwiLi4vd2luZG93XCI7XG5cbmZ1bmN0aW9uIHN0eWxlUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlQ29uc3RhbnQobmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHZhbHVlLCBwcmlvcml0eSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgICBlbHNlIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgdiwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxXG4gICAgICA/IHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbFxuICAgICAgICAgICAgPyBzdHlsZVJlbW92ZSA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgICA/IHN0eWxlRnVuY3Rpb25cbiAgICAgICAgICAgIDogc3R5bGVDb25zdGFudCkobmFtZSwgdmFsdWUsIHByaW9yaXR5ID09IG51bGwgPyBcIlwiIDogcHJpb3JpdHkpKVxuICAgICAgOiBzdHlsZVZhbHVlKHRoaXMubm9kZSgpLCBuYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlVmFsdWUobm9kZSwgbmFtZSkge1xuICByZXR1cm4gbm9kZS5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpXG4gICAgICB8fCBkZWZhdWx0Vmlldyhub2RlKS5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIG51bGwpLmdldFByb3BlcnR5VmFsdWUobmFtZSk7XG59XG4iLCJmdW5jdGlvbiB0ZXh0UmVtb3ZlKCkge1xuICB0aGlzLnRleHRDb250ZW50ID0gXCJcIjtcbn1cblxuZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2ID09IG51bGwgPyBcIlwiIDogdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IHRleHRSZW1vdmUgOiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IHRleHRGdW5jdGlvblxuICAgICAgICAgIDogdGV4dENvbnN0YW50KSh2YWx1ZSkpXG4gICAgICA6IHRoaXMubm9kZSgpLnRleHRDb250ZW50O1xufVxuIiwiZnVuY3Rpb24gbm9uZSgpIHt9XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBzZWxlY3RvciA9PSBudWxsID8gbm9uZSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiZnVuY3Rpb24gZW1wdHkoKSB7XG4gIHJldHVybiBbXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHNlbGVjdG9yID09IG51bGwgPyBlbXB0eSA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICB9O1xufVxuIiwiaW1wb3J0IHtldmVudH0gZnJvbSBcIi4vc2VsZWN0aW9uL29uXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY3VycmVudCA9IGV2ZW50LCBzb3VyY2U7XG4gIHdoaWxlIChzb3VyY2UgPSBjdXJyZW50LnNvdXJjZUV2ZW50KSBjdXJyZW50ID0gc291cmNlO1xuICByZXR1cm4gY3VycmVudDtcbn1cbiIsImltcG9ydCBzb3VyY2VFdmVudCBmcm9tIFwiLi9zb3VyY2VFdmVudFwiO1xuaW1wb3J0IHBvaW50IGZyb20gXCIuL3BvaW50XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIHRvdWNoZXMsIGlkZW50aWZpZXIpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBpZGVudGlmaWVyID0gdG91Y2hlcywgdG91Y2hlcyA9IHNvdXJjZUV2ZW50KCkuY2hhbmdlZFRvdWNoZXM7XG5cbiAgZm9yICh2YXIgaSA9IDAsIG4gPSB0b3VjaGVzID8gdG91Y2hlcy5sZW5ndGggOiAwLCB0b3VjaDsgaSA8IG47ICsraSkge1xuICAgIGlmICgodG91Y2ggPSB0b3VjaGVzW2ldKS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXR1cm4gcG9pbnQobm9kZSwgdG91Y2gpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuIiwiaW1wb3J0IHNvdXJjZUV2ZW50IGZyb20gXCIuL3NvdXJjZUV2ZW50XCI7XG5pbXBvcnQgcG9pbnQgZnJvbSBcIi4vcG9pbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgdG91Y2hlcykge1xuICBpZiAodG91Y2hlcyA9PSBudWxsKSB0b3VjaGVzID0gc291cmNlRXZlbnQoKS50b3VjaGVzO1xuXG4gIGZvciAodmFyIGkgPSAwLCBuID0gdG91Y2hlcyA/IHRvdWNoZXMubGVuZ3RoIDogMCwgcG9pbnRzID0gbmV3IEFycmF5KG4pOyBpIDwgbjsgKytpKSB7XG4gICAgcG9pbnRzW2ldID0gcG9pbnQobm9kZSwgdG91Y2hlc1tpXSk7XG4gIH1cblxuICByZXR1cm4gcG9pbnRzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSkge1xuICByZXR1cm4gKG5vZGUub3duZXJEb2N1bWVudCAmJiBub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpIC8vIG5vZGUgaXMgYSBOb2RlXG4gICAgICB8fCAobm9kZS5kb2N1bWVudCAmJiBub2RlKSAvLyBub2RlIGlzIGEgV2luZG93XG4gICAgICB8fCBub2RlLmRlZmF1bHRWaWV3OyAvLyBub2RlIGlzIGEgRG9jdW1lbnRcbn1cbiIsImltcG9ydCB7cGF0aH0gZnJvbSBcImQzLXBhdGhcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IHthYnMsIGFjb3MsIGFzaW4sIGF0YW4yLCBjb3MsIGVwc2lsb24sIGhhbGZQaSwgbWF4LCBtaW4sIHBpLCBzaW4sIHNxcnQsIHRhdX0gZnJvbSBcIi4vbWF0aFwiO1xuXG5mdW5jdGlvbiBhcmNJbm5lclJhZGl1cyhkKSB7XG4gIHJldHVybiBkLmlubmVyUmFkaXVzO1xufVxuXG5mdW5jdGlvbiBhcmNPdXRlclJhZGl1cyhkKSB7XG4gIHJldHVybiBkLm91dGVyUmFkaXVzO1xufVxuXG5mdW5jdGlvbiBhcmNTdGFydEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuc3RhcnRBbmdsZTtcbn1cblxuZnVuY3Rpb24gYXJjRW5kQW5nbGUoZCkge1xuICByZXR1cm4gZC5lbmRBbmdsZTtcbn1cblxuZnVuY3Rpb24gYXJjUGFkQW5nbGUoZCkge1xuICByZXR1cm4gZCAmJiBkLnBhZEFuZ2xlOyAvLyBOb3RlOiBvcHRpb25hbCFcbn1cblxuZnVuY3Rpb24gaW50ZXJzZWN0KHgwLCB5MCwgeDEsIHkxLCB4MiwgeTIsIHgzLCB5Mykge1xuICB2YXIgeDEwID0geDEgLSB4MCwgeTEwID0geTEgLSB5MCxcbiAgICAgIHgzMiA9IHgzIC0geDIsIHkzMiA9IHkzIC0geTIsXG4gICAgICB0ID0geTMyICogeDEwIC0geDMyICogeTEwO1xuICBpZiAodCAqIHQgPCBlcHNpbG9uKSByZXR1cm47XG4gIHQgPSAoeDMyICogKHkwIC0geTIpIC0geTMyICogKHgwIC0geDIpKSAvIHQ7XG4gIHJldHVybiBbeDAgKyB0ICogeDEwLCB5MCArIHQgKiB5MTBdO1xufVxuXG4vLyBDb21wdXRlIHBlcnBlbmRpY3VsYXIgb2Zmc2V0IGxpbmUgb2YgbGVuZ3RoIHJjLlxuLy8gaHR0cDovL21hdGh3b3JsZC53b2xmcmFtLmNvbS9DaXJjbGUtTGluZUludGVyc2VjdGlvbi5odG1sXG5mdW5jdGlvbiBjb3JuZXJUYW5nZW50cyh4MCwgeTAsIHgxLCB5MSwgcjEsIHJjLCBjdykge1xuICB2YXIgeDAxID0geDAgLSB4MSxcbiAgICAgIHkwMSA9IHkwIC0geTEsXG4gICAgICBsbyA9IChjdyA/IHJjIDogLXJjKSAvIHNxcnQoeDAxICogeDAxICsgeTAxICogeTAxKSxcbiAgICAgIG94ID0gbG8gKiB5MDEsXG4gICAgICBveSA9IC1sbyAqIHgwMSxcbiAgICAgIHgxMSA9IHgwICsgb3gsXG4gICAgICB5MTEgPSB5MCArIG95LFxuICAgICAgeDEwID0geDEgKyBveCxcbiAgICAgIHkxMCA9IHkxICsgb3ksXG4gICAgICB4MDAgPSAoeDExICsgeDEwKSAvIDIsXG4gICAgICB5MDAgPSAoeTExICsgeTEwKSAvIDIsXG4gICAgICBkeCA9IHgxMCAtIHgxMSxcbiAgICAgIGR5ID0geTEwIC0geTExLFxuICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeSxcbiAgICAgIHIgPSByMSAtIHJjLFxuICAgICAgRCA9IHgxMSAqIHkxMCAtIHgxMCAqIHkxMSxcbiAgICAgIGQgPSAoZHkgPCAwID8gLTEgOiAxKSAqIHNxcnQobWF4KDAsIHIgKiByICogZDIgLSBEICogRCkpLFxuICAgICAgY3gwID0gKEQgKiBkeSAtIGR4ICogZCkgLyBkMixcbiAgICAgIGN5MCA9ICgtRCAqIGR4IC0gZHkgKiBkKSAvIGQyLFxuICAgICAgY3gxID0gKEQgKiBkeSArIGR4ICogZCkgLyBkMixcbiAgICAgIGN5MSA9ICgtRCAqIGR4ICsgZHkgKiBkKSAvIGQyLFxuICAgICAgZHgwID0gY3gwIC0geDAwLFxuICAgICAgZHkwID0gY3kwIC0geTAwLFxuICAgICAgZHgxID0gY3gxIC0geDAwLFxuICAgICAgZHkxID0gY3kxIC0geTAwO1xuXG4gIC8vIFBpY2sgdGhlIGNsb3NlciBvZiB0aGUgdHdvIGludGVyc2VjdGlvbiBwb2ludHMuXG4gIC8vIFRPRE8gSXMgdGhlcmUgYSBmYXN0ZXIgd2F5IHRvIGRldGVybWluZSB3aGljaCBpbnRlcnNlY3Rpb24gdG8gdXNlP1xuICBpZiAoZHgwICogZHgwICsgZHkwICogZHkwID4gZHgxICogZHgxICsgZHkxICogZHkxKSBjeDAgPSBjeDEsIGN5MCA9IGN5MTtcblxuICByZXR1cm4ge1xuICAgIGN4OiBjeDAsXG4gICAgY3k6IGN5MCxcbiAgICB4MDE6IC1veCxcbiAgICB5MDE6IC1veSxcbiAgICB4MTE6IGN4MCAqIChyMSAvIHIgLSAxKSxcbiAgICB5MTE6IGN5MCAqIChyMSAvIHIgLSAxKVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGlubmVyUmFkaXVzID0gYXJjSW5uZXJSYWRpdXMsXG4gICAgICBvdXRlclJhZGl1cyA9IGFyY091dGVyUmFkaXVzLFxuICAgICAgY29ybmVyUmFkaXVzID0gY29uc3RhbnQoMCksXG4gICAgICBwYWRSYWRpdXMgPSBudWxsLFxuICAgICAgc3RhcnRBbmdsZSA9IGFyY1N0YXJ0QW5nbGUsXG4gICAgICBlbmRBbmdsZSA9IGFyY0VuZEFuZ2xlLFxuICAgICAgcGFkQW5nbGUgPSBhcmNQYWRBbmdsZSxcbiAgICAgIGNvbnRleHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGFyYygpIHtcbiAgICB2YXIgYnVmZmVyLFxuICAgICAgICByLFxuICAgICAgICByMCA9ICtpbm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICByMSA9ICtvdXRlclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICBhMCA9IHN0YXJ0QW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGhhbGZQaSxcbiAgICAgICAgYTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gaGFsZlBpLFxuICAgICAgICBkYSA9IGFicyhhMSAtIGEwKSxcbiAgICAgICAgY3cgPSBhMSA+IGEwO1xuXG4gICAgaWYgKCFjb250ZXh0KSBjb250ZXh0ID0gYnVmZmVyID0gcGF0aCgpO1xuXG4gICAgLy8gRW5zdXJlIHRoYXQgdGhlIG91dGVyIHJhZGl1cyBpcyBhbHdheXMgbGFyZ2VyIHRoYW4gdGhlIGlubmVyIHJhZGl1cy5cbiAgICBpZiAocjEgPCByMCkgciA9IHIxLCByMSA9IHIwLCByMCA9IHI7XG5cbiAgICAvLyBJcyBpdCBhIHBvaW50P1xuICAgIGlmICghKHIxID4gZXBzaWxvbikpIGNvbnRleHQubW92ZVRvKDAsIDApO1xuXG4gICAgLy8gT3IgaXMgaXQgYSBjaXJjbGUgb3IgYW5udWx1cz9cbiAgICBlbHNlIGlmIChkYSA+IHRhdSAtIGVwc2lsb24pIHtcbiAgICAgIGNvbnRleHQubW92ZVRvKHIxICogY29zKGEwKSwgcjEgKiBzaW4oYTApKTtcbiAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIxLCBhMCwgYTEsICFjdyk7XG4gICAgICBpZiAocjAgPiBlcHNpbG9uKSB7XG4gICAgICAgIGNvbnRleHQubW92ZVRvKHIwICogY29zKGExKSwgcjAgKiBzaW4oYTEpKTtcbiAgICAgICAgY29udGV4dC5hcmMoMCwgMCwgcjAsIGExLCBhMCwgY3cpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE9yIGlzIGl0IGEgY2lyY3VsYXIgb3IgYW5udWxhciBzZWN0b3I/XG4gICAgZWxzZSB7XG4gICAgICB2YXIgYTAxID0gYTAsXG4gICAgICAgICAgYTExID0gYTEsXG4gICAgICAgICAgYTAwID0gYTAsXG4gICAgICAgICAgYTEwID0gYTEsXG4gICAgICAgICAgZGEwID0gZGEsXG4gICAgICAgICAgZGExID0gZGEsXG4gICAgICAgICAgYXAgPSBwYWRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC8gMixcbiAgICAgICAgICBycCA9IChhcCA+IGVwc2lsb24pICYmIChwYWRSYWRpdXMgPyArcGFkUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBzcXJ0KHIwICogcjAgKyByMSAqIHIxKSksXG4gICAgICAgICAgcmMgPSBtaW4oYWJzKHIxIC0gcjApIC8gMiwgK2Nvcm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSxcbiAgICAgICAgICByYzAgPSByYyxcbiAgICAgICAgICByYzEgPSByYyxcbiAgICAgICAgICB0MCxcbiAgICAgICAgICB0MTtcblxuICAgICAgLy8gQXBwbHkgcGFkZGluZz8gTm90ZSB0aGF0IHNpbmNlIHIxIOKJpSByMCwgZGExIOKJpSBkYTAuXG4gICAgICBpZiAocnAgPiBlcHNpbG9uKSB7XG4gICAgICAgIHZhciBwMCA9IGFzaW4ocnAgLyByMCAqIHNpbihhcCkpLFxuICAgICAgICAgICAgcDEgPSBhc2luKHJwIC8gcjEgKiBzaW4oYXApKTtcbiAgICAgICAgaWYgKChkYTAgLT0gcDAgKiAyKSA+IGVwc2lsb24pIHAwICo9IChjdyA/IDEgOiAtMSksIGEwMCArPSBwMCwgYTEwIC09IHAwO1xuICAgICAgICBlbHNlIGRhMCA9IDAsIGEwMCA9IGExMCA9IChhMCArIGExKSAvIDI7XG4gICAgICAgIGlmICgoZGExIC09IHAxICogMikgPiBlcHNpbG9uKSBwMSAqPSAoY3cgPyAxIDogLTEpLCBhMDEgKz0gcDEsIGExMSAtPSBwMTtcbiAgICAgICAgZWxzZSBkYTEgPSAwLCBhMDEgPSBhMTEgPSAoYTAgKyBhMSkgLyAyO1xuICAgICAgfVxuXG4gICAgICB2YXIgeDAxID0gcjEgKiBjb3MoYTAxKSxcbiAgICAgICAgICB5MDEgPSByMSAqIHNpbihhMDEpLFxuICAgICAgICAgIHgxMCA9IHIwICogY29zKGExMCksXG4gICAgICAgICAgeTEwID0gcjAgKiBzaW4oYTEwKTtcblxuICAgICAgLy8gQXBwbHkgcm91bmRlZCBjb3JuZXJzP1xuICAgICAgaWYgKHJjID4gZXBzaWxvbikge1xuICAgICAgICB2YXIgeDExID0gcjEgKiBjb3MoYTExKSxcbiAgICAgICAgICAgIHkxMSA9IHIxICogc2luKGExMSksXG4gICAgICAgICAgICB4MDAgPSByMCAqIGNvcyhhMDApLFxuICAgICAgICAgICAgeTAwID0gcjAgKiBzaW4oYTAwKSxcbiAgICAgICAgICAgIG9jO1xuXG4gICAgICAgIC8vIFJlc3RyaWN0IHRoZSBjb3JuZXIgcmFkaXVzIGFjY29yZGluZyB0byB0aGUgc2VjdG9yIGFuZ2xlLlxuICAgICAgICBpZiAoZGEgPD0gdGF1IC0gZXBzaWxvbiAmJiAob2MgPSBpbnRlcnNlY3QoeDAxLCB5MDEsIHgwMCwgeTAwLCB4MTEsIHkxMSwgeDEwLCB5MTApKSkge1xuICAgICAgICAgIHZhciBheCA9IHgwMSAtIG9jWzBdLFxuICAgICAgICAgICAgICBheSA9IHkwMSAtIG9jWzFdLFxuICAgICAgICAgICAgICBieCA9IHgxMSAtIG9jWzBdLFxuICAgICAgICAgICAgICBieSA9IHkxMSAtIG9jWzFdLFxuICAgICAgICAgICAgICBrYyA9IDEgLyBzaW4oYWNvcygoYXggKiBieCArIGF5ICogYnkpIC8gKHNxcnQoYXggKiBheCArIGF5ICogYXkpICogc3FydChieCAqIGJ4ICsgYnkgKiBieSkpKSAvIDIpLFxuICAgICAgICAgICAgICBsYyA9IHNxcnQob2NbMF0gKiBvY1swXSArIG9jWzFdICogb2NbMV0pO1xuICAgICAgICAgIHJjMCA9IG1pbihyYywgKHIwIC0gbGMpIC8gKGtjIC0gMSkpO1xuICAgICAgICAgIHJjMSA9IG1pbihyYywgKHIxIC0gbGMpIC8gKGtjICsgMSkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIElzIHRoZSBzZWN0b3IgY29sbGFwc2VkIHRvIGEgbGluZT9cbiAgICAgIGlmICghKGRhMSA+IGVwc2lsb24pKSBjb250ZXh0Lm1vdmVUbyh4MDEsIHkwMSk7XG5cbiAgICAgIC8vIERvZXMgdGhlIHNlY3RvcuKAmXMgb3V0ZXIgcmluZyBoYXZlIHJvdW5kZWQgY29ybmVycz9cbiAgICAgIGVsc2UgaWYgKHJjMSA+IGVwc2lsb24pIHtcbiAgICAgICAgdDAgPSBjb3JuZXJUYW5nZW50cyh4MDAsIHkwMCwgeDAxLCB5MDEsIHIxLCByYzEsIGN3KTtcbiAgICAgICAgdDEgPSBjb3JuZXJUYW5nZW50cyh4MTEsIHkxMSwgeDEwLCB5MTAsIHIxLCByYzEsIGN3KTtcblxuICAgICAgICBjb250ZXh0Lm1vdmVUbyh0MC5jeCArIHQwLngwMSwgdDAuY3kgKyB0MC55MDEpO1xuXG4gICAgICAgIC8vIEhhdmUgdGhlIGNvcm5lcnMgbWVyZ2VkP1xuICAgICAgICBpZiAocmMxIDwgcmMpIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMxLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQxLnkwMSwgdDEueDAxKSwgIWN3KTtcblxuICAgICAgICAvLyBPdGhlcndpc2UsIGRyYXcgdGhlIHR3byBjb3JuZXJzIGFuZCB0aGUgcmluZy5cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgY29udGV4dC5hcmModDAuY3gsIHQwLmN5LCByYzEsIGF0YW4yKHQwLnkwMSwgdDAueDAxKSwgYXRhbjIodDAueTExLCB0MC54MTEpLCAhY3cpO1xuICAgICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIxLCBhdGFuMih0MC5jeSArIHQwLnkxMSwgdDAuY3ggKyB0MC54MTEpLCBhdGFuMih0MS5jeSArIHQxLnkxMSwgdDEuY3ggKyB0MS54MTEpLCAhY3cpO1xuICAgICAgICAgIGNvbnRleHQuYXJjKHQxLmN4LCB0MS5jeSwgcmMxLCBhdGFuMih0MS55MTEsIHQxLngxMSksIGF0YW4yKHQxLnkwMSwgdDEueDAxKSwgIWN3KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBPciBpcyB0aGUgb3V0ZXIgcmluZyBqdXN0IGEgY2lyY3VsYXIgYXJjP1xuICAgICAgZWxzZSBjb250ZXh0Lm1vdmVUbyh4MDEsIHkwMSksIGNvbnRleHQuYXJjKDAsIDAsIHIxLCBhMDEsIGExMSwgIWN3KTtcblxuICAgICAgLy8gSXMgdGhlcmUgbm8gaW5uZXIgcmluZywgYW5kIGl04oCZcyBhIGNpcmN1bGFyIHNlY3Rvcj9cbiAgICAgIC8vIE9yIHBlcmhhcHMgaXTigJlzIGFuIGFubnVsYXIgc2VjdG9yIGNvbGxhcHNlZCBkdWUgdG8gcGFkZGluZz9cbiAgICAgIGlmICghKHIwID4gZXBzaWxvbikgfHwgIShkYTAgPiBlcHNpbG9uKSkgY29udGV4dC5saW5lVG8oeDEwLCB5MTApO1xuXG4gICAgICAvLyBEb2VzIHRoZSBzZWN0b3LigJlzIGlubmVyIHJpbmcgKG9yIHBvaW50KSBoYXZlIHJvdW5kZWQgY29ybmVycz9cbiAgICAgIGVsc2UgaWYgKHJjMCA+IGVwc2lsb24pIHtcbiAgICAgICAgdDAgPSBjb3JuZXJUYW5nZW50cyh4MTAsIHkxMCwgeDExLCB5MTEsIHIwLCAtcmMwLCBjdyk7XG4gICAgICAgIHQxID0gY29ybmVyVGFuZ2VudHMoeDAxLCB5MDEsIHgwMCwgeTAwLCByMCwgLXJjMCwgY3cpO1xuXG4gICAgICAgIGNvbnRleHQubGluZVRvKHQwLmN4ICsgdDAueDAxLCB0MC5jeSArIHQwLnkwMSk7XG5cbiAgICAgICAgLy8gSGF2ZSB0aGUgY29ybmVycyBtZXJnZWQ/XG4gICAgICAgIGlmIChyYzAgPCByYykgY29udGV4dC5hcmModDAuY3gsIHQwLmN5LCByYzAsIGF0YW4yKHQwLnkwMSwgdDAueDAxKSwgYXRhbjIodDEueTAxLCB0MS54MDEpLCAhY3cpO1xuXG4gICAgICAgIC8vIE90aGVyd2lzZSwgZHJhdyB0aGUgdHdvIGNvcm5lcnMgYW5kIHRoZSByaW5nLlxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBjb250ZXh0LmFyYyh0MC5jeCwgdDAuY3ksIHJjMCwgYXRhbjIodDAueTAxLCB0MC54MDEpLCBhdGFuMih0MC55MTEsIHQwLngxMSksICFjdyk7XG4gICAgICAgICAgY29udGV4dC5hcmMoMCwgMCwgcjAsIGF0YW4yKHQwLmN5ICsgdDAueTExLCB0MC5jeCArIHQwLngxMSksIGF0YW4yKHQxLmN5ICsgdDEueTExLCB0MS5jeCArIHQxLngxMSksIGN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYyh0MS5jeCwgdDEuY3ksIHJjMCwgYXRhbjIodDEueTExLCB0MS54MTEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gT3IgaXMgdGhlIGlubmVyIHJpbmcganVzdCBhIGNpcmN1bGFyIGFyYz9cbiAgICAgIGVsc2UgY29udGV4dC5hcmMoMCwgMCwgcjAsIGExMCwgYTAwLCBjdyk7XG4gICAgfVxuXG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcblxuICAgIGlmIChidWZmZXIpIHJldHVybiBjb250ZXh0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgYXJjLmNlbnRyb2lkID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHIgPSAoK2lubmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKyArb3V0ZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgLyAyLFxuICAgICAgICBhID0gKCtzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKyArZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgLyAyIC0gcGkgLyAyO1xuICAgIHJldHVybiBbY29zKGEpICogciwgc2luKGEpICogcl07XG4gIH07XG5cbiAgYXJjLmlubmVyUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGlubmVyUmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBpbm5lclJhZGl1cztcbiAgfTtcblxuICBhcmMub3V0ZXJSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob3V0ZXJSYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IG91dGVyUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5jb3JuZXJSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29ybmVyUmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBjb3JuZXJSYWRpdXM7XG4gIH07XG5cbiAgYXJjLnBhZFJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRSYWRpdXMgPSBfID09IG51bGwgPyBudWxsIDogdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBwYWRSYWRpdXM7XG4gIH07XG5cbiAgYXJjLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RhcnRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogc3RhcnRBbmdsZTtcbiAgfTtcblxuICBhcmMuZW5kQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZW5kQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IGVuZEFuZ2xlO1xuICB9O1xuXG4gIGFyYy5wYWRBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRBbmdsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogcGFkQW5nbGU7XG4gIH07XG5cbiAgYXJjLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoKGNvbnRleHQgPSBfID09IG51bGwgPyBudWxsIDogXyksIGFyYykgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBhcmM7XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBjdXJ2ZUxpbmVhciBmcm9tIFwiLi9jdXJ2ZS9saW5lYXJcIjtcbmltcG9ydCBsaW5lIGZyb20gXCIuL2xpbmVcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi9wb2ludFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHgwID0gcG9pbnRYLFxuICAgICAgeDEgPSBudWxsLFxuICAgICAgeTAgPSBjb25zdGFudCgwKSxcbiAgICAgIHkxID0gcG9pbnRZLFxuICAgICAgZGVmaW5lZCA9IGNvbnN0YW50KHRydWUpLFxuICAgICAgY29udGV4dCA9IG51bGwsXG4gICAgICBjdXJ2ZSA9IGN1cnZlTGluZWFyLFxuICAgICAgb3V0cHV0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBhcmVhKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgaixcbiAgICAgICAgayxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICBkLFxuICAgICAgICBkZWZpbmVkMCA9IGZhbHNlLFxuICAgICAgICBidWZmZXIsXG4gICAgICAgIHgweiA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgeTB6ID0gbmV3IEFycmF5KG4pO1xuXG4gICAgaWYgKGNvbnRleHQgPT0gbnVsbCkgb3V0cHV0ID0gY3VydmUoYnVmZmVyID0gcGF0aCgpKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPD0gbjsgKytpKSB7XG4gICAgICBpZiAoIShpIDwgbiAmJiBkZWZpbmVkKGQgPSBkYXRhW2ldLCBpLCBkYXRhKSkgPT09IGRlZmluZWQwKSB7XG4gICAgICAgIGlmIChkZWZpbmVkMCA9ICFkZWZpbmVkMCkge1xuICAgICAgICAgIGogPSBpO1xuICAgICAgICAgIG91dHB1dC5hcmVhU3RhcnQoKTtcbiAgICAgICAgICBvdXRwdXQubGluZVN0YXJ0KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3V0cHV0LmxpbmVFbmQoKTtcbiAgICAgICAgICBvdXRwdXQubGluZVN0YXJ0KCk7XG4gICAgICAgICAgZm9yIChrID0gaSAtIDE7IGsgPj0gajsgLS1rKSB7XG4gICAgICAgICAgICBvdXRwdXQucG9pbnQoeDB6W2tdLCB5MHpba10pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBvdXRwdXQubGluZUVuZCgpO1xuICAgICAgICAgIG91dHB1dC5hcmVhRW5kKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkZWZpbmVkMCkge1xuICAgICAgICB4MHpbaV0gPSAreDAoZCwgaSwgZGF0YSksIHkweltpXSA9ICt5MChkLCBpLCBkYXRhKTtcbiAgICAgICAgb3V0cHV0LnBvaW50KHgxID8gK3gxKGQsIGksIGRhdGEpIDogeDB6W2ldLCB5MSA/ICt5MShkLCBpLCBkYXRhKSA6IHkweltpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIG91dHB1dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFyZWFsaW5lKCkge1xuICAgIHJldHVybiBsaW5lKCkuZGVmaW5lZChkZWZpbmVkKS5jdXJ2ZShjdXJ2ZSkuY29udGV4dChjb250ZXh0KTtcbiAgfVxuXG4gIGFyZWEueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCB4MSA9IG51bGwsIGFyZWEpIDogeDA7XG4gIH07XG5cbiAgYXJlYS54MCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmVhKSA6IHgwO1xuICB9O1xuXG4gIGFyZWEueDEgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDEgPSBfID09IG51bGwgPyBudWxsIDogdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyZWEpIDogeDE7XG4gIH07XG5cbiAgYXJlYS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkwID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHkxID0gbnVsbCwgYXJlYSkgOiB5MDtcbiAgfTtcblxuICBhcmVhLnkwID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkwID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyZWEpIDogeTA7XG4gIH07XG5cbiAgYXJlYS55MSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5MSA9IF8gPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJlYSkgOiB5MTtcbiAgfTtcblxuICBhcmVhLmxpbmVYMCA9XG4gIGFyZWEubGluZVkwID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGFyZWFsaW5lKCkueCh4MCkueSh5MCk7XG4gIH07XG5cbiAgYXJlYS5saW5lWTEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYXJlYWxpbmUoKS54KHgwKS55KHkxKTtcbiAgfTtcblxuICBhcmVhLmxpbmVYMSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBhcmVhbGluZSgpLngoeDEpLnkoeTApO1xuICB9O1xuXG4gIGFyZWEuZGVmaW5lZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkZWZpbmVkID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBhcmVhKSA6IGRlZmluZWQ7XG4gIH07XG5cbiAgYXJlYS5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjdXJ2ZSA9IF8sIGNvbnRleHQgIT0gbnVsbCAmJiAob3V0cHV0ID0gY3VydmUoY29udGV4dCkpLCBhcmVhKSA6IGN1cnZlO1xuICB9O1xuXG4gIGFyZWEuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChfID09IG51bGwgPyBjb250ZXh0ID0gb3V0cHV0ID0gbnVsbCA6IG91dHB1dCA9IGN1cnZlKGNvbnRleHQgPSBfKSwgYXJlYSkgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBhcmVhO1xufVxuIiwiaW1wb3J0IGN1cnZlUmFkaWFsLCB7Y3VydmVSYWRpYWxMaW5lYXJ9IGZyb20gXCIuL2N1cnZlL3JhZGlhbFwiO1xuaW1wb3J0IGFyZWEgZnJvbSBcIi4vYXJlYVwiO1xuaW1wb3J0IHtsaW5lUmFkaWFsfSBmcm9tIFwiLi9saW5lUmFkaWFsXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBhID0gYXJlYSgpLmN1cnZlKGN1cnZlUmFkaWFsTGluZWFyKSxcbiAgICAgIGMgPSBhLmN1cnZlLFxuICAgICAgeDAgPSBhLmxpbmVYMCxcbiAgICAgIHgxID0gYS5saW5lWDEsXG4gICAgICB5MCA9IGEubGluZVkwLFxuICAgICAgeTEgPSBhLmxpbmVZMTtcblxuICBhLmFuZ2xlID0gYS54LCBkZWxldGUgYS54O1xuICBhLnN0YXJ0QW5nbGUgPSBhLngwLCBkZWxldGUgYS54MDtcbiAgYS5lbmRBbmdsZSA9IGEueDEsIGRlbGV0ZSBhLngxO1xuICBhLnJhZGl1cyA9IGEueSwgZGVsZXRlIGEueTtcbiAgYS5pbm5lclJhZGl1cyA9IGEueTAsIGRlbGV0ZSBhLnkwO1xuICBhLm91dGVyUmFkaXVzID0gYS55MSwgZGVsZXRlIGEueTE7XG4gIGEubGluZVN0YXJ0QW5nbGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGxpbmVSYWRpYWwoeDAoKSk7IH0sIGRlbGV0ZSBhLmxpbmVYMDtcbiAgYS5saW5lRW5kQW5nbGUgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGxpbmVSYWRpYWwoeDEoKSk7IH0sIGRlbGV0ZSBhLmxpbmVYMTtcbiAgYS5saW5lSW5uZXJSYWRpdXMgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGxpbmVSYWRpYWwoeTAoKSk7IH0sIGRlbGV0ZSBhLmxpbmVZMDtcbiAgYS5saW5lT3V0ZXJSYWRpdXMgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGxpbmVSYWRpYWwoeTEoKSk7IH0sIGRlbGV0ZSBhLmxpbmVZMTtcblxuICBhLmN1cnZlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gYyhjdXJ2ZVJhZGlhbChfKSkgOiBjKCkuX2N1cnZlO1xuICB9O1xuXG4gIHJldHVybiBhO1xufVxuIiwiZXhwb3J0IHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbnN0YW50KCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHBvaW50KHRoYXQsIHgsIHkpIHtcbiAgdGhhdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKFxuICAgICgyICogdGhhdC5feDAgKyB0aGF0Ll94MSkgLyAzLFxuICAgICgyICogdGhhdC5feTAgKyB0aGF0Ll95MSkgLyAzLFxuICAgICh0aGF0Ll94MCArIDIgKiB0aGF0Ll94MSkgLyAzLFxuICAgICh0aGF0Ll95MCArIDIgKiB0aGF0Ll95MSkgLyAzLFxuICAgICh0aGF0Ll94MCArIDQgKiB0aGF0Ll94MSArIHgpIC8gNixcbiAgICAodGhhdC5feTAgKyA0ICogdGhhdC5feTEgKyB5KSAvIDZcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEJhc2lzKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkJhc2lzLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAzOiBwb2ludCh0aGlzLCB0aGlzLl94MSwgdGhpcy5feTEpOyAvLyBwcm9jZWVkXG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gxLCB0aGlzLl95MSk7IGJyZWFrO1xuICAgIH1cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdGhpcy5fY29udGV4dC5saW5lVG8oKDUgKiB0aGlzLl94MCArIHRoaXMuX3gxKSAvIDYsICg1ICogdGhpcy5feTAgKyB0aGlzLl95MSkgLyA2KTsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgQmFzaXMoY29udGV4dCk7XG59XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vYmFzaXNcIjtcblxuZnVuY3Rpb24gQmFzaXNDbG9zZWQoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuQmFzaXNDbG9zZWQucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IG5vb3AsXG4gIGFyZWFFbmQ6IG5vb3AsXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feDMgPSB0aGlzLl94NCA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gdGhpcy5feTMgPSB0aGlzLl95NCA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MiwgdGhpcy5feTIpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMjoge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbygodGhpcy5feDIgKyAyICogdGhpcy5feDMpIC8gMywgKHRoaXMuX3kyICsgMiAqIHRoaXMuX3kzKSAvIDMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbygodGhpcy5feDMgKyAyICogdGhpcy5feDIpIC8gMywgKHRoaXMuX3kzICsgMiAqIHRoaXMuX3kyKSAvIDMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMzoge1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3gyLCB0aGlzLl95Mik7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX3gyID0geCwgdGhpcy5feTIgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl94MyA9IHgsIHRoaXMuX3kzID0geTsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdGhpcy5feDQgPSB4LCB0aGlzLl95NCA9IHk7IHRoaXMuX2NvbnRleHQubW92ZVRvKCh0aGlzLl94MCArIDQgKiB0aGlzLl94MSArIHgpIC8gNiwgKHRoaXMuX3kwICsgNCAqIHRoaXMuX3kxICsgeSkgLyA2KTsgYnJlYWs7XG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBCYXNpc0Nsb3NlZChjb250ZXh0KTtcbn1cbiIsImltcG9ydCB7cG9pbnR9IGZyb20gXCIuL2Jhc2lzXCI7XG5cbmZ1bmN0aW9uIEJhc2lzT3Blbihjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5CYXNpc09wZW4ucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMykpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB2YXIgeDAgPSAodGhpcy5feDAgKyA0ICogdGhpcy5feDEgKyB4KSAvIDYsIHkwID0gKHRoaXMuX3kwICsgNCAqIHRoaXMuX3kxICsgeSkgLyA2OyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeDAsIHkwKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgwLCB5MCk7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IEJhc2lzT3Blbihjb250ZXh0KTtcbn1cbiIsImltcG9ydCB7QmFzaXN9IGZyb20gXCIuL2Jhc2lzXCI7XG5cbmZ1bmN0aW9uIEJ1bmRsZShjb250ZXh0LCBiZXRhKSB7XG4gIHRoaXMuX2Jhc2lzID0gbmV3IEJhc2lzKGNvbnRleHQpO1xuICB0aGlzLl9iZXRhID0gYmV0YTtcbn1cblxuQnVuZGxlLnByb3RvdHlwZSA9IHtcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94ID0gW107XG4gICAgdGhpcy5feSA9IFtdO1xuICAgIHRoaXMuX2Jhc2lzLmxpbmVTdGFydCgpO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgeCA9IHRoaXMuX3gsXG4gICAgICAgIHkgPSB0aGlzLl95LFxuICAgICAgICBqID0geC5sZW5ndGggLSAxO1xuXG4gICAgaWYgKGogPiAwKSB7XG4gICAgICB2YXIgeDAgPSB4WzBdLFxuICAgICAgICAgIHkwID0geVswXSxcbiAgICAgICAgICBkeCA9IHhbal0gLSB4MCxcbiAgICAgICAgICBkeSA9IHlbal0gLSB5MCxcbiAgICAgICAgICBpID0gLTEsXG4gICAgICAgICAgdDtcblxuICAgICAgd2hpbGUgKCsraSA8PSBqKSB7XG4gICAgICAgIHQgPSBpIC8gajtcbiAgICAgICAgdGhpcy5fYmFzaXMucG9pbnQoXG4gICAgICAgICAgdGhpcy5fYmV0YSAqIHhbaV0gKyAoMSAtIHRoaXMuX2JldGEpICogKHgwICsgdCAqIGR4KSxcbiAgICAgICAgICB0aGlzLl9iZXRhICogeVtpXSArICgxIC0gdGhpcy5fYmV0YSkgKiAoeTAgKyB0ICogZHkpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5feCA9IHRoaXMuX3kgPSBudWxsO1xuICAgIHRoaXMuX2Jhc2lzLmxpbmVFbmQoKTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl94LnB1c2goK3gpO1xuICAgIHRoaXMuX3kucHVzaCgreSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYmV0YSkge1xuXG4gIGZ1bmN0aW9uIGJ1bmRsZShjb250ZXh0KSB7XG4gICAgcmV0dXJuIGJldGEgPT09IDEgPyBuZXcgQmFzaXMoY29udGV4dCkgOiBuZXcgQnVuZGxlKGNvbnRleHQsIGJldGEpO1xuICB9XG5cbiAgYnVuZGxlLmJldGEgPSBmdW5jdGlvbihiZXRhKSB7XG4gICAgcmV0dXJuIGN1c3RvbSgrYmV0YSk7XG4gIH07XG5cbiAgcmV0dXJuIGJ1bmRsZTtcbn0pKDAuODUpO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHBvaW50KHRoYXQsIHgsIHkpIHtcbiAgdGhhdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKFxuICAgIHRoYXQuX3gxICsgdGhhdC5fayAqICh0aGF0Ll94MiAtIHRoYXQuX3gwKSxcbiAgICB0aGF0Ll95MSArIHRoYXQuX2sgKiAodGhhdC5feTIgLSB0aGF0Ll95MCksXG4gICAgdGhhdC5feDIgKyB0aGF0Ll9rICogKHRoYXQuX3gxIC0geCksXG4gICAgdGhhdC5feTIgKyB0aGF0Ll9rICogKHRoYXQuX3kxIC0geSksXG4gICAgdGhhdC5feDIsXG4gICAgdGhhdC5feTJcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIENhcmRpbmFsKGNvbnRleHQsIHRlbnNpb24pIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2sgPSAoMSAtIHRlbnNpb24pIC8gNjtcbn1cblxuQ2FyZGluYWwucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpOyBicmVhaztcbiAgICAgIGNhc2UgMzogcG9pbnQodGhpcywgdGhpcy5feDEsIHRoaXMuX3kxKTsgYnJlYWs7XG4gICAgfVxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl94MSA9IHgsIHRoaXMuX3kxID0geTsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHRlbnNpb24pIHtcblxuICBmdW5jdGlvbiBjYXJkaW5hbChjb250ZXh0KSB7XG4gICAgcmV0dXJuIG5ldyBDYXJkaW5hbChjb250ZXh0LCB0ZW5zaW9uKTtcbiAgfVxuXG4gIGNhcmRpbmFsLnRlbnNpb24gPSBmdW5jdGlvbih0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIGN1c3RvbSgrdGVuc2lvbik7XG4gIH07XG5cbiAgcmV0dXJuIGNhcmRpbmFsO1xufSkoMCk7XG4iLCJpbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2FyZGluYWxcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENhcmRpbmFsQ2xvc2VkKGNvbnRleHQsIHRlbnNpb24pIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2sgPSAoMSAtIHRlbnNpb24pIC8gNjtcbn1cblxuQ2FyZGluYWxDbG9zZWQucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IG5vb3AsXG4gIGFyZWFFbmQ6IG5vb3AsXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feDMgPSB0aGlzLl94NCA9IHRoaXMuX3g1ID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gdGhpcy5feTUgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDE6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDI6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDM6IHtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g0LCB0aGlzLl95NCk7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDUsIHRoaXMuX3k1KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl94MyA9IHgsIHRoaXMuX3kzID0geTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDQgPSB4LCB0aGlzLl95NCA9IHkpOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl94NSA9IHgsIHRoaXMuX3k1ID0geTsgYnJlYWs7XG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20odGVuc2lvbikge1xuXG4gIGZ1bmN0aW9uIGNhcmRpbmFsKGNvbnRleHQpIHtcbiAgICByZXR1cm4gbmV3IENhcmRpbmFsQ2xvc2VkKGNvbnRleHQsIHRlbnNpb24pO1xuICB9XG5cbiAgY2FyZGluYWwudGVuc2lvbiA9IGZ1bmN0aW9uKHRlbnNpb24pIHtcbiAgICByZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKTtcbiAgfTtcblxuICByZXR1cm4gY2FyZGluYWw7XG59KSgwKTtcbiIsImltcG9ydCB7cG9pbnR9IGZyb20gXCIuL2NhcmRpbmFsXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBDYXJkaW5hbE9wZW4oY29udGV4dCwgdGVuc2lvbikge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fayA9ICgxIC0gdGVuc2lvbikgLyA2O1xufVxuXG5DYXJkaW5hbE9wZW4ucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDMpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95MikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MiwgdGhpcy5feTIpOyBicmVhaztcbiAgICAgIGNhc2UgMzogdGhpcy5fcG9pbnQgPSA0OyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20odGVuc2lvbikge1xuXG4gIGZ1bmN0aW9uIGNhcmRpbmFsKGNvbnRleHQpIHtcbiAgICByZXR1cm4gbmV3IENhcmRpbmFsT3Blbihjb250ZXh0LCB0ZW5zaW9uKTtcbiAgfVxuXG4gIGNhcmRpbmFsLnRlbnNpb24gPSBmdW5jdGlvbih0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIGN1c3RvbSgrdGVuc2lvbik7XG4gIH07XG5cbiAgcmV0dXJuIGNhcmRpbmFsO1xufSkoMCk7XG4iLCJpbXBvcnQge2Vwc2lsb259IGZyb20gXCIuLi9tYXRoXCI7XG5pbXBvcnQge0NhcmRpbmFsfSBmcm9tIFwiLi9jYXJkaW5hbFwiO1xuXG5leHBvcnQgZnVuY3Rpb24gcG9pbnQodGhhdCwgeCwgeSkge1xuICB2YXIgeDEgPSB0aGF0Ll94MSxcbiAgICAgIHkxID0gdGhhdC5feTEsXG4gICAgICB4MiA9IHRoYXQuX3gyLFxuICAgICAgeTIgPSB0aGF0Ll95MjtcblxuICBpZiAodGhhdC5fbDAxX2EgPiBlcHNpbG9uKSB7XG4gICAgdmFyIGEgPSAyICogdGhhdC5fbDAxXzJhICsgMyAqIHRoYXQuX2wwMV9hICogdGhhdC5fbDEyX2EgKyB0aGF0Ll9sMTJfMmEsXG4gICAgICAgIG4gPSAzICogdGhhdC5fbDAxX2EgKiAodGhhdC5fbDAxX2EgKyB0aGF0Ll9sMTJfYSk7XG4gICAgeDEgPSAoeDEgKiBhIC0gdGhhdC5feDAgKiB0aGF0Ll9sMTJfMmEgKyB0aGF0Ll94MiAqIHRoYXQuX2wwMV8yYSkgLyBuO1xuICAgIHkxID0gKHkxICogYSAtIHRoYXQuX3kwICogdGhhdC5fbDEyXzJhICsgdGhhdC5feTIgKiB0aGF0Ll9sMDFfMmEpIC8gbjtcbiAgfVxuXG4gIGlmICh0aGF0Ll9sMjNfYSA+IGVwc2lsb24pIHtcbiAgICB2YXIgYiA9IDIgKiB0aGF0Ll9sMjNfMmEgKyAzICogdGhhdC5fbDIzX2EgKiB0aGF0Ll9sMTJfYSArIHRoYXQuX2wxMl8yYSxcbiAgICAgICAgbSA9IDMgKiB0aGF0Ll9sMjNfYSAqICh0aGF0Ll9sMjNfYSArIHRoYXQuX2wxMl9hKTtcbiAgICB4MiA9ICh4MiAqIGIgKyB0aGF0Ll94MSAqIHRoYXQuX2wyM18yYSAtIHggKiB0aGF0Ll9sMTJfMmEpIC8gbTtcbiAgICB5MiA9ICh5MiAqIGIgKyB0aGF0Ll95MSAqIHRoYXQuX2wyM18yYSAtIHkgKiB0aGF0Ll9sMTJfMmEpIC8gbTtcbiAgfVxuXG4gIHRoYXQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh4MSwgeTEsIHgyLCB5MiwgdGhhdC5feDIsIHRoYXQuX3kyKTtcbn1cblxuZnVuY3Rpb24gQ2F0bXVsbFJvbShjb250ZXh0LCBhbHBoYSkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fYWxwaGEgPSBhbHBoYTtcbn1cblxuQ2F0bXVsbFJvbS5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hID1cbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEgPVxuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpOyBicmVhaztcbiAgICAgIGNhc2UgMzogdGhpcy5wb2ludCh0aGlzLl94MiwgdGhpcy5feTIpOyBicmVhaztcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcblxuICAgIGlmICh0aGlzLl9wb2ludCkge1xuICAgICAgdmFyIHgyMyA9IHRoaXMuX3gyIC0geCxcbiAgICAgICAgICB5MjMgPSB0aGlzLl95MiAtIHk7XG4gICAgICB0aGlzLl9sMjNfYSA9IE1hdGguc3FydCh0aGlzLl9sMjNfMmEgPSBNYXRoLnBvdyh4MjMgKiB4MjMgKyB5MjMgKiB5MjMsIHRoaXMuX2FscGhhKSk7XG4gICAgfVxuXG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuXG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSwgdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYTtcbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEsIHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYTtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKGFscGhhKSB7XG5cbiAgZnVuY3Rpb24gY2F0bXVsbFJvbShjb250ZXh0KSB7XG4gICAgcmV0dXJuIGFscGhhID8gbmV3IENhdG11bGxSb20oY29udGV4dCwgYWxwaGEpIDogbmV3IENhcmRpbmFsKGNvbnRleHQsIDApO1xuICB9XG5cbiAgY2F0bXVsbFJvbS5hbHBoYSA9IGZ1bmN0aW9uKGFscGhhKSB7XG4gICAgcmV0dXJuIGN1c3RvbSgrYWxwaGEpO1xuICB9O1xuXG4gIHJldHVybiBjYXRtdWxsUm9tO1xufSkoMC41KTtcbiIsImltcG9ydCB7Q2FyZGluYWxDbG9zZWR9IGZyb20gXCIuL2NhcmRpbmFsQ2xvc2VkXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi4vbm9vcFwiO1xuaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2F0bXVsbFJvbVwiO1xuXG5mdW5jdGlvbiBDYXRtdWxsUm9tQ2xvc2VkKGNvbnRleHQsIGFscGhhKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9hbHBoYSA9IGFscGhhO1xufVxuXG5DYXRtdWxsUm9tQ2xvc2VkLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBub29wLFxuICBhcmVhRW5kOiBub29wLFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9IHRoaXMuX3gzID0gdGhpcy5feDQgPSB0aGlzLl94NSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gdGhpcy5feTMgPSB0aGlzLl95NCA9IHRoaXMuX3k1ID0gTmFOO1xuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSA9XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhID1cbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMjoge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMzoge1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDQsIHRoaXMuX3k0KTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NSwgdGhpcy5feTUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG5cbiAgICBpZiAodGhpcy5fcG9pbnQpIHtcbiAgICAgIHZhciB4MjMgPSB0aGlzLl94MiAtIHgsXG4gICAgICAgICAgeTIzID0gdGhpcy5feTIgLSB5O1xuICAgICAgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coeDIzICogeDIzICsgeTIzICogeTIzLCB0aGlzLl9hbHBoYSkpO1xuICAgIH1cblxuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl94MyA9IHgsIHRoaXMuX3kzID0geTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDQgPSB4LCB0aGlzLl95NCA9IHkpOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl94NSA9IHgsIHRoaXMuX3k1ID0geTsgYnJlYWs7XG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuXG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSwgdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYTtcbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEsIHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYTtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKGFscGhhKSB7XG5cbiAgZnVuY3Rpb24gY2F0bXVsbFJvbShjb250ZXh0KSB7XG4gICAgcmV0dXJuIGFscGhhID8gbmV3IENhdG11bGxSb21DbG9zZWQoY29udGV4dCwgYWxwaGEpIDogbmV3IENhcmRpbmFsQ2xvc2VkKGNvbnRleHQsIDApO1xuICB9XG5cbiAgY2F0bXVsbFJvbS5hbHBoYSA9IGZ1bmN0aW9uKGFscGhhKSB7XG4gICAgcmV0dXJuIGN1c3RvbSgrYWxwaGEpO1xuICB9O1xuXG4gIHJldHVybiBjYXRtdWxsUm9tO1xufSkoMC41KTtcbiIsImltcG9ydCB7Q2FyZGluYWxPcGVufSBmcm9tIFwiLi9jYXJkaW5hbE9wZW5cIjtcbmltcG9ydCB7cG9pbnR9IGZyb20gXCIuL2NhdG11bGxSb21cIjtcblxuZnVuY3Rpb24gQ2F0bXVsbFJvbU9wZW4oY29udGV4dCwgYWxwaGEpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2FscGhhID0gYWxwaGE7XG59XG5cbkNhdG11bGxSb21PcGVuLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTjtcbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EgPVxuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSA9XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMykpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuXG4gICAgaWYgKHRoaXMuX3BvaW50KSB7XG4gICAgICB2YXIgeDIzID0gdGhpcy5feDIgLSB4LFxuICAgICAgICAgIHkyMyA9IHRoaXMuX3kyIC0geTtcbiAgICAgIHRoaXMuX2wyM19hID0gTWF0aC5zcXJ0KHRoaXMuX2wyM18yYSA9IE1hdGgucG93KHgyMyAqIHgyMyArIHkyMyAqIHkyMywgdGhpcy5fYWxwaGEpKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95MikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MiwgdGhpcy5feTIpOyBicmVhaztcbiAgICAgIGNhc2UgMzogdGhpcy5fcG9pbnQgPSA0OyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuXG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSwgdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYTtcbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEsIHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYTtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKGFscGhhKSB7XG5cbiAgZnVuY3Rpb24gY2F0bXVsbFJvbShjb250ZXh0KSB7XG4gICAgcmV0dXJuIGFscGhhID8gbmV3IENhdG11bGxSb21PcGVuKGNvbnRleHQsIGFscGhhKSA6IG5ldyBDYXJkaW5hbE9wZW4oY29udGV4dCwgMCk7XG4gIH1cblxuICBjYXRtdWxsUm9tLmFscGhhID0gZnVuY3Rpb24oYWxwaGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCthbHBoYSk7XG4gIH07XG5cbiAgcmV0dXJuIGNhdG11bGxSb207XG59KSgwLjUpO1xuIiwiZnVuY3Rpb24gTGluZWFyKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkxpbmVhci5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IExpbmVhcihjb250ZXh0KTtcbn1cbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wXCI7XG5cbmZ1bmN0aW9uIExpbmVhckNsb3NlZChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5MaW5lYXJDbG9zZWQucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IG5vb3AsXG4gIGFyZWFFbmQ6IG5vb3AsXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fcG9pbnQpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgaWYgKHRoaXMuX3BvaW50KSB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICBlbHNlIHRoaXMuX3BvaW50ID0gMSwgdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBMaW5lYXJDbG9zZWQoY29udGV4dCk7XG59XG4iLCJmdW5jdGlvbiBzaWduKHgpIHtcbiAgcmV0dXJuIHggPCAwID8gLTEgOiAxO1xufVxuXG4vLyBDYWxjdWxhdGUgdGhlIHNsb3BlcyBvZiB0aGUgdGFuZ2VudHMgKEhlcm1pdGUtdHlwZSBpbnRlcnBvbGF0aW9uKSBiYXNlZCBvblxuLy8gdGhlIGZvbGxvd2luZyBwYXBlcjogU3RlZmZlbiwgTS4gMTk5MC4gQSBTaW1wbGUgTWV0aG9kIGZvciBNb25vdG9uaWNcbi8vIEludGVycG9sYXRpb24gaW4gT25lIERpbWVuc2lvbi4gQXN0cm9ub215IGFuZCBBc3Ryb3BoeXNpY3MsIFZvbC4gMjM5LCBOTy5cbi8vIE5PVihJSSksIFAuIDQ0MywgMTk5MC5cbmZ1bmN0aW9uIHNsb3BlMyh0aGF0LCB4MiwgeTIpIHtcbiAgdmFyIGgwID0gdGhhdC5feDEgLSB0aGF0Ll94MCxcbiAgICAgIGgxID0geDIgLSB0aGF0Ll94MSxcbiAgICAgIHMwID0gKHRoYXQuX3kxIC0gdGhhdC5feTApIC8gKGgwIHx8IGgxIDwgMCAmJiAtMCksXG4gICAgICBzMSA9ICh5MiAtIHRoYXQuX3kxKSAvIChoMSB8fCBoMCA8IDAgJiYgLTApLFxuICAgICAgcCA9IChzMCAqIGgxICsgczEgKiBoMCkgLyAoaDAgKyBoMSk7XG4gIHJldHVybiAoc2lnbihzMCkgKyBzaWduKHMxKSkgKiBNYXRoLm1pbihNYXRoLmFicyhzMCksIE1hdGguYWJzKHMxKSwgMC41ICogTWF0aC5hYnMocCkpIHx8IDA7XG59XG5cbi8vIENhbGN1bGF0ZSBhIG9uZS1zaWRlZCBzbG9wZS5cbmZ1bmN0aW9uIHNsb3BlMih0aGF0LCB0KSB7XG4gIHZhciBoID0gdGhhdC5feDEgLSB0aGF0Ll94MDtcbiAgcmV0dXJuIGggPyAoMyAqICh0aGF0Ll95MSAtIHRoYXQuX3kwKSAvIGggLSB0KSAvIDIgOiB0O1xufVxuXG4vLyBBY2NvcmRpbmcgdG8gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ3ViaWNfSGVybWl0ZV9zcGxpbmUjUmVwcmVzZW50YXRpb25zXG4vLyBcInlvdSBjYW4gZXhwcmVzcyBjdWJpYyBIZXJtaXRlIGludGVycG9sYXRpb24gaW4gdGVybXMgb2YgY3ViaWMgQsOpemllciBjdXJ2ZXNcbi8vIHdpdGggcmVzcGVjdCB0byB0aGUgZm91ciB2YWx1ZXMgcDAsIHAwICsgbTAgLyAzLCBwMSAtIG0xIC8gMywgcDFcIi5cbmZ1bmN0aW9uIHBvaW50KHRoYXQsIHQwLCB0MSkge1xuICB2YXIgeDAgPSB0aGF0Ll94MCxcbiAgICAgIHkwID0gdGhhdC5feTAsXG4gICAgICB4MSA9IHRoYXQuX3gxLFxuICAgICAgeTEgPSB0aGF0Ll95MSxcbiAgICAgIGR4ID0gKHgxIC0geDApIC8gMztcbiAgdGhhdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgwICsgZHgsIHkwICsgZHggKiB0MCwgeDEgLSBkeCwgeTEgLSBkeCAqIHQxLCB4MSwgeTEpO1xufVxuXG5mdW5jdGlvbiBNb25vdG9uZVgoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuTW9ub3RvbmVYLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID1cbiAgICB0aGlzLl90MCA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsIHRoaXMuX3kxKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHBvaW50KHRoaXMsIHRoaXMuX3QwLCBzbG9wZTIodGhpcywgdGhpcy5fdDApKTsgYnJlYWs7XG4gICAgfVxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdmFyIHQxID0gTmFOO1xuXG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgaWYgKHggPT09IHRoaXMuX3gxICYmIHkgPT09IHRoaXMuX3kxKSByZXR1cm47IC8vIElnbm9yZSBjb2luY2lkZW50IHBvaW50cy5cbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHBvaW50KHRoaXMsIHNsb3BlMih0aGlzLCB0MSA9IHNsb3BlMyh0aGlzLCB4LCB5KSksIHQxKTsgYnJlYWs7XG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB0aGlzLl90MCwgdDEgPSBzbG9wZTModGhpcywgeCwgeSkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB5O1xuICAgIHRoaXMuX3QwID0gdDE7XG4gIH1cbn1cblxuZnVuY3Rpb24gTW9ub3RvbmVZKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IG5ldyBSZWZsZWN0Q29udGV4dChjb250ZXh0KTtcbn1cblxuKE1vbm90b25lWS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKE1vbm90b25lWC5wcm90b3R5cGUpKS5wb2ludCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgTW9ub3RvbmVYLnByb3RvdHlwZS5wb2ludC5jYWxsKHRoaXMsIHksIHgpO1xufTtcblxuZnVuY3Rpb24gUmVmbGVjdENvbnRleHQoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuUmVmbGVjdENvbnRleHQucHJvdG90eXBlID0ge1xuICBtb3ZlVG86IGZ1bmN0aW9uKHgsIHkpIHsgdGhpcy5fY29udGV4dC5tb3ZlVG8oeSwgeCk7IH0sXG4gIGNsb3NlUGF0aDogZnVuY3Rpb24oKSB7IHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7IH0sXG4gIGxpbmVUbzogZnVuY3Rpb24oeCwgeSkgeyB0aGlzLl9jb250ZXh0LmxpbmVUbyh5LCB4KTsgfSxcbiAgYmV6aWVyQ3VydmVUbzogZnVuY3Rpb24oeDEsIHkxLCB4MiwgeTIsIHgsIHkpIHsgdGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHkxLCB4MSwgeTIsIHgyLCB5LCB4KTsgfVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIG1vbm90b25lWChjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTW9ub3RvbmVYKGNvbnRleHQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbW9ub3RvbmVZKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBNb25vdG9uZVkoY29udGV4dCk7XG59XG4iLCJmdW5jdGlvbiBOYXR1cmFsKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbk5hdHVyYWwucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3ggPSBbXTtcbiAgICB0aGlzLl95ID0gW107XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB4ID0gdGhpcy5feCxcbiAgICAgICAgeSA9IHRoaXMuX3ksXG4gICAgICAgIG4gPSB4Lmxlbmd0aDtcblxuICAgIGlmIChuKSB7XG4gICAgICB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeFswXSwgeVswXSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4WzBdLCB5WzBdKTtcbiAgICAgIGlmIChuID09PSAyKSB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHhbMV0sIHlbMV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHB4ID0gY29udHJvbFBvaW50cyh4KSxcbiAgICAgICAgICAgIHB5ID0gY29udHJvbFBvaW50cyh5KTtcbiAgICAgICAgZm9yICh2YXIgaTAgPSAwLCBpMSA9IDE7IGkxIDwgbjsgKytpMCwgKytpMSkge1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyhweFswXVtpMF0sIHB5WzBdW2kwXSwgcHhbMV1baTBdLCBweVsxXVtpMF0sIHhbaTFdLCB5W2kxXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiBuID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gICAgdGhpcy5feCA9IHRoaXMuX3kgPSBudWxsO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHRoaXMuX3gucHVzaCgreCk7XG4gICAgdGhpcy5feS5wdXNoKCt5KTtcbiAgfVxufTtcblxuLy8gU2VlIGh0dHBzOi8vd3d3LnBhcnRpY2xlaW5jZWxsLmNvbS8yMDEyL2Jlemllci1zcGxpbmVzLyBmb3IgZGVyaXZhdGlvbi5cbmZ1bmN0aW9uIGNvbnRyb2xQb2ludHMoeCkge1xuICB2YXIgaSxcbiAgICAgIG4gPSB4Lmxlbmd0aCAtIDEsXG4gICAgICBtLFxuICAgICAgYSA9IG5ldyBBcnJheShuKSxcbiAgICAgIGIgPSBuZXcgQXJyYXkobiksXG4gICAgICByID0gbmV3IEFycmF5KG4pO1xuICBhWzBdID0gMCwgYlswXSA9IDIsIHJbMF0gPSB4WzBdICsgMiAqIHhbMV07XG4gIGZvciAoaSA9IDE7IGkgPCBuIC0gMTsgKytpKSBhW2ldID0gMSwgYltpXSA9IDQsIHJbaV0gPSA0ICogeFtpXSArIDIgKiB4W2kgKyAxXTtcbiAgYVtuIC0gMV0gPSAyLCBiW24gLSAxXSA9IDcsIHJbbiAtIDFdID0gOCAqIHhbbiAtIDFdICsgeFtuXTtcbiAgZm9yIChpID0gMTsgaSA8IG47ICsraSkgbSA9IGFbaV0gLyBiW2kgLSAxXSwgYltpXSAtPSBtLCByW2ldIC09IG0gKiByW2kgLSAxXTtcbiAgYVtuIC0gMV0gPSByW24gLSAxXSAvIGJbbiAtIDFdO1xuICBmb3IgKGkgPSBuIC0gMjsgaSA+PSAwOyAtLWkpIGFbaV0gPSAocltpXSAtIGFbaSArIDFdKSAvIGJbaV07XG4gIGJbbiAtIDFdID0gKHhbbl0gKyBhW24gLSAxXSkgLyAyO1xuICBmb3IgKGkgPSAwOyBpIDwgbiAtIDE7ICsraSkgYltpXSA9IDIgKiB4W2kgKyAxXSAtIGFbaSArIDFdO1xuICByZXR1cm4gW2EsIGJdO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTmF0dXJhbChjb250ZXh0KTtcbn1cbiIsImltcG9ydCBjdXJ2ZUxpbmVhciBmcm9tIFwiLi9saW5lYXJcIjtcblxuZXhwb3J0IHZhciBjdXJ2ZVJhZGlhbExpbmVhciA9IGN1cnZlUmFkaWFsKGN1cnZlTGluZWFyKTtcblxuZnVuY3Rpb24gUmFkaWFsKGN1cnZlKSB7XG4gIHRoaXMuX2N1cnZlID0gY3VydmU7XG59XG5cblJhZGlhbC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fY3VydmUuYXJlYVN0YXJ0KCk7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2N1cnZlLmFyZWFFbmQoKTtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jdXJ2ZS5saW5lU3RhcnQoKTtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fY3VydmUubGluZUVuZCgpO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oYSwgcikge1xuICAgIHRoaXMuX2N1cnZlLnBvaW50KHIgKiBNYXRoLnNpbihhKSwgciAqIC1NYXRoLmNvcyhhKSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGN1cnZlUmFkaWFsKGN1cnZlKSB7XG5cbiAgZnVuY3Rpb24gcmFkaWFsKGNvbnRleHQpIHtcbiAgICByZXR1cm4gbmV3IFJhZGlhbChjdXJ2ZShjb250ZXh0KSk7XG4gIH1cblxuICByYWRpYWwuX2N1cnZlID0gY3VydmU7XG5cbiAgcmV0dXJuIHJhZGlhbDtcbn1cbiIsImZ1bmN0aW9uIFN0ZXAoY29udGV4dCwgdCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fdCA9IHQ7XG59XG5cblN0ZXAucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3ggPSB0aGlzLl95ID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKDAgPCB0aGlzLl90ICYmIHRoaXMuX3QgPCAxICYmIHRoaXMuX3BvaW50ID09PSAyKSB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94LCB0aGlzLl95KTtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgaWYgKHRoaXMuX2xpbmUgPj0gMCkgdGhpcy5fdCA9IDEgLSB0aGlzLl90LCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIGlmICh0aGlzLl90IDw9IDApIHtcbiAgICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94LCB5KTtcbiAgICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgeDEgPSB0aGlzLl94ICogKDEgLSB0aGlzLl90KSArIHggKiB0aGlzLl90O1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHgxLCB0aGlzLl95KTtcbiAgICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh4MSwgeSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMuX3ggPSB4LCB0aGlzLl95ID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IFN0ZXAoY29udGV4dCwgMC41KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0ZXBCZWZvcmUoY29udGV4dCkge1xuICByZXR1cm4gbmV3IFN0ZXAoY29udGV4dCwgMCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGVwQWZ0ZXIoY29udGV4dCkge1xuICByZXR1cm4gbmV3IFN0ZXAoY29udGV4dCwgMSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBiIDwgYSA/IC0xIDogYiA+IGEgPyAxIDogYiA+PSBhID8gMCA6IE5hTjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGQpIHtcbiAgcmV0dXJuIGQ7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgYXJjfSBmcm9tIFwiLi9hcmNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBhcmVhfSBmcm9tIFwiLi9hcmVhXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbGluZX0gZnJvbSBcIi4vbGluZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBpZX0gZnJvbSBcIi4vcGllXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYXJlYVJhZGlhbCwgZGVmYXVsdCBhcyByYWRpYWxBcmVhfSBmcm9tIFwiLi9hcmVhUmFkaWFsXCI7IC8vIE5vdGU6IHJhZGlhbEFyZWEgaXMgZGVwcmVjYXRlZCFcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsaW5lUmFkaWFsLCBkZWZhdWx0IGFzIHJhZGlhbExpbmV9IGZyb20gXCIuL2xpbmVSYWRpYWxcIjsgLy8gTm90ZTogcmFkaWFsTGluZSBpcyBkZXByZWNhdGVkIVxuZXhwb3J0IHtkZWZhdWx0IGFzIHBvaW50UmFkaWFsfSBmcm9tIFwiLi9wb2ludFJhZGlhbFwiO1xuZXhwb3J0IHtsaW5rSG9yaXpvbnRhbCwgbGlua1ZlcnRpY2FsLCBsaW5rUmFkaWFsfSBmcm9tIFwiLi9saW5rL2luZGV4XCI7XG5cbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2wsIHN5bWJvbHN9IGZyb20gXCIuL3N5bWJvbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbENpcmNsZX0gZnJvbSBcIi4vc3ltYm9sL2NpcmNsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbENyb3NzfSBmcm9tIFwiLi9zeW1ib2wvY3Jvc3NcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xEaWFtb25kfSBmcm9tIFwiLi9zeW1ib2wvZGlhbW9uZFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbFNxdWFyZX0gZnJvbSBcIi4vc3ltYm9sL3NxdWFyZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbFN0YXJ9IGZyb20gXCIuL3N5bWJvbC9zdGFyXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sVHJpYW5nbGV9IGZyb20gXCIuL3N5bWJvbC90cmlhbmdsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbFd5ZX0gZnJvbSBcIi4vc3ltYm9sL3d5ZVwiO1xuXG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVCYXNpc0Nsb3NlZH0gZnJvbSBcIi4vY3VydmUvYmFzaXNDbG9zZWRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUJhc2lzT3Blbn0gZnJvbSBcIi4vY3VydmUvYmFzaXNPcGVuXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVCYXNpc30gZnJvbSBcIi4vY3VydmUvYmFzaXNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUJ1bmRsZX0gZnJvbSBcIi4vY3VydmUvYnVuZGxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVDYXJkaW5hbENsb3NlZH0gZnJvbSBcIi4vY3VydmUvY2FyZGluYWxDbG9zZWRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhcmRpbmFsT3Blbn0gZnJvbSBcIi4vY3VydmUvY2FyZGluYWxPcGVuXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVDYXJkaW5hbH0gZnJvbSBcIi4vY3VydmUvY2FyZGluYWxcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhdG11bGxSb21DbG9zZWR9IGZyb20gXCIuL2N1cnZlL2NhdG11bGxSb21DbG9zZWRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhdG11bGxSb21PcGVufSBmcm9tIFwiLi9jdXJ2ZS9jYXRtdWxsUm9tT3BlblwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2F0bXVsbFJvbX0gZnJvbSBcIi4vY3VydmUvY2F0bXVsbFJvbVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlTGluZWFyQ2xvc2VkfSBmcm9tIFwiLi9jdXJ2ZS9saW5lYXJDbG9zZWRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUxpbmVhcn0gZnJvbSBcIi4vY3VydmUvbGluZWFyXCI7XG5leHBvcnQge21vbm90b25lWCBhcyBjdXJ2ZU1vbm90b25lWCwgbW9ub3RvbmVZIGFzIGN1cnZlTW9ub3RvbmVZfSBmcm9tIFwiLi9jdXJ2ZS9tb25vdG9uZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlTmF0dXJhbH0gZnJvbSBcIi4vY3VydmUvbmF0dXJhbFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlU3RlcCwgc3RlcEFmdGVyIGFzIGN1cnZlU3RlcEFmdGVyLCBzdGVwQmVmb3JlIGFzIGN1cnZlU3RlcEJlZm9yZX0gZnJvbSBcIi4vY3VydmUvc3RlcFwiO1xuXG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2t9IGZyb20gXCIuL3N0YWNrXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPZmZzZXRFeHBhbmR9IGZyb20gXCIuL29mZnNldC9leHBhbmRcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09mZnNldERpdmVyZ2luZ30gZnJvbSBcIi4vb2Zmc2V0L2RpdmVyZ2luZ1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT2Zmc2V0Tm9uZX0gZnJvbSBcIi4vb2Zmc2V0L25vbmVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09mZnNldFNpbGhvdWV0dGV9IGZyb20gXCIuL29mZnNldC9zaWxob3VldHRlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPZmZzZXRXaWdnbGV9IGZyb20gXCIuL29mZnNldC93aWdnbGVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVyQXBwZWFyYW5jZX0gZnJvbSBcIi4vb3JkZXIvYXBwZWFyYW5jZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJBc2NlbmRpbmd9IGZyb20gXCIuL29yZGVyL2FzY2VuZGluZ1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJEZXNjZW5kaW5nfSBmcm9tIFwiLi9vcmRlci9kZXNjZW5kaW5nXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlckluc2lkZU91dH0gZnJvbSBcIi4vb3JkZXIvaW5zaWRlT3V0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlck5vbmV9IGZyb20gXCIuL29yZGVyL25vbmVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVyUmV2ZXJzZX0gZnJvbSBcIi4vb3JkZXIvcmV2ZXJzZVwiO1xuIiwiaW1wb3J0IHtwYXRofSBmcm9tIFwiZDMtcGF0aFwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgY3VydmVMaW5lYXIgZnJvbSBcIi4vY3VydmUvbGluZWFyXCI7XG5pbXBvcnQge3ggYXMgcG9pbnRYLCB5IGFzIHBvaW50WX0gZnJvbSBcIi4vcG9pbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB4ID0gcG9pbnRYLFxuICAgICAgeSA9IHBvaW50WSxcbiAgICAgIGRlZmluZWQgPSBjb25zdGFudCh0cnVlKSxcbiAgICAgIGNvbnRleHQgPSBudWxsLFxuICAgICAgY3VydmUgPSBjdXJ2ZUxpbmVhcixcbiAgICAgIG91dHB1dCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gbGluZShkYXRhKSB7XG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgZCxcbiAgICAgICAgZGVmaW5lZDAgPSBmYWxzZSxcbiAgICAgICAgYnVmZmVyO1xuXG4gICAgaWYgKGNvbnRleHQgPT0gbnVsbCkgb3V0cHV0ID0gY3VydmUoYnVmZmVyID0gcGF0aCgpKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPD0gbjsgKytpKSB7XG4gICAgICBpZiAoIShpIDwgbiAmJiBkZWZpbmVkKGQgPSBkYXRhW2ldLCBpLCBkYXRhKSkgPT09IGRlZmluZWQwKSB7XG4gICAgICAgIGlmIChkZWZpbmVkMCA9ICFkZWZpbmVkMCkgb3V0cHV0LmxpbmVTdGFydCgpO1xuICAgICAgICBlbHNlIG91dHB1dC5saW5lRW5kKCk7XG4gICAgICB9XG4gICAgICBpZiAoZGVmaW5lZDApIG91dHB1dC5wb2ludCgreChkLCBpLCBkYXRhKSwgK3koZCwgaSwgZGF0YSkpO1xuICAgIH1cblxuICAgIGlmIChidWZmZXIpIHJldHVybiBvdXRwdXQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBsaW5lLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBsaW5lKSA6IHg7XG4gIH07XG5cbiAgbGluZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgbGluZSkgOiB5O1xuICB9O1xuXG4gIGxpbmUuZGVmaW5lZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkZWZpbmVkID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBsaW5lKSA6IGRlZmluZWQ7XG4gIH07XG5cbiAgbGluZS5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjdXJ2ZSA9IF8sIGNvbnRleHQgIT0gbnVsbCAmJiAob3V0cHV0ID0gY3VydmUoY29udGV4dCkpLCBsaW5lKSA6IGN1cnZlO1xuICB9O1xuXG4gIGxpbmUuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChfID09IG51bGwgPyBjb250ZXh0ID0gb3V0cHV0ID0gbnVsbCA6IG91dHB1dCA9IGN1cnZlKGNvbnRleHQgPSBfKSwgbGluZSkgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBsaW5lO1xufVxuIiwiaW1wb3J0IGN1cnZlUmFkaWFsLCB7Y3VydmVSYWRpYWxMaW5lYXJ9IGZyb20gXCIuL2N1cnZlL3JhZGlhbFwiO1xuaW1wb3J0IGxpbmUgZnJvbSBcIi4vbGluZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbGluZVJhZGlhbChsKSB7XG4gIHZhciBjID0gbC5jdXJ2ZTtcblxuICBsLmFuZ2xlID0gbC54LCBkZWxldGUgbC54O1xuICBsLnJhZGl1cyA9IGwueSwgZGVsZXRlIGwueTtcblxuICBsLmN1cnZlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gYyhjdXJ2ZVJhZGlhbChfKSkgOiBjKCkuX2N1cnZlO1xuICB9O1xuXG4gIHJldHVybiBsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGxpbmVSYWRpYWwobGluZSgpLmN1cnZlKGN1cnZlUmFkaWFsTGluZWFyKSk7XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQge3NsaWNlfSBmcm9tIFwiLi4vYXJyYXlcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi4vY29uc3RhbnRcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi4vcG9pbnRcIjtcbmltcG9ydCBwb2ludFJhZGlhbCBmcm9tIFwiLi4vcG9pbnRSYWRpYWxcIjtcblxuZnVuY3Rpb24gbGlua1NvdXJjZShkKSB7XG4gIHJldHVybiBkLnNvdXJjZTtcbn1cblxuZnVuY3Rpb24gbGlua1RhcmdldChkKSB7XG4gIHJldHVybiBkLnRhcmdldDtcbn1cblxuZnVuY3Rpb24gbGluayhjdXJ2ZSkge1xuICB2YXIgc291cmNlID0gbGlua1NvdXJjZSxcbiAgICAgIHRhcmdldCA9IGxpbmtUYXJnZXQsXG4gICAgICB4ID0gcG9pbnRYLFxuICAgICAgeSA9IHBvaW50WSxcbiAgICAgIGNvbnRleHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxpbmsoKSB7XG4gICAgdmFyIGJ1ZmZlciwgYXJndiA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSwgcyA9IHNvdXJjZS5hcHBseSh0aGlzLCBhcmd2KSwgdCA9IHRhcmdldC5hcHBseSh0aGlzLCBhcmd2KTtcbiAgICBpZiAoIWNvbnRleHQpIGNvbnRleHQgPSBidWZmZXIgPSBwYXRoKCk7XG4gICAgY3VydmUoY29udGV4dCwgK3guYXBwbHkodGhpcywgKGFyZ3ZbMF0gPSBzLCBhcmd2KSksICt5LmFwcGx5KHRoaXMsIGFyZ3YpLCAreC5hcHBseSh0aGlzLCAoYXJndlswXSA9IHQsIGFyZ3YpKSwgK3kuYXBwbHkodGhpcywgYXJndikpO1xuICAgIGlmIChidWZmZXIpIHJldHVybiBjb250ZXh0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgbGluay5zb3VyY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc291cmNlID0gXywgbGluaykgOiBzb3VyY2U7XG4gIH07XG5cbiAgbGluay50YXJnZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGFyZ2V0ID0gXywgbGluaykgOiB0YXJnZXQ7XG4gIH07XG5cbiAgbGluay54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgbGluaykgOiB4O1xuICB9O1xuXG4gIGxpbmsueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGxpbmspIDogeTtcbiAgfTtcblxuICBsaW5rLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoKGNvbnRleHQgPSBfID09IG51bGwgPyBudWxsIDogXyksIGxpbmspIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gY3VydmVIb3Jpem9udGFsKGNvbnRleHQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIGNvbnRleHQubW92ZVRvKHgwLCB5MCk7XG4gIGNvbnRleHQuYmV6aWVyQ3VydmVUbyh4MCA9ICh4MCArIHgxKSAvIDIsIHkwLCB4MCwgeTEsIHgxLCB5MSk7XG59XG5cbmZ1bmN0aW9uIGN1cnZlVmVydGljYWwoY29udGV4dCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgY29udGV4dC5tb3ZlVG8oeDAsIHkwKTtcbiAgY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgwLCB5MCA9ICh5MCArIHkxKSAvIDIsIHgxLCB5MCwgeDEsIHkxKTtcbn1cblxuZnVuY3Rpb24gY3VydmVSYWRpYWwoY29udGV4dCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIHAwID0gcG9pbnRSYWRpYWwoeDAsIHkwKSxcbiAgICAgIHAxID0gcG9pbnRSYWRpYWwoeDAsIHkwID0gKHkwICsgeTEpIC8gMiksXG4gICAgICBwMiA9IHBvaW50UmFkaWFsKHgxLCB5MCksXG4gICAgICBwMyA9IHBvaW50UmFkaWFsKHgxLCB5MSk7XG4gIGNvbnRleHQubW92ZVRvKHAwWzBdLCBwMFsxXSk7XG4gIGNvbnRleHQuYmV6aWVyQ3VydmVUbyhwMVswXSwgcDFbMV0sIHAyWzBdLCBwMlsxXSwgcDNbMF0sIHAzWzFdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmtIb3Jpem9udGFsKCkge1xuICByZXR1cm4gbGluayhjdXJ2ZUhvcml6b250YWwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlua1ZlcnRpY2FsKCkge1xuICByZXR1cm4gbGluayhjdXJ2ZVZlcnRpY2FsKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmtSYWRpYWwoKSB7XG4gIHZhciBsID0gbGluayhjdXJ2ZVJhZGlhbCk7XG4gIGwuYW5nbGUgPSBsLngsIGRlbGV0ZSBsLng7XG4gIGwucmFkaXVzID0gbC55LCBkZWxldGUgbC55O1xuICByZXR1cm4gbDtcbn1cbiIsImV4cG9ydCB2YXIgYWJzID0gTWF0aC5hYnM7XG5leHBvcnQgdmFyIGF0YW4yID0gTWF0aC5hdGFuMjtcbmV4cG9ydCB2YXIgY29zID0gTWF0aC5jb3M7XG5leHBvcnQgdmFyIG1heCA9IE1hdGgubWF4O1xuZXhwb3J0IHZhciBtaW4gPSBNYXRoLm1pbjtcbmV4cG9ydCB2YXIgc2luID0gTWF0aC5zaW47XG5leHBvcnQgdmFyIHNxcnQgPSBNYXRoLnNxcnQ7XG5cbmV4cG9ydCB2YXIgZXBzaWxvbiA9IDFlLTEyO1xuZXhwb3J0IHZhciBwaSA9IE1hdGguUEk7XG5leHBvcnQgdmFyIGhhbGZQaSA9IHBpIC8gMjtcbmV4cG9ydCB2YXIgdGF1ID0gMiAqIHBpO1xuXG5leHBvcnQgZnVuY3Rpb24gYWNvcyh4KSB7XG4gIHJldHVybiB4ID4gMSA/IDAgOiB4IDwgLTEgPyBwaSA6IE1hdGguYWNvcyh4KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzaW4oeCkge1xuICByZXR1cm4geCA+PSAxID8gaGFsZlBpIDogeCA8PSAtMSA/IC1oYWxmUGkgOiBNYXRoLmFzaW4oeCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHt9XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAxKSkgcmV0dXJuO1xuICBmb3IgKHZhciBpLCBqID0gMCwgZCwgZHksIHlwLCB5biwgbiwgbSA9IHNlcmllc1tvcmRlclswXV0ubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh5cCA9IHluID0gMCwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgoZHkgPSAoZCA9IHNlcmllc1tvcmRlcltpXV1bal0pWzFdIC0gZFswXSkgPj0gMCkge1xuICAgICAgICBkWzBdID0geXAsIGRbMV0gPSB5cCArPSBkeTtcbiAgICAgIH0gZWxzZSBpZiAoZHkgPCAwKSB7XG4gICAgICAgIGRbMV0gPSB5biwgZFswXSA9IHluICs9IGR5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZFswXSA9IHlwO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAwKSkgcmV0dXJuO1xuICBmb3IgKHZhciBpLCBuLCBqID0gMCwgbSA9IHNlcmllc1swXS5sZW5ndGgsIHk7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHkgPSBpID0gMDsgaSA8IG47ICsraSkgeSArPSBzZXJpZXNbaV1bal1bMV0gfHwgMDtcbiAgICBpZiAoeSkgZm9yIChpID0gMDsgaSA8IG47ICsraSkgc2VyaWVzW2ldW2pdWzFdIC89IHk7XG4gIH1cbiAgbm9uZShzZXJpZXMsIG9yZGVyKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcywgb3JkZXIpIHtcbiAgaWYgKCEoKG4gPSBzZXJpZXMubGVuZ3RoKSA+IDEpKSByZXR1cm47XG4gIGZvciAodmFyIGkgPSAxLCBqLCBzMCwgczEgPSBzZXJpZXNbb3JkZXJbMF1dLCBuLCBtID0gczEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgczAgPSBzMSwgczEgPSBzZXJpZXNbb3JkZXJbaV1dO1xuICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgIHMxW2pdWzFdICs9IHMxW2pdWzBdID0gaXNOYU4oczBbal1bMV0pID8gczBbal1bMF0gOiBzMFtqXVsxXTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMCkpIHJldHVybjtcbiAgZm9yICh2YXIgaiA9IDAsIHMwID0gc2VyaWVzW29yZGVyWzBdXSwgbiwgbSA9IHMwLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGkgPSAwLCB5ID0gMDsgaSA8IG47ICsraSkgeSArPSBzZXJpZXNbaV1bal1bMV0gfHwgMDtcbiAgICBzMFtqXVsxXSArPSBzMFtqXVswXSA9IC15IC8gMjtcbiAgfVxuICBub25lKHNlcmllcywgb3JkZXIpO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAwKSB8fCAhKChtID0gKHMwID0gc2VyaWVzW29yZGVyWzBdXSkubGVuZ3RoKSA+IDApKSByZXR1cm47XG4gIGZvciAodmFyIHkgPSAwLCBqID0gMSwgczAsIG0sIG47IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBpID0gMCwgczEgPSAwLCBzMiA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciBzaSA9IHNlcmllc1tvcmRlcltpXV0sXG4gICAgICAgICAgc2lqMCA9IHNpW2pdWzFdIHx8IDAsXG4gICAgICAgICAgc2lqMSA9IHNpW2ogLSAxXVsxXSB8fCAwLFxuICAgICAgICAgIHMzID0gKHNpajAgLSBzaWoxKSAvIDI7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IGk7ICsraykge1xuICAgICAgICB2YXIgc2sgPSBzZXJpZXNbb3JkZXJba11dLFxuICAgICAgICAgICAgc2tqMCA9IHNrW2pdWzFdIHx8IDAsXG4gICAgICAgICAgICBza2oxID0gc2tbaiAtIDFdWzFdIHx8IDA7XG4gICAgICAgIHMzICs9IHNrajAgLSBza2oxO1xuICAgICAgfVxuICAgICAgczEgKz0gc2lqMCwgczIgKz0gczMgKiBzaWowO1xuICAgIH1cbiAgICBzMFtqIC0gMV1bMV0gKz0gczBbaiAtIDFdWzBdID0geTtcbiAgICBpZiAoczEpIHkgLT0gczIgLyBzMTtcbiAgfVxuICBzMFtqIC0gMV1bMV0gKz0gczBbaiAtIDFdWzBdID0geTtcbiAgbm9uZShzZXJpZXMsIG9yZGVyKTtcbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBwZWFrcyA9IHNlcmllcy5tYXAocGVhayk7XG4gIHJldHVybiBub25lKHNlcmllcykuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBwZWFrc1thXSAtIHBlYWtzW2JdOyB9KTtcbn1cblxuZnVuY3Rpb24gcGVhayhzZXJpZXMpIHtcbiAgdmFyIGkgPSAtMSwgaiA9IDAsIG4gPSBzZXJpZXMubGVuZ3RoLCB2aSwgdmogPSAtSW5maW5pdHk7XG4gIHdoaWxlICgrK2kgPCBuKSBpZiAoKHZpID0gK3Nlcmllc1tpXVsxXSkgPiB2aikgdmogPSB2aSwgaiA9IGk7XG4gIHJldHVybiBqO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIHN1bXMgPSBzZXJpZXMubWFwKHN1bSk7XG4gIHJldHVybiBub25lKHNlcmllcykuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBzdW1zW2FdIC0gc3Vtc1tiXTsgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdW0oc2VyaWVzKSB7XG4gIHZhciBzID0gMCwgaSA9IC0xLCBuID0gc2VyaWVzLmxlbmd0aCwgdjtcbiAgd2hpbGUgKCsraSA8IG4pIGlmICh2ID0gK3Nlcmllc1tpXVsxXSkgcyArPSB2O1xuICByZXR1cm4gcztcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICByZXR1cm4gYXNjZW5kaW5nKHNlcmllcykucmV2ZXJzZSgpO1xufVxuIiwiaW1wb3J0IGFwcGVhcmFuY2UgZnJvbSBcIi4vYXBwZWFyYW5jZVwiO1xuaW1wb3J0IHtzdW19IGZyb20gXCIuL2FzY2VuZGluZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIG4gPSBzZXJpZXMubGVuZ3RoLFxuICAgICAgaSxcbiAgICAgIGosXG4gICAgICBzdW1zID0gc2VyaWVzLm1hcChzdW0pLFxuICAgICAgb3JkZXIgPSBhcHBlYXJhbmNlKHNlcmllcyksXG4gICAgICB0b3AgPSAwLFxuICAgICAgYm90dG9tID0gMCxcbiAgICAgIHRvcHMgPSBbXSxcbiAgICAgIGJvdHRvbXMgPSBbXTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgaiA9IG9yZGVyW2ldO1xuICAgIGlmICh0b3AgPCBib3R0b20pIHtcbiAgICAgIHRvcCArPSBzdW1zW2pdO1xuICAgICAgdG9wcy5wdXNoKGopO1xuICAgIH0gZWxzZSB7XG4gICAgICBib3R0b20gKz0gc3Vtc1tqXTtcbiAgICAgIGJvdHRvbXMucHVzaChqKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm90dG9tcy5yZXZlcnNlKCkuY29uY2F0KHRvcHMpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBuID0gc2VyaWVzLmxlbmd0aCwgbyA9IG5ldyBBcnJheShuKTtcbiAgd2hpbGUgKC0tbiA+PSAwKSBvW25dID0gbjtcbiAgcmV0dXJuIG87XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICByZXR1cm4gbm9uZShzZXJpZXMpLnJldmVyc2UoKTtcbn1cbiIsImltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuaW1wb3J0IGRlc2NlbmRpbmcgZnJvbSBcIi4vZGVzY2VuZGluZ1wiO1xuaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuL2lkZW50aXR5XCI7XG5pbXBvcnQge3RhdX0gZnJvbSBcIi4vbWF0aFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHZhbHVlID0gaWRlbnRpdHksXG4gICAgICBzb3J0VmFsdWVzID0gZGVzY2VuZGluZyxcbiAgICAgIHNvcnQgPSBudWxsLFxuICAgICAgc3RhcnRBbmdsZSA9IGNvbnN0YW50KDApLFxuICAgICAgZW5kQW5nbGUgPSBjb25zdGFudCh0YXUpLFxuICAgICAgcGFkQW5nbGUgPSBjb25zdGFudCgwKTtcblxuICBmdW5jdGlvbiBwaWUoZGF0YSkge1xuICAgIHZhciBpLFxuICAgICAgICBuID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIGosXG4gICAgICAgIGssXG4gICAgICAgIHN1bSA9IDAsXG4gICAgICAgIGluZGV4ID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBhcmNzID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBhMCA9ICtzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIGRhID0gTWF0aC5taW4odGF1LCBNYXRoLm1heCgtdGF1LCBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gYTApKSxcbiAgICAgICAgYTEsXG4gICAgICAgIHAgPSBNYXRoLm1pbihNYXRoLmFicyhkYSkgLyBuLCBwYWRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSxcbiAgICAgICAgcGEgPSBwICogKGRhIDwgMCA/IC0xIDogMSksXG4gICAgICAgIHY7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKHYgPSBhcmNzW2luZGV4W2ldID0gaV0gPSArdmFsdWUoZGF0YVtpXSwgaSwgZGF0YSkpID4gMCkge1xuICAgICAgICBzdW0gKz0gdjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBPcHRpb25hbGx5IHNvcnQgdGhlIGFyY3MgYnkgcHJldmlvdXNseS1jb21wdXRlZCB2YWx1ZXMgb3IgYnkgZGF0YS5cbiAgICBpZiAoc29ydFZhbHVlcyAhPSBudWxsKSBpbmRleC5zb3J0KGZ1bmN0aW9uKGksIGopIHsgcmV0dXJuIHNvcnRWYWx1ZXMoYXJjc1tpXSwgYXJjc1tqXSk7IH0pO1xuICAgIGVsc2UgaWYgKHNvcnQgIT0gbnVsbCkgaW5kZXguc29ydChmdW5jdGlvbihpLCBqKSB7IHJldHVybiBzb3J0KGRhdGFbaV0sIGRhdGFbal0pOyB9KTtcblxuICAgIC8vIENvbXB1dGUgdGhlIGFyY3MhIFRoZXkgYXJlIHN0b3JlZCBpbiB0aGUgb3JpZ2luYWwgZGF0YSdzIG9yZGVyLlxuICAgIGZvciAoaSA9IDAsIGsgPSBzdW0gPyAoZGEgLSBuICogcGEpIC8gc3VtIDogMDsgaSA8IG47ICsraSwgYTAgPSBhMSkge1xuICAgICAgaiA9IGluZGV4W2ldLCB2ID0gYXJjc1tqXSwgYTEgPSBhMCArICh2ID4gMCA/IHYgKiBrIDogMCkgKyBwYSwgYXJjc1tqXSA9IHtcbiAgICAgICAgZGF0YTogZGF0YVtqXSxcbiAgICAgICAgaW5kZXg6IGksXG4gICAgICAgIHZhbHVlOiB2LFxuICAgICAgICBzdGFydEFuZ2xlOiBhMCxcbiAgICAgICAgZW5kQW5nbGU6IGExLFxuICAgICAgICBwYWRBbmdsZTogcFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJjcztcbiAgfVxuXG4gIHBpZS52YWx1ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh2YWx1ZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBwaWUpIDogdmFsdWU7XG4gIH07XG5cbiAgcGllLnNvcnRWYWx1ZXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc29ydFZhbHVlcyA9IF8sIHNvcnQgPSBudWxsLCBwaWUpIDogc29ydFZhbHVlcztcbiAgfTtcblxuICBwaWUuc29ydCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3J0ID0gXywgc29ydFZhbHVlcyA9IG51bGwsIHBpZSkgOiBzb3J0O1xuICB9O1xuXG4gIHBpZS5zdGFydEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0YXJ0QW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcGllKSA6IHN0YXJ0QW5nbGU7XG4gIH07XG5cbiAgcGllLmVuZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGVuZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHBpZSkgOiBlbmRBbmdsZTtcbiAgfTtcblxuICBwaWUucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcGllKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIHJldHVybiBwaWU7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24geChwKSB7XG4gIHJldHVybiBwWzBdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24geShwKSB7XG4gIHJldHVybiBwWzFdO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgeSkge1xuICByZXR1cm4gWyh5ID0gK3kpICogTWF0aC5jb3MoeCAtPSBNYXRoLlBJIC8gMiksIHkgKiBNYXRoLnNpbih4KV07XG59XG4iLCJpbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheVwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50XCI7XG5pbXBvcnQgb2Zmc2V0Tm9uZSBmcm9tIFwiLi9vZmZzZXQvbm9uZVwiO1xuaW1wb3J0IG9yZGVyTm9uZSBmcm9tIFwiLi9vcmRlci9ub25lXCI7XG5cbmZ1bmN0aW9uIHN0YWNrVmFsdWUoZCwga2V5KSB7XG4gIHJldHVybiBkW2tleV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIga2V5cyA9IGNvbnN0YW50KFtdKSxcbiAgICAgIG9yZGVyID0gb3JkZXJOb25lLFxuICAgICAgb2Zmc2V0ID0gb2Zmc2V0Tm9uZSxcbiAgICAgIHZhbHVlID0gc3RhY2tWYWx1ZTtcblxuICBmdW5jdGlvbiBzdGFjayhkYXRhKSB7XG4gICAgdmFyIGt6ID0ga2V5cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICBpLFxuICAgICAgICBtID0gZGF0YS5sZW5ndGgsXG4gICAgICAgIG4gPSBrei5sZW5ndGgsXG4gICAgICAgIHN6ID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBvejtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGZvciAodmFyIGtpID0ga3pbaV0sIHNpID0gc3pbaV0gPSBuZXcgQXJyYXkobSksIGogPSAwLCBzaWo7IGogPCBtOyArK2opIHtcbiAgICAgICAgc2lbal0gPSBzaWogPSBbMCwgK3ZhbHVlKGRhdGFbal0sIGtpLCBqLCBkYXRhKV07XG4gICAgICAgIHNpai5kYXRhID0gZGF0YVtqXTtcbiAgICAgIH1cbiAgICAgIHNpLmtleSA9IGtpO1xuICAgIH1cblxuICAgIGZvciAoaSA9IDAsIG96ID0gb3JkZXIoc3opOyBpIDwgbjsgKytpKSB7XG4gICAgICBzeltveltpXV0uaW5kZXggPSBpO1xuICAgIH1cblxuICAgIG9mZnNldChzeiwgb3opO1xuICAgIHJldHVybiBzejtcbiAgfVxuXG4gIHN0YWNrLmtleXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoa2V5cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoc2xpY2UuY2FsbChfKSksIHN0YWNrKSA6IGtleXM7XG4gIH07XG5cbiAgc3RhY2sudmFsdWUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmFsdWUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgc3RhY2spIDogdmFsdWU7XG4gIH07XG5cbiAgc3RhY2sub3JkZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob3JkZXIgPSBfID09IG51bGwgPyBvcmRlck5vbmUgOiB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpLCBzdGFjaykgOiBvcmRlcjtcbiAgfTtcblxuICBzdGFjay5vZmZzZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob2Zmc2V0ID0gXyA9PSBudWxsID8gb2Zmc2V0Tm9uZSA6IF8sIHN0YWNrKSA6IG9mZnNldDtcbiAgfTtcblxuICByZXR1cm4gc3RhY2s7XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY2lyY2xlIGZyb20gXCIuL3N5bWJvbC9jaXJjbGVcIjtcbmltcG9ydCBjcm9zcyBmcm9tIFwiLi9zeW1ib2wvY3Jvc3NcIjtcbmltcG9ydCBkaWFtb25kIGZyb20gXCIuL3N5bWJvbC9kaWFtb25kXCI7XG5pbXBvcnQgc3RhciBmcm9tIFwiLi9zeW1ib2wvc3RhclwiO1xuaW1wb3J0IHNxdWFyZSBmcm9tIFwiLi9zeW1ib2wvc3F1YXJlXCI7XG5pbXBvcnQgdHJpYW5nbGUgZnJvbSBcIi4vc3ltYm9sL3RyaWFuZ2xlXCI7XG5pbXBvcnQgd3llIGZyb20gXCIuL3N5bWJvbC93eWVcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudFwiO1xuXG5leHBvcnQgdmFyIHN5bWJvbHMgPSBbXG4gIGNpcmNsZSxcbiAgY3Jvc3MsXG4gIGRpYW1vbmQsXG4gIHNxdWFyZSxcbiAgc3RhcixcbiAgdHJpYW5nbGUsXG4gIHd5ZVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB0eXBlID0gY29uc3RhbnQoY2lyY2xlKSxcbiAgICAgIHNpemUgPSBjb25zdGFudCg2NCksXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBzeW1ib2woKSB7XG4gICAgdmFyIGJ1ZmZlcjtcbiAgICBpZiAoIWNvbnRleHQpIGNvbnRleHQgPSBidWZmZXIgPSBwYXRoKCk7XG4gICAgdHlwZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLmRyYXcoY29udGV4dCwgK3NpemUuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIGNvbnRleHQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBzeW1ib2wudHlwZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0eXBlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgc3ltYm9sKSA6IHR5cGU7XG4gIH07XG5cbiAgc3ltYm9sLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2l6ZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBzeW1ib2wpIDogc2l6ZTtcbiAgfTtcblxuICBzeW1ib2wuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjb250ZXh0ID0gXyA9PSBudWxsID8gbnVsbCA6IF8sIHN5bWJvbCkgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBzeW1ib2w7XG59XG4iLCJpbXBvcnQge3BpLCB0YXV9IGZyb20gXCIuLi9tYXRoXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyBwaSk7XG4gICAgY29udGV4dC5tb3ZlVG8ociwgMCk7XG4gICAgY29udGV4dC5hcmMoMCwgMCwgciwgMCwgdGF1KTtcbiAgfVxufTtcbiIsImV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyA1KSAvIDI7XG4gICAgY29udGV4dC5tb3ZlVG8oLTMgKiByLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygtciwgLTMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCAtMyAqIHIpO1xuICAgIGNvbnRleHQubGluZVRvKHIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygzICogciwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKDMgKiByLCByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCAzICogcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIDMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbygtciwgcik7XG4gICAgY29udGV4dC5saW5lVG8oLTMgKiByLCByKTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIiwidmFyIHRhbjMwID0gTWF0aC5zcXJ0KDEgLyAzKSxcbiAgICB0YW4zMF8yID0gdGFuMzAgKiAyO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgeSA9IE1hdGguc3FydChzaXplIC8gdGFuMzBfMiksXG4gICAgICAgIHggPSB5ICogdGFuMzA7XG4gICAgY29udGV4dC5tb3ZlVG8oMCwgLXkpO1xuICAgIGNvbnRleHQubGluZVRvKHgsIDApO1xuICAgIGNvbnRleHQubGluZVRvKDAsIHkpO1xuICAgIGNvbnRleHQubGluZVRvKC14LCAwKTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHcgPSBNYXRoLnNxcnQoc2l6ZSksXG4gICAgICAgIHggPSAtdyAvIDI7XG4gICAgY29udGV4dC5yZWN0KHgsIHgsIHcsIHcpO1xuICB9XG59O1xuIiwiaW1wb3J0IHtwaSwgdGF1fSBmcm9tIFwiLi4vbWF0aFwiO1xuXG52YXIga2EgPSAwLjg5MDgxMzA5MTUyOTI4NTIyODEwLFxuICAgIGtyID0gTWF0aC5zaW4ocGkgLyAxMCkgLyBNYXRoLnNpbig3ICogcGkgLyAxMCksXG4gICAga3ggPSBNYXRoLnNpbih0YXUgLyAxMCkgKiBrcixcbiAgICBreSA9IC1NYXRoLmNvcyh0YXUgLyAxMCkgKiBrcjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSAqIGthKSxcbiAgICAgICAgeCA9IGt4ICogcixcbiAgICAgICAgeSA9IGt5ICogcjtcbiAgICBjb250ZXh0Lm1vdmVUbygwLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCA1OyArK2kpIHtcbiAgICAgIHZhciBhID0gdGF1ICogaSAvIDUsXG4gICAgICAgICAgYyA9IE1hdGguY29zKGEpLFxuICAgICAgICAgIHMgPSBNYXRoLnNpbihhKTtcbiAgICAgIGNvbnRleHQubGluZVRvKHMgKiByLCAtYyAqIHIpO1xuICAgICAgY29udGV4dC5saW5lVG8oYyAqIHggLSBzICogeSwgcyAqIHggKyBjICogeSk7XG4gICAgfVxuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJ2YXIgc3FydDMgPSBNYXRoLnNxcnQoMyk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciB5ID0gLU1hdGguc3FydChzaXplIC8gKHNxcnQzICogMykpO1xuICAgIGNvbnRleHQubW92ZVRvKDAsIHkgKiAyKTtcbiAgICBjb250ZXh0LmxpbmVUbygtc3FydDMgKiB5LCAteSk7XG4gICAgY29udGV4dC5saW5lVG8oc3FydDMgKiB5LCAteSk7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsInZhciBjID0gLTAuNSxcbiAgICBzID0gTWF0aC5zcXJ0KDMpIC8gMixcbiAgICBrID0gMSAvIE1hdGguc3FydCgxMiksXG4gICAgYSA9IChrIC8gMiArIDEpICogMztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHIgPSBNYXRoLnNxcnQoc2l6ZSAvIGEpLFxuICAgICAgICB4MCA9IHIgLyAyLFxuICAgICAgICB5MCA9IHIgKiBrLFxuICAgICAgICB4MSA9IHgwLFxuICAgICAgICB5MSA9IHIgKiBrICsgcixcbiAgICAgICAgeDIgPSAteDEsXG4gICAgICAgIHkyID0geTE7XG4gICAgY29udGV4dC5tb3ZlVG8oeDAsIHkwKTtcbiAgICBjb250ZXh0LmxpbmVUbyh4MSwgeTEpO1xuICAgIGNvbnRleHQubGluZVRvKHgyLCB5Mik7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgwIC0gcyAqIHkwLCBzICogeDAgKyBjICogeTApO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MSAtIHMgKiB5MSwgcyAqIHgxICsgYyAqIHkxKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDIgLSBzICogeTIsIHMgKiB4MiArIGMgKiB5Mik7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgwICsgcyAqIHkwLCBjICogeTAgLSBzICogeDApO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MSArIHMgKiB5MSwgYyAqIHkxIC0gcyAqIHgxKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDIgKyBzICogeTIsIGMgKiB5MiAtIHMgKiB4Mik7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsImV4cG9ydCB7XG4gIG5vdyxcbiAgdGltZXIsXG4gIHRpbWVyRmx1c2hcbn0gZnJvbSBcIi4vdGltZXJcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lb3V0XG59IGZyb20gXCIuL3RpbWVvdXRcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBpbnRlcnZhbFxufSBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuIiwiaW1wb3J0IHtUaW1lciwgbm93fSBmcm9tIFwiLi90aW1lclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXIsIHRvdGFsID0gZGVsYXk7XG4gIGlmIChkZWxheSA9PSBudWxsKSByZXR1cm4gdC5yZXN0YXJ0KGNhbGxiYWNrLCBkZWxheSwgdGltZSksIHQ7XG4gIGRlbGF5ID0gK2RlbGF5LCB0aW1lID0gdGltZSA9PSBudWxsID8gbm93KCkgOiArdGltZTtcbiAgdC5yZXN0YXJ0KGZ1bmN0aW9uIHRpY2soZWxhcHNlZCkge1xuICAgIGVsYXBzZWQgKz0gdG90YWw7XG4gICAgdC5yZXN0YXJ0KHRpY2ssIHRvdGFsICs9IGRlbGF5LCB0aW1lKTtcbiAgICBjYWxsYmFjayhlbGFwc2VkKTtcbiAgfSwgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cbiIsImltcG9ydCB7VGltZXJ9IGZyb20gXCIuL3RpbWVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lcjtcbiAgZGVsYXkgPSBkZWxheSA9PSBudWxsID8gMCA6ICtkZWxheTtcbiAgdC5yZXN0YXJ0KGZ1bmN0aW9uKGVsYXBzZWQpIHtcbiAgICB0LnN0b3AoKTtcbiAgICBjYWxsYmFjayhlbGFwc2VkICsgZGVsYXkpO1xuICB9LCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufVxuIiwidmFyIGZyYW1lID0gMCwgLy8gaXMgYW4gYW5pbWF0aW9uIGZyYW1lIHBlbmRpbmc/XG4gICAgdGltZW91dCA9IDAsIC8vIGlzIGEgdGltZW91dCBwZW5kaW5nP1xuICAgIGludGVydmFsID0gMCwgLy8gYXJlIGFueSB0aW1lcnMgYWN0aXZlP1xuICAgIHBva2VEZWxheSA9IDEwMDAsIC8vIGhvdyBmcmVxdWVudGx5IHdlIGNoZWNrIGZvciBjbG9jayBza2V3XG4gICAgdGFza0hlYWQsXG4gICAgdGFza1RhaWwsXG4gICAgY2xvY2tMYXN0ID0gMCxcbiAgICBjbG9ja05vdyA9IDAsXG4gICAgY2xvY2tTa2V3ID0gMCxcbiAgICBjbG9jayA9IHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJvYmplY3RcIiAmJiBwZXJmb3JtYW5jZS5ub3cgPyBwZXJmb3JtYW5jZSA6IERhdGUsXG4gICAgc2V0RnJhbWUgPSB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPyB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLmJpbmQod2luZG93KSA6IGZ1bmN0aW9uKGYpIHsgc2V0VGltZW91dChmLCAxNyk7IH07XG5cbmV4cG9ydCBmdW5jdGlvbiBub3coKSB7XG4gIHJldHVybiBjbG9ja05vdyB8fCAoc2V0RnJhbWUoY2xlYXJOb3cpLCBjbG9ja05vdyA9IGNsb2NrLm5vdygpICsgY2xvY2tTa2V3KTtcbn1cblxuZnVuY3Rpb24gY2xlYXJOb3coKSB7XG4gIGNsb2NrTm93ID0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFRpbWVyKCkge1xuICB0aGlzLl9jYWxsID1cbiAgdGhpcy5fdGltZSA9XG4gIHRoaXMuX25leHQgPSBudWxsO1xufVxuXG5UaW1lci5wcm90b3R5cGUgPSB0aW1lci5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUaW1lcixcbiAgcmVzdGFydDogZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiY2FsbGJhY2sgaXMgbm90IGEgZnVuY3Rpb25cIik7XG4gICAgdGltZSA9ICh0aW1lID09IG51bGwgPyBub3coKSA6ICt0aW1lKSArIChkZWxheSA9PSBudWxsID8gMCA6ICtkZWxheSk7XG4gICAgaWYgKCF0aGlzLl9uZXh0ICYmIHRhc2tUYWlsICE9PSB0aGlzKSB7XG4gICAgICBpZiAodGFza1RhaWwpIHRhc2tUYWlsLl9uZXh0ID0gdGhpcztcbiAgICAgIGVsc2UgdGFza0hlYWQgPSB0aGlzO1xuICAgICAgdGFza1RhaWwgPSB0aGlzO1xuICAgIH1cbiAgICB0aGlzLl9jYWxsID0gY2FsbGJhY2s7XG4gICAgdGhpcy5fdGltZSA9IHRpbWU7XG4gICAgc2xlZXAoKTtcbiAgfSxcbiAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2NhbGwpIHtcbiAgICAgIHRoaXMuX2NhbGwgPSBudWxsO1xuICAgICAgdGhpcy5fdGltZSA9IEluZmluaXR5O1xuICAgICAgc2xlZXAoKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lcihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXI7XG4gIHQucmVzdGFydChjYWxsYmFjaywgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVyRmx1c2goKSB7XG4gIG5vdygpOyAvLyBHZXQgdGhlIGN1cnJlbnQgdGltZSwgaWYgbm90IGFscmVhZHkgc2V0LlxuICArK2ZyYW1lOyAvLyBQcmV0ZW5kIHdl4oCZdmUgc2V0IGFuIGFsYXJtLCBpZiB3ZSBoYXZlbuKAmXQgYWxyZWFkeS5cbiAgdmFyIHQgPSB0YXNrSGVhZCwgZTtcbiAgd2hpbGUgKHQpIHtcbiAgICBpZiAoKGUgPSBjbG9ja05vdyAtIHQuX3RpbWUpID49IDApIHQuX2NhbGwuY2FsbChudWxsLCBlKTtcbiAgICB0ID0gdC5fbmV4dDtcbiAgfVxuICAtLWZyYW1lO1xufVxuXG5mdW5jdGlvbiB3YWtlKCkge1xuICBjbG9ja05vdyA9IChjbG9ja0xhc3QgPSBjbG9jay5ub3coKSkgKyBjbG9ja1NrZXc7XG4gIGZyYW1lID0gdGltZW91dCA9IDA7XG4gIHRyeSB7XG4gICAgdGltZXJGbHVzaCgpO1xuICB9IGZpbmFsbHkge1xuICAgIGZyYW1lID0gMDtcbiAgICBuYXAoKTtcbiAgICBjbG9ja05vdyA9IDA7XG4gIH1cbn1cblxuZnVuY3Rpb24gcG9rZSgpIHtcbiAgdmFyIG5vdyA9IGNsb2NrLm5vdygpLCBkZWxheSA9IG5vdyAtIGNsb2NrTGFzdDtcbiAgaWYgKGRlbGF5ID4gcG9rZURlbGF5KSBjbG9ja1NrZXcgLT0gZGVsYXksIGNsb2NrTGFzdCA9IG5vdztcbn1cblxuZnVuY3Rpb24gbmFwKCkge1xuICB2YXIgdDAsIHQxID0gdGFza0hlYWQsIHQyLCB0aW1lID0gSW5maW5pdHk7XG4gIHdoaWxlICh0MSkge1xuICAgIGlmICh0MS5fY2FsbCkge1xuICAgICAgaWYgKHRpbWUgPiB0MS5fdGltZSkgdGltZSA9IHQxLl90aW1lO1xuICAgICAgdDAgPSB0MSwgdDEgPSB0MS5fbmV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgdDIgPSB0MS5fbmV4dCwgdDEuX25leHQgPSBudWxsO1xuICAgICAgdDEgPSB0MCA/IHQwLl9uZXh0ID0gdDIgOiB0YXNrSGVhZCA9IHQyO1xuICAgIH1cbiAgfVxuICB0YXNrVGFpbCA9IHQwO1xuICBzbGVlcCh0aW1lKTtcbn1cblxuZnVuY3Rpb24gc2xlZXAodGltZSkge1xuICBpZiAoZnJhbWUpIHJldHVybjsgLy8gU29vbmVzdCBhbGFybSBhbHJlYWR5IHNldCwgb3Igd2lsbCBiZS5cbiAgaWYgKHRpbWVvdXQpIHRpbWVvdXQgPSBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gIHZhciBkZWxheSA9IHRpbWUgLSBjbG9ja05vdzsgLy8gU3RyaWN0bHkgbGVzcyB0aGFuIGlmIHdlIHJlY29tcHV0ZWQgY2xvY2tOb3cuXG4gIGlmIChkZWxheSA+IDI0KSB7XG4gICAgaWYgKHRpbWUgPCBJbmZpbml0eSkgdGltZW91dCA9IHNldFRpbWVvdXQod2FrZSwgdGltZSAtIGNsb2NrLm5vdygpIC0gY2xvY2tTa2V3KTtcbiAgICBpZiAoaW50ZXJ2YWwpIGludGVydmFsID0gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKCFpbnRlcnZhbCkgY2xvY2tMYXN0ID0gY2xvY2subm93KCksIGludGVydmFsID0gc2V0SW50ZXJ2YWwocG9rZSwgcG9rZURlbGF5KTtcbiAgICBmcmFtZSA9IDEsIHNldEZyYW1lKHdha2UpO1xuICB9XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL3RyYW5zaXRpb24vaW5kZXhcIjtcbmltcG9ydCB7U0NIRURVTEVEfSBmcm9tIFwiLi90cmFuc2l0aW9uL3NjaGVkdWxlXCI7XG5cbnZhciByb290ID0gW251bGxdO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBuYW1lKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHNjaGVkdWxlLFxuICAgICAgaTtcblxuICBpZiAoc2NoZWR1bGVzKSB7XG4gICAgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcbiAgICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgICBpZiAoKHNjaGVkdWxlID0gc2NoZWR1bGVzW2ldKS5zdGF0ZSA+IFNDSEVEVUxFRCAmJiBzY2hlZHVsZS5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgIHJldHVybiBuZXcgVHJhbnNpdGlvbihbW25vZGVdXSwgcm9vdCwgbmFtZSwgK2kpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuIiwiaW1wb3J0IFwiLi9zZWxlY3Rpb24vaW5kZXhcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmFuc2l0aW9ufSBmcm9tIFwiLi90cmFuc2l0aW9uL2luZGV4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYWN0aXZlfSBmcm9tIFwiLi9hY3RpdmVcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnJ1cHR9IGZyb20gXCIuL2ludGVycnVwdFwiO1xuIiwiaW1wb3J0IHtTVEFSVElORywgRU5ESU5HLCBFTkRFRH0gZnJvbSBcIi4vdHJhbnNpdGlvbi9zY2hlZHVsZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBuYW1lKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHNjaGVkdWxlLFxuICAgICAgYWN0aXZlLFxuICAgICAgZW1wdHkgPSB0cnVlLFxuICAgICAgaTtcblxuICBpZiAoIXNjaGVkdWxlcykgcmV0dXJuO1xuXG4gIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG5cbiAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgIGlmICgoc2NoZWR1bGUgPSBzY2hlZHVsZXNbaV0pLm5hbWUgIT09IG5hbWUpIHsgZW1wdHkgPSBmYWxzZTsgY29udGludWU7IH1cbiAgICBhY3RpdmUgPSBzY2hlZHVsZS5zdGF0ZSA+IFNUQVJUSU5HICYmIHNjaGVkdWxlLnN0YXRlIDwgRU5ESU5HO1xuICAgIHNjaGVkdWxlLnN0YXRlID0gRU5ERUQ7XG4gICAgc2NoZWR1bGUudGltZXIuc3RvcCgpO1xuICAgIGlmIChhY3RpdmUpIHNjaGVkdWxlLm9uLmNhbGwoXCJpbnRlcnJ1cHRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2NoZWR1bGUuaW5kZXgsIHNjaGVkdWxlLmdyb3VwKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICB9XG5cbiAgaWYgKGVtcHR5KSBkZWxldGUgbm9kZS5fX3RyYW5zaXRpb247XG59XG4iLCJpbXBvcnQge3NlbGVjdGlvbn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHNlbGVjdGlvbl9pbnRlcnJ1cHQgZnJvbSBcIi4vaW50ZXJydXB0XCI7XG5pbXBvcnQgc2VsZWN0aW9uX3RyYW5zaXRpb24gZnJvbSBcIi4vdHJhbnNpdGlvblwiO1xuXG5zZWxlY3Rpb24ucHJvdG90eXBlLmludGVycnVwdCA9IHNlbGVjdGlvbl9pbnRlcnJ1cHQ7XG5zZWxlY3Rpb24ucHJvdG90eXBlLnRyYW5zaXRpb24gPSBzZWxlY3Rpb25fdHJhbnNpdGlvbjtcbiIsImltcG9ydCBpbnRlcnJ1cHQgZnJvbSBcIi4uL2ludGVycnVwdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgaW50ZXJydXB0KHRoaXMsIG5hbWUpO1xuICB9KTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbiwgbmV3SWR9IGZyb20gXCIuLi90cmFuc2l0aW9uL2luZGV4XCI7XG5pbXBvcnQgc2NoZWR1bGUgZnJvbSBcIi4uL3RyYW5zaXRpb24vc2NoZWR1bGVcIjtcbmltcG9ydCB7ZWFzZUN1YmljSW5PdXR9IGZyb20gXCJkMy1lYXNlXCI7XG5pbXBvcnQge25vd30gZnJvbSBcImQzLXRpbWVyXCI7XG5cbnZhciBkZWZhdWx0VGltaW5nID0ge1xuICB0aW1lOiBudWxsLCAvLyBTZXQgb24gdXNlLlxuICBkZWxheTogMCxcbiAgZHVyYXRpb246IDI1MCxcbiAgZWFzZTogZWFzZUN1YmljSW5PdXRcbn07XG5cbmZ1bmN0aW9uIGluaGVyaXQobm9kZSwgaWQpIHtcbiAgdmFyIHRpbWluZztcbiAgd2hpbGUgKCEodGltaW5nID0gbm9kZS5fX3RyYW5zaXRpb24pIHx8ICEodGltaW5nID0gdGltaW5nW2lkXSkpIHtcbiAgICBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkge1xuICAgICAgcmV0dXJuIGRlZmF1bHRUaW1pbmcudGltZSA9IG5vdygpLCBkZWZhdWx0VGltaW5nO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGltaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBpZCxcbiAgICAgIHRpbWluZztcblxuICBpZiAobmFtZSBpbnN0YW5jZW9mIFRyYW5zaXRpb24pIHtcbiAgICBpZCA9IG5hbWUuX2lkLCBuYW1lID0gbmFtZS5fbmFtZTtcbiAgfSBlbHNlIHtcbiAgICBpZCA9IG5ld0lkKCksICh0aW1pbmcgPSBkZWZhdWx0VGltaW5nKS50aW1lID0gbm93KCksIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG4gIH1cblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBzY2hlZHVsZShub2RlLCBuYW1lLCBpZCwgaSwgZ3JvdXAsIHRpbWluZyB8fCBpbmhlcml0KG5vZGUsIGlkKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKGdyb3VwcywgdGhpcy5fcGFyZW50cywgbmFtZSwgaWQpO1xufVxuIiwiaW1wb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyBhcyBpbnRlcnBvbGF0ZVRyYW5zZm9ybX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge25hbWVzcGFjZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2VlblwiO1xuaW1wb3J0IGludGVycG9sYXRlIGZyb20gXCIuL2ludGVycG9sYXRlXCI7XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmVOUyhmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnQobmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlMSkge1xuICB2YXIgdmFsdWUwMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZTAgPSB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICByZXR1cm4gdmFsdWUwID09PSB2YWx1ZTEgPyBudWxsXG4gICAgICAgIDogdmFsdWUwID09PSB2YWx1ZTAwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUodmFsdWUwMCA9IHZhbHVlMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50TlMoZnVsbG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZTEpIHtcbiAgdmFyIHZhbHVlMDAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUwID0gdGhpcy5nZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIHJldHVybiB2YWx1ZTAgPT09IHZhbHVlMSA/IG51bGxcbiAgICAgICAgOiB2YWx1ZTAgPT09IHZhbHVlMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZSh2YWx1ZTAwID0gdmFsdWUwLCB2YWx1ZTEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb24obmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciB2YWx1ZTAwLFxuICAgICAgdmFsdWUxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZTAsIHZhbHVlMSA9IHZhbHVlKHRoaXMpO1xuICAgIGlmICh2YWx1ZTEgPT0gbnVsbCkgcmV0dXJuIHZvaWQgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgdmFsdWUwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgcmV0dXJuIHZhbHVlMCA9PT0gdmFsdWUxID8gbnVsbFxuICAgICAgICA6IHZhbHVlMCA9PT0gdmFsdWUwMCAmJiB2YWx1ZTEgPT09IHZhbHVlMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZSh2YWx1ZTAwID0gdmFsdWUwLCB2YWx1ZTEwID0gdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoZnVsbG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZSkge1xuICB2YXIgdmFsdWUwMCxcbiAgICAgIHZhbHVlMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUwLCB2YWx1ZTEgPSB2YWx1ZSh0aGlzKTtcbiAgICBpZiAodmFsdWUxID09IG51bGwpIHJldHVybiB2b2lkIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICB2YWx1ZTAgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgcmV0dXJuIHZhbHVlMCA9PT0gdmFsdWUxID8gbnVsbFxuICAgICAgICA6IHZhbHVlMCA9PT0gdmFsdWUwMCAmJiB2YWx1ZTEgPT09IHZhbHVlMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZSh2YWx1ZTAwID0gdmFsdWUwLCB2YWx1ZTEwID0gdmFsdWUxKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGZ1bGxuYW1lID0gbmFtZXNwYWNlKG5hbWUpLCBpID0gZnVsbG5hbWUgPT09IFwidHJhbnNmb3JtXCIgPyBpbnRlcnBvbGF0ZVRyYW5zZm9ybSA6IGludGVycG9sYXRlO1xuICByZXR1cm4gdGhpcy5hdHRyVHdlZW4obmFtZSwgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckZ1bmN0aW9uTlMgOiBhdHRyRnVuY3Rpb24pKGZ1bGxuYW1lLCBpLCB0d2VlblZhbHVlKHRoaXMsIFwiYXR0ci5cIiArIG5hbWUsIHZhbHVlKSlcbiAgICAgIDogdmFsdWUgPT0gbnVsbCA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJSZW1vdmVOUyA6IGF0dHJSZW1vdmUpKGZ1bGxuYW1lKVxuICAgICAgOiAoZnVsbG5hbWUubG9jYWwgPyBhdHRyQ29uc3RhbnROUyA6IGF0dHJDb25zdGFudCkoZnVsbG5hbWUsIGksIHZhbHVlICsgXCJcIikpO1xufVxuIiwiaW1wb3J0IHtuYW1lc3BhY2V9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZnVuY3Rpb24gYXR0clR3ZWVuTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBub2RlID0gdGhpcywgaSA9IHZhbHVlLmFwcGx5KG5vZGUsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIGkgJiYgZnVuY3Rpb24odCkge1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIGkodCkpO1xuICAgIH07XG4gIH1cbiAgdHdlZW4uX3ZhbHVlID0gdmFsdWU7XG4gIHJldHVybiB0d2Vlbjtcbn1cblxuZnVuY3Rpb24gYXR0clR3ZWVuKG5hbWUsIHZhbHVlKSB7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBub2RlID0gdGhpcywgaSA9IHZhbHVlLmFwcGx5KG5vZGUsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIGkgJiYgZnVuY3Rpb24odCkge1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUobmFtZSwgaSh0KSk7XG4gICAgfTtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIga2V5ID0gXCJhdHRyLlwiICsgbmFtZTtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gKGtleSA9IHRoaXMudHdlZW4oa2V5KSkgJiYga2V5Ll92YWx1ZTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgbnVsbCk7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG4gIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgKGZ1bGxuYW1lLmxvY2FsID8gYXR0clR3ZWVuTlMgOiBhdHRyVHdlZW4pKGZ1bGxuYW1lLCB2YWx1ZSkpO1xufVxuIiwiaW1wb3J0IHtnZXQsIGluaXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmZ1bmN0aW9uIGRlbGF5RnVuY3Rpb24oaWQsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBpbml0KHRoaXMsIGlkKS5kZWxheSA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkZWxheUNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIGluaXQodGhpcywgaWQpLmRlbGF5ID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCgodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGRlbGF5RnVuY3Rpb25cbiAgICAgICAgICA6IGRlbGF5Q29uc3RhbnQpKGlkLCB2YWx1ZSkpXG4gICAgICA6IGdldCh0aGlzLm5vZGUoKSwgaWQpLmRlbGF5O1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gZHVyYXRpb25GdW5jdGlvbihpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZHVyYXRpb24gPSArdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZHVyYXRpb25Db25zdGFudChpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID0gK3ZhbHVlLCBmdW5jdGlvbigpIHtcbiAgICBzZXQodGhpcywgaWQpLmR1cmF0aW9uID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCgodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGR1cmF0aW9uRnVuY3Rpb25cbiAgICAgICAgICA6IGR1cmF0aW9uQ29uc3RhbnQpKGlkLCB2YWx1ZSkpXG4gICAgICA6IGdldCh0aGlzLm5vZGUoKSwgaWQpLmR1cmF0aW9uO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gZWFzZUNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZWFzZSA9IHZhbHVlO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIgaWQgPSB0aGlzLl9pZDtcblxuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2goZWFzZUNvbnN0YW50KGlkLCB2YWx1ZSkpXG4gICAgICA6IGdldCh0aGlzLm5vZGUoKSwgaWQpLmVhc2U7XG59XG4iLCJpbXBvcnQge21hdGNoZXJ9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXhcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gXCJmdW5jdGlvblwiKSBtYXRjaCA9IG1hdGNoZXIobWF0Y2gpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBbXSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBtYXRjaC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkge1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9hdHRyIGZyb20gXCIuL2F0dHJcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2F0dHJUd2VlbiBmcm9tIFwiLi9hdHRyVHdlZW5cIjtcbmltcG9ydCB0cmFuc2l0aW9uX2RlbGF5IGZyb20gXCIuL2RlbGF5XCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9kdXJhdGlvbiBmcm9tIFwiLi9kdXJhdGlvblwiO1xuaW1wb3J0IHRyYW5zaXRpb25fZWFzZSBmcm9tIFwiLi9lYXNlXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9maWx0ZXIgZnJvbSBcIi4vZmlsdGVyXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9tZXJnZSBmcm9tIFwiLi9tZXJnZVwiO1xuaW1wb3J0IHRyYW5zaXRpb25fb24gZnJvbSBcIi4vb25cIjtcbmltcG9ydCB0cmFuc2l0aW9uX3JlbW92ZSBmcm9tIFwiLi9yZW1vdmVcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdCBmcm9tIFwiLi9zZWxlY3RcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdEFsbCBmcm9tIFwiLi9zZWxlY3RBbGxcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3NlbGVjdGlvbiBmcm9tIFwiLi9zZWxlY3Rpb25cIjtcbmltcG9ydCB0cmFuc2l0aW9uX3N0eWxlIGZyb20gXCIuL3N0eWxlXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zdHlsZVR3ZWVuIGZyb20gXCIuL3N0eWxlVHdlZW5cIjtcbmltcG9ydCB0cmFuc2l0aW9uX3RleHQgZnJvbSBcIi4vdGV4dFwiO1xuaW1wb3J0IHRyYW5zaXRpb25fdHJhbnNpdGlvbiBmcm9tIFwiLi90cmFuc2l0aW9uXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90d2VlbiBmcm9tIFwiLi90d2VlblwiO1xuXG52YXIgaWQgPSAwO1xuXG5leHBvcnQgZnVuY3Rpb24gVHJhbnNpdGlvbihncm91cHMsIHBhcmVudHMsIG5hbWUsIGlkKSB7XG4gIHRoaXMuX2dyb3VwcyA9IGdyb3VwcztcbiAgdGhpcy5fcGFyZW50cyA9IHBhcmVudHM7XG4gIHRoaXMuX25hbWUgPSBuYW1lO1xuICB0aGlzLl9pZCA9IGlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2l0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHNlbGVjdGlvbigpLnRyYW5zaXRpb24obmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdJZCgpIHtcbiAgcmV0dXJuICsraWQ7XG59XG5cbnZhciBzZWxlY3Rpb25fcHJvdG90eXBlID0gc2VsZWN0aW9uLnByb3RvdHlwZTtcblxuVHJhbnNpdGlvbi5wcm90b3R5cGUgPSB0cmFuc2l0aW9uLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zaXRpb24sXG4gIHNlbGVjdDogdHJhbnNpdGlvbl9zZWxlY3QsXG4gIHNlbGVjdEFsbDogdHJhbnNpdGlvbl9zZWxlY3RBbGwsXG4gIGZpbHRlcjogdHJhbnNpdGlvbl9maWx0ZXIsXG4gIG1lcmdlOiB0cmFuc2l0aW9uX21lcmdlLFxuICBzZWxlY3Rpb246IHRyYW5zaXRpb25fc2VsZWN0aW9uLFxuICB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uX3RyYW5zaXRpb24sXG4gIGNhbGw6IHNlbGVjdGlvbl9wcm90b3R5cGUuY2FsbCxcbiAgbm9kZXM6IHNlbGVjdGlvbl9wcm90b3R5cGUubm9kZXMsXG4gIG5vZGU6IHNlbGVjdGlvbl9wcm90b3R5cGUubm9kZSxcbiAgc2l6ZTogc2VsZWN0aW9uX3Byb3RvdHlwZS5zaXplLFxuICBlbXB0eTogc2VsZWN0aW9uX3Byb3RvdHlwZS5lbXB0eSxcbiAgZWFjaDogc2VsZWN0aW9uX3Byb3RvdHlwZS5lYWNoLFxuICBvbjogdHJhbnNpdGlvbl9vbixcbiAgYXR0cjogdHJhbnNpdGlvbl9hdHRyLFxuICBhdHRyVHdlZW46IHRyYW5zaXRpb25fYXR0clR3ZWVuLFxuICBzdHlsZTogdHJhbnNpdGlvbl9zdHlsZSxcbiAgc3R5bGVUd2VlbjogdHJhbnNpdGlvbl9zdHlsZVR3ZWVuLFxuICB0ZXh0OiB0cmFuc2l0aW9uX3RleHQsXG4gIHJlbW92ZTogdHJhbnNpdGlvbl9yZW1vdmUsXG4gIHR3ZWVuOiB0cmFuc2l0aW9uX3R3ZWVuLFxuICBkZWxheTogdHJhbnNpdGlvbl9kZWxheSxcbiAgZHVyYXRpb246IHRyYW5zaXRpb25fZHVyYXRpb24sXG4gIGVhc2U6IHRyYW5zaXRpb25fZWFzZVxufTtcbiIsImltcG9ydCB7Y29sb3J9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZU51bWJlciwgaW50ZXJwb2xhdGVSZ2IsIGludGVycG9sYXRlU3RyaW5nfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYztcbiAgcmV0dXJuICh0eXBlb2YgYiA9PT0gXCJudW1iZXJcIiA/IGludGVycG9sYXRlTnVtYmVyXG4gICAgICA6IGIgaW5zdGFuY2VvZiBjb2xvciA/IGludGVycG9sYXRlUmdiXG4gICAgICA6IChjID0gY29sb3IoYikpID8gKGIgPSBjLCBpbnRlcnBvbGF0ZVJnYilcbiAgICAgIDogaW50ZXJwb2xhdGVTdHJpbmcpKGEsIGIpO1xufVxuIiwiaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0cmFuc2l0aW9uKSB7XG4gIGlmICh0cmFuc2l0aW9uLl9pZCAhPT0gdGhpcy5faWQpIHRocm93IG5ldyBFcnJvcjtcblxuICBmb3IgKHZhciBncm91cHMwID0gdGhpcy5fZ3JvdXBzLCBncm91cHMxID0gdHJhbnNpdGlvbi5fZ3JvdXBzLCBtMCA9IGdyb3VwczAubGVuZ3RoLCBtMSA9IGdyb3VwczEubGVuZ3RoLCBtID0gTWF0aC5taW4obTAsIG0xKSwgbWVyZ2VzID0gbmV3IEFycmF5KG0wKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cDAgPSBncm91cHMwW2pdLCBncm91cDEgPSBncm91cHMxW2pdLCBuID0gZ3JvdXAwLmxlbmd0aCwgbWVyZ2UgPSBtZXJnZXNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwMFtpXSB8fCBncm91cDFbaV0pIHtcbiAgICAgICAgbWVyZ2VbaV0gPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAoOyBqIDwgbTA7ICsraikge1xuICAgIG1lcmdlc1tqXSA9IGdyb3VwczBbal07XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24obWVyZ2VzLCB0aGlzLl9wYXJlbnRzLCB0aGlzLl9uYW1lLCB0aGlzLl9pZCk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0LCBpbml0fSBmcm9tIFwiLi9zY2hlZHVsZVwiO1xuXG5mdW5jdGlvbiBzdGFydChuYW1lKSB7XG4gIHJldHVybiAobmFtZSArIFwiXCIpLnRyaW0oKS5zcGxpdCgvXnxcXHMrLykuZXZlcnkoZnVuY3Rpb24odCkge1xuICAgIHZhciBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSB0ID0gdC5zbGljZSgwLCBpKTtcbiAgICByZXR1cm4gIXQgfHwgdCA9PT0gXCJzdGFydFwiO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gb25GdW5jdGlvbihpZCwgbmFtZSwgbGlzdGVuZXIpIHtcbiAgdmFyIG9uMCwgb24xLCBzaXQgPSBzdGFydChuYW1lKSA/IGluaXQgOiBzZXQ7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzaXQodGhpcywgaWQpLFxuICAgICAgICBvbiA9IHNjaGVkdWxlLm9uO1xuXG4gICAgLy8gSWYgdGhpcyBub2RlIHNoYXJlZCBhIGRpc3BhdGNoIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIGRpc3BhdGNoIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmIChvbiAhPT0gb24wKSAob24xID0gKG9uMCA9IG9uKS5jb3B5KCkpLm9uKG5hbWUsIGxpc3RlbmVyKTtcblxuICAgIHNjaGVkdWxlLm9uID0gb24xO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCBsaXN0ZW5lcikge1xuICB2YXIgaWQgPSB0aGlzLl9pZDtcblxuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA8IDJcbiAgICAgID8gZ2V0KHRoaXMubm9kZSgpLCBpZCkub24ub24obmFtZSlcbiAgICAgIDogdGhpcy5lYWNoKG9uRnVuY3Rpb24oaWQsIG5hbWUsIGxpc3RlbmVyKSk7XG59XG4iLCJmdW5jdGlvbiByZW1vdmVGdW5jdGlvbihpZCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgICBmb3IgKHZhciBpIGluIHRoaXMuX190cmFuc2l0aW9uKSBpZiAoK2kgIT09IGlkKSByZXR1cm47XG4gICAgaWYgKHBhcmVudCkgcGFyZW50LnJlbW92ZUNoaWxkKHRoaXMpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMub24oXCJlbmQucmVtb3ZlXCIsIHJlbW92ZUZ1bmN0aW9uKHRoaXMuX2lkKSk7XG59XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7dGltZXIsIHRpbWVvdXR9IGZyb20gXCJkMy10aW1lclwiO1xuXG52YXIgZW1wdHlPbiA9IGRpc3BhdGNoKFwic3RhcnRcIiwgXCJlbmRcIiwgXCJpbnRlcnJ1cHRcIik7XG52YXIgZW1wdHlUd2VlbiA9IFtdO1xuXG5leHBvcnQgdmFyIENSRUFURUQgPSAwO1xuZXhwb3J0IHZhciBTQ0hFRFVMRUQgPSAxO1xuZXhwb3J0IHZhciBTVEFSVElORyA9IDI7XG5leHBvcnQgdmFyIFNUQVJURUQgPSAzO1xuZXhwb3J0IHZhciBSVU5OSU5HID0gNDtcbmV4cG9ydCB2YXIgRU5ESU5HID0gNTtcbmV4cG9ydCB2YXIgRU5ERUQgPSA2O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlLCBuYW1lLCBpZCwgaW5kZXgsIGdyb3VwLCB0aW1pbmcpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uO1xuICBpZiAoIXNjaGVkdWxlcykgbm9kZS5fX3RyYW5zaXRpb24gPSB7fTtcbiAgZWxzZSBpZiAoaWQgaW4gc2NoZWR1bGVzKSByZXR1cm47XG4gIGNyZWF0ZShub2RlLCBpZCwge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgaW5kZXg6IGluZGV4LCAvLyBGb3IgY29udGV4dCBkdXJpbmcgY2FsbGJhY2suXG4gICAgZ3JvdXA6IGdyb3VwLCAvLyBGb3IgY29udGV4dCBkdXJpbmcgY2FsbGJhY2suXG4gICAgb246IGVtcHR5T24sXG4gICAgdHdlZW46IGVtcHR5VHdlZW4sXG4gICAgdGltZTogdGltaW5nLnRpbWUsXG4gICAgZGVsYXk6IHRpbWluZy5kZWxheSxcbiAgICBkdXJhdGlvbjogdGltaW5nLmR1cmF0aW9uLFxuICAgIGVhc2U6IHRpbWluZy5lYXNlLFxuICAgIHRpbWVyOiBudWxsLFxuICAgIHN0YXRlOiBDUkVBVEVEXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdChub2RlLCBpZCkge1xuICB2YXIgc2NoZWR1bGUgPSBnZXQobm9kZSwgaWQpO1xuICBpZiAoc2NoZWR1bGUuc3RhdGUgPiBDUkVBVEVEKSB0aHJvdyBuZXcgRXJyb3IoXCJ0b28gbGF0ZTsgYWxyZWFkeSBzY2hlZHVsZWRcIik7XG4gIHJldHVybiBzY2hlZHVsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldChub2RlLCBpZCkge1xuICB2YXIgc2NoZWR1bGUgPSBnZXQobm9kZSwgaWQpO1xuICBpZiAoc2NoZWR1bGUuc3RhdGUgPiBTVEFSVElORykgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGU7IGFscmVhZHkgc3RhcnRlZFwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IG5vZGUuX190cmFuc2l0aW9uO1xuICBpZiAoIXNjaGVkdWxlIHx8ICEoc2NoZWR1bGUgPSBzY2hlZHVsZVtpZF0pKSB0aHJvdyBuZXcgRXJyb3IoXCJ0cmFuc2l0aW9uIG5vdCBmb3VuZFwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGUobm9kZSwgaWQsIHNlbGYpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgdHdlZW47XG5cbiAgLy8gSW5pdGlhbGl6ZSB0aGUgc2VsZiB0aW1lciB3aGVuIHRoZSB0cmFuc2l0aW9uIGlzIGNyZWF0ZWQuXG4gIC8vIE5vdGUgdGhlIGFjdHVhbCBkZWxheSBpcyBub3Qga25vd24gdW50aWwgdGhlIGZpcnN0IGNhbGxiYWNrIVxuICBzY2hlZHVsZXNbaWRdID0gc2VsZjtcbiAgc2VsZi50aW1lciA9IHRpbWVyKHNjaGVkdWxlLCAwLCBzZWxmLnRpbWUpO1xuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlKGVsYXBzZWQpIHtcbiAgICBzZWxmLnN0YXRlID0gU0NIRURVTEVEO1xuICAgIHNlbGYudGltZXIucmVzdGFydChzdGFydCwgc2VsZi5kZWxheSwgc2VsZi50aW1lKTtcblxuICAgIC8vIElmIHRoZSBlbGFwc2VkIGRlbGF5IGlzIGxlc3MgdGhhbiBvdXIgZmlyc3Qgc2xlZXAsIHN0YXJ0IGltbWVkaWF0ZWx5LlxuICAgIGlmIChzZWxmLmRlbGF5IDw9IGVsYXBzZWQpIHN0YXJ0KGVsYXBzZWQgLSBzZWxmLmRlbGF5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0KGVsYXBzZWQpIHtcbiAgICB2YXIgaSwgaiwgbiwgbztcblxuICAgIC8vIElmIHRoZSBzdGF0ZSBpcyBub3QgU0NIRURVTEVELCB0aGVuIHdlIHByZXZpb3VzbHkgZXJyb3JlZCBvbiBzdGFydC5cbiAgICBpZiAoc2VsZi5zdGF0ZSAhPT0gU0NIRURVTEVEKSByZXR1cm4gc3RvcCgpO1xuXG4gICAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgICAgbyA9IHNjaGVkdWxlc1tpXTtcbiAgICAgIGlmIChvLm5hbWUgIT09IHNlbGYubmFtZSkgY29udGludWU7XG5cbiAgICAgIC8vIFdoaWxlIHRoaXMgZWxlbWVudCBhbHJlYWR5IGhhcyBhIHN0YXJ0aW5nIHRyYW5zaXRpb24gZHVyaW5nIHRoaXMgZnJhbWUsXG4gICAgICAvLyBkZWZlciBzdGFydGluZyBhbiBpbnRlcnJ1cHRpbmcgdHJhbnNpdGlvbiB1bnRpbCB0aGF0IHRyYW5zaXRpb24gaGFzIGFcbiAgICAgIC8vIGNoYW5jZSB0byB0aWNrIChhbmQgcG9zc2libHkgZW5kKTsgc2VlIGQzL2QzLXRyYW5zaXRpb24jNTQhXG4gICAgICBpZiAoby5zdGF0ZSA9PT0gU1RBUlRFRCkgcmV0dXJuIHRpbWVvdXQoc3RhcnQpO1xuXG4gICAgICAvLyBJbnRlcnJ1cHQgdGhlIGFjdGl2ZSB0cmFuc2l0aW9uLCBpZiBhbnkuXG4gICAgICAvLyBEaXNwYXRjaCB0aGUgaW50ZXJydXB0IGV2ZW50LlxuICAgICAgaWYgKG8uc3RhdGUgPT09IFJVTk5JTkcpIHtcbiAgICAgICAgby5zdGF0ZSA9IEVOREVEO1xuICAgICAgICBvLnRpbWVyLnN0b3AoKTtcbiAgICAgICAgby5vbi5jYWxsKFwiaW50ZXJydXB0XCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIG8uaW5kZXgsIG8uZ3JvdXApO1xuICAgICAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICAgICAgfVxuXG4gICAgICAvLyBDYW5jZWwgYW55IHByZS1lbXB0ZWQgdHJhbnNpdGlvbnMuIE5vIGludGVycnVwdCBldmVudCBpcyBkaXNwYXRjaGVkXG4gICAgICAvLyBiZWNhdXNlIHRoZSBjYW5jZWxsZWQgdHJhbnNpdGlvbnMgbmV2ZXIgc3RhcnRlZC4gTm90ZSB0aGF0IHRoaXMgYWxzb1xuICAgICAgLy8gcmVtb3ZlcyB0aGlzIHRyYW5zaXRpb24gZnJvbSB0aGUgcGVuZGluZyBsaXN0IVxuICAgICAgZWxzZSBpZiAoK2kgPCBpZCkge1xuICAgICAgICBvLnN0YXRlID0gRU5ERUQ7XG4gICAgICAgIG8udGltZXIuc3RvcCgpO1xuICAgICAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIERlZmVyIHRoZSBmaXJzdCB0aWNrIHRvIGVuZCBvZiB0aGUgY3VycmVudCBmcmFtZTsgc2VlIGQzL2QzIzE1NzYuXG4gICAgLy8gTm90ZSB0aGUgdHJhbnNpdGlvbiBtYXkgYmUgY2FuY2VsZWQgYWZ0ZXIgc3RhcnQgYW5kIGJlZm9yZSB0aGUgZmlyc3QgdGljayFcbiAgICAvLyBOb3RlIHRoaXMgbXVzdCBiZSBzY2hlZHVsZWQgYmVmb3JlIHRoZSBzdGFydCBldmVudDsgc2VlIGQzL2QzLXRyYW5zaXRpb24jMTYhXG4gICAgLy8gQXNzdW1pbmcgdGhpcyBpcyBzdWNjZXNzZnVsLCBzdWJzZXF1ZW50IGNhbGxiYWNrcyBnbyBzdHJhaWdodCB0byB0aWNrLlxuICAgIHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gU1RBUlRFRCkge1xuICAgICAgICBzZWxmLnN0YXRlID0gUlVOTklORztcbiAgICAgICAgc2VsZi50aW1lci5yZXN0YXJ0KHRpY2ssIHNlbGYuZGVsYXksIHNlbGYudGltZSk7XG4gICAgICAgIHRpY2soZWxhcHNlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgc3RhcnQgZXZlbnQuXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHR3ZWVuIGFyZSBpbml0aWFsaXplZC5cbiAgICBzZWxmLnN0YXRlID0gU1RBUlRJTkc7XG4gICAgc2VsZi5vbi5jYWxsKFwic3RhcnRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCk7XG4gICAgaWYgKHNlbGYuc3RhdGUgIT09IFNUQVJUSU5HKSByZXR1cm47IC8vIGludGVycnVwdGVkXG4gICAgc2VsZi5zdGF0ZSA9IFNUQVJURUQ7XG5cbiAgICAvLyBJbml0aWFsaXplIHRoZSB0d2VlbiwgZGVsZXRpbmcgbnVsbCB0d2Vlbi5cbiAgICB0d2VlbiA9IG5ldyBBcnJheShuID0gc2VsZi50d2Vlbi5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDAsIGogPSAtMTsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG8gPSBzZWxmLnR3ZWVuW2ldLnZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCkpIHtcbiAgICAgICAgdHdlZW5bKytqXSA9IG87XG4gICAgICB9XG4gICAgfVxuICAgIHR3ZWVuLmxlbmd0aCA9IGogKyAxO1xuICB9XG5cbiAgZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgdmFyIHQgPSBlbGFwc2VkIDwgc2VsZi5kdXJhdGlvbiA/IHNlbGYuZWFzZS5jYWxsKG51bGwsIGVsYXBzZWQgLyBzZWxmLmR1cmF0aW9uKSA6IChzZWxmLnRpbWVyLnJlc3RhcnQoc3RvcCksIHNlbGYuc3RhdGUgPSBFTkRJTkcsIDEpLFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSB0d2Vlbi5sZW5ndGg7XG5cbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgdHdlZW5baV0uY2FsbChudWxsLCB0KTtcbiAgICB9XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgZW5kIGV2ZW50LlxuICAgIGlmIChzZWxmLnN0YXRlID09PSBFTkRJTkcpIHtcbiAgICAgIHNlbGYub24uY2FsbChcImVuZFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBzZWxmLmluZGV4LCBzZWxmLmdyb3VwKTtcbiAgICAgIHN0b3AoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHNlbGYuc3RhdGUgPSBFTkRFRDtcbiAgICBzZWxmLnRpbWVyLnN0b3AoKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2lkXTtcbiAgICBmb3IgKHZhciBpIGluIHNjaGVkdWxlcykgcmV0dXJuOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgZGVsZXRlIG5vZGUuX190cmFuc2l0aW9uO1xuICB9XG59XG4iLCJpbXBvcnQge3NlbGVjdG9yfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZCA9IHRoaXMuX2lkO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gbmV3IEFycmF5KG0pLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBzdWJncm91cCA9IHN1Ymdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgc3Vibm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiAoc3Vibm9kZSA9IHNlbGVjdC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkpIHtcbiAgICAgICAgaWYgKFwiX19kYXRhX19cIiBpbiBub2RlKSBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgc3ViZ3JvdXBbaV0gPSBzdWJub2RlO1xuICAgICAgICBzY2hlZHVsZShzdWJncm91cFtpXSwgbmFtZSwgaWQsIGksIHN1Ymdyb3VwLCBnZXQobm9kZSwgaWQpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZCk7XG59XG4iLCJpbXBvcnQge3NlbGVjdG9yQWxsfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZCA9IHRoaXMuX2lkO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IHNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgZm9yICh2YXIgY2hpbGRyZW4gPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCksIGNoaWxkLCBpbmhlcml0ID0gZ2V0KG5vZGUsIGlkKSwgayA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGsgPCBsOyArK2spIHtcbiAgICAgICAgICBpZiAoY2hpbGQgPSBjaGlsZHJlbltrXSkge1xuICAgICAgICAgICAgc2NoZWR1bGUoY2hpbGQsIG5hbWUsIGlkLCBrLCBjaGlsZHJlbiwgaW5oZXJpdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1Ymdyb3Vwcy5wdXNoKGNoaWxkcmVuKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHBhcmVudHMsIG5hbWUsIGlkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbnZhciBTZWxlY3Rpb24gPSBzZWxlY3Rpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImltcG9ydCB7aW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgYXMgaW50ZXJwb2xhdGVUcmFuc2Zvcm19IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtzdHlsZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2VlblwiO1xuaW1wb3J0IGludGVycG9sYXRlIGZyb20gXCIuL2ludGVycG9sYXRlXCI7XG5cbmZ1bmN0aW9uIHN0eWxlUmVtb3ZlKG5hbWUsIGludGVycG9sYXRlKSB7XG4gIHZhciB2YWx1ZTAwLFxuICAgICAgdmFsdWUxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZTAgPSBzdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgdmFsdWUxID0gKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSksIHN0eWxlKHRoaXMsIG5hbWUpKTtcbiAgICByZXR1cm4gdmFsdWUwID09PSB2YWx1ZTEgPyBudWxsXG4gICAgICAgIDogdmFsdWUwID09PSB2YWx1ZTAwICYmIHZhbHVlMSA9PT0gdmFsdWUxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHZhbHVlMDAgPSB2YWx1ZTAsIHZhbHVlMTAgPSB2YWx1ZTEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZUVuZChuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZTEpIHtcbiAgdmFyIHZhbHVlMDAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUwID0gc3R5bGUodGhpcywgbmFtZSk7XG4gICAgcmV0dXJuIHZhbHVlMCA9PT0gdmFsdWUxID8gbnVsbFxuICAgICAgICA6IHZhbHVlMCA9PT0gdmFsdWUwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlKHZhbHVlMDAgPSB2YWx1ZTAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciB2YWx1ZTAwLFxuICAgICAgdmFsdWUxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZTAgPSBzdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgdmFsdWUxID0gdmFsdWUodGhpcyk7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSB2YWx1ZTEgPSAodGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKSwgc3R5bGUodGhpcywgbmFtZSkpO1xuICAgIHJldHVybiB2YWx1ZTAgPT09IHZhbHVlMSA/IG51bGxcbiAgICAgICAgOiB2YWx1ZTAgPT09IHZhbHVlMDAgJiYgdmFsdWUxID09PSB2YWx1ZTEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUodmFsdWUwMCA9IHZhbHVlMCwgdmFsdWUxMCA9IHZhbHVlMSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIgaSA9IChuYW1lICs9IFwiXCIpID09PSBcInRyYW5zZm9ybVwiID8gaW50ZXJwb2xhdGVUcmFuc2Zvcm0gOiBpbnRlcnBvbGF0ZTtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyB0aGlzXG4gICAgICAgICAgLnN0eWxlVHdlZW4obmFtZSwgc3R5bGVSZW1vdmUobmFtZSwgaSkpXG4gICAgICAgICAgLm9uKFwiZW5kLnN0eWxlLlwiICsgbmFtZSwgc3R5bGVSZW1vdmVFbmQobmFtZSkpXG4gICAgICA6IHRoaXMuc3R5bGVUd2VlbihuYW1lLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gc3R5bGVGdW5jdGlvbihuYW1lLCBpLCB0d2VlblZhbHVlKHRoaXMsIFwic3R5bGUuXCIgKyBuYW1lLCB2YWx1ZSkpXG4gICAgICAgICAgOiBzdHlsZUNvbnN0YW50KG5hbWUsIGksIHZhbHVlICsgXCJcIiksIHByaW9yaXR5KTtcbn1cbiIsImZ1bmN0aW9uIHN0eWxlVHdlZW4obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBub2RlID0gdGhpcywgaSA9IHZhbHVlLmFwcGx5KG5vZGUsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIGkgJiYgZnVuY3Rpb24odCkge1xuICAgICAgbm9kZS5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBpKHQpLCBwcmlvcml0eSk7XG4gICAgfTtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgdmFyIGtleSA9IFwic3R5bGUuXCIgKyAobmFtZSArPSBcIlwiKTtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gKGtleSA9IHRoaXMudHdlZW4oa2V5KSkgJiYga2V5Ll92YWx1ZTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgbnVsbCk7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gdGhpcy50d2VlbihrZXksIHN0eWxlVHdlZW4obmFtZSwgdmFsdWUsIHByaW9yaXR5ID09IG51bGwgPyBcIlwiIDogcHJpb3JpdHkpKTtcbn1cbiIsImltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW5cIjtcblxuZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMSA9IHZhbHVlKHRoaXMpO1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTEgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZTE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLnR3ZWVuKFwidGV4dFwiLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyB0ZXh0RnVuY3Rpb24odHdlZW5WYWx1ZSh0aGlzLCBcInRleHRcIiwgdmFsdWUpKVxuICAgICAgOiB0ZXh0Q29uc3RhbnQodmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCIpKTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbiwgbmV3SWR9IGZyb20gXCIuL2luZGV4XCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZDAgPSB0aGlzLl9pZCxcbiAgICAgIGlkMSA9IG5ld0lkKCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgdmFyIGluaGVyaXQgPSBnZXQobm9kZSwgaWQwKTtcbiAgICAgICAgc2NoZWR1bGUobm9kZSwgbmFtZSwgaWQxLCBpLCBncm91cCwge1xuICAgICAgICAgIHRpbWU6IGluaGVyaXQudGltZSArIGluaGVyaXQuZGVsYXkgKyBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGRlbGF5OiAwLFxuICAgICAgICAgIGR1cmF0aW9uOiBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGVhc2U6IGluaGVyaXQuZWFzZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZDEpO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGVcIjtcblxuZnVuY3Rpb24gdHdlZW5SZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9IHR3ZWVuMCA9IHR3ZWVuO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMSA9IHR3ZWVuMS5zbGljZSgpO1xuICAgICAgICAgIHR3ZWVuMS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdHdlZW5GdW5jdGlvbihpZCwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIHR3ZWVuID0gc2NoZWR1bGUudHdlZW47XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIHR3ZWVuIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIHR3ZWVuIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmICh0d2VlbiAhPT0gdHdlZW4wKSB7XG4gICAgICB0d2VlbjEgPSAodHdlZW4wID0gdHdlZW4pLnNsaWNlKCk7XG4gICAgICBmb3IgKHZhciB0ID0ge25hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZX0sIGkgPSAwLCBuID0gdHdlZW4xLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAodHdlZW4xW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICB0d2VlbjFbaV0gPSB0O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaSA9PT0gbikgdHdlZW4xLnB1c2godCk7XG4gICAgfVxuXG4gICAgc2NoZWR1bGUudHdlZW4gPSB0d2VlbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIG5hbWUgKz0gXCJcIjtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgdHdlZW4gPSBnZXQodGhpcy5ub2RlKCksIGlkKS50d2VlbjtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHR3ZWVuLmxlbmd0aCwgdDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKCh0ID0gdHdlZW5baV0pLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbCA/IHR3ZWVuUmVtb3ZlIDogdHdlZW5GdW5jdGlvbikoaWQsIG5hbWUsIHZhbHVlKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0d2VlblZhbHVlKHRyYW5zaXRpb24sIG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRyYW5zaXRpb24uX2lkO1xuXG4gIHRyYW5zaXRpb24uZWFjaChmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpO1xuICAgIChzY2hlZHVsZS52YWx1ZSB8fCAoc2NoZWR1bGUudmFsdWUgPSB7fSkpW25hbWVdID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICByZXR1cm4gZ2V0KG5vZGUsIGlkKS52YWx1ZVtuYW1lXTtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gWm9vbUV2ZW50KHRhcmdldCwgdHlwZSwgdHJhbnNmb3JtKSB7XG4gIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICB0aGlzLnR5cGUgPSB0eXBlO1xuICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyB6b29tfSBmcm9tIFwiLi96b29tXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgem9vbVRyYW5zZm9ybSwgaWRlbnRpdHkgYXMgem9vbUlkZW50aXR5fSBmcm9tIFwiLi90cmFuc2Zvcm1cIjtcbiIsImltcG9ydCB7ZXZlbnR9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oKSB7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gVHJhbnNmb3JtKGssIHgsIHkpIHtcbiAgdGhpcy5rID0gaztcbiAgdGhpcy54ID0geDtcbiAgdGhpcy55ID0geTtcbn1cblxuVHJhbnNmb3JtLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zZm9ybSxcbiAgc2NhbGU6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gayA9PT0gMSA/IHRoaXMgOiBuZXcgVHJhbnNmb3JtKHRoaXMuayAqIGssIHRoaXMueCwgdGhpcy55KTtcbiAgfSxcbiAgdHJhbnNsYXRlOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIHggPT09IDAgJiB5ID09PSAwID8gdGhpcyA6IG5ldyBUcmFuc2Zvcm0odGhpcy5rLCB0aGlzLnggKyB0aGlzLmsgKiB4LCB0aGlzLnkgKyB0aGlzLmsgKiB5KTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIFtwb2ludFswXSAqIHRoaXMuayArIHRoaXMueCwgcG9pbnRbMV0gKiB0aGlzLmsgKyB0aGlzLnldO1xuICB9LFxuICBhcHBseVg6IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geCAqIHRoaXMuayArIHRoaXMueDtcbiAgfSxcbiAgYXBwbHlZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkgKiB0aGlzLmsgKyB0aGlzLnk7XG4gIH0sXG4gIGludmVydDogZnVuY3Rpb24obG9jYXRpb24pIHtcbiAgICByZXR1cm4gWyhsb2NhdGlvblswXSAtIHRoaXMueCkgLyB0aGlzLmssIChsb2NhdGlvblsxXSAtIHRoaXMueSkgLyB0aGlzLmtdO1xuICB9LFxuICBpbnZlcnRYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuICh4IC0gdGhpcy54KSAvIHRoaXMuaztcbiAgfSxcbiAgaW52ZXJ0WTogZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiAoeSAtIHRoaXMueSkgLyB0aGlzLms7XG4gIH0sXG4gIHJlc2NhbGVYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHguY29weSgpLmRvbWFpbih4LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCwgdGhpcykubWFwKHguaW52ZXJ0LCB4KSk7XG4gIH0sXG4gIHJlc2NhbGVZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkuY29weSgpLmRvbWFpbih5LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WSwgdGhpcykubWFwKHkuaW52ZXJ0LCB5KSk7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLnggKyBcIixcIiArIHRoaXMueSArIFwiKSBzY2FsZShcIiArIHRoaXMuayArIFwiKVwiO1xuICB9XG59O1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0gbmV3IFRyYW5zZm9ybSgxLCAwLCAwKTtcblxudHJhbnNmb3JtLnByb3RvdHlwZSA9IFRyYW5zZm9ybS5wcm90b3R5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybShub2RlKSB7XG4gIHJldHVybiBub2RlLl9fem9vbSB8fCBpZGVudGl0eTtcbn1cbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHtkcmFnRGlzYWJsZSwgZHJhZ0VuYWJsZX0gZnJvbSBcImQzLWRyYWdcIjtcbmltcG9ydCB7aW50ZXJwb2xhdGVab29tfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7ZXZlbnQsIGN1c3RvbUV2ZW50LCBzZWxlY3QsIG1vdXNlLCB0b3VjaH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtpbnRlcnJ1cHR9IGZyb20gXCJkMy10cmFuc2l0aW9uXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnRcIjtcbmltcG9ydCBab29tRXZlbnQgZnJvbSBcIi4vZXZlbnRcIjtcbmltcG9ydCB7VHJhbnNmb3JtLCBpZGVudGl0eX0gZnJvbSBcIi4vdHJhbnNmb3JtXCI7XG5pbXBvcnQgbm9ldmVudCwge25vcHJvcGFnYXRpb259IGZyb20gXCIuL25vZXZlbnRcIjtcblxuLy8gSWdub3JlIHJpZ2h0LWNsaWNrLCBzaW5jZSB0aGF0IHNob3VsZCBvcGVuIHRoZSBjb250ZXh0IG1lbnUuXG5mdW5jdGlvbiBkZWZhdWx0RmlsdGVyKCkge1xuICByZXR1cm4gIWV2ZW50LmJ1dHRvbjtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEV4dGVudCgpIHtcbiAgdmFyIGUgPSB0aGlzLCB3LCBoO1xuICBpZiAoZSBpbnN0YW5jZW9mIFNWR0VsZW1lbnQpIHtcbiAgICBlID0gZS5vd25lclNWR0VsZW1lbnQgfHwgZTtcbiAgICB3ID0gZS53aWR0aC5iYXNlVmFsLnZhbHVlO1xuICAgIGggPSBlLmhlaWdodC5iYXNlVmFsLnZhbHVlO1xuICB9IGVsc2Uge1xuICAgIHcgPSBlLmNsaWVudFdpZHRoO1xuICAgIGggPSBlLmNsaWVudEhlaWdodDtcbiAgfVxuICByZXR1cm4gW1swLCAwXSwgW3csIGhdXTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFRyYW5zZm9ybSgpIHtcbiAgcmV0dXJuIHRoaXMuX196b29tIHx8IGlkZW50aXR5O1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0V2hlZWxEZWx0YSgpIHtcbiAgcmV0dXJuIC1ldmVudC5kZWx0YVkgKiAoZXZlbnQuZGVsdGFNb2RlID8gMTIwIDogMSkgLyA1MDA7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUb3VjaGFibGUoKSB7XG4gIHJldHVybiBcIm9udG91Y2hzdGFydFwiIGluIHRoaXM7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRDb25zdHJhaW4odHJhbnNmb3JtLCBleHRlbnQsIHRyYW5zbGF0ZUV4dGVudCkge1xuICB2YXIgZHgwID0gdHJhbnNmb3JtLmludmVydFgoZXh0ZW50WzBdWzBdKSAtIHRyYW5zbGF0ZUV4dGVudFswXVswXSxcbiAgICAgIGR4MSA9IHRyYW5zZm9ybS5pbnZlcnRYKGV4dGVudFsxXVswXSkgLSB0cmFuc2xhdGVFeHRlbnRbMV1bMF0sXG4gICAgICBkeTAgPSB0cmFuc2Zvcm0uaW52ZXJ0WShleHRlbnRbMF1bMV0pIC0gdHJhbnNsYXRlRXh0ZW50WzBdWzFdLFxuICAgICAgZHkxID0gdHJhbnNmb3JtLmludmVydFkoZXh0ZW50WzFdWzFdKSAtIHRyYW5zbGF0ZUV4dGVudFsxXVsxXTtcbiAgcmV0dXJuIHRyYW5zZm9ybS50cmFuc2xhdGUoXG4gICAgZHgxID4gZHgwID8gKGR4MCArIGR4MSkgLyAyIDogTWF0aC5taW4oMCwgZHgwKSB8fCBNYXRoLm1heCgwLCBkeDEpLFxuICAgIGR5MSA+IGR5MCA/IChkeTAgKyBkeTEpIC8gMiA6IE1hdGgubWluKDAsIGR5MCkgfHwgTWF0aC5tYXgoMCwgZHkxKVxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGZpbHRlciA9IGRlZmF1bHRGaWx0ZXIsXG4gICAgICBleHRlbnQgPSBkZWZhdWx0RXh0ZW50LFxuICAgICAgY29uc3RyYWluID0gZGVmYXVsdENvbnN0cmFpbixcbiAgICAgIHdoZWVsRGVsdGEgPSBkZWZhdWx0V2hlZWxEZWx0YSxcbiAgICAgIHRvdWNoYWJsZSA9IGRlZmF1bHRUb3VjaGFibGUsXG4gICAgICBzY2FsZUV4dGVudCA9IFswLCBJbmZpbml0eV0sXG4gICAgICB0cmFuc2xhdGVFeHRlbnQgPSBbWy1JbmZpbml0eSwgLUluZmluaXR5XSwgW0luZmluaXR5LCBJbmZpbml0eV1dLFxuICAgICAgZHVyYXRpb24gPSAyNTAsXG4gICAgICBpbnRlcnBvbGF0ZSA9IGludGVycG9sYXRlWm9vbSxcbiAgICAgIGdlc3R1cmVzID0gW10sXG4gICAgICBsaXN0ZW5lcnMgPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiem9vbVwiLCBcImVuZFwiKSxcbiAgICAgIHRvdWNoc3RhcnRpbmcsXG4gICAgICB0b3VjaGVuZGluZyxcbiAgICAgIHRvdWNoRGVsYXkgPSA1MDAsXG4gICAgICB3aGVlbERlbGF5ID0gMTUwLFxuICAgICAgY2xpY2tEaXN0YW5jZTIgPSAwO1xuXG4gIGZ1bmN0aW9uIHpvb20oc2VsZWN0aW9uKSB7XG4gICAgc2VsZWN0aW9uXG4gICAgICAgIC5wcm9wZXJ0eShcIl9fem9vbVwiLCBkZWZhdWx0VHJhbnNmb3JtKVxuICAgICAgICAub24oXCJ3aGVlbC56b29tXCIsIHdoZWVsZWQpXG4gICAgICAgIC5vbihcIm1vdXNlZG93bi56b29tXCIsIG1vdXNlZG93bmVkKVxuICAgICAgICAub24oXCJkYmxjbGljay56b29tXCIsIGRibGNsaWNrZWQpXG4gICAgICAuZmlsdGVyKHRvdWNoYWJsZSlcbiAgICAgICAgLm9uKFwidG91Y2hzdGFydC56b29tXCIsIHRvdWNoc3RhcnRlZClcbiAgICAgICAgLm9uKFwidG91Y2htb3ZlLnpvb21cIiwgdG91Y2htb3ZlZClcbiAgICAgICAgLm9uKFwidG91Y2hlbmQuem9vbSB0b3VjaGNhbmNlbC56b29tXCIsIHRvdWNoZW5kZWQpXG4gICAgICAgIC5zdHlsZShcInRvdWNoLWFjdGlvblwiLCBcIm5vbmVcIilcbiAgICAgICAgLnN0eWxlKFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsIFwicmdiYSgwLDAsMCwwKVwiKTtcbiAgfVxuXG4gIHpvb20udHJhbnNmb3JtID0gZnVuY3Rpb24oY29sbGVjdGlvbiwgdHJhbnNmb3JtKSB7XG4gICAgdmFyIHNlbGVjdGlvbiA9IGNvbGxlY3Rpb24uc2VsZWN0aW9uID8gY29sbGVjdGlvbi5zZWxlY3Rpb24oKSA6IGNvbGxlY3Rpb247XG4gICAgc2VsZWN0aW9uLnByb3BlcnR5KFwiX196b29tXCIsIGRlZmF1bHRUcmFuc2Zvcm0pO1xuICAgIGlmIChjb2xsZWN0aW9uICE9PSBzZWxlY3Rpb24pIHtcbiAgICAgIHNjaGVkdWxlKGNvbGxlY3Rpb24sIHRyYW5zZm9ybSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlbGVjdGlvbi5pbnRlcnJ1cHQoKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cylcbiAgICAgICAgICAgIC5zdGFydCgpXG4gICAgICAgICAgICAuem9vbShudWxsLCB0eXBlb2YgdHJhbnNmb3JtID09PSBcImZ1bmN0aW9uXCIgPyB0cmFuc2Zvcm0uYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHRyYW5zZm9ybSlcbiAgICAgICAgICAgIC5lbmQoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICB6b29tLnNjYWxlQnkgPSBmdW5jdGlvbihzZWxlY3Rpb24sIGspIHtcbiAgICB6b29tLnNjYWxlVG8oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBrMCA9IHRoaXMuX196b29tLmssXG4gICAgICAgICAgazEgPSB0eXBlb2YgayA9PT0gXCJmdW5jdGlvblwiID8gay5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogaztcbiAgICAgIHJldHVybiBrMCAqIGsxO1xuICAgIH0pO1xuICB9O1xuXG4gIHpvb20uc2NhbGVUbyA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgaykge1xuICAgIHpvb20udHJhbnNmb3JtKHNlbGVjdGlvbiwgZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZSA9IGV4dGVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICAgIHQwID0gdGhpcy5fX3pvb20sXG4gICAgICAgICAgcDAgPSBjZW50cm9pZChlKSxcbiAgICAgICAgICBwMSA9IHQwLmludmVydChwMCksXG4gICAgICAgICAgazEgPSB0eXBlb2YgayA9PT0gXCJmdW5jdGlvblwiID8gay5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogaztcbiAgICAgIHJldHVybiBjb25zdHJhaW4odHJhbnNsYXRlKHNjYWxlKHQwLCBrMSksIHAwLCBwMSksIGUsIHRyYW5zbGF0ZUV4dGVudCk7XG4gICAgfSk7XG4gIH07XG5cbiAgem9vbS50cmFuc2xhdGVCeSA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgeCwgeSkge1xuICAgIHpvb20udHJhbnNmb3JtKHNlbGVjdGlvbiwgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gY29uc3RyYWluKHRoaXMuX196b29tLnRyYW5zbGF0ZShcbiAgICAgICAgdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHguYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHgsXG4gICAgICAgIHR5cGVvZiB5ID09PSBcImZ1bmN0aW9uXCIgPyB5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiB5XG4gICAgICApLCBleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgdHJhbnNsYXRlRXh0ZW50KTtcbiAgICB9KTtcbiAgfTtcblxuICB6b29tLnRyYW5zbGF0ZVRvID0gZnVuY3Rpb24oc2VsZWN0aW9uLCB4LCB5KSB7XG4gICAgem9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBlID0gZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgICAgdCA9IHRoaXMuX196b29tLFxuICAgICAgICAgIHAgPSBjZW50cm9pZChlKTtcbiAgICAgIHJldHVybiBjb25zdHJhaW4oaWRlbnRpdHkudHJhbnNsYXRlKHBbMF0sIHBbMV0pLnNjYWxlKHQuaykudHJhbnNsYXRlKFxuICAgICAgICB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8gLXguYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC14LFxuICAgICAgICB0eXBlb2YgeSA9PT0gXCJmdW5jdGlvblwiID8gLXkuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC15XG4gICAgICApLCBlLCB0cmFuc2xhdGVFeHRlbnQpO1xuICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHRyYW5zZm9ybSwgaykge1xuICAgIGsgPSBNYXRoLm1heChzY2FsZUV4dGVudFswXSwgTWF0aC5taW4oc2NhbGVFeHRlbnRbMV0sIGspKTtcbiAgICByZXR1cm4gayA9PT0gdHJhbnNmb3JtLmsgPyB0cmFuc2Zvcm0gOiBuZXcgVHJhbnNmb3JtKGssIHRyYW5zZm9ybS54LCB0cmFuc2Zvcm0ueSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGUodHJhbnNmb3JtLCBwMCwgcDEpIHtcbiAgICB2YXIgeCA9IHAwWzBdIC0gcDFbMF0gKiB0cmFuc2Zvcm0uaywgeSA9IHAwWzFdIC0gcDFbMV0gKiB0cmFuc2Zvcm0uaztcbiAgICByZXR1cm4geCA9PT0gdHJhbnNmb3JtLnggJiYgeSA9PT0gdHJhbnNmb3JtLnkgPyB0cmFuc2Zvcm0gOiBuZXcgVHJhbnNmb3JtKHRyYW5zZm9ybS5rLCB4LCB5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNlbnRyb2lkKGV4dGVudCkge1xuICAgIHJldHVybiBbKCtleHRlbnRbMF1bMF0gKyArZXh0ZW50WzFdWzBdKSAvIDIsICgrZXh0ZW50WzBdWzFdICsgK2V4dGVudFsxXVsxXSkgLyAyXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjaGVkdWxlKHRyYW5zaXRpb24sIHRyYW5zZm9ybSwgY2VudGVyKSB7XG4gICAgdHJhbnNpdGlvblxuICAgICAgICAub24oXCJzdGFydC56b29tXCIsIGZ1bmN0aW9uKCkgeyBnZXN0dXJlKHRoaXMsIGFyZ3VtZW50cykuc3RhcnQoKTsgfSlcbiAgICAgICAgLm9uKFwiaW50ZXJydXB0Lnpvb20gZW5kLnpvb21cIiwgZnVuY3Rpb24oKSB7IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKS5lbmQoKTsgfSlcbiAgICAgICAgLnR3ZWVuKFwiem9vbVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgICAgICAgIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgICAgICAgIGcgPSBnZXN0dXJlKHRoYXQsIGFyZ3MpLFxuICAgICAgICAgICAgICBlID0gZXh0ZW50LmFwcGx5KHRoYXQsIGFyZ3MpLFxuICAgICAgICAgICAgICBwID0gY2VudGVyIHx8IGNlbnRyb2lkKGUpLFxuICAgICAgICAgICAgICB3ID0gTWF0aC5tYXgoZVsxXVswXSAtIGVbMF1bMF0sIGVbMV1bMV0gLSBlWzBdWzFdKSxcbiAgICAgICAgICAgICAgYSA9IHRoYXQuX196b29tLFxuICAgICAgICAgICAgICBiID0gdHlwZW9mIHRyYW5zZm9ybSA9PT0gXCJmdW5jdGlvblwiID8gdHJhbnNmb3JtLmFwcGx5KHRoYXQsIGFyZ3MpIDogdHJhbnNmb3JtLFxuICAgICAgICAgICAgICBpID0gaW50ZXJwb2xhdGUoYS5pbnZlcnQocCkuY29uY2F0KHcgLyBhLmspLCBiLmludmVydChwKS5jb25jYXQodyAvIGIuaykpO1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICBpZiAodCA9PT0gMSkgdCA9IGI7IC8vIEF2b2lkIHJvdW5kaW5nIGVycm9yIG9uIGVuZC5cbiAgICAgICAgICAgIGVsc2UgeyB2YXIgbCA9IGkodCksIGsgPSB3IC8gbFsyXTsgdCA9IG5ldyBUcmFuc2Zvcm0oaywgcFswXSAtIGxbMF0gKiBrLCBwWzFdIC0gbFsxXSAqIGspOyB9XG4gICAgICAgICAgICBnLnpvb20obnVsbCwgdCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXN0dXJlKHRoYXQsIGFyZ3MpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGdlc3R1cmVzLmxlbmd0aCwgZzsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChnID0gZ2VzdHVyZXNbaV0pLnRoYXQgPT09IHRoYXQpIHtcbiAgICAgICAgcmV0dXJuIGc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgR2VzdHVyZSh0aGF0LCBhcmdzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEdlc3R1cmUodGhhdCwgYXJncykge1xuICAgIHRoaXMudGhhdCA9IHRoYXQ7XG4gICAgdGhpcy5hcmdzID0gYXJncztcbiAgICB0aGlzLmluZGV4ID0gLTE7XG4gICAgdGhpcy5hY3RpdmUgPSAwO1xuICAgIHRoaXMuZXh0ZW50ID0gZXh0ZW50LmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9XG5cbiAgR2VzdHVyZS5wcm90b3R5cGUgPSB7XG4gICAgc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCsrdGhpcy5hY3RpdmUgPT09IDEpIHtcbiAgICAgICAgdGhpcy5pbmRleCA9IGdlc3R1cmVzLnB1c2godGhpcykgLSAxO1xuICAgICAgICB0aGlzLmVtaXQoXCJzdGFydFwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgem9vbTogZnVuY3Rpb24oa2V5LCB0cmFuc2Zvcm0pIHtcbiAgICAgIGlmICh0aGlzLm1vdXNlICYmIGtleSAhPT0gXCJtb3VzZVwiKSB0aGlzLm1vdXNlWzFdID0gdHJhbnNmb3JtLmludmVydCh0aGlzLm1vdXNlWzBdKTtcbiAgICAgIGlmICh0aGlzLnRvdWNoMCAmJiBrZXkgIT09IFwidG91Y2hcIikgdGhpcy50b3VjaDBbMV0gPSB0cmFuc2Zvcm0uaW52ZXJ0KHRoaXMudG91Y2gwWzBdKTtcbiAgICAgIGlmICh0aGlzLnRvdWNoMSAmJiBrZXkgIT09IFwidG91Y2hcIikgdGhpcy50b3VjaDFbMV0gPSB0cmFuc2Zvcm0uaW52ZXJ0KHRoaXMudG91Y2gxWzBdKTtcbiAgICAgIHRoaXMudGhhdC5fX3pvb20gPSB0cmFuc2Zvcm07XG4gICAgICB0aGlzLmVtaXQoXCJ6b29tXCIpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBlbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKC0tdGhpcy5hY3RpdmUgPT09IDApIHtcbiAgICAgICAgZ2VzdHVyZXMuc3BsaWNlKHRoaXMuaW5kZXgsIDEpO1xuICAgICAgICB0aGlzLmluZGV4ID0gLTE7XG4gICAgICAgIHRoaXMuZW1pdChcImVuZFwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgZW1pdDogZnVuY3Rpb24odHlwZSkge1xuICAgICAgY3VzdG9tRXZlbnQobmV3IFpvb21FdmVudCh6b29tLCB0eXBlLCB0aGlzLnRoYXQuX196b29tKSwgbGlzdGVuZXJzLmFwcGx5LCBsaXN0ZW5lcnMsIFt0eXBlLCB0aGlzLnRoYXQsIHRoaXMuYXJnc10pO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiB3aGVlbGVkKCkge1xuICAgIGlmICghZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdCA9IHRoaXMuX196b29tLFxuICAgICAgICBrID0gTWF0aC5tYXgoc2NhbGVFeHRlbnRbMF0sIE1hdGgubWluKHNjYWxlRXh0ZW50WzFdLCB0LmsgKiBNYXRoLnBvdygyLCB3aGVlbERlbHRhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpKSksXG4gICAgICAgIHAgPSBtb3VzZSh0aGlzKTtcblxuICAgIC8vIElmIHRoZSBtb3VzZSBpcyBpbiB0aGUgc2FtZSBsb2NhdGlvbiBhcyBiZWZvcmUsIHJldXNlIGl0LlxuICAgIC8vIElmIHRoZXJlIHdlcmUgcmVjZW50IHdoZWVsIGV2ZW50cywgcmVzZXQgdGhlIHdoZWVsIGlkbGUgdGltZW91dC5cbiAgICBpZiAoZy53aGVlbCkge1xuICAgICAgaWYgKGcubW91c2VbMF1bMF0gIT09IHBbMF0gfHwgZy5tb3VzZVswXVsxXSAhPT0gcFsxXSkge1xuICAgICAgICBnLm1vdXNlWzFdID0gdC5pbnZlcnQoZy5tb3VzZVswXSA9IHApO1xuICAgICAgfVxuICAgICAgY2xlYXJUaW1lb3V0KGcud2hlZWwpO1xuICAgIH1cblxuICAgIC8vIElmIHRoaXMgd2hlZWwgZXZlbnQgd29u4oCZdCB0cmlnZ2VyIGEgdHJhbnNmb3JtIGNoYW5nZSwgaWdub3JlIGl0LlxuICAgIGVsc2UgaWYgKHQuayA9PT0gaykgcmV0dXJuO1xuXG4gICAgLy8gT3RoZXJ3aXNlLCBjYXB0dXJlIHRoZSBtb3VzZSBwb2ludCBhbmQgbG9jYXRpb24gYXQgdGhlIHN0YXJ0LlxuICAgIGVsc2Uge1xuICAgICAgZy5tb3VzZSA9IFtwLCB0LmludmVydChwKV07XG4gICAgICBpbnRlcnJ1cHQodGhpcyk7XG4gICAgICBnLnN0YXJ0KCk7XG4gICAgfVxuXG4gICAgbm9ldmVudCgpO1xuICAgIGcud2hlZWwgPSBzZXRUaW1lb3V0KHdoZWVsaWRsZWQsIHdoZWVsRGVsYXkpO1xuICAgIGcuem9vbShcIm1vdXNlXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUoc2NhbGUodCwgayksIGcubW91c2VbMF0sIGcubW91c2VbMV0pLCBnLmV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSk7XG5cbiAgICBmdW5jdGlvbiB3aGVlbGlkbGVkKCkge1xuICAgICAgZy53aGVlbCA9IG51bGw7XG4gICAgICBnLmVuZCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdXNlZG93bmVkKCkge1xuICAgIGlmICh0b3VjaGVuZGluZyB8fCAhZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdiA9IHNlbGVjdChldmVudC52aWV3KS5vbihcIm1vdXNlbW92ZS56b29tXCIsIG1vdXNlbW92ZWQsIHRydWUpLm9uKFwibW91c2V1cC56b29tXCIsIG1vdXNldXBwZWQsIHRydWUpLFxuICAgICAgICBwID0gbW91c2UodGhpcyksXG4gICAgICAgIHgwID0gZXZlbnQuY2xpZW50WCxcbiAgICAgICAgeTAgPSBldmVudC5jbGllbnRZO1xuXG4gICAgZHJhZ0Rpc2FibGUoZXZlbnQudmlldyk7XG4gICAgbm9wcm9wYWdhdGlvbigpO1xuICAgIGcubW91c2UgPSBbcCwgdGhpcy5fX3pvb20uaW52ZXJ0KHApXTtcbiAgICBpbnRlcnJ1cHQodGhpcyk7XG4gICAgZy5zdGFydCgpO1xuXG4gICAgZnVuY3Rpb24gbW91c2Vtb3ZlZCgpIHtcbiAgICAgIG5vZXZlbnQoKTtcbiAgICAgIGlmICghZy5tb3ZlZCkge1xuICAgICAgICB2YXIgZHggPSBldmVudC5jbGllbnRYIC0geDAsIGR5ID0gZXZlbnQuY2xpZW50WSAtIHkwO1xuICAgICAgICBnLm1vdmVkID0gZHggKiBkeCArIGR5ICogZHkgPiBjbGlja0Rpc3RhbmNlMjtcbiAgICAgIH1cbiAgICAgIGcuem9vbShcIm1vdXNlXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUoZy50aGF0Ll9fem9vbSwgZy5tb3VzZVswXSA9IG1vdXNlKGcudGhhdCksIGcubW91c2VbMV0pLCBnLmV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbW91c2V1cHBlZCgpIHtcbiAgICAgIHYub24oXCJtb3VzZW1vdmUuem9vbSBtb3VzZXVwLnpvb21cIiwgbnVsbCk7XG4gICAgICBkcmFnRW5hYmxlKGV2ZW50LnZpZXcsIGcubW92ZWQpO1xuICAgICAgbm9ldmVudCgpO1xuICAgICAgZy5lbmQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBkYmxjbGlja2VkKCkge1xuICAgIGlmICghZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgdDAgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgcDAgPSBtb3VzZSh0aGlzKSxcbiAgICAgICAgcDEgPSB0MC5pbnZlcnQocDApLFxuICAgICAgICBrMSA9IHQwLmsgKiAoZXZlbnQuc2hpZnRLZXkgPyAwLjUgOiAyKSxcbiAgICAgICAgdDEgPSBjb25zdHJhaW4odHJhbnNsYXRlKHNjYWxlKHQwLCBrMSksIHAwLCBwMSksIGV4dGVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB0cmFuc2xhdGVFeHRlbnQpO1xuXG4gICAgbm9ldmVudCgpO1xuICAgIGlmIChkdXJhdGlvbiA+IDApIHNlbGVjdCh0aGlzKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oZHVyYXRpb24pLmNhbGwoc2NoZWR1bGUsIHQxLCBwMCk7XG4gICAgZWxzZSBzZWxlY3QodGhpcykuY2FsbCh6b29tLnRyYW5zZm9ybSwgdDEpO1xuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2hzdGFydGVkKCkge1xuICAgIGlmICghZmlsdGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHJldHVybjtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBzdGFydGVkLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIHQsIHA7XG5cbiAgICBub3Byb3BhZ2F0aW9uKCk7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdCA9IHRvdWNoZXNbaV0sIHAgPSB0b3VjaCh0aGlzLCB0b3VjaGVzLCB0LmlkZW50aWZpZXIpO1xuICAgICAgcCA9IFtwLCB0aGlzLl9fem9vbS5pbnZlcnQocCksIHQuaWRlbnRpZmllcl07XG4gICAgICBpZiAoIWcudG91Y2gwKSBnLnRvdWNoMCA9IHAsIHN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgZWxzZSBpZiAoIWcudG91Y2gxKSBnLnRvdWNoMSA9IHA7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhpcyBpcyBhIGRibHRhcCwgcmVyb3V0ZSB0byB0aGUgKG9wdGlvbmFsKSBkYmxjbGljay56b29tIGhhbmRsZXIuXG4gICAgaWYgKHRvdWNoc3RhcnRpbmcpIHtcbiAgICAgIHRvdWNoc3RhcnRpbmcgPSBjbGVhclRpbWVvdXQodG91Y2hzdGFydGluZyk7XG4gICAgICBpZiAoIWcudG91Y2gxKSB7XG4gICAgICAgIGcuZW5kKCk7XG4gICAgICAgIHAgPSBzZWxlY3QodGhpcykub24oXCJkYmxjbGljay56b29tXCIpO1xuICAgICAgICBpZiAocCkgcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHN0YXJ0ZWQpIHtcbiAgICAgIHRvdWNoc3RhcnRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaHN0YXJ0aW5nID0gbnVsbDsgfSwgdG91Y2hEZWxheSk7XG4gICAgICBpbnRlcnJ1cHQodGhpcyk7XG4gICAgICBnLnN0YXJ0KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2htb3ZlZCgpIHtcbiAgICB2YXIgZyA9IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIHQsIHAsIGw7XG5cbiAgICBub2V2ZW50KCk7XG4gICAgaWYgKHRvdWNoc3RhcnRpbmcpIHRvdWNoc3RhcnRpbmcgPSBjbGVhclRpbWVvdXQodG91Y2hzdGFydGluZyk7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdCA9IHRvdWNoZXNbaV0sIHAgPSB0b3VjaCh0aGlzLCB0b3VjaGVzLCB0LmlkZW50aWZpZXIpO1xuICAgICAgaWYgKGcudG91Y2gwICYmIGcudG91Y2gwWzJdID09PSB0LmlkZW50aWZpZXIpIGcudG91Y2gwWzBdID0gcDtcbiAgICAgIGVsc2UgaWYgKGcudG91Y2gxICYmIGcudG91Y2gxWzJdID09PSB0LmlkZW50aWZpZXIpIGcudG91Y2gxWzBdID0gcDtcbiAgICB9XG4gICAgdCA9IGcudGhhdC5fX3pvb207XG4gICAgaWYgKGcudG91Y2gxKSB7XG4gICAgICB2YXIgcDAgPSBnLnRvdWNoMFswXSwgbDAgPSBnLnRvdWNoMFsxXSxcbiAgICAgICAgICBwMSA9IGcudG91Y2gxWzBdLCBsMSA9IGcudG91Y2gxWzFdLFxuICAgICAgICAgIGRwID0gKGRwID0gcDFbMF0gLSBwMFswXSkgKiBkcCArIChkcCA9IHAxWzFdIC0gcDBbMV0pICogZHAsXG4gICAgICAgICAgZGwgPSAoZGwgPSBsMVswXSAtIGwwWzBdKSAqIGRsICsgKGRsID0gbDFbMV0gLSBsMFsxXSkgKiBkbDtcbiAgICAgIHQgPSBzY2FsZSh0LCBNYXRoLnNxcnQoZHAgLyBkbCkpO1xuICAgICAgcCA9IFsocDBbMF0gKyBwMVswXSkgLyAyLCAocDBbMV0gKyBwMVsxXSkgLyAyXTtcbiAgICAgIGwgPSBbKGwwWzBdICsgbDFbMF0pIC8gMiwgKGwwWzFdICsgbDFbMV0pIC8gMl07XG4gICAgfVxuICAgIGVsc2UgaWYgKGcudG91Y2gwKSBwID0gZy50b3VjaDBbMF0sIGwgPSBnLnRvdWNoMFsxXTtcbiAgICBlbHNlIHJldHVybjtcbiAgICBnLnpvb20oXCJ0b3VjaFwiLCBjb25zdHJhaW4odHJhbnNsYXRlKHQsIHAsIGwpLCBnLmV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSk7XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaGVuZGVkKCkge1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpLFxuICAgICAgICB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgdDtcblxuICAgIG5vcHJvcGFnYXRpb24oKTtcbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIHRvdWNoRGVsYXkpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHQgPSB0b3VjaGVzW2ldO1xuICAgICAgaWYgKGcudG91Y2gwICYmIGcudG91Y2gwWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMDtcbiAgICAgIGVsc2UgaWYgKGcudG91Y2gxICYmIGcudG91Y2gxWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMTtcbiAgICB9XG4gICAgaWYgKGcudG91Y2gxICYmICFnLnRvdWNoMCkgZy50b3VjaDAgPSBnLnRvdWNoMSwgZGVsZXRlIGcudG91Y2gxO1xuICAgIGlmIChnLnRvdWNoMCkgZy50b3VjaDBbMV0gPSB0aGlzLl9fem9vbS5pbnZlcnQoZy50b3VjaDBbMF0pO1xuICAgIGVsc2UgZy5lbmQoKTtcbiAgfVxuXG4gIHpvb20ud2hlZWxEZWx0YSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh3aGVlbERlbHRhID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHpvb20pIDogd2hlZWxEZWx0YTtcbiAgfTtcblxuICB6b29tLmZpbHRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChmaWx0ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIHpvb20pIDogZmlsdGVyO1xuICB9O1xuXG4gIHpvb20udG91Y2hhYmxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRvdWNoYWJsZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgem9vbSkgOiB0b3VjaGFibGU7XG4gIH07XG5cbiAgem9vbS5leHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXh0ZW50ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbWytfWzBdWzBdLCArX1swXVsxXV0sIFsrX1sxXVswXSwgK19bMV1bMV1dXSksIHpvb20pIDogZXh0ZW50O1xuICB9O1xuXG4gIHpvb20uc2NhbGVFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGVFeHRlbnRbMF0gPSArX1swXSwgc2NhbGVFeHRlbnRbMV0gPSArX1sxXSwgem9vbSkgOiBbc2NhbGVFeHRlbnRbMF0sIHNjYWxlRXh0ZW50WzFdXTtcbiAgfTtcblxuICB6b29tLnRyYW5zbGF0ZUV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0cmFuc2xhdGVFeHRlbnRbMF1bMF0gPSArX1swXVswXSwgdHJhbnNsYXRlRXh0ZW50WzFdWzBdID0gK19bMV1bMF0sIHRyYW5zbGF0ZUV4dGVudFswXVsxXSA9ICtfWzBdWzFdLCB0cmFuc2xhdGVFeHRlbnRbMV1bMV0gPSArX1sxXVsxXSwgem9vbSkgOiBbW3RyYW5zbGF0ZUV4dGVudFswXVswXSwgdHJhbnNsYXRlRXh0ZW50WzBdWzFdXSwgW3RyYW5zbGF0ZUV4dGVudFsxXVswXSwgdHJhbnNsYXRlRXh0ZW50WzFdWzFdXV07XG4gIH07XG5cbiAgem9vbS5jb25zdHJhaW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29uc3RyYWluID0gXywgem9vbSkgOiBjb25zdHJhaW47XG4gIH07XG5cbiAgem9vbS5kdXJhdGlvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkdXJhdGlvbiA9ICtfLCB6b29tKSA6IGR1cmF0aW9uO1xuICB9O1xuXG4gIHpvb20uaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaW50ZXJwb2xhdGUgPSBfLCB6b29tKSA6IGludGVycG9sYXRlO1xuICB9O1xuXG4gIHpvb20ub24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUgPSBsaXN0ZW5lcnMub24uYXBwbHkobGlzdGVuZXJzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiB2YWx1ZSA9PT0gbGlzdGVuZXJzID8gem9vbSA6IHZhbHVlO1xuICB9O1xuXG4gIHpvb20uY2xpY2tEaXN0YW5jZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjbGlja0Rpc3RhbmNlMiA9IChfID0gK18pICogXywgem9vbSkgOiBNYXRoLnNxcnQoY2xpY2tEaXN0YW5jZTIpO1xuICB9O1xuXG4gIHJldHVybiB6b29tO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGFjY2Vzc29yfSBmcm9tIFwiLi9zcmMvYWNjZXNzb3JcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBhc3NpZ259IGZyb20gXCIuL3NyYy9hc3NpZ25cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBhdHRyaXplfSBmcm9tIFwiLi9zcmMvYXR0cml6ZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIEJhc2VDbGFzc30gZnJvbSBcIi4vc3JjL0Jhc2VDbGFzc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGNsb3Nlc3R9IGZyb20gXCIuL3NyYy9jbG9zZXN0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY29uZmlnUHJlcH0gZnJvbSBcIi4vc3JjL2NvbmZpZ1ByZXBcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjb25zdGFudH0gZnJvbSBcIi4vc3JjL2NvbnN0YW50XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZWxlbX0gZnJvbSBcIi4vc3JjL2VsZW1cIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpc09iamVjdH0gZnJvbSBcIi4vc3JjL2lzT2JqZWN0XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWVyZ2V9IGZyb20gXCIuL3NyYy9tZXJnZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBhcnNlU2lkZXN9IGZyb20gXCIuL3NyYy9wYXJzZVNpZGVzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcHJlZml4fSBmcm9tIFwiLi9zcmMvcHJlZml4XCI7XG5leHBvcnQge2RlZmF1bHQgYXMgUkVTRVR9IGZyb20gXCIuL3NyYy9SRVNFVFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0eWxpemV9IGZyb20gXCIuL3NyYy9zdHlsaXplXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdXVpZH0gZnJvbSBcIi4vc3JjL3V1aWRcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiaW1wb3J0IGFzc2lnbiBmcm9tIFwiLi9hc3NpZ25cIjtcbmltcG9ydCBpc09iamVjdCBmcm9tIFwiLi9pc09iamVjdFwiO1xuaW1wb3J0IHV1aWQgZnJvbSBcIi4vdXVpZFwiO1xuaW1wb3J0IFJFU0VUIGZyb20gXCIuL1JFU0VUXCI7XG5cbi8qKlxuICAgIEBkZXNjIFJlY3Vyc2l2ZSBmdW5jdGlvbiB0aGF0IHJlc2V0cyBuZXN0ZWQgT2JqZWN0IGNvbmZpZ3MuXG4gICAgQHBhcmFtIHtPYmplY3R9IG9ialxuICAgIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0c1xuICAgIEBwcml2YXRlXG4qL1xuZnVuY3Rpb24gbmVzdGVkUmVzZXQob2JqLCBkZWZhdWx0cykge1xuICBpZiAoaXNPYmplY3Qob2JqKSkge1xuICAgIGZvciAodmFyIG5lc3RlZEtleSBpbiBvYmopIHtcbiAgICAgIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgbmVzdGVkS2V5KSAmJiAhbmVzdGVkS2V5LnN0YXJ0c1dpdGgoXCJfXCIpKSB7XG4gICAgICAgIHZhciBkZWZhdWx0VmFsdWUgPSBkZWZhdWx0cyAmJiBpc09iamVjdChkZWZhdWx0cykgPyBkZWZhdWx0c1tuZXN0ZWRLZXldIDogdW5kZWZpbmVkO1xuICAgICAgICBpZiAob2JqW25lc3RlZEtleV0gPT09IFJFU0VUKSB7XG4gICAgICAgICAgb2JqW25lc3RlZEtleV0gPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNPYmplY3Qob2JqW25lc3RlZEtleV0pKSB7XG4gICAgICAgICAgbmVzdGVkUmVzZXQob2JqW25lc3RlZEtleV0sIGRlZmF1bHRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gICAgQGNsYXNzIEJhc2VDbGFzc1xuICAgIEBzdW1tYXJ5IEFuIGFic3RyYWN0IGNsYXNzIHRoYXQgY29udGFpbnMgc29tZSBnbG9iYWwgbWV0aG9kcyBhbmQgZnVuY3Rpb25hbGl0eS5cbiovXG52YXIgQmFzZUNsYXNzID0gZnVuY3Rpb24gQmFzZUNsYXNzKCkge1xuICB0aGlzLl9vbiA9IHt9O1xuICB0aGlzLl91dWlkID0gdXVpZCgpO1xufTtcblxuLyoqXG4gICAgQG1lbWJlcm9mIEJhc2VDbGFzc1xuICAgIEBkZXNjIElmICp2YWx1ZSogaXMgc3BlY2lmaWVkLCBzZXRzIHRoZSBtZXRob2RzIHRoYXQgY29ycmVzcG9uZCB0byB0aGUga2V5L3ZhbHVlIHBhaXJzIGFuZCByZXR1cm5zIHRoaXMgY2xhc3MuIElmICp2YWx1ZSogaXMgbm90IHNwZWNpZmllZCwgcmV0dXJucyB0aGUgY3VycmVudCBjb25maWd1cmF0aW9uLlxuICAgIEBwYXJhbSB7T2JqZWN0fSBbKnZhbHVlKl1cbiAgICBAY2hhaW5hYmxlXG4qL1xuQmFzZUNsYXNzLnByb3RvdHlwZS5jb25maWcgPSBmdW5jdGlvbiBjb25maWcgKF8pIHtcbiAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICBpZiAoIXRoaXMuX2NvbmZpZ0RlZmF1bHQpIHtcbiAgICB2YXIgY29uZmlnID0ge307XG4gICAgZm9yICh2YXIgayBpbiB0aGlzJDEuX19wcm90b19fKSB7XG4gICAgICBpZiAoay5pbmRleE9mKFwiX1wiKSAhPT0gMCAmJiAhW1wiY29uZmlnXCIsIFwiY29uc3RydWN0b3JcIiwgXCJyZW5kZXJcIl0uaW5jbHVkZXMoaykpIHtcbiAgICAgICAgdmFyIHYgPSB0aGlzJDFba10oKTtcbiAgICAgICAgY29uZmlnW2tdID0gaXNPYmplY3QodikgPyBhc3NpZ24oe30sIHYpIDogdjtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5fY29uZmlnRGVmYXVsdCA9IGNvbmZpZztcbiAgfVxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIGZvciAodmFyIGskMSBpbiBfKSB7XG4gICAgICBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChfLCBrJDEpICYmIGskMSBpbiB0aGlzJDEpIHtcbiAgICAgICAgdmFyIHYkMSA9IF9bayQxXTtcbiAgICAgICAgaWYgKHYkMSA9PT0gUkVTRVQpIHtcbiAgICAgICAgICBpZiAoayQxID09PSBcIm9uXCIpIHsgdGhpcyQxLl9vbiA9IHRoaXMkMS5fY29uZmlnRGVmYXVsdFtrJDFdOyB9XG4gICAgICAgICAgZWxzZSB7IHRoaXMkMVtrJDFdKHRoaXMkMS5fY29uZmlnRGVmYXVsdFtrJDFdKTsgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIG5lc3RlZFJlc2V0KHYkMSwgdGhpcyQxLl9jb25maWdEZWZhdWx0W2skMV0pO1xuICAgICAgICAgIHRoaXMkMVtrJDFdKHYkMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgZWxzZSB7XG4gICAgdmFyIGNvbmZpZyQxID0ge307XG4gICAgZm9yICh2YXIgayQyIGluIHRoaXMkMS5fX3Byb3RvX18pIHsgaWYgKGskMi5pbmRleE9mKFwiX1wiKSAhPT0gMCAmJiAhW1wiY29uZmlnXCIsIFwiY29uc3RydWN0b3JcIiwgXCJyZW5kZXJcIl0uaW5jbHVkZXMoayQyKSkgeyBjb25maWckMVtrJDJdID0gdGhpcyQxW2skMl0oKTsgfSB9XG4gICAgcmV0dXJuIGNvbmZpZyQxO1xuICB9XG59O1xuXG4vKipcbiAgICBAbWVtYmVyb2YgQmFzZUNsYXNzXG4gICAgQGRlc2MgQWRkcyBvciByZW1vdmVzIGEgKmxpc3RlbmVyKiB0byBlYWNoIG9iamVjdCBmb3IgdGhlIHNwZWNpZmllZCBldmVudCAqdHlwZW5hbWVzKi4gSWYgYSAqbGlzdGVuZXIqIGlzIG5vdCBzcGVjaWZpZWQsIHJldHVybnMgdGhlIGN1cnJlbnRseSBhc3NpZ25lZCBsaXN0ZW5lciBmb3IgdGhlIHNwZWNpZmllZCBldmVudCAqdHlwZW5hbWUqLiBNaXJyb3JzIHRoZSBjb3JlIFtkMy1zZWxlY3Rpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9kMy9kMy1zZWxlY3Rpb24jc2VsZWN0aW9uX29uKSBiZWhhdmlvci5cbiAgICBAcGFyYW0ge1N0cmluZ30gWyp0eXBlbmFtZXMqXVxuICAgIEBwYXJhbSB7RnVuY3Rpb259IFsqbGlzdGVuZXIqXVxuICAgIEBjaGFpbmFibGVcbiAgICBAZXhhbXBsZSA8Y2FwdGlvbj5CeSBkZWZhdWx0LCBsaXN0ZW5lcnMgYXBwbHkgZ2xvYmFsbHkgdG8gYWxsIG9iamVjdHMsIGhvd2V2ZXIsIHBhc3NpbmcgYSBuYW1lc3BhY2Ugd2l0aCB0aGUgY2xhc3MgbmFtZSBnaXZlcyBjb250cm9sIG92ZXIgc3BlY2lmaWMgZWxlbWVudHM6PC9jYXB0aW9uPlxubmV3IFBsb3Rcbi5vbihcImNsaWNrLlNoYXBlXCIsIGZ1bmN0aW9uKGQpIHtcbiAgY29uc29sZS5sb2coXCJkYXRhIGZvciBzaGFwZSBjbGlja2VkOlwiLCBkKTtcbn0pXG4ub24oXCJjbGljay5MZWdlbmRcIiwgZnVuY3Rpb24oZCkge1xuICBjb25zb2xlLmxvZyhcImRhdGEgZm9yIGxlZ2VuZCBjbGlja2VkOlwiLCBkKTtcbn0pXG4qL1xuQmFzZUNsYXNzLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIG9uIChfLCBmKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAyID8gKHRoaXMuX29uW19dID0gZiwgdGhpcykgOiBhcmd1bWVudHMubGVuZ3RoID8gdHlwZW9mIF8gPT09IFwic3RyaW5nXCIgPyB0aGlzLl9vbltfXSA6ICh0aGlzLl9vbiA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuX29uLCBfKSwgdGhpcykgOiB0aGlzLl9vbjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJhc2VDbGFzcztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFzZUNsYXNzLmpzLm1hcCIsIi8qKlxuICAgIEBjb25zdGFudCBSRVNFVFxuICAgIEBkZXNjIFN0cmluZyBjb25zdGFudCB1c2VkIHRvIHJlc2V0IGFuIGluZGl2aWR1YWwgY29uZmlnIHByb3BlcnR5LlxuKi9cbmV4cG9ydCBkZWZhdWx0IFwiRDNQTFVTLUNPTU1PTi1SRVNFVFwiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1SRVNFVC5qcy5tYXAiLCIvKipcbiAgICBAZnVuY3Rpb24gYWNjZXNzb3JcbiAgICBAZGVzYyBXcmFwcyBhbiBvYmplY3Qga2V5IGluIGEgc2ltcGxlIGFjY2Vzc29yIGZ1bmN0aW9uLlxuICAgIEBwYXJhbSB7U3RyaW5nfSBrZXkgVGhlIGtleSB0byBiZSByZXR1cm5lZCBmcm9tIGVhY2ggT2JqZWN0IHBhc3NlZCB0byB0aGUgZnVuY3Rpb24uXG4gICAgQHBhcmFtIHsqfSBbZGVmXSBBIGRlZmF1bHQgdmFsdWUgdG8gYmUgcmV0dXJuZWQgaWYgdGhlIGtleSBpcyBub3QgcHJlc2VudC5cbiAgICBAZXhhbXBsZSA8Y2FwdGlvbj50aGlzPC9jYXB0aW9uPlxuYWNjZXNzb3IoXCJpZFwiKTtcbiAgICBAZXhhbXBsZSA8Y2FwdGlvbj5yZXR1cm5zIHRoaXM8L2NhcHRpb24+XG5mdW5jdGlvbihkKSB7XG4gIHJldHVybiBkW1wiaWRcIl07XG59XG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oa2V5LCBkZWYpIHtcbiAgaWYgKGRlZiA9PT0gdm9pZCAwKSB7IHJldHVybiBmdW5jdGlvbiAoZCkgeyByZXR1cm4gZFtrZXldOyB9OyB9XG4gIHJldHVybiBmdW5jdGlvbiAoZCkgeyByZXR1cm4gZFtrZXldID09PSB2b2lkIDAgPyBkZWYgOiBkW2tleV07IH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjY2Vzc29yLmpzLm1hcCIsImltcG9ydCB7ZGVmYXVsdCBhcyBpc09iamVjdH0gZnJvbSBcIi4vaXNPYmplY3RcIjtcblxuLyoqXG4gICAgQGZ1bmN0aW9uIHZhbGlkT2JqZWN0XG4gICAgQGRlc2MgRGV0ZXJtaW5lcyBpZiB0aGUgb2JqZWN0IHBhc3NlZCBpcyB0aGUgZG9jdW1lbnQgb3Igd2luZG93LlxuICAgIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAgICBAcHJpdmF0ZVxuKi9cbmZ1bmN0aW9uIHZhbGlkT2JqZWN0KG9iaikge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikgeyByZXR1cm4gdHJ1ZTsgfVxuICBlbHNlIHsgcmV0dXJuIG9iaiAhPT0gd2luZG93ICYmIG9iaiAhPT0gZG9jdW1lbnQ7IH1cbn1cblxuLyoqXG4gICAgQGZ1bmN0aW9uIGFzc2lnblxuICAgIEBkZXNjIEEgZGVlcGx5IHJlY3Vyc2l2ZSB2ZXJzaW9uIG9mIGBPYmplY3QuYXNzaWduYC5cbiAgICBAcGFyYW0gey4uLk9iamVjdH0gb2JqZWN0c1xuICAgIEBleGFtcGxlIDxjYXB0aW9uPnRoaXM8L2NhcHRpb24+XG5hc3NpZ24oe2lkOiBcImZvb1wiLCBkZWVwOiB7Z3JvdXA6IFwiQVwifX0sIHtpZDogXCJiYXJcIiwgZGVlcDoge3ZhbHVlOiAyMH19KSk7XG4gICAgQGV4YW1wbGUgPGNhcHRpb24+cmV0dXJucyB0aGlzPC9jYXB0aW9uPlxue2lkOiBcImJhclwiLCBkZWVwOiB7Z3JvdXA6IFwiQVwiLCB2YWx1ZTogMjB9fVxuKi9cbmZ1bmN0aW9uIGFzc2lnbigpIHtcbiAgdmFyIG9iamVjdHMgPSBbXSwgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgd2hpbGUgKCBsZW4tLSApIG9iamVjdHNbIGxlbiBdID0gYXJndW1lbnRzWyBsZW4gXTtcblxuXG4gIHZhciB0YXJnZXQgPSBvYmplY3RzWzBdO1xuICB2YXIgbG9vcCA9IGZ1bmN0aW9uICggaSApIHtcblxuICAgIHZhciBzb3VyY2UgPSBvYmplY3RzW2ldO1xuXG4gICAgT2JqZWN0LmtleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG5cbiAgICAgIHZhciB2YWx1ZSA9IHNvdXJjZVtwcm9wXTtcblxuICAgICAgaWYgKGlzT2JqZWN0KHZhbHVlKSAmJiB2YWxpZE9iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKHRhcmdldC5oYXNPd25Qcm9wZXJ0eShwcm9wKSAmJiBpc09iamVjdCh0YXJnZXRbcHJvcF0pKSB7IHRhcmdldFtwcm9wXSA9IGFzc2lnbih7fSwgdGFyZ2V0W3Byb3BdLCB2YWx1ZSk7IH1cbiAgICAgICAgZWxzZSB7IHRhcmdldFtwcm9wXSA9IGFzc2lnbih7fSwgdmFsdWUpOyB9XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgeyB0YXJnZXRbcHJvcF0gPSB2YWx1ZS5zbGljZSgpOyB9XG4gICAgICBlbHNlIHsgdGFyZ2V0W3Byb3BdID0gdmFsdWU7IH1cblxuICAgIH0pO1xuICB9O1xuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgb2JqZWN0cy5sZW5ndGg7IGkrKykgbG9vcCggaSApO1xuXG4gIHJldHVybiB0YXJnZXQ7XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgYXNzaWduO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NpZ24uanMubWFwIiwiLyoqXG4gICAgQGZ1bmN0aW9uIGF0dHJpemVcbiAgICBAZGVzYyBBcHBsaWVzIGVhY2gga2V5L3ZhbHVlIGluIGFuIG9iamVjdCBhcyBhbiBhdHRyLlxuICAgIEBwYXJhbSB7RDNzZWxlY3Rpb259IGVsZW0gVGhlIEQzIGVsZW1lbnQgdG8gYXBwbHkgdGhlIHN0eWxlcyB0by5cbiAgICBAcGFyYW0ge09iamVjdH0gYXR0cnMgQW4gb2JqZWN0IG9mIGtleS92YWx1ZSBhdHRyIHBhaXJzLlxuKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGUsIGEpIHtcbiAgaWYgKCBhID09PSB2b2lkIDAgKSBhID0ge307XG5cbiAgZm9yICh2YXIgayBpbiBhKSB7IGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsIGspKSB7IGUuYXR0cihrLCBhW2tdKTsgfSB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF0dHJpemUuanMubWFwIiwiLyoqXG4gICAgQGZ1bmN0aW9uIGNsb3Nlc3RcbiAgICBAZGVzYyBGaW5kcyB0aGUgY2xvc2VzdCBudW1lcmljIHZhbHVlIGluIGFuIGFycmF5LlxuICAgIEBwYXJhbSB7TnVtYmVyfSBuIFRoZSBudW1iZXIgdmFsdWUgdG8gdXNlIHdoZW4gc2VhcmNoaW5nIHRoZSBhcnJheS5cbiAgICBAcGFyYW0ge0FycmF5fSBhcnIgVGhlIGFycmF5IG9mIHZhbHVlcyB0byB0ZXN0IGFnYWluc3QuXG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obiwgYXJyKSB7XG4gIGlmICggYXJyID09PSB2b2lkIDAgKSBhcnIgPSBbXTtcblxuICBpZiAoIWFyciB8fCAhKGFyciBpbnN0YW5jZW9mIEFycmF5KSB8fCAhYXJyLmxlbmd0aCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9XG4gIHJldHVybiBhcnIucmVkdWNlKGZ1bmN0aW9uIChwcmV2LCBjdXJyKSB7IHJldHVybiBNYXRoLmFicyhjdXJyIC0gbikgPCBNYXRoLmFicyhwcmV2IC0gbikgPyBjdXJyIDogcHJldjsgfSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsb3Nlc3QuanMubWFwIiwiLyoqXG4gICAgQGZ1bmN0aW9uIGNvbmZpZ1ByZXBcbiAgICBAZGVzYyBQcmVwcyBhIGNvbmZpZyBvYmplY3QgZm9yIGQzcGx1cyBkYXRhLCBhbmQgb3B0aW9uYWxseSBidWJibGVzIHVwIGEgc3BlY2lmaWMgbmVzdGVkIHR5cGUuIFdoZW4gdXNpbmcgdGhpcyBmdW5jdGlvbiwgeW91IG11c3QgYmluZCBhIGQzcGx1cyBjbGFzcycgYHRoaXNgIGNvbnRleHQuXG4gICAgQHBhcmFtIHtPYmplY3R9IFtjb25maWcgPSB0aGlzLl9zaGFwZUNvbmZpZ10gVGhlIGNvbmZpZ3VyYXRpb24gb2JqZWN0IHRvIHBhcnNlLlxuICAgIEBwYXJhbSB7U3RyaW5nfSBbdHlwZSA9IFwic2hhcGVcIl0gVGhlIGV2ZW50IGNsYXNzaWZpZXIgdG8gdXNlciBmb3IgXCJvblwiIGV2ZW50cy4gRm9yIGV4YW1wbGUsIHRoZSBkZWZhdWx0IGV2ZW50IHR5cGUgb2YgXCJzaGFwZVwiIHdpbGwgYXBwbHkgYWxsIGV2ZW50cyBpbiB0aGUgXCJvblwiIGNvbmZpZyBvYmplY3Qgd2l0aCB0aGF0IGtleSwgbGlrZSBcImNsaWNrLnNoYXBlXCIgYW5kIFwibW91c2VsZWF2ZS5zaGFwZVwiLCBpbiBhZGRpdGlvbiB0byBhbnkgZ2xvdmFsIGV2ZW50cyBsaWtlIFwiY2xpY2tcIiBhbmQgXCJtb3VzZWxlYXZlXCIuXG4gICAgQHBhcmFtIHtTdHJpbmd9IFtuZXN0XSBBbiBvcHRpb25hbCBuZXN0ZWQga2V5IHRvIGJ1YmJsZSB1cCB0byB0aGUgcGFyZW50IGNvbmZpZyBsZXZlbC5cbiovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb25maWdQcmVwKGNvbmZpZywgdHlwZSwgbmVzdCkge1xuICB2YXIgdGhpcyQxID0gdGhpcztcbiAgaWYgKCBjb25maWcgPT09IHZvaWQgMCApIGNvbmZpZyA9IHRoaXMuX3NoYXBlQ29uZmlnO1xuICBpZiAoIHR5cGUgPT09IHZvaWQgMCApIHR5cGUgPSBcInNoYXBlXCI7XG4gIGlmICggbmVzdCA9PT0gdm9pZCAwICkgbmVzdCA9IGZhbHNlO1xuXG5cbiAgdmFyIG5ld0NvbmZpZyA9IHtkdXJhdGlvbjogdGhpcy5fZHVyYXRpb24sIG9uOiB7fX07XG5cbiAgdmFyIHdyYXBGdW5jdGlvbiA9IGZ1bmN0aW9uIChmdW5jKSB7IHJldHVybiBmdW5jdGlvbiAoZCwgaSwgcykge1xuICAgIHdoaWxlIChkLl9fZDNwbHVzX18pIHtcbiAgICAgIGkgPSBkLmk7XG4gICAgICBkID0gZC5kYXRhIHx8IGQuZmVhdHVyZTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmMuYmluZCh0aGlzJDEpKGQsIGksIHMpO1xuICB9OyB9O1xuXG4gIHZhciBwYXJzZUV2ZW50cyA9IGZ1bmN0aW9uIChuZXdPYmosIG9uKSB7XG5cbiAgICBmb3IgKHZhciBldmVudCBpbiBvbikge1xuXG4gICAgICBpZiAoe30uaGFzT3duUHJvcGVydHkuY2FsbChvbiwgZXZlbnQpICYmICFldmVudC5pbmNsdWRlcyhcIi5cIikgfHwgZXZlbnQuaW5jbHVkZXMoKFwiLlwiICsgdHlwZSkpKSB7XG4gICAgICAgIG5ld09iai5vbltldmVudF0gPSB3cmFwRnVuY3Rpb24ob25bZXZlbnRdKTtcbiAgICAgIH1cblxuICAgIH1cblxuICB9O1xuXG4gIHZhciBrZXlFdmFsID0gZnVuY3Rpb24gKG5ld09iaiwgb2JqKSB7XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG5cbiAgICAgIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuXG4gICAgICAgIGlmIChrZXkgPT09IFwib25cIikgeyBwYXJzZUV2ZW50cyhuZXdPYmosIG9ialtrZXldKTsgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2Ygb2JqW2tleV0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgIG5ld09ialtrZXldID0gd3JhcEZ1bmN0aW9uKG9ialtrZXldKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2Ygb2JqW2tleV0gPT09IFwib2JqZWN0XCIgJiYgIShvYmogaW5zdGFuY2VvZiBBcnJheSkpIHtcbiAgICAgICAgICBuZXdPYmpba2V5XSA9IHtvbjoge319O1xuICAgICAgICAgIGtleUV2YWwobmV3T2JqW2tleV0sIG9ialtrZXldKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfVxuXG4gICAgICB9XG5cbiAgICB9XG5cbiAgfTtcblxuICBrZXlFdmFsKG5ld0NvbmZpZywgY29uZmlnKTtcbiAgaWYgKHRoaXMuX29uKSB7IHBhcnNlRXZlbnRzKG5ld0NvbmZpZywgdGhpcy5fb24pOyB9XG4gIGlmIChuZXN0ICYmIGNvbmZpZ1tuZXN0XSkge1xuICAgIGtleUV2YWwobmV3Q29uZmlnLCBjb25maWdbbmVzdF0pO1xuICAgIGlmIChjb25maWdbbmVzdF0ub24pIHsgcGFyc2VFdmVudHMobmV3Q29uZmlnLCBjb25maWdbbmVzdF0ub24pOyB9XG4gIH1cblxuICByZXR1cm4gbmV3Q29uZmlnO1xuXG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmZpZ1ByZXAuanMubWFwIiwiLyoqXG4gICAgQGZ1bmN0aW9uIGNvbnN0YW50XG4gICAgQGRlc2MgV3JhcHMgbm9uLWZ1bmN0aW9uIHZhcmlhYmxlcyBpbiBhIHNpbXBsZSByZXR1cm4gZnVuY3Rpb24uXG4gICAgQHBhcmFtIHtBcnJheXxOdW1iZXJ8T2JqZWN0fFN0cmluZ30gdmFsdWUgVGhlIHZhbHVlIHRvIGJlIHJldHVybmVkIGZyb20gdGhlIGZ1bmN0aW9uLlxuICAgIEBleGFtcGxlIDxjYXB0aW9uPnRoaXM8L2NhcHRpb24+XG5jb25zdGFudCg0Mik7XG4gICAgQGV4YW1wbGUgPGNhcHRpb24+cmV0dXJucyB0aGlzPC9jYXB0aW9uPlxuZnVuY3Rpb24oKSB7XG4gIHJldHVybiA0Mjtcbn1cbiovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24gY29uc3RhbnQoKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudC5qcy5tYXAiLCJpbXBvcnQge3NlbGVjdH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHt0cmFuc2l0aW9ufSBmcm9tIFwiZDMtdHJhbnNpdGlvblwiO1xuXG5pbXBvcnQge2RlZmF1bHQgYXMgYXR0cml6ZX0gZnJvbSBcIi4vYXR0cml6ZVwiO1xuXG4vKipcbiAgICBAZnVuY3Rpb24gZWxlbVxuICAgIEBkZXNjIE1hbmFnZXMgdGhlIGVudGVyL3VwZGF0ZS9leGl0IHBhdHRlcm4gZm9yIGEgc2luZ2xlIERPTSBlbGVtZW50LlxuICAgIEBwYXJhbSB7U3RyaW5nfSBzZWxlY3RvciBBIEQzIHNlbGVjdG9yLCB3aGljaCBtdXN0IGluY2x1ZGUgdGhlIHRhZ25hbWUgYW5kIGEgY2xhc3MgYW5kL29yIElELlxuICAgIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgQWRkaXRpb25hbCBwYXJhbWV0ZXJzLlxuICAgIEBwYXJhbSB7Qm9vbGVhbn0gW3BhcmFtcy5jb25kaXRpb24gPSB0cnVlXSBXaGV0aGVyIG9yIG5vdCB0aGUgZWxlbWVudCBzaG91bGQgYmUgcmVuZGVyZWQgKG9yIHJlbW92ZWQpLlxuICAgIEBwYXJhbSB7T2JqZWN0fSBbcGFyYW1zLmVudGVyID0ge31dIEEgY29sbGVjdGlvbiBvZiBrZXkvdmFsdWUgcGFpcnMgdGhhdCBtYXAgdG8gYXR0cmlidXRlcyB0byBiZSBnaXZlbiBvbiBlbnRlci5cbiAgICBAcGFyYW0ge09iamVjdH0gW3BhcmFtcy5leGl0ID0ge31dIEEgY29sbGVjdGlvbiBvZiBrZXkvdmFsdWUgcGFpcnMgdGhhdCBtYXAgdG8gYXR0cmlidXRlcyB0byBiZSBnaXZlbiBvbiBleGl0LlxuICAgIEBwYXJhbSB7RDNTZWxlY3Rpb259IFtwYXJhbXMucGFyZW50ID0gZDMuc2VsZWN0KFwiYm9keVwiKV0gVGhlIHBhcmVudCBlbGVtZW50IGZvciB0aGlzIG5ldyBlbGVtZW50IHRvIGJlIGFwcGVuZGVkIHRvLlxuICAgIEBwYXJhbSB7RDNUcmFuc2l0aW9ufSBbcGFyYW1zLnRyYW5zaXRpb24gPSBkMy50cmFuc2l0aW9uKCkuZHVyYXRpb24oMCldIFRoZSB0cmFuc2l0aW9uIHRvIHVzZSB3aGVuIGFuaW1hdGVkIHRoZSBkaWZmZXJlbnQgbGlmZSBjeWNsZSBzdGFnZXMuXG4gICAgQHBhcmFtIHtPYmplY3R9IFtwYXJhbXMudXBkYXRlID0ge31dIEEgY29sbGVjdGlvbiBvZiBrZXkvdmFsdWUgcGFpcnMgdGhhdCBtYXAgdG8gYXR0cmlidXRlcyB0byBiZSBnaXZlbiBvbiB1cGRhdGUuXG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IsIHApIHtcblxuICAvLyBvdmVycmlkZXMgZGVmYXVsdCBwYXJhbXNcbiAgcCA9IE9iamVjdC5hc3NpZ24oe30sIHtcbiAgICBjb25kaXRpb246IHRydWUsXG4gICAgZW50ZXI6IHt9LFxuICAgIGV4aXQ6IHt9LFxuICAgIHBhcmVudDogc2VsZWN0KFwiYm9keVwiKSxcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uKCkuZHVyYXRpb24oMCksXG4gICAgdXBkYXRlOiB7fVxuICB9LCBwKTtcblxuICB2YXIgY2xhc3NOYW1lID0gKC9cXC4oW14jXSspL2cpLmV4ZWMoc2VsZWN0b3IpLFxuICAgICAgICBpZCA9ICgvIyhbXlxcLl0rKS9nKS5leGVjKHNlbGVjdG9yKSxcbiAgICAgICAgdGFnID0gKC9eKFteLl4jXSspL2cpLmV4ZWMoc2VsZWN0b3IpWzFdO1xuXG4gIHZhciBlbGVtID0gcC5wYXJlbnQuc2VsZWN0QWxsKHNlbGVjdG9yLmluY2x1ZGVzKFwiOlwiKSA/IHNlbGVjdG9yLnNwbGl0KFwiOlwiKVsxXSA6IHNlbGVjdG9yKVxuICAgIC5kYXRhKHAuY29uZGl0aW9uID8gW251bGxdIDogW10pO1xuXG4gIHZhciBlbnRlciA9IGVsZW0uZW50ZXIoKS5hcHBlbmQodGFnKS5jYWxsKGF0dHJpemUsIHAuZW50ZXIpO1xuXG4gIGlmIChpZCkgeyBlbnRlci5hdHRyKFwiaWRcIiwgaWRbMV0pOyB9XG4gIGlmIChjbGFzc05hbWUpIHsgZW50ZXIuYXR0cihcImNsYXNzXCIsIGNsYXNzTmFtZVsxXSk7IH1cblxuICBlbGVtLmV4aXQoKS50cmFuc2l0aW9uKHAudHJhbnNpdGlvbikuY2FsbChhdHRyaXplLCBwLmV4aXQpLnJlbW92ZSgpO1xuXG4gIHZhciB1cGRhdGUgPSBlbnRlci5tZXJnZShlbGVtKTtcbiAgdXBkYXRlLnRyYW5zaXRpb24ocC50cmFuc2l0aW9uKS5jYWxsKGF0dHJpemUsIHAudXBkYXRlKTtcblxuICByZXR1cm4gdXBkYXRlO1xuXG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVsZW0uanMubWFwIiwiLyoqXG4gICAgQGZ1bmN0aW9uIGlzT2JqZWN0XG4gICAgQGRlc2MgRGV0ZWN0cyBpZiBhIHZhcmlhYmxlIGlzIGEgamF2YXNjcmlwdCBPYmplY3QuXG4gICAgQHBhcmFtIHsqfSBpdGVtXG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaXRlbSkge1xuICByZXR1cm4gaXRlbSAmJlxuICAgIHR5cGVvZiBpdGVtID09PSBcIm9iamVjdFwiICYmXG4gICAgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgfHwgaXRlbSAhPT0gd2luZG93ICYmIGl0ZW0gIT09IHdpbmRvdy5kb2N1bWVudCAmJiAhKGl0ZW0gaW5zdGFuY2VvZiBFbGVtZW50KSkgJiZcbiAgICAhQXJyYXkuaXNBcnJheShpdGVtKVxuICAgID8gdHJ1ZSA6IGZhbHNlO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc09iamVjdC5qcy5tYXAiLCJpbXBvcnQge21lcmdlLCBzdW19IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtrZXlzfSBmcm9tIFwiZDMtY29sbGVjdGlvblwiO1xuXG4vKipcbiAgICBAZnVuY3Rpb24gbWVyZ2VcbiAgICBAZGVzYyBDb21iaW5lcyBhbiBBcnJheSBvZiBPYmplY3RzIHRvZ2V0aGVyIGFuZCByZXR1cm5zIGEgbmV3IE9iamVjdC5cbiAgICBAcGFyYW0ge0FycmF5fSBvYmplY3RzIFRoZSBBcnJheSBvZiBvYmplY3RzIHRvIGJlIG1lcmdlZCB0b2dldGhlci5cbiAgICBAcGFyYW0ge09iamVjdH0gYWdncyBBbiBvYmplY3QgY29udGFpbmluZyBzcGVjaWZpYyBhZ2dyZWdhdGlvbiBtZXRob2RzIChmdW5jdGlvbnMpIGZvciBlYWNoIGtleSB0eXBlLiBCeSBkZWZhdWx0LCBudW1iZXJzIGFyZSBzdW1tZWQgYW5kIHN0cmluZ3MgYXJlIHJldHVybmVkIGFzIGFuIGFycmF5IG9mIHVuaXF1ZSB2YWx1ZXMuXG4gICAgQGV4YW1wbGUgPGNhcHRpb24+dGhpczwvY2FwdGlvbj5cbm1lcmdlKFtcbiAge2lkOiBcImZvb1wiLCBncm91cDogXCJBXCIsIHZhbHVlOiAxMCwgbGlua3M6IFsxLCAyXX0sXG4gIHtpZDogXCJiYXJcIiwgZ3JvdXA6IFwiQVwiLCB2YWx1ZTogMjAsIGxpbmtzOiBbMSwgM119XG5dKTtcbiAgICBAZXhhbXBsZSA8Y2FwdGlvbj5yZXR1cm5zIHRoaXM8L2NhcHRpb24+XG57aWQ6IFtcImJhclwiLCBcImZvb1wiXSwgZ3JvdXA6IFwiQVwiLCB2YWx1ZTogMzAsIGxpbmtzOiBbMSwgMiwgM119XG4qL1xuZnVuY3Rpb24gb2JqZWN0TWVyZ2Uob2JqZWN0cywgYWdncykge1xuICBpZiAoIGFnZ3MgPT09IHZvaWQgMCApIGFnZ3MgPSB7fTtcblxuXG4gIHZhciBhdmFpbGFibGVLZXlzID0gbmV3IFNldChtZXJnZShvYmplY3RzLm1hcChmdW5jdGlvbiAobykgeyByZXR1cm4ga2V5cyhvKTsgfSkpKSxcbiAgICAgICAgbmV3T2JqZWN0ID0ge307XG5cbiAgYXZhaWxhYmxlS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgdmFyIHZhbHVlcyA9IG9iamVjdHMubWFwKGZ1bmN0aW9uIChvKSB7IHJldHVybiBvW2tdOyB9KTtcbiAgICB2YXIgdmFsdWU7XG4gICAgaWYgKGFnZ3Nba10pIHsgdmFsdWUgPSBhZ2dzW2tdKHZhbHVlcyk7IH1cbiAgICBlbHNlIHtcbiAgICAgIHZhciB0eXBlcyA9IHZhbHVlcy5tYXAoZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHYgfHwgdiA9PT0gZmFsc2UgPyB2LmNvbnN0cnVjdG9yIDogdjsgfSkuZmlsdGVyKGZ1bmN0aW9uICh2KSB7IHJldHVybiB2ICE9PSB2b2lkIDA7IH0pO1xuICAgICAgaWYgKCF0eXBlcy5sZW5ndGgpIHsgdmFsdWUgPSB1bmRlZmluZWQ7IH1cbiAgICAgIGVsc2UgaWYgKHR5cGVzLmluZGV4T2YoQXJyYXkpID49IDApIHtcbiAgICAgICAgdmFsdWUgPSBtZXJnZSh2YWx1ZXMubWFwKGZ1bmN0aW9uICh2KSB7IHJldHVybiB2IGluc3RhbmNlb2YgQXJyYXkgPyB2IDogW3ZdOyB9KSk7XG4gICAgICAgIHZhbHVlID0gQXJyYXkuZnJvbShuZXcgU2V0KHZhbHVlKSk7XG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDEpIHsgdmFsdWUgPSB2YWx1ZVswXTsgfVxuICAgICAgfVxuICAgICAgZWxzZSBpZiAodHlwZXMuaW5kZXhPZihTdHJpbmcpID49IDApIHtcbiAgICAgICAgdmFsdWUgPSBBcnJheS5mcm9tKG5ldyBTZXQodmFsdWVzKSk7XG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDEpIHsgdmFsdWUgPSB2YWx1ZVswXTsgfVxuICAgICAgfVxuICAgICAgZWxzZSBpZiAodHlwZXMuaW5kZXhPZihOdW1iZXIpID49IDApIHsgdmFsdWUgPSBzdW0odmFsdWVzKTsgfVxuICAgICAgZWxzZSBpZiAodHlwZXMuaW5kZXhPZihPYmplY3QpID49IDApIHsgdmFsdWUgPSBvYmplY3RNZXJnZSh2YWx1ZXMuZmlsdGVyKGZ1bmN0aW9uICh2KSB7IHJldHVybiB2OyB9KSk7IH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB2YWx1ZSA9IEFycmF5LmZyb20obmV3IFNldCh2YWx1ZXMuZmlsdGVyKGZ1bmN0aW9uICh2KSB7IHJldHVybiB2ICE9PSB2b2lkIDA7IH0pKSk7XG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDEpIHsgdmFsdWUgPSB2YWx1ZVswXTsgfVxuICAgICAgfVxuICAgIH1cbiAgICBuZXdPYmplY3Rba10gPSB2YWx1ZTtcbiAgfSk7XG5cbiAgcmV0dXJuIG5ld09iamVjdDtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBvYmplY3RNZXJnZTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVyZ2UuanMubWFwIiwiLyoqXG4gQGZ1bmN0aW9uIHBhcnNlU2lkZXNcbiBAZGVzYyBDb252ZXJ0cyBhIHN0cmluZyBvZiBkaXJlY3Rpb25hbCBDU1Mgc2hvcnRoYW5kIHZhbHVlcyBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZSB2YWx1ZXMgZXhwYW5kZWQuXG4gQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSBzaWRlcyBUaGUgQ1NTIHNob3J0aGFuZCBzdHJpbmcgdG8gZXhwYW5kLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzaWRlcykge1xuICB2YXIgdmFsdWVzO1xuICBpZiAodHlwZW9mIHNpZGVzID09PSBcIm51bWJlclwiKSB7IHZhbHVlcyA9IFtzaWRlc107IH1cbiAgZWxzZSB7IHZhbHVlcyA9IHNpZGVzLnNwbGl0KC9cXHMrLyk7IH1cblxuICBpZiAodmFsdWVzLmxlbmd0aCA9PT0gMSkgeyB2YWx1ZXMgPSBbdmFsdWVzWzBdLCB2YWx1ZXNbMF0sIHZhbHVlc1swXSwgdmFsdWVzWzBdXTsgfVxuICBlbHNlIGlmICh2YWx1ZXMubGVuZ3RoID09PSAyKSB7IHZhbHVlcyA9IHZhbHVlcy5jb25jYXQodmFsdWVzKTsgfVxuICBlbHNlIGlmICh2YWx1ZXMubGVuZ3RoID09PSAzKSB7IHZhbHVlcy5wdXNoKHZhbHVlc1sxXSk7IH1cblxuICByZXR1cm4gW1xuICAgIFwidG9wXCIsXG4gICAgXCJyaWdodFwiLFxuICAgIFwiYm90dG9tXCIsXG4gICAgXCJsZWZ0XCJcbiAgXS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgZGlyZWN0aW9uLCBpKSB7XG4gICAgdmFyIHZhbHVlID0gcGFyc2VGbG9hdCh2YWx1ZXNbaV0pO1xuICAgIGFjY1tkaXJlY3Rpb25dID0gdmFsdWUgfHwgMDtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlU2lkZXMuanMubWFwIiwiLyoqXG4gICAgQGZ1bmN0aW9uIHByZWZpeFxuICAgIEBkZXNjIFJldHVybnMgdGhlIGFwcHJvcHJpYXRlIENTUyB2ZW5kb3IgcHJlZml4LCBnaXZlbiB0aGUgY3VycmVudCBicm93c2VyLlxuKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICBpZiAoXCItd2Via2l0LXRyYW5zZm9ybVwiIGluIGRvY3VtZW50LmJvZHkuc3R5bGUpIHsgcmV0dXJuIFwiLXdlYmtpdC1cIjsgfVxuICBlbHNlIGlmIChcIi1tb3otdHJhbnNmb3JtXCIgaW4gZG9jdW1lbnQuYm9keS5zdHlsZSkgeyByZXR1cm4gXCItbW96LVwiOyB9XG4gIGVsc2UgaWYgKFwiLW1zLXRyYW5zZm9ybVwiIGluIGRvY3VtZW50LmJvZHkuc3R5bGUpIHsgcmV0dXJuIFwiLW1zLVwiOyB9XG4gIGVsc2UgaWYgKFwiLW8tdHJhbnNmb3JtXCIgaW4gZG9jdW1lbnQuYm9keS5zdHlsZSkgeyByZXR1cm4gXCItby1cIjsgfVxuICBlbHNlIHsgcmV0dXJuIFwiXCI7IH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJlZml4LmpzLm1hcCIsIi8qKlxuICAgIEBmdW5jdGlvbiBzdHlsaXplXG4gICAgQGRlc2MgQXBwbGllcyBlYWNoIGtleS92YWx1ZSBpbiBhbiBvYmplY3QgYXMgYSBzdHlsZS5cbiAgICBAcGFyYW0ge0Qzc2VsZWN0aW9ufSBlbGVtIFRoZSBEMyBlbGVtZW50IHRvIGFwcGx5IHRoZSBzdHlsZXMgdG8uXG4gICAgQHBhcmFtIHtPYmplY3R9IHN0eWxlcyBBbiBvYmplY3Qgb2Yga2V5L3ZhbHVlIHN0eWxlIHBhaXJzLlxuKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGUsIHMpIHtcbiAgaWYgKCBzID09PSB2b2lkIDAgKSBzID0ge307XG5cbiAgZm9yICh2YXIgayBpbiBzKSB7IGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIGspKSB7IGUuc3R5bGUoaywgc1trXSk7IH0gfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsaXplLmpzLm1hcCIsIi8qKlxuICAgIEBmdW5jdGlvbiBzXG4gICAgQGRlc2MgUmV0dXJucyA0IHJhbmRvbSBjaGFyYWN0ZXJzLCB1c2VkIGZvciBjb25zdHJ1Y3RpbmcgdW5pcXVlIGlkZW50aWZpZXJzLlxuICAgIEBwcml2YXRlXG4qL1xuZnVuY3Rpb24gcygpIHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoKDEgKyBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDApLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMSk7XG59XG5cbi8qKlxuICAgIEBmdW5jdGlvbiB1dWlkXG4gICAgQHN1bW1hcnkgUmV0dXJucyBhIHVuaXF1ZSBpZGVudGlmaWVyLlxuKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gKFwiXCIgKyAocygpKSArIChzKCkpICsgXCItXCIgKyAocygpKSArIFwiLVwiICsgKHMoKSkgKyBcIi1cIiArIChzKCkpICsgXCItXCIgKyAocygpKSArIChzKCkpICsgKHMoKSkpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkLmpzLm1hcCIsImV4cG9ydCB7ZGVmYXVsdCBhcyBmb250RXhpc3RzfSBmcm9tIFwiLi9zcmMvZm9udEV4aXN0c1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJ0bH0gZnJvbSBcIi4vc3JjL3J0bFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0cmluZ2lmeX0gZnJvbSBcIi4vc3JjL3N0cmluZ2lmeVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0cmlwfSBmcm9tIFwiLi9zcmMvc3RyaXBcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBUZXh0Qm94fSBmcm9tIFwiLi9zcmMvVGV4dEJveFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRleHRTcGxpdH0gZnJvbSBcIi4vc3JjL3RleHRTcGxpdFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRleHRXaWR0aH0gZnJvbSBcIi4vc3JjL3RleHRXaWR0aFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRleHRXcmFwfSBmcm9tIFwiLi9zcmMvdGV4dFdyYXBcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aXRsZUNhc2V9IGZyb20gXCIuL3NyYy90aXRsZUNhc2VcIjtcbmV4cG9ydCB7dHJpbSwgdHJpbUxlZnQsIHRyaW1SaWdodH0gZnJvbSBcIi4vc3JjL3RyaW1cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiLyoqXG4gICAgQGV4dGVybmFsIEJhc2VDbGFzc1xuICAgIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2QzcGx1cy9kM3BsdXMtY29tbW9uI0Jhc2VDbGFzc1xuKi9cblxuaW1wb3J0IHtzZWxlY3R9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7dHJhbnNpdGlvbn0gZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmltcG9ydCB7bWF4LCBtaW4sIHN1bX0gZnJvbSBcImQzLWFycmF5XCI7XG5cbmltcG9ydCB7YWNjZXNzb3IsIEJhc2VDbGFzcywgY29uc3RhbnQsIHBhcnNlU2lkZXN9IGZyb20gXCJkM3BsdXMtY29tbW9uXCI7XG5cbmltcG9ydCBmb250RXhpc3RzIGZyb20gXCIuL2ZvbnRFeGlzdHNcIjtcbmltcG9ydCB7ZGVmYXVsdCBhcyBkZXRlY3RSVEx9IGZyb20gXCIuL3J0bFwiO1xuaW1wb3J0IHN0cmlwIGZyb20gXCIuL3N0cmlwXCI7XG5pbXBvcnQgdGV4dFNwbGl0IGZyb20gXCIuL3RleHRTcGxpdFwiO1xuaW1wb3J0IG1lYXN1cmUgZnJvbSBcIi4vdGV4dFdpZHRoXCI7XG5pbXBvcnQgd3JhcCBmcm9tIFwiLi90ZXh0V3JhcFwiO1xuaW1wb3J0IHt0cmltUmlnaHR9IGZyb20gXCIuL3RyaW1cIjtcblxuLyoqXG4gICAgQGNsYXNzIFRleHRCb3hcbiAgICBAZXh0ZW5kcyBleHRlcm5hbDpCYXNlQ2xhc3NcbiAgICBAZGVzYyBDcmVhdGVzIGEgd3JhcHBlZCB0ZXh0IGJveCBmb3IgZWFjaCBwb2ludCBpbiBhbiBhcnJheSBvZiBkYXRhLiBTZWUgW3RoaXMgZXhhbXBsZV0oaHR0cHM6Ly9kM3BsdXMub3JnL2V4YW1wbGVzL2QzcGx1cy10ZXh0L2dldHRpbmctc3RhcnRlZC8pIGZvciBoZWxwIGdldHRpbmcgc3RhcnRlZCB1c2luZyB0aGUgVGV4dEJveCBjbGFzcy5cbiovXG52YXIgVGV4dEJveCA9IChmdW5jdGlvbiAoQmFzZUNsYXNzKSB7XG4gIGZ1bmN0aW9uIFRleHRCb3goKSB7XG4gICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cblxuICAgIEJhc2VDbGFzcy5jYWxsKHRoaXMpO1xuXG4gICAgdGhpcy5fYXJpYUhpZGRlbiA9IGNvbnN0YW50KFwiZmFsc2VcIik7XG4gICAgdGhpcy5fZGVsYXkgPSAwO1xuICAgIHRoaXMuX2R1cmF0aW9uID0gMDtcbiAgICB0aGlzLl9lbGxpcHNpcyA9IGZ1bmN0aW9uICh0ZXh0LCBsaW5lKSB7IHJldHVybiBsaW5lID8gKCh0ZXh0LnJlcGxhY2UoL1xcLnwsJC9nLCBcIlwiKSkgKyBcIi4uLlwiKSA6IFwiXCI7IH07XG4gICAgdGhpcy5fZm9udENvbG9yID0gY29uc3RhbnQoXCJibGFja1wiKTtcbiAgICB0aGlzLl9mb250RmFtaWx5ID0gY29uc3RhbnQoW1wiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJIZWx2ZXRpY2FOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgXCJzYW5zLXNlcmlmXCJdKTtcbiAgICB0aGlzLl9mb250TWF4ID0gY29uc3RhbnQoNTApO1xuICAgIHRoaXMuX2ZvbnRNaW4gPSBjb25zdGFudCg4KTtcbiAgICB0aGlzLl9mb250T3BhY2l0eSA9IGNvbnN0YW50KDEpO1xuICAgIHRoaXMuX2ZvbnRSZXNpemUgPSBjb25zdGFudChmYWxzZSk7XG4gICAgdGhpcy5fZm9udFNpemUgPSBjb25zdGFudCgxMCk7XG4gICAgdGhpcy5fZm9udFdlaWdodCA9IGNvbnN0YW50KDQwMCk7XG4gICAgdGhpcy5faGVpZ2h0ID0gYWNjZXNzb3IoXCJoZWlnaHRcIiwgMjAwKTtcbiAgICB0aGlzLl9pZCA9IGZ1bmN0aW9uIChkLCBpKSB7IHJldHVybiBkLmlkIHx8IChcIlwiICsgaSk7IH07XG4gICAgdGhpcy5fbGluZUhlaWdodCA9IGZ1bmN0aW9uIChkLCBpKSB7IHJldHVybiB0aGlzJDEuX2ZvbnRTaXplKGQsIGkpICogMS4yOyB9O1xuICAgIHRoaXMuX21heExpbmVzID0gY29uc3RhbnQobnVsbCk7XG4gICAgdGhpcy5fb24gPSB7fTtcbiAgICB0aGlzLl9vdmVyZmxvdyA9IGNvbnN0YW50KGZhbHNlKTtcbiAgICB0aGlzLl9wYWRkaW5nID0gY29uc3RhbnQoMCk7XG4gICAgdGhpcy5fcG9pbnRlckV2ZW50cyA9IGNvbnN0YW50KFwiYXV0b1wiKTtcbiAgICB0aGlzLl9yb3RhdGUgPSBjb25zdGFudCgwKTtcbiAgICB0aGlzLl9yb3RhdGVBbmNob3IgPSBmdW5jdGlvbiAoZCkgeyByZXR1cm4gW2QudyAvIDIsIGQuaCAvIDJdOyB9O1xuICAgIHRoaXMuX3NwbGl0ID0gdGV4dFNwbGl0O1xuICAgIHRoaXMuX3RleHQgPSBhY2Nlc3NvcihcInRleHRcIik7XG4gICAgdGhpcy5fdGV4dEFuY2hvciA9IGNvbnN0YW50KFwic3RhcnRcIik7XG4gICAgdGhpcy5fdmVydGljYWxBbGlnbiA9IGNvbnN0YW50KFwidG9wXCIpO1xuICAgIHRoaXMuX3dpZHRoID0gYWNjZXNzb3IoXCJ3aWR0aFwiLCAyMDApO1xuICAgIHRoaXMuX3ggPSBhY2Nlc3NvcihcInhcIiwgMCk7XG4gICAgdGhpcy5feSA9IGFjY2Vzc29yKFwieVwiLCAwKTtcblxuICB9XG5cbiAgaWYgKCBCYXNlQ2xhc3MgKSBUZXh0Qm94Ll9fcHJvdG9fXyA9IEJhc2VDbGFzcztcbiAgVGV4dEJveC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKCBCYXNlQ2xhc3MgJiYgQmFzZUNsYXNzLnByb3RvdHlwZSApO1xuICBUZXh0Qm94LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFRleHRCb3g7XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgUmVuZGVycyB0aGUgdGV4dCBib3hlcy4gSWYgYSAqY2FsbGJhY2sqIGlzIHNwZWNpZmllZCwgaXQgd2lsbCBiZSBjYWxsZWQgb25jZSB0aGUgc2hhcGVzIGFyZSBkb25lIGRyYXdpbmcuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufSBbKmNhbGxiYWNrKiA9IHVuZGVmaW5lZF1cbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyIChjYWxsYmFjaykge1xuICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG5cbiAgICBpZiAodGhpcy5fc2VsZWN0ID09PSB2b2lkIDApIHsgdGhpcy5zZWxlY3Qoc2VsZWN0KFwiYm9keVwiKS5hcHBlbmQoXCJzdmdcIikuc3R5bGUoXCJ3aWR0aFwiLCAoKHdpbmRvdy5pbm5lcldpZHRoKSArIFwicHhcIikpLnN0eWxlKFwiaGVpZ2h0XCIsICgod2luZG93LmlubmVySGVpZ2h0KSArIFwicHhcIikpLm5vZGUoKSk7IH1cblxuICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgIHZhciBib3hlcyA9IHRoaXMuX3NlbGVjdC5zZWxlY3RBbGwoXCIuZDNwbHVzLXRleHRCb3hcIikuZGF0YSh0aGlzLl9kYXRhLnJlZHVjZShmdW5jdGlvbiAoYXJyLCBkLCBpKSB7XG5cbiAgICAgIHZhciB0ID0gdGhpcyQxLl90ZXh0KGQsIGkpO1xuICAgICAgaWYgKHQgPT09IHZvaWQgMCkgeyByZXR1cm4gYXJyOyB9XG5cbiAgICAgIHZhciByZXNpemUgPSB0aGlzJDEuX2ZvbnRSZXNpemUoZCwgaSk7XG4gICAgICB2YXIgbEhSYXRpbyA9IHRoaXMkMS5fbGluZUhlaWdodChkLCBpKSAvIHRoaXMkMS5fZm9udFNpemUoZCwgaSk7XG5cbiAgICAgIHZhciBmUyA9IHJlc2l6ZSA/IHRoaXMkMS5fZm9udE1heChkLCBpKSA6IHRoaXMkMS5fZm9udFNpemUoZCwgaSksXG4gICAgICAgICAgbEggPSByZXNpemUgPyBmUyAqIGxIUmF0aW8gOiB0aGlzJDEuX2xpbmVIZWlnaHQoZCwgaSksXG4gICAgICAgICAgbGluZSA9IDEsXG4gICAgICAgICAgbGluZURhdGEgPSBbXSxcbiAgICAgICAgICBzaXplcyxcbiAgICAgICAgICB3cmFwUmVzdWx0cztcblxuICAgICAgdmFyIHN0eWxlID0ge1xuICAgICAgICBcImZvbnQtZmFtaWx5XCI6IGZvbnRFeGlzdHModGhpcyQxLl9mb250RmFtaWx5KGQsIGkpKSxcbiAgICAgICAgXCJmb250LXNpemVcIjogZlMsXG4gICAgICAgIFwiZm9udC13ZWlnaHRcIjogdGhpcyQxLl9mb250V2VpZ2h0KGQsIGkpLFxuICAgICAgICBcImxpbmUtaGVpZ2h0XCI6IGxIXG4gICAgICB9O1xuXG4gICAgICB2YXIgcGFkZGluZyA9IHBhcnNlU2lkZXModGhpcyQxLl9wYWRkaW5nKGQsIGkpKTtcblxuICAgICAgdmFyIGggPSB0aGlzJDEuX2hlaWdodChkLCBpKSAtIChwYWRkaW5nLnRvcCArIHBhZGRpbmcuYm90dG9tKSxcbiAgICAgICAgICAgIHcgPSB0aGlzJDEuX3dpZHRoKGQsIGkpIC0gKHBhZGRpbmcubGVmdCArIHBhZGRpbmcucmlnaHQpO1xuXG4gICAgICB2YXIgd3JhcHBlciA9IHdyYXAoKVxuICAgICAgICAuZm9udEZhbWlseShzdHlsZVtcImZvbnQtZmFtaWx5XCJdKVxuICAgICAgICAuZm9udFNpemUoZlMpXG4gICAgICAgIC5mb250V2VpZ2h0KHN0eWxlW1wiZm9udC13ZWlnaHRcIl0pXG4gICAgICAgIC5saW5lSGVpZ2h0KGxIKVxuICAgICAgICAubWF4TGluZXModGhpcyQxLl9tYXhMaW5lcyhkLCBpKSlcbiAgICAgICAgLmhlaWdodChoKVxuICAgICAgICAub3ZlcmZsb3codGhpcyQxLl9vdmVyZmxvdyhkLCBpKSlcbiAgICAgICAgLndpZHRoKHcpO1xuXG4gICAgICB2YXIgZk1heCA9IHRoaXMkMS5fZm9udE1heChkLCBpKSxcbiAgICAgICAgICAgIGZNaW4gPSB0aGlzJDEuX2ZvbnRNaW4oZCwgaSksXG4gICAgICAgICAgICB2QSA9IHRoaXMkMS5fdmVydGljYWxBbGlnbihkLCBpKSxcbiAgICAgICAgICAgIHdvcmRzID0gdGhpcyQxLl9zcGxpdCh0LCBpKTtcblxuICAgICAgLyoqXG4gICAgICAgICAgRmlndXJlcyBvdXQgdGhlIGxpbmVEYXRhIHRvIGJlIHVzZWQgZm9yIHdyYXBwaW5nLlxuICAgICAgICAgIEBwcml2YXRlXG4gICAgICAqL1xuICAgICAgZnVuY3Rpb24gY2hlY2tTaXplKCkge1xuICAgICAgICB2YXIgdHJ1bmNhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKGxpbmUgPCAxKSB7IGxpbmVEYXRhID0gW3RoYXQuX2VsbGlwc2lzKFwiXCIsIGxpbmUpXTsgfVxuICAgICAgICAgIGVsc2UgeyBsaW5lRGF0YVtsaW5lIC0gMV0gPSB0aGF0Ll9lbGxpcHNpcyhsaW5lRGF0YVtsaW5lIC0gMV0sIGxpbmUpOyB9XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gQ29uc3RyYWludCB0aGUgZm9udCBzaXplXG4gICAgICAgIGZTID0gbWF4KFtmUywgZk1pbl0pO1xuICAgICAgICBmUyA9IG1pbihbZlMsIGZNYXhdKTtcblxuICAgICAgICBpZiAocmVzaXplKSB7XG4gICAgICAgICAgbEggPSBmUyAqIGxIUmF0aW87XG4gICAgICAgICAgd3JhcHBlclxuICAgICAgICAgICAgLmZvbnRTaXplKGZTKVxuICAgICAgICAgICAgLmxpbmVIZWlnaHQobEgpO1xuICAgICAgICAgIHN0eWxlW1wiZm9udC1zaXplXCJdID0gZlM7XG4gICAgICAgICAgc3R5bGVbXCJsaW5lLWhlaWdodFwiXSA9IGxIO1xuICAgICAgICB9XG5cbiAgICAgICAgd3JhcFJlc3VsdHMgPSB3cmFwcGVyKHQpO1xuICAgICAgICBsaW5lRGF0YSA9IHdyYXBSZXN1bHRzLmxpbmVzLmZpbHRlcihmdW5jdGlvbiAobCkgeyByZXR1cm4gbCAhPT0gXCJcIjsgfSk7XG4gICAgICAgIGxpbmUgPSBsaW5lRGF0YS5sZW5ndGg7XG5cbiAgICAgICAgaWYgKHdyYXBSZXN1bHRzLnRydW5jYXRlZCkge1xuICAgICAgICAgIGlmIChyZXNpemUpIHtcbiAgICAgICAgICAgIGZTLS07XG4gICAgICAgICAgICBpZiAoZlMgPCBmTWluKSB7XG4gICAgICAgICAgICAgIGZTID0gZk1pbjtcbiAgICAgICAgICAgICAgdHJ1bmNhdGUoKTtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7IGNoZWNrU2l6ZSgpOyB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2UgeyB0cnVuY2F0ZSgpOyB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHcgPiBmTWluICYmIChoID4gbEggfHwgcmVzaXplICYmIGggPiBmTWluICogbEhSYXRpbykpIHtcblxuICAgICAgICBpZiAocmVzaXplKSB7XG5cbiAgICAgICAgICBzaXplcyA9IG1lYXN1cmUod29yZHMsIHN0eWxlKTtcblxuICAgICAgICAgIHZhciBhcmVhTW9kID0gMS4xNjUgKyB3IC8gaCAqIDAuMSxcbiAgICAgICAgICAgICAgICBib3hBcmVhID0gdyAqIGgsXG4gICAgICAgICAgICAgICAgbWF4V2lkdGggPSBtYXgoc2l6ZXMpLFxuICAgICAgICAgICAgICAgIHRleHRBcmVhID0gc3VtKHNpemVzLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gZCAqIGxIOyB9KSAqIGFyZWFNb2Q7XG5cbiAgICAgICAgICBpZiAobWF4V2lkdGggPiB3IHx8IHRleHRBcmVhID4gYm94QXJlYSkge1xuICAgICAgICAgICAgdmFyIGFyZWFSYXRpbyA9IE1hdGguc3FydChib3hBcmVhIC8gdGV4dEFyZWEpLFxuICAgICAgICAgICAgICAgICAgd2lkdGhSYXRpbyA9IHcgLyBtYXhXaWR0aDtcbiAgICAgICAgICAgIHZhciBzaXplUmF0aW8gPSBtaW4oW2FyZWFSYXRpbywgd2lkdGhSYXRpb10pO1xuICAgICAgICAgICAgZlMgPSBNYXRoLmZsb29yKGZTICogc2l6ZVJhdGlvKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgaGVpZ2h0TWF4ID0gTWF0aC5mbG9vcihoICogMC44KTtcbiAgICAgICAgICBpZiAoZlMgPiBoZWlnaHRNYXgpIHsgZlMgPSBoZWlnaHRNYXg7IH1cblxuICAgICAgICB9XG5cbiAgICAgICAgY2hlY2tTaXplKCk7XG5cbiAgICAgIH1cblxuICAgICAgaWYgKGxpbmVEYXRhLmxlbmd0aCkge1xuXG4gICAgICAgIHZhciB0SCA9IGxpbmUgKiBsSDtcbiAgICAgICAgdmFyIHIgPSB0aGlzJDEuX3JvdGF0ZShkLCBpKTtcbiAgICAgICAgdmFyIHlQID0gciA9PT0gMCA/IHZBID09PSBcInRvcFwiID8gMCA6IHZBID09PSBcIm1pZGRsZVwiID8gaCAvIDIgLSB0SCAvIDIgOiBoIC0gdEggOiAwO1xuICAgICAgICB5UCAtPSBsSCAqIDAuMTtcblxuICAgICAgICBhcnIucHVzaCh7XG4gICAgICAgICAgYUg6IHRoaXMkMS5fYXJpYUhpZGRlbihkLCBpKSxcbiAgICAgICAgICBkYXRhOiBkLFxuICAgICAgICAgIGk6IGksXG4gICAgICAgICAgbGluZXM6IGxpbmVEYXRhLFxuICAgICAgICAgIGZDOiB0aGlzJDEuX2ZvbnRDb2xvcihkLCBpKSxcbiAgICAgICAgICBmRjogc3R5bGVbXCJmb250LWZhbWlseVwiXSxcbiAgICAgICAgICBmTzogdGhpcyQxLl9mb250T3BhY2l0eShkLCBpKSxcbiAgICAgICAgICBmVzogc3R5bGVbXCJmb250LXdlaWdodFwiXSxcbiAgICAgICAgICBpZDogdGhpcyQxLl9pZChkLCBpKSxcbiAgICAgICAgICB0QTogdGhpcyQxLl90ZXh0QW5jaG9yKGQsIGkpLFxuICAgICAgICAgIHZBOiB0aGlzJDEuX3ZlcnRpY2FsQWxpZ24oZCwgaSksXG4gICAgICAgICAgd2lkdGhzOiB3cmFwUmVzdWx0cy53aWR0aHMsXG4gICAgICAgICAgZlM6IGZTLCBsSDogbEgsIHc6IHcsIGg6IGgsIHI6IHIsXG4gICAgICAgICAgeDogdGhpcyQxLl94KGQsIGkpICsgcGFkZGluZy5sZWZ0LFxuICAgICAgICAgIHk6IHRoaXMkMS5feShkLCBpKSArIHlQICsgcGFkZGluZy50b3BcbiAgICAgICAgfSk7XG5cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFycjtcblxuICAgIH0sIFtdKSwgZnVuY3Rpb24gKGQpIHsgcmV0dXJuIHRoaXMkMS5faWQoZC5kYXRhLCBkLmkpOyB9KTtcblxuICAgIHZhciB0ID0gdHJhbnNpdGlvbigpLmR1cmF0aW9uKHRoaXMuX2R1cmF0aW9uKTtcblxuICAgIGlmICh0aGlzLl9kdXJhdGlvbiA9PT0gMCkge1xuXG4gICAgICBib3hlcy5leGl0KCkucmVtb3ZlKCk7XG5cbiAgICB9XG4gICAgZWxzZSB7XG5cbiAgICAgIGJveGVzLmV4aXQoKS50cmFuc2l0aW9uKCkuZGVsYXkodGhpcy5fZHVyYXRpb24pLnJlbW92ZSgpO1xuXG4gICAgICBib3hlcy5leGl0KCkuc2VsZWN0QWxsKFwidGV4dFwiKS50cmFuc2l0aW9uKHQpXG4gICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCAwKVxuICAgICAgICAuc3R5bGUoXCJvcGFjaXR5XCIsIDApO1xuXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcm90YXRlKHRleHQpIHtcbiAgICAgIHRleHQuYXR0cihcInRyYW5zZm9ybVwiLCBmdW5jdGlvbiAoZCwgaSkge1xuICAgICAgICB2YXIgcm90YXRlQW5jaG9yID0gdGhhdC5fcm90YXRlQW5jaG9yKGQsIGkpO1xuICAgICAgICByZXR1cm4gKFwidHJhbnNsYXRlKFwiICsgKGQueCkgKyBcIiwgXCIgKyAoZC55KSArIFwiKSByb3RhdGUoXCIgKyAoZC5yKSArIFwiLCBcIiArIChyb3RhdGVBbmNob3JbMF0pICsgXCIsIFwiICsgKHJvdGF0ZUFuY2hvclsxXSkgKyBcIilcIik7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB2YXIgdXBkYXRlID0gYm94ZXMuZW50ZXIoKS5hcHBlbmQoXCJnXCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJkM3BsdXMtdGV4dEJveFwiKVxuICAgICAgICAuYXR0cihcImlkXCIsIGZ1bmN0aW9uIChkKSB7IHJldHVybiAoXCJkM3BsdXMtdGV4dEJveC1cIiArIChzdHJpcChkLmlkKSkpOyB9KVxuICAgICAgICAuY2FsbChyb3RhdGUpXG4gICAgICAubWVyZ2UoYm94ZXMpO1xuXG4gICAgdmFyIHJ0bCA9IGRldGVjdFJUTCgpO1xuXG4gICAgdXBkYXRlXG4gICAgICAuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gdGhpcyQxLl9wb2ludGVyRXZlbnRzKGQuZGF0YSwgZC5pKTsgfSlcbiAgICAgIC5lYWNoKGZ1bmN0aW9uKGQpIHtcblxuICAgICAgICAvKipcbiAgICAgICAgICAgIFN0eWxlcyB0byBhcHBseSB0byBlYWNoIDx0ZXh0PiBlbGVtZW50LlxuICAgICAgICAgICAgQHByaXZhdGVcbiAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gdGV4dFN0eWxlKHRleHQpIHtcblxuICAgICAgICAgIHRleHRcbiAgICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uICh0KSB7IHJldHVybiB0cmltUmlnaHQodCk7IH0pXG4gICAgICAgICAgICAuYXR0cihcImFyaWEtaGlkZGVuXCIsIGQuYUgpXG4gICAgICAgICAgICAuYXR0cihcImRpclwiLCBydGwgPyBcInJ0bFwiIDogXCJsdHJcIilcbiAgICAgICAgICAgIC5hdHRyKFwiZmlsbFwiLCBkLmZDKVxuICAgICAgICAgICAgLmF0dHIoXCJ0ZXh0LWFuY2hvclwiLCBkLnRBKVxuICAgICAgICAgICAgLmF0dHIoXCJmb250LWZhbWlseVwiLCBkLmZGKVxuICAgICAgICAgICAgLnN0eWxlKFwiZm9udC1mYW1pbHlcIiwgZC5mRilcbiAgICAgICAgICAgIC5hdHRyKFwiZm9udC1zaXplXCIsICgoZC5mUykgKyBcInB4XCIpKVxuICAgICAgICAgICAgLnN0eWxlKFwiZm9udC1zaXplXCIsICgoZC5mUykgKyBcInB4XCIpKVxuICAgICAgICAgICAgLmF0dHIoXCJmb250LXdlaWdodFwiLCBkLmZXKVxuICAgICAgICAgICAgLnN0eWxlKFwiZm9udC13ZWlnaHRcIiwgZC5mVylcbiAgICAgICAgICAgIC5hdHRyKFwieFwiLCAoKGQudEEgPT09IFwibWlkZGxlXCIgPyBkLncgLyAyIDogcnRsID8gZC50QSA9PT0gXCJzdGFydFwiID8gZC53IDogMCA6IGQudEEgPT09IFwiZW5kXCIgPyBkLncgOiAyICogTWF0aC5zaW4oTWF0aC5QSSAqIGQuciAvIDE4MCkpICsgXCJweFwiKSlcbiAgICAgICAgICAgIC5hdHRyKFwieVwiLCBmdW5jdGlvbiAodCwgaSkgeyByZXR1cm4gZC5yID09PSAwIHx8IGQudkEgPT09IFwidG9wXCIgPyAoKChpICsgMSkgKiBkLmxIIC0gKGQubEggLSBkLmZTKSkgKyBcInB4XCIpIDogXG4gICAgICAgICAgICAgIGQudkEgPT09IFwibWlkZGxlXCIgPyBcbiAgICAgICAgICAgICAgICAoKChkLmggKyBkLmZTKSAvIDIgLSAoZC5sSCAtIGQuZlMpICsgKGkgLSBkLmxpbmVzLmxlbmd0aCAvIDIgKyAwLjUpICogZC5sSCkgKyBcInB4XCIpIDogXG4gICAgICAgICAgICAgICAgKChkLmggLSAyICogKGQubEggLSBkLmZTKSAtIChkLmxpbmVzLmxlbmd0aCAtIChpICsgMSkpICogZC5sSCArIDIgKiBNYXRoLmNvcyhNYXRoLlBJICogZC5yIC8gMTgwKSkgKyBcInB4XCIpOyB9KTtcblxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHRleHRzID0gc2VsZWN0KHRoaXMpLnNlbGVjdEFsbChcInRleHRcIikuZGF0YShkLmxpbmVzKTtcblxuICAgICAgICBpZiAodGhhdC5fZHVyYXRpb24gPT09IDApIHtcblxuICAgICAgICAgIHRleHRzLmNhbGwodGV4dFN0eWxlKTtcblxuICAgICAgICAgIHRleHRzLmV4aXQoKS5yZW1vdmUoKTtcblxuICAgICAgICAgIHRleHRzLmVudGVyKCkuYXBwZW5kKFwidGV4dFwiKVxuICAgICAgICAgICAgLmF0dHIoXCJkb21pbmFudC1iYXNlbGluZVwiLCBcImFscGhhYmV0aWNcIilcbiAgICAgICAgICAgIC5zdHlsZShcImJhc2VsaW5lLXNoaWZ0XCIsIFwiMCVcIilcbiAgICAgICAgICAgIC5hdHRyKFwidW5pY29kZS1iaWRpXCIsIFwiYmlkaS1vdmVycmlkZVwiKVxuICAgICAgICAgICAgLmNhbGwodGV4dFN0eWxlKVxuICAgICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGQuZk8pXG4gICAgICAgICAgICAuc3R5bGUoXCJvcGFjaXR5XCIsIGQuZk8pO1xuXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG5cbiAgICAgICAgICB0ZXh0cy50cmFuc2l0aW9uKHQpLmNhbGwodGV4dFN0eWxlKTtcblxuICAgICAgICAgIHRleHRzLmV4aXQoKS50cmFuc2l0aW9uKHQpXG4gICAgICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgMCkucmVtb3ZlKCk7XG5cbiAgICAgICAgICB0ZXh0cy5lbnRlcigpLmFwcGVuZChcInRleHRcIilcbiAgICAgICAgICAgICAgLmF0dHIoXCJkb21pbmFudC1iYXNlbGluZVwiLCBcImFscGhhYmV0aWNcIilcbiAgICAgICAgICAgICAgLnN0eWxlKFwiYmFzZWxpbmUtc2hpZnRcIiwgXCIwJVwiKVxuICAgICAgICAgICAgICAuYXR0cihcIm9wYWNpdHlcIiwgMClcbiAgICAgICAgICAgICAgLnN0eWxlKFwib3BhY2l0eVwiLCAwKVxuICAgICAgICAgICAgICAuY2FsbCh0ZXh0U3R5bGUpXG4gICAgICAgICAgICAubWVyZ2UodGV4dHMpLnRyYW5zaXRpb24odCkuZGVsYXkodGhhdC5fZGVsYXkpXG4gICAgICAgICAgICAgIC5jYWxsKHRleHRTdHlsZSlcbiAgICAgICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGQuZk8pXG4gICAgICAgICAgICAgIC5zdHlsZShcIm9wYWNpdHlcIiwgZC5mTyk7XG4gICAgICAgIH1cblxuICAgICAgfSlcbiAgICAgIC50cmFuc2l0aW9uKHQpLmNhbGwocm90YXRlKTtcblxuICAgIHZhciBldmVudHMgPSBPYmplY3Qua2V5cyh0aGlzLl9vbiksXG4gICAgICAgICAgb24gPSBldmVudHMucmVkdWNlKGZ1bmN0aW9uIChvYmosIGUpIHtcbiAgICAgICAgICAgIG9ialtlXSA9IGZ1bmN0aW9uIChkLCBpKSB7IHJldHVybiB0aGlzJDEuX29uW2VdKGQuZGF0YSwgaSk7IH07XG4gICAgICAgICAgICByZXR1cm4gb2JqO1xuICAgICAgICAgIH0sIHt9KTtcbiAgICBmb3IgKHZhciBlID0gMDsgZSA8IGV2ZW50cy5sZW5ndGg7IGUrKykgeyB1cGRhdGUub24oZXZlbnRzW2VdLCBvbltldmVudHNbZV1dKTsgfVxuXG4gICAgaWYgKGNhbGxiYWNrKSB7IHNldFRpbWVvdXQoY2FsbGJhY2ssIHRoaXMuX2R1cmF0aW9uICsgMTAwKTsgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG5cbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBJZiAqdmFsdWUqIGlzIHNwZWNpZmllZCwgc2V0cyB0aGUgYXJpYS1oaWRkZW4gYXR0cmlidXRlIHRvIHRoZSBzcGVjaWZpZWQgZnVuY3Rpb24gb3Igc3RyaW5nIGFuZCByZXR1cm5zIHRoZSBjdXJyZW50IGNsYXNzIGluc3RhbmNlLlxuICAgICAgQHBhcmFtIHtGdW5jdGlvbnxTdHJpbmd9ICp2YWx1ZSpcbiAgICAgIEBjaGFpbmFibGVcbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUuYXJpYUhpZGRlbiA9IGZ1bmN0aW9uIGFyaWFIaWRkZW4gKF8pIHtcbiAgICByZXR1cm4gXyAhPT0gdW5kZWZpbmVkIFxuICAgICAgPyAodGhpcy5fYXJpYUhpZGRlbiA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHRoaXMpIFxuICAgICAgOiB0aGlzLl9hcmlhSGlkZGVuO1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIFRleHRCb3hcbiAgICAgIEBkZXNjIFNldHMgdGhlIGRhdGEgYXJyYXkgdG8gdGhlIHNwZWNpZmllZCBhcnJheS4gQSB0ZXh0IGJveCB3aWxsIGJlIGRyYXduIGZvciBlYWNoIG9iamVjdCBpbiB0aGUgYXJyYXkuXG4gICAgICBAcGFyYW0ge0FycmF5fSBbKmRhdGEqID0gW11dXG4gICAgICBAY2hhaW5hYmxlXG4gICovXG4gIFRleHRCb3gucHJvdG90eXBlLmRhdGEgPSBmdW5jdGlvbiBkYXRhIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fZGF0YSA9IF8sIHRoaXMpIDogdGhpcy5fZGF0YTtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBhbmltYXRpb24gZGVsYXkgdG8gdGhlIHNwZWNpZmllZCBudW1iZXIgaW4gbWlsbGlzZWNvbmRzLlxuICAgICAgQHBhcmFtIHtOdW1iZXJ9IFsqdmFsdWUqID0gMF1cbiAgICAgIEBjaGFpbmFibGVcbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUuZGVsYXkgPSBmdW5jdGlvbiBkZWxheSAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2RlbGF5ID0gXywgdGhpcykgOiB0aGlzLl9kZWxheTtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBhbmltYXRpb24gZHVyYXRpb24gdG8gdGhlIHNwZWNpZmllZCBudW1iZXIgaW4gbWlsbGlzZWNvbmRzLlxuICAgICAgQHBhcmFtIHtOdW1iZXJ9IFsqdmFsdWUqID0gMF1cbiAgICAgIEBjaGFpbmFibGVcbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUuZHVyYXRpb24gPSBmdW5jdGlvbiBkdXJhdGlvbiAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2R1cmF0aW9uID0gXywgdGhpcykgOiB0aGlzLl9kdXJhdGlvbjtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBmdW5jdGlvbiB0aGF0IGhhbmRsZXMgd2hhdCB0byBkbyB3aGVuIGEgbGluZSBpcyB0cnVuY2F0ZWQuIEl0IHNob3VsZCByZXR1cm4gdGhlIG5ldyB2YWx1ZSBmb3IgdGhlIGxpbmUsIGFuZCBpcyBwYXNzZWQgMiBhcmd1bWVudHM6IHRoZSBTdHJpbmcgb2YgdGV4dCBmb3IgdGhlIGxpbmUgaW4gcXVlc3Rpb24sIGFuZCB0aGUgbnVtYmVyIG9mIHRoZSBsaW5lLiBCeSBkZWZhdWx0LCBhbiBlbGxpcHNpcyBpcyBhZGRlZCB0byB0aGUgZW5kIG9mIGFueSBsaW5lIGV4Y2VwdCBpZiBpdCBpcyB0aGUgZmlyc3Qgd29yZCB0aGF0IGNhbm5vdCBmaXQgKGluIHRoYXQgY2FzZSwgYW4gZW1wdHkgc3RyaW5nIGlzIHJldHVybmVkKS5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBbKnZhbHVlKl1cbiAgICAgIEBjaGFpbmFibGVcbiAgICAgIEBleGFtcGxlIDxjYXB0aW9uPmRlZmF1bHQgYWNjZXNzb3I8L2NhcHRpb24+XG5mdW5jdGlvbih0ZXh0LCBsaW5lKSB7XG4gIHJldHVybiBsaW5lID8gdGV4dC5yZXBsYWNlKC9cXC58LCQvZywgXCJcIikgKyBcIi4uLlwiIDogXCJcIjtcbn1cbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUuZWxsaXBzaXMgPSBmdW5jdGlvbiBlbGxpcHNpcyAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2VsbGlwc2lzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl9lbGxpcHNpcztcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBmb250IGNvbG9yIHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIHN0cmluZywgd2hpY2ggaXMgaW5mZXJyZWQgZnJvbSB0aGUgW0RPTSBzZWxlY3Rpb25dKCN0ZXh0Qm94LnNlbGVjdCkgYnkgZGVmYXVsdC5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBbKnZhbHVlKiA9IFwiYmxhY2tcIl1cbiAgICAgIEBjaGFpbmFibGVcbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUuZm9udENvbG9yID0gZnVuY3Rpb24gZm9udENvbG9yIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fZm9udENvbG9yID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl9mb250Q29sb3I7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgRGVmaW5lcyB0aGUgZm9udC1mYW1pbHkgdG8gYmUgdXNlZC4gVGhlIHZhbHVlIHBhc3NlZCBjYW4gYmUgZWl0aGVyIGEgKlN0cmluZyogbmFtZSBvZiBhIGZvbnQsIGEgY29tbWEtc2VwYXJhdGVkIGxpc3Qgb2YgZm9udC1mYW1pbHkgZmFsbGJhY2tzLCBhbiAqQXJyYXkqIG9mIGZhbGxiYWNrcywgb3IgYSAqRnVuY3Rpb24qIHRoYXQgcmV0dXJucyBlaXRoZXIgYSAqU3RyaW5nKiBvciBhbiAqQXJyYXkqLiBJZiBzdXBwbHlpbmcgbXVsdGlwbGUgZmFsbGJhY2sgZm9udHMsIHRoZSBbZm9udEV4aXN0c10oI2ZvbnRFeGlzdHMpIGZ1bmN0aW9uIHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgdGhlIGZpcnN0IGF2YWlsYWJsZSBmb250IG9uIHRoZSBjbGllbnQncyBtYWNoaW5lLlxuICAgICAgQHBhcmFtIHtBcnJheXxGdW5jdGlvbnxTdHJpbmd9IFsqdmFsdWUqID0gW1wiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJIZWx2ZXRpY2FOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgXCJzYW5zLXNlcmlmXCJdXVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5mb250RmFtaWx5ID0gZnVuY3Rpb24gZm9udEZhbWlseSAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2ZvbnRGYW1pbHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX2ZvbnRGYW1pbHk7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgbWF4aW11bSBmb250IHNpemUgdG8gdGhlIHNwZWNpZmllZCBhY2Nlc3NvciBmdW5jdGlvbiBvciBzdGF0aWMgbnVtYmVyICh3aGljaCBjb3JyZXNwb25kcyB0byBwaXhlbCB1bml0cyksIHdoaWNoIGlzIHVzZWQgd2hlbiBbZHluYW1pY2FsbHkgcmVzaXppbmcgZm9udHNdKCN0ZXh0Qm94LmZvbnRSZXNpemUpLlxuICAgICAgQHBhcmFtIHtGdW5jdGlvbnxOdW1iZXJ9IFsqdmFsdWUqID0gNTBdXG4gICAgICBAY2hhaW5hYmxlXG4gICovXG4gIFRleHRCb3gucHJvdG90eXBlLmZvbnRNYXggPSBmdW5jdGlvbiBmb250TWF4IChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fZm9udE1heCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHRoaXMpIDogdGhpcy5fZm9udE1heDtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBtaW5pbXVtIGZvbnQgc2l6ZSB0byB0aGUgc3BlY2lmaWVkIGFjY2Vzc29yIGZ1bmN0aW9uIG9yIHN0YXRpYyBudW1iZXIgKHdoaWNoIGNvcnJlc3BvbmRzIHRvIHBpeGVsIHVuaXRzKSwgd2hpY2ggaXMgdXNlZCB3aGVuIFtkeW5hbWljYWxseSByZXNpemluZyBmb250c10oI3RleHRCb3guZm9udFJlc2l6ZSkuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSogPSA4XVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5mb250TWluID0gZnVuY3Rpb24gZm9udE1pbiAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2ZvbnRNaW4gPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX2ZvbnRNaW47XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgZm9udCBvcGFjaXR5IHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIG51bWJlciBiZXR3ZWVuIDAgYW5kIDEuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSogPSAxXVxuICAgICAgQGNoYWluYWJsZVxuICAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUuZm9udE9wYWNpdHkgPSBmdW5jdGlvbiBmb250T3BhY2l0eSAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2ZvbnRPcGFjaXR5ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl9mb250T3BhY2l0eTtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBUb2dnbGVzIGZvbnQgcmVzaXppbmcsIHdoaWNoIGNhbiBlaXRoZXIgYmUgZGVmaW5lZCBhcyBhIHN0YXRpYyBib29sZWFuIGZvciBhbGwgZGF0YSBwb2ludHMsIG9yIGFuIGFjY2Vzc29yIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIGJvb2xlYW4uIFNlZSBbdGhpcyBleGFtcGxlXShodHRwOi8vZDNwbHVzLm9yZy9leGFtcGxlcy9kM3BsdXMtdGV4dC9yZXNpemluZy10ZXh0LykgZm9yIGEgc2lkZS1ieS1zaWRlIGNvbXBhcmlzb24uXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufEJvb2xlYW59IFsqdmFsdWUqID0gZmFsc2VdXG4gICAgICBAY2hhaW5hYmxlXG4gICovXG4gIFRleHRCb3gucHJvdG90eXBlLmZvbnRSZXNpemUgPSBmdW5jdGlvbiBmb250UmVzaXplIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fZm9udFJlc2l6ZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHRoaXMpIDogdGhpcy5fZm9udFJlc2l6ZTtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBmb250IHNpemUgdG8gdGhlIHNwZWNpZmllZCBhY2Nlc3NvciBmdW5jdGlvbiBvciBzdGF0aWMgbnVtYmVyICh3aGljaCBjb3JyZXNwb25kcyB0byBwaXhlbCB1bml0cyksIHdoaWNoIGlzIGluZmVycmVkIGZyb20gdGhlIFtET00gc2VsZWN0aW9uXSgjdGV4dEJveC5zZWxlY3QpIGJ5IGRlZmF1bHQuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSogPSAxMF1cbiAgICAgIEBjaGFpbmFibGVcbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUuZm9udFNpemUgPSBmdW5jdGlvbiBmb250U2l6ZSAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2ZvbnRTaXplID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl9mb250U2l6ZTtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBmb250IHdlaWdodCB0byB0aGUgc3BlY2lmaWVkIGFjY2Vzc29yIGZ1bmN0aW9uIG9yIHN0YXRpYyBudW1iZXIsIHdoaWNoIGlzIGluZmVycmVkIGZyb20gdGhlIFtET00gc2VsZWN0aW9uXSgjdGV4dEJveC5zZWxlY3QpIGJ5IGRlZmF1bHQuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcnxTdHJpbmd9IFsqdmFsdWUqID0gNDAwXVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5mb250V2VpZ2h0ID0gZnVuY3Rpb24gZm9udFdlaWdodCAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX2ZvbnRXZWlnaHQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX2ZvbnRXZWlnaHQ7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgaGVpZ2h0IGZvciBlYWNoIGJveCB0byB0aGUgc3BlY2lmaWVkIGFjY2Vzc29yIGZ1bmN0aW9uIG9yIHN0YXRpYyBudW1iZXIuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSpdXG4gICAgICBAY2hhaW5hYmxlXG4gICAgICBAZXhhbXBsZSA8Y2FwdGlvbj5kZWZhdWx0IGFjY2Vzc29yPC9jYXB0aW9uPlxuZnVuY3Rpb24oZCkge1xuICByZXR1cm4gZC5oZWlnaHQgfHwgMjAwO1xufVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5oZWlnaHQgPSBmdW5jdGlvbiBoZWlnaHQgKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl9oZWlnaHQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX2hlaWdodDtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBEZWZpbmVzIHRoZSB1bmlxdWUgaWQgZm9yIGVhY2ggYm94IHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIG51bWJlci5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258TnVtYmVyfSBbKnZhbHVlKl1cbiAgICAgIEBjaGFpbmFibGVcbiAgICAgIEBleGFtcGxlIDxjYXB0aW9uPmRlZmF1bHQgYWNjZXNzb3I8L2NhcHRpb24+XG5mdW5jdGlvbihkLCBpKSB7XG4gIHJldHVybiBkLmlkIHx8IGkgKyBcIlwiO1xufVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5pZCA9IGZ1bmN0aW9uIGlkIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5faWQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX2lkO1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIFRleHRCb3hcbiAgICAgIEBkZXNjIFNldHMgdGhlIGxpbmUgaGVpZ2h0IHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIG51bWJlciwgd2hpY2ggaXMgMS4yIHRpbWVzIHRoZSBbZm9udCBzaXplXSgjdGV4dEJveC5mb250U2l6ZSkgYnkgZGVmYXVsdC5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258TnVtYmVyfSBbKnZhbHVlKl1cbiAgICAgIEBjaGFpbmFibGVcbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUubGluZUhlaWdodCA9IGZ1bmN0aW9uIGxpbmVIZWlnaHQgKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl9saW5lSGVpZ2h0ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl9saW5lSGVpZ2h0O1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIFRleHRCb3hcbiAgICAgIEBkZXNjIFJlc3RyaWN0cyB0aGUgbWF4aW11bSBudW1iZXIgb2YgbGluZXMgdG8gd3JhcCBvbnRvLCB3aGljaCBpcyBudWxsICh1bmxpbWl0ZWQpIGJ5IGRlZmF1bHQuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSpdXG4gICAgICBAY2hhaW5hYmxlXG4gICovXG4gIFRleHRCb3gucHJvdG90eXBlLm1heExpbmVzID0gZnVuY3Rpb24gbWF4TGluZXMgKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl9tYXhMaW5lcyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHRoaXMpIDogdGhpcy5fbWF4TGluZXM7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgdGV4dCBvdmVyZmxvdyB0byB0aGUgc3BlY2lmaWVkIGFjY2Vzc29yIGZ1bmN0aW9uIG9yIHN0YXRpYyBib29sZWFuLlxuICAgICAgQHBhcmFtIHtGdW5jdGlvbnxCb29sZWFufSBbKnZhbHVlKiA9IGZhbHNlXVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5vdmVyZmxvdyA9IGZ1bmN0aW9uIG92ZXJmbG93IChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fb3ZlcmZsb3cgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX292ZXJmbG93O1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIFRleHRCb3hcbiAgICAgIEBkZXNjIFNldHMgdGhlIHBhZGRpbmcgdG8gdGhlIHNwZWNpZmllZCBhY2Nlc3NvciBmdW5jdGlvbiwgQ1NTIHNob3J0aGFuZCBzdHJpbmcsIG9yIHN0YXRpYyBudW1iZXIsIHdoaWNoIGlzIDAgYnkgZGVmYXVsdC5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258TnVtYmVyfFN0cmluZ30gWyp2YWx1ZSpdXG4gICAgICBAY2hhaW5hYmxlXG4gICovXG4gIFRleHRCb3gucHJvdG90eXBlLnBhZGRpbmcgPSBmdW5jdGlvbiBwYWRkaW5nIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fcGFkZGluZyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHRoaXMpIDogdGhpcy5fcGFkZGluZztcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBwb2ludGVyLWV2ZW50cyB0byB0aGUgc3BlY2lmaWVkIGFjY2Vzc29yIGZ1bmN0aW9uIG9yIHN0YXRpYyBzdHJpbmcuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufFN0cmluZ30gWyp2YWx1ZSogPSBcImF1dG9cIl1cbiAgICAgIEBjaGFpbmFibGVcbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUucG9pbnRlckV2ZW50cyA9IGZ1bmN0aW9uIHBvaW50ZXJFdmVudHMgKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl9wb2ludGVyRXZlbnRzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl9wb2ludGVyRXZlbnRzO1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIFRleHRCb3hcbiAgICAgIEBkZXNjIFNldHMgdGhlIHJvdGF0ZSBwZXJjZW50YWdlIGZvciBlYWNoIGJveCB0byB0aGUgc3BlY2lmaWVkIGFjY2Vzc29yIGZ1bmN0aW9uIG9yIHN0YXRpYyBzdHJpbmcuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSogPSAwXVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiByb3RhdGUgKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl9yb3RhdGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX3JvdGF0ZTtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBhbmNob3IgcG9pbnQgYXJvdW5kIHdoaWNoIHRvIHJvdGF0ZSB0aGUgdGV4dCBib3guXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcltdfVxuICAgICAgQGNoYWluYWJsZVxuICAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUucm90YXRlQW5jaG9yID0gZnVuY3Rpb24gcm90YXRlQW5jaG9yIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fcm90YXRlQW5jaG9yID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl9yb3RhdGVBbmNob3I7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgU1ZHIGNvbnRhaW5lciBlbGVtZW50IHRvIHRoZSBzcGVjaWZpZWQgZDMgc2VsZWN0b3Igb3IgRE9NIGVsZW1lbnQuIElmIG5vdCBleHBsaWNpdGx5IHNwZWNpZmllZCwgYW4gU1ZHIGVsZW1lbnQgd2lsbCBiZSBhZGRlZCB0byB0aGUgcGFnZSBmb3IgdXNlLlxuICAgICAgQHBhcmFtIHtTdHJpbmd8SFRNTEVsZW1lbnR9IFsqc2VsZWN0b3IqXVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5zZWxlY3QgPSBmdW5jdGlvbiBzZWxlY3QkMSAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX3NlbGVjdCA9IHNlbGVjdChfKSwgdGhpcykgOiB0aGlzLl9zZWxlY3Q7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgd29yZCBzcGxpdCBiZWhhdmlvciB0byB0aGUgc3BlY2lmaWVkIGZ1bmN0aW9uLCB3aGljaCB3aGVuIHBhc3NlZCBhIHN0cmluZyBpcyBleHBlY3RlZCB0byByZXR1cm4gdGhhdCBzdHJpbmcgc3BsaXQgaW50byBhbiBhcnJheSBvZiB3b3Jkcy5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb259IFsqdmFsdWUqXVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIHNwbGl0IChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fc3BsaXQgPSBfLCB0aGlzKSA6IHRoaXMuX3NwbGl0O1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIFRleHRCb3hcbiAgICAgIEBkZXNjIFNldHMgdGhlIHRleHQgZm9yIGVhY2ggYm94IHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIHN0cmluZy5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBbKnZhbHVlKl1cbiAgICAgIEBjaGFpbmFibGVcbiAgICAgIEBleGFtcGxlIDxjYXB0aW9uPmRlZmF1bHQgYWNjZXNzb3I8L2NhcHRpb24+XG5mdW5jdGlvbihkKSB7XG4gIHJldHVybiBkLnRleHQ7XG59XG4gICovXG4gIFRleHRCb3gucHJvdG90eXBlLnRleHQgPSBmdW5jdGlvbiB0ZXh0IChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fdGV4dCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHRoaXMpIDogdGhpcy5fdGV4dDtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSBob3Jpem9udGFsIHRleHQgYW5jaG9yIHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIHN0cmluZywgd2hvc2UgdmFsdWVzIGFyZSBhbmFsYWdvdXMgdG8gdGhlIFNWRyBbdGV4dC1hbmNob3JdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL1NWRy9BdHRyaWJ1dGUvdGV4dC1hbmNob3IpIHByb3BlcnR5LlxuICAgICAgQHBhcmFtIHtGdW5jdGlvbnxTdHJpbmd9IFsqdmFsdWUqID0gXCJzdGFydFwiXVxuICAgICAgQGNoYWluYWJsZVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS50ZXh0QW5jaG9yID0gZnVuY3Rpb24gdGV4dEFuY2hvciAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX3RleHRBbmNob3IgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX3RleHRBbmNob3I7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgdmVydGljYWwgYWxpZ25tZW50IHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIHN0cmluZy4gQWNjZXB0cyBgXCJ0b3BcImAsIGBcIm1pZGRsZVwiYCwgYW5kIGBcImJvdHRvbVwiYC5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBbKnZhbHVlKiA9IFwidG9wXCJdXG4gICAgICBAY2hhaW5hYmxlXG4gICovXG4gIFRleHRCb3gucHJvdG90eXBlLnZlcnRpY2FsQWxpZ24gPSBmdW5jdGlvbiB2ZXJ0aWNhbEFsaWduIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fdmVydGljYWxBbGlnbiA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHRoaXMpIDogdGhpcy5fdmVydGljYWxBbGlnbjtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiBUZXh0Qm94XG4gICAgICBAZGVzYyBTZXRzIHRoZSB3aWR0aCBmb3IgZWFjaCBib3ggdG8gdGhlIHNwZWNpZmllZCBhY2Nlc3NvciBmdW5jdGlvbiBvciBzdGF0aWMgbnVtYmVyLlxuICAgICAgQHBhcmFtIHtGdW5jdGlvbnxOdW1iZXJ9IFsqdmFsdWUqXVxuICAgICAgQGNoYWluYWJsZVxuICAgICAgQGV4YW1wbGUgPGNhcHRpb24+ZGVmYXVsdCBhY2Nlc3NvcjwvY2FwdGlvbj5cbmZ1bmN0aW9uKGQpIHtcbiAgcmV0dXJuIGQud2lkdGggfHwgMjAwO1xufVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS53aWR0aCA9IGZ1bmN0aW9uIHdpZHRoIChfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5fd2lkdGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX3dpZHRoO1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIFRleHRCb3hcbiAgICAgIEBkZXNjIFNldHMgdGhlIHggcG9zaXRpb24gZm9yIGVhY2ggYm94IHRvIHRoZSBzcGVjaWZpZWQgYWNjZXNzb3IgZnVuY3Rpb24gb3Igc3RhdGljIG51bWJlci4gVGhlIG51bWJlciBnaXZlbiBzaG91bGQgY29ycmVzcG9uZCB0byB0aGUgbGVmdCBzaWRlIG9mIHRoZSB0ZXh0Qm94LlxuICAgICAgQHBhcmFtIHtGdW5jdGlvbnxOdW1iZXJ9IFsqdmFsdWUqXVxuICAgICAgQGNoYWluYWJsZVxuICAgICAgQGV4YW1wbGUgPGNhcHRpb24+ZGVmYXVsdCBhY2Nlc3NvcjwvY2FwdGlvbj5cbmZ1bmN0aW9uKGQpIHtcbiAgcmV0dXJuIGQueCB8fCAwO1xufVxuICAqL1xuICBUZXh0Qm94LnByb3RvdHlwZS54ID0gZnVuY3Rpb24geCAoXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX3ggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCB0aGlzKSA6IHRoaXMuX3g7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgVGV4dEJveFxuICAgICAgQGRlc2MgU2V0cyB0aGUgeSBwb3NpdGlvbiBmb3IgZWFjaCBib3ggdG8gdGhlIHNwZWNpZmllZCBhY2Nlc3NvciBmdW5jdGlvbiBvciBzdGF0aWMgbnVtYmVyLiBUaGUgbnVtYmVyIGdpdmVuIHNob3VsZCBjb3JyZXNwb25kIHRvIHRoZSB0b3Agc2lkZSBvZiB0aGUgdGV4dEJveC5cbiAgICAgIEBwYXJhbSB7RnVuY3Rpb258TnVtYmVyfSBbKnZhbHVlKl1cbiAgICAgIEBjaGFpbmFibGVcbiAgICAgIEBleGFtcGxlIDxjYXB0aW9uPmRlZmF1bHQgYWNjZXNzb3I8L2NhcHRpb24+XG5mdW5jdGlvbihkKSB7XG4gIHJldHVybiBkLnkgfHwgMDtcbn1cbiAgKi9cbiAgVGV4dEJveC5wcm90b3R5cGUueSA9IGZ1bmN0aW9uIHkgKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aGlzLl95ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgdGhpcykgOiB0aGlzLl95O1xuICB9O1xuXG4gIHJldHVybiBUZXh0Qm94O1xufShCYXNlQ2xhc3MpKTtcblxuZXhwb3J0IGRlZmF1bHQgVGV4dEJveDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGV4dEJveC5qcy5tYXAiLCIvLyBzY3JhcGVkIGZyb20gaHR0cDovL3d3dy5maWxlZm9ybWF0LmluZm8vaW5mby91bmljb2RlL2NhdGVnb3J5L01jL2xpc3QuaHRtXG4vLyBhbmQgaHR0cDovL3d3dy5maWxlZm9ybWF0LmluZm8vaW5mby91bmljb2RlL2NhdGVnb3J5L01uL2xpc3QuaHRtXG4vLyBKU09OLnN0cmluZ2lmeShbXS5zbGljZS5jYWxsKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJ0YWJsZS1saXN0XCIpWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwidHJcIikpLmZpbHRlcihmdW5jdGlvbihkKXsgcmV0dXJuIGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJhXCIpLmxlbmd0aCAmJiBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYVwiKVswXS5pbm5lckhUTUwubGVuZ3RoID09PSA2OyB9KS5tYXAoZnVuY3Rpb24oZCl7IHJldHVybiBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYVwiKVswXS5pbm5lckhUTUwucmVwbGFjZShcIlVcIiwgXCJ1XCIpLnJlcGxhY2UoXCIrXCIsIFwiXCIpOyB9KS5zb3J0KCkpO1xuLy8gVGhlIGZvbGxvd2luZyB1bmljb2RlIGNoYXJhY3RlcnMgY29tYmluZSB0byBmb3JtIG5ldyBjaGFyYWN0ZXJzIGFuZCBzaG91bGQgbmV2ZXIgYmUgc3BsaXQgZnJvbSBzdXJyb3VuZGluZyBjaGFyYWN0ZXJzLlxudmFyIGEgPSBbXCJ1MDkwM1wiLCBcInUwOTNCXCIsIFwidTA5M0VcIiwgXCJ1MDkzRlwiLCBcInUwOTQwXCIsIFwidTA5NDlcIiwgXCJ1MDk0QVwiLCBcInUwOTRCXCIsIFwidTA5NENcIiwgXCJ1MDk0RVwiLCBcInUwOTRGXCIsIFwidTA5ODJcIiwgXCJ1MDk4M1wiLCBcInUwOUJFXCIsIFwidTA5QkZcIiwgXCJ1MDlDMFwiLCBcInUwOUM3XCIsIFwidTA5QzhcIiwgXCJ1MDlDQlwiLCBcInUwOUNDXCIsIFwidTA5RDdcIiwgXCJ1MEEwM1wiLCBcInUwQTNFXCIsIFwidTBBM0ZcIiwgXCJ1MEE0MFwiLCBcInUwQTgzXCIsIFwidTBBQkVcIiwgXCJ1MEFCRlwiLCBcInUwQUMwXCIsIFwidTBBQzlcIiwgXCJ1MEFDQlwiLCBcInUwQUNDXCIsIFwidTBCMDJcIiwgXCJ1MEIwM1wiLCBcInUwQjNFXCIsIFwidTBCNDBcIiwgXCJ1MEI0N1wiLCBcInUwQjQ4XCIsIFwidTBCNEJcIiwgXCJ1MEI0Q1wiLCBcInUwQjU3XCIsIFwidTBCQkVcIiwgXCJ1MEJCRlwiLCBcInUwQkMxXCIsIFwidTBCQzJcIiwgXCJ1MEJDNlwiLCBcInUwQkM3XCIsIFwidTBCQzhcIiwgXCJ1MEJDQVwiLCBcInUwQkNCXCIsIFwidTBCQ0NcIiwgXCJ1MEJEN1wiLCBcInUwQzAxXCIsIFwidTBDMDJcIiwgXCJ1MEMwM1wiLCBcInUwQzQxXCIsIFwidTBDNDJcIiwgXCJ1MEM0M1wiLCBcInUwQzQ0XCIsIFwidTBDODJcIiwgXCJ1MEM4M1wiLCBcInUwQ0JFXCIsIFwidTBDQzBcIiwgXCJ1MENDMVwiLCBcInUwQ0MyXCIsIFwidTBDQzNcIiwgXCJ1MENDNFwiLCBcInUwQ0M3XCIsIFwidTBDQzhcIiwgXCJ1MENDQVwiLCBcInUwQ0NCXCIsIFwidTBDRDVcIiwgXCJ1MENENlwiLCBcInUwRDAyXCIsIFwidTBEMDNcIiwgXCJ1MEQzRVwiLCBcInUwRDNGXCIsIFwidTBENDBcIiwgXCJ1MEQ0NlwiLCBcInUwRDQ3XCIsIFwidTBENDhcIiwgXCJ1MEQ0QVwiLCBcInUwRDRCXCIsIFwidTBENENcIiwgXCJ1MEQ1N1wiLCBcInUwRDgyXCIsIFwidTBEODNcIiwgXCJ1MERDRlwiLCBcInUwREQwXCIsIFwidTBERDFcIiwgXCJ1MEREOFwiLCBcInUwREQ5XCIsIFwidTBEREFcIiwgXCJ1MEREQlwiLCBcInUwRERDXCIsIFwidTBERERcIiwgXCJ1MERERVwiLCBcInUwRERGXCIsIFwidTBERjJcIiwgXCJ1MERGM1wiLCBcInUwRjNFXCIsIFwidTBGM0ZcIiwgXCJ1MEY3RlwiLCBcInUxMDJCXCIsIFwidTEwMkNcIiwgXCJ1MTAzMVwiLCBcInUxMDM4XCIsIFwidTEwM0JcIiwgXCJ1MTAzQ1wiLCBcInUxMDU2XCIsIFwidTEwNTdcIiwgXCJ1MTA2MlwiLCBcInUxMDYzXCIsIFwidTEwNjRcIiwgXCJ1MTA2N1wiLCBcInUxMDY4XCIsIFwidTEwNjlcIiwgXCJ1MTA2QVwiLCBcInUxMDZCXCIsIFwidTEwNkNcIiwgXCJ1MTA2RFwiLCBcInUxMDgzXCIsIFwidTEwODRcIiwgXCJ1MTA4N1wiLCBcInUxMDg4XCIsIFwidTEwODlcIiwgXCJ1MTA4QVwiLCBcInUxMDhCXCIsIFwidTEwOENcIiwgXCJ1MTA4RlwiLCBcInUxMDlBXCIsIFwidTEwOUJcIiwgXCJ1MTA5Q1wiLCBcInUxN0I2XCIsIFwidTE3QkVcIiwgXCJ1MTdCRlwiLCBcInUxN0MwXCIsIFwidTE3QzFcIiwgXCJ1MTdDMlwiLCBcInUxN0MzXCIsIFwidTE3QzRcIiwgXCJ1MTdDNVwiLCBcInUxN0M3XCIsIFwidTE3QzhcIiwgXCJ1MTkyM1wiLCBcInUxOTI0XCIsIFwidTE5MjVcIiwgXCJ1MTkyNlwiLCBcInUxOTI5XCIsIFwidTE5MkFcIiwgXCJ1MTkyQlwiLCBcInUxOTMwXCIsIFwidTE5MzFcIiwgXCJ1MTkzM1wiLCBcInUxOTM0XCIsIFwidTE5MzVcIiwgXCJ1MTkzNlwiLCBcInUxOTM3XCIsIFwidTE5MzhcIiwgXCJ1MUExOVwiLCBcInUxQTFBXCIsIFwidTFBNTVcIiwgXCJ1MUE1N1wiLCBcInUxQTYxXCIsIFwidTFBNjNcIiwgXCJ1MUE2NFwiLCBcInUxQTZEXCIsIFwidTFBNkVcIiwgXCJ1MUE2RlwiLCBcInUxQTcwXCIsIFwidTFBNzFcIiwgXCJ1MUE3MlwiLCBcInUxQjA0XCIsIFwidTFCMzVcIiwgXCJ1MUIzQlwiLCBcInUxQjNEXCIsIFwidTFCM0VcIiwgXCJ1MUIzRlwiLCBcInUxQjQwXCIsIFwidTFCNDFcIiwgXCJ1MUI0M1wiLCBcInUxQjQ0XCIsIFwidTFCODJcIiwgXCJ1MUJBMVwiLCBcInUxQkE2XCIsIFwidTFCQTdcIiwgXCJ1MUJBQVwiLCBcInUxQkU3XCIsIFwidTFCRUFcIiwgXCJ1MUJFQlwiLCBcInUxQkVDXCIsIFwidTFCRUVcIiwgXCJ1MUJGMlwiLCBcInUxQkYzXCIsIFwidTFDMjRcIiwgXCJ1MUMyNVwiLCBcInUxQzI2XCIsIFwidTFDMjdcIiwgXCJ1MUMyOFwiLCBcInUxQzI5XCIsIFwidTFDMkFcIiwgXCJ1MUMyQlwiLCBcInUxQzM0XCIsIFwidTFDMzVcIiwgXCJ1MUNFMVwiLCBcInUxQ0YyXCIsIFwidTFDRjNcIiwgXCJ1MzAyRVwiLCBcInUzMDJGXCIsIFwidUE4MjNcIiwgXCJ1QTgyNFwiLCBcInVBODI3XCIsIFwidUE4ODBcIiwgXCJ1QTg4MVwiLCBcInVBOEI0XCIsIFwidUE4QjVcIiwgXCJ1QThCNlwiLCBcInVBOEI3XCIsIFwidUE4QjhcIiwgXCJ1QThCOVwiLCBcInVBOEJBXCIsIFwidUE4QkJcIiwgXCJ1QThCQ1wiLCBcInVBOEJEXCIsIFwidUE4QkVcIiwgXCJ1QThCRlwiLCBcInVBOEMwXCIsIFwidUE4QzFcIiwgXCJ1QThDMlwiLCBcInVBOEMzXCIsIFwidUE5NTJcIiwgXCJ1QTk1M1wiLCBcInVBOTgzXCIsIFwidUE5QjRcIiwgXCJ1QTlCNVwiLCBcInVBOUJBXCIsIFwidUE5QkJcIiwgXCJ1QTlCRFwiLCBcInVBOUJFXCIsIFwidUE5QkZcIiwgXCJ1QTlDMFwiLCBcInVBQTJGXCIsIFwidUFBMzBcIiwgXCJ1QUEzM1wiLCBcInVBQTM0XCIsIFwidUFBNERcIiwgXCJ1QUE3QlwiLCBcInVBQTdEXCIsIFwidUFBRUJcIiwgXCJ1QUFFRVwiLCBcInVBQUVGXCIsIFwidUFBRjVcIiwgXCJ1QUJFM1wiLCBcInVBQkU0XCIsIFwidUFCRTZcIiwgXCJ1QUJFN1wiLCBcInVBQkU5XCIsIFwidUFCRUFcIiwgXCJ1QUJFQ1wiXTtcbnZhciBiID0gW1widTAzMDBcIiwgXCJ1MDMwMVwiLCBcInUwMzAyXCIsIFwidTAzMDNcIiwgXCJ1MDMwNFwiLCBcInUwMzA1XCIsIFwidTAzMDZcIiwgXCJ1MDMwN1wiLCBcInUwMzA4XCIsIFwidTAzMDlcIiwgXCJ1MDMwQVwiLCBcInUwMzBCXCIsIFwidTAzMENcIiwgXCJ1MDMwRFwiLCBcInUwMzBFXCIsIFwidTAzMEZcIiwgXCJ1MDMxMFwiLCBcInUwMzExXCIsIFwidTAzMTJcIiwgXCJ1MDMxM1wiLCBcInUwMzE0XCIsIFwidTAzMTVcIiwgXCJ1MDMxNlwiLCBcInUwMzE3XCIsIFwidTAzMThcIiwgXCJ1MDMxOVwiLCBcInUwMzFBXCIsIFwidTAzMUJcIiwgXCJ1MDMxQ1wiLCBcInUwMzFEXCIsIFwidTAzMUVcIiwgXCJ1MDMxRlwiLCBcInUwMzIwXCIsIFwidTAzMjFcIiwgXCJ1MDMyMlwiLCBcInUwMzIzXCIsIFwidTAzMjRcIiwgXCJ1MDMyNVwiLCBcInUwMzI2XCIsIFwidTAzMjdcIiwgXCJ1MDMyOFwiLCBcInUwMzI5XCIsIFwidTAzMkFcIiwgXCJ1MDMyQlwiLCBcInUwMzJDXCIsIFwidTAzMkRcIiwgXCJ1MDMyRVwiLCBcInUwMzJGXCIsIFwidTAzMzBcIiwgXCJ1MDMzMVwiLCBcInUwMzMyXCIsIFwidTAzMzNcIiwgXCJ1MDMzNFwiLCBcInUwMzM1XCIsIFwidTAzMzZcIiwgXCJ1MDMzN1wiLCBcInUwMzM4XCIsIFwidTAzMzlcIiwgXCJ1MDMzQVwiLCBcInUwMzNCXCIsIFwidTAzM0NcIiwgXCJ1MDMzRFwiLCBcInUwMzNFXCIsIFwidTAzM0ZcIiwgXCJ1MDM0MFwiLCBcInUwMzQxXCIsIFwidTAzNDJcIiwgXCJ1MDM0M1wiLCBcInUwMzQ0XCIsIFwidTAzNDVcIiwgXCJ1MDM0NlwiLCBcInUwMzQ3XCIsIFwidTAzNDhcIiwgXCJ1MDM0OVwiLCBcInUwMzRBXCIsIFwidTAzNEJcIiwgXCJ1MDM0Q1wiLCBcInUwMzREXCIsIFwidTAzNEVcIiwgXCJ1MDM0RlwiLCBcInUwMzUwXCIsIFwidTAzNTFcIiwgXCJ1MDM1MlwiLCBcInUwMzUzXCIsIFwidTAzNTRcIiwgXCJ1MDM1NVwiLCBcInUwMzU2XCIsIFwidTAzNTdcIiwgXCJ1MDM1OFwiLCBcInUwMzU5XCIsIFwidTAzNUFcIiwgXCJ1MDM1QlwiLCBcInUwMzVDXCIsIFwidTAzNURcIiwgXCJ1MDM1RVwiLCBcInUwMzVGXCIsIFwidTAzNjBcIiwgXCJ1MDM2MVwiLCBcInUwMzYyXCIsIFwidTAzNjNcIiwgXCJ1MDM2NFwiLCBcInUwMzY1XCIsIFwidTAzNjZcIiwgXCJ1MDM2N1wiLCBcInUwMzY4XCIsIFwidTAzNjlcIiwgXCJ1MDM2QVwiLCBcInUwMzZCXCIsIFwidTAzNkNcIiwgXCJ1MDM2RFwiLCBcInUwMzZFXCIsIFwidTAzNkZcIiwgXCJ1MDQ4M1wiLCBcInUwNDg0XCIsIFwidTA0ODVcIiwgXCJ1MDQ4NlwiLCBcInUwNDg3XCIsIFwidTA1OTFcIiwgXCJ1MDU5MlwiLCBcInUwNTkzXCIsIFwidTA1OTRcIiwgXCJ1MDU5NVwiLCBcInUwNTk2XCIsIFwidTA1OTdcIiwgXCJ1MDU5OFwiLCBcInUwNTk5XCIsIFwidTA1OUFcIiwgXCJ1MDU5QlwiLCBcInUwNTlDXCIsIFwidTA1OURcIiwgXCJ1MDU5RVwiLCBcInUwNTlGXCIsIFwidTA1QTBcIiwgXCJ1MDVBMVwiLCBcInUwNUEyXCIsIFwidTA1QTNcIiwgXCJ1MDVBNFwiLCBcInUwNUE1XCIsIFwidTA1QTZcIiwgXCJ1MDVBN1wiLCBcInUwNUE4XCIsIFwidTA1QTlcIiwgXCJ1MDVBQVwiLCBcInUwNUFCXCIsIFwidTA1QUNcIiwgXCJ1MDVBRFwiLCBcInUwNUFFXCIsIFwidTA1QUZcIiwgXCJ1MDVCMFwiLCBcInUwNUIxXCIsIFwidTA1QjJcIiwgXCJ1MDVCM1wiLCBcInUwNUI0XCIsIFwidTA1QjVcIiwgXCJ1MDVCNlwiLCBcInUwNUI3XCIsIFwidTA1QjhcIiwgXCJ1MDVCOVwiLCBcInUwNUJBXCIsIFwidTA1QkJcIiwgXCJ1MDVCQ1wiLCBcInUwNUJEXCIsIFwidTA1QkZcIiwgXCJ1MDVDMVwiLCBcInUwNUMyXCIsIFwidTA1QzRcIiwgXCJ1MDVDNVwiLCBcInUwNUM3XCIsIFwidTA2MTBcIiwgXCJ1MDYxMVwiLCBcInUwNjEyXCIsIFwidTA2MTNcIiwgXCJ1MDYxNFwiLCBcInUwNjE1XCIsIFwidTA2MTZcIiwgXCJ1MDYxN1wiLCBcInUwNjE4XCIsIFwidTA2MTlcIiwgXCJ1MDYxQVwiLCBcInUwNjRCXCIsIFwidTA2NENcIiwgXCJ1MDY0RFwiLCBcInUwNjRFXCIsIFwidTA2NEZcIiwgXCJ1MDY1MFwiLCBcInUwNjUxXCIsIFwidTA2NTJcIiwgXCJ1MDY1M1wiLCBcInUwNjU0XCIsIFwidTA2NTVcIiwgXCJ1MDY1NlwiLCBcInUwNjU3XCIsIFwidTA2NThcIiwgXCJ1MDY1OVwiLCBcInUwNjVBXCIsIFwidTA2NUJcIiwgXCJ1MDY1Q1wiLCBcInUwNjVEXCIsIFwidTA2NUVcIiwgXCJ1MDY1RlwiLCBcInUwNjcwXCIsIFwidTA2RDZcIiwgXCJ1MDZEN1wiLCBcInUwNkQ4XCIsIFwidTA2RDlcIiwgXCJ1MDZEQVwiLCBcInUwNkRCXCIsIFwidTA2RENcIiwgXCJ1MDZERlwiLCBcInUwNkUwXCIsIFwidTA2RTFcIiwgXCJ1MDZFMlwiLCBcInUwNkUzXCIsIFwidTA2RTRcIiwgXCJ1MDZFN1wiLCBcInUwNkU4XCIsIFwidTA2RUFcIiwgXCJ1MDZFQlwiLCBcInUwNkVDXCIsIFwidTA2RURcIiwgXCJ1MDcxMVwiLCBcInUwNzMwXCIsIFwidTA3MzFcIiwgXCJ1MDczMlwiLCBcInUwNzMzXCIsIFwidTA3MzRcIiwgXCJ1MDczNVwiLCBcInUwNzM2XCIsIFwidTA3MzdcIiwgXCJ1MDczOFwiLCBcInUwNzM5XCIsIFwidTA3M0FcIiwgXCJ1MDczQlwiLCBcInUwNzNDXCIsIFwidTA3M0RcIiwgXCJ1MDczRVwiLCBcInUwNzNGXCIsIFwidTA3NDBcIiwgXCJ1MDc0MVwiLCBcInUwNzQyXCIsIFwidTA3NDNcIiwgXCJ1MDc0NFwiLCBcInUwNzQ1XCIsIFwidTA3NDZcIiwgXCJ1MDc0N1wiLCBcInUwNzQ4XCIsIFwidTA3NDlcIiwgXCJ1MDc0QVwiLCBcInUwN0E2XCIsIFwidTA3QTdcIiwgXCJ1MDdBOFwiLCBcInUwN0E5XCIsIFwidTA3QUFcIiwgXCJ1MDdBQlwiLCBcInUwN0FDXCIsIFwidTA3QURcIiwgXCJ1MDdBRVwiLCBcInUwN0FGXCIsIFwidTA3QjBcIiwgXCJ1MDdFQlwiLCBcInUwN0VDXCIsIFwidTA3RURcIiwgXCJ1MDdFRVwiLCBcInUwN0VGXCIsIFwidTA3RjBcIiwgXCJ1MDdGMVwiLCBcInUwN0YyXCIsIFwidTA3RjNcIiwgXCJ1MDgxNlwiLCBcInUwODE3XCIsIFwidTA4MThcIiwgXCJ1MDgxOVwiLCBcInUwODFCXCIsIFwidTA4MUNcIiwgXCJ1MDgxRFwiLCBcInUwODFFXCIsIFwidTA4MUZcIiwgXCJ1MDgyMFwiLCBcInUwODIxXCIsIFwidTA4MjJcIiwgXCJ1MDgyM1wiLCBcInUwODI1XCIsIFwidTA4MjZcIiwgXCJ1MDgyN1wiLCBcInUwODI5XCIsIFwidTA4MkFcIiwgXCJ1MDgyQlwiLCBcInUwODJDXCIsIFwidTA4MkRcIiwgXCJ1MDg1OVwiLCBcInUwODVBXCIsIFwidTA4NUJcIiwgXCJ1MDhFM1wiLCBcInUwOEU0XCIsIFwidTA4RTVcIiwgXCJ1MDhFNlwiLCBcInUwOEU3XCIsIFwidTA4RThcIiwgXCJ1MDhFOVwiLCBcInUwOEVBXCIsIFwidTA4RUJcIiwgXCJ1MDhFQ1wiLCBcInUwOEVEXCIsIFwidTA4RUVcIiwgXCJ1MDhFRlwiLCBcInUwOEYwXCIsIFwidTA4RjFcIiwgXCJ1MDhGMlwiLCBcInUwOEYzXCIsIFwidTA4RjRcIiwgXCJ1MDhGNVwiLCBcInUwOEY2XCIsIFwidTA4RjdcIiwgXCJ1MDhGOFwiLCBcInUwOEY5XCIsIFwidTA4RkFcIiwgXCJ1MDhGQlwiLCBcInUwOEZDXCIsIFwidTA4RkRcIiwgXCJ1MDhGRVwiLCBcInUwOEZGXCIsIFwidTA5MDBcIiwgXCJ1MDkwMVwiLCBcInUwOTAyXCIsIFwidTA5M0FcIiwgXCJ1MDkzQ1wiLCBcInUwOTQxXCIsIFwidTA5NDJcIiwgXCJ1MDk0M1wiLCBcInUwOTQ0XCIsIFwidTA5NDVcIiwgXCJ1MDk0NlwiLCBcInUwOTQ3XCIsIFwidTA5NDhcIiwgXCJ1MDk0RFwiLCBcInUwOTUxXCIsIFwidTA5NTJcIiwgXCJ1MDk1M1wiLCBcInUwOTU0XCIsIFwidTA5NTVcIiwgXCJ1MDk1NlwiLCBcInUwOTU3XCIsIFwidTA5NjJcIiwgXCJ1MDk2M1wiLCBcInUwOTgxXCIsIFwidTA5QkNcIiwgXCJ1MDlDMVwiLCBcInUwOUMyXCIsIFwidTA5QzNcIiwgXCJ1MDlDNFwiLCBcInUwOUNEXCIsIFwidTA5RTJcIiwgXCJ1MDlFM1wiLCBcInUwQTAxXCIsIFwidTBBMDJcIiwgXCJ1MEEzQ1wiLCBcInUwQTQxXCIsIFwidTBBNDJcIiwgXCJ1MEE0N1wiLCBcInUwQTQ4XCIsIFwidTBBNEJcIiwgXCJ1MEE0Q1wiLCBcInUwQTREXCIsIFwidTBBNTFcIiwgXCJ1MEE3MFwiLCBcInUwQTcxXCIsIFwidTBBNzVcIiwgXCJ1MEE4MVwiLCBcInUwQTgyXCIsIFwidTBBQkNcIiwgXCJ1MEFDMVwiLCBcInUwQUMyXCIsIFwidTBBQzNcIiwgXCJ1MEFDNFwiLCBcInUwQUM1XCIsIFwidTBBQzdcIiwgXCJ1MEFDOFwiLCBcInUwQUNEXCIsIFwidTBBRTJcIiwgXCJ1MEFFM1wiLCBcInUwQjAxXCIsIFwidTBCM0NcIiwgXCJ1MEIzRlwiLCBcInUwQjQxXCIsIFwidTBCNDJcIiwgXCJ1MEI0M1wiLCBcInUwQjQ0XCIsIFwidTBCNERcIiwgXCJ1MEI1NlwiLCBcInUwQjYyXCIsIFwidTBCNjNcIiwgXCJ1MEI4MlwiLCBcInUwQkMwXCIsIFwidTBCQ0RcIiwgXCJ1MEMwMFwiLCBcInUwQzNFXCIsIFwidTBDM0ZcIiwgXCJ1MEM0MFwiLCBcInUwQzQ2XCIsIFwidTBDNDdcIiwgXCJ1MEM0OFwiLCBcInUwQzRBXCIsIFwidTBDNEJcIiwgXCJ1MEM0Q1wiLCBcInUwQzREXCIsIFwidTBDNTVcIiwgXCJ1MEM1NlwiLCBcInUwQzYyXCIsIFwidTBDNjNcIiwgXCJ1MEM4MVwiLCBcInUwQ0JDXCIsIFwidTBDQkZcIiwgXCJ1MENDNlwiLCBcInUwQ0NDXCIsIFwidTBDQ0RcIiwgXCJ1MENFMlwiLCBcInUwQ0UzXCIsIFwidTBEMDFcIiwgXCJ1MEQ0MVwiLCBcInUwRDQyXCIsIFwidTBENDNcIiwgXCJ1MEQ0NFwiLCBcInUwRDREXCIsIFwidTBENjJcIiwgXCJ1MEQ2M1wiLCBcInUwRENBXCIsIFwidTBERDJcIiwgXCJ1MEREM1wiLCBcInUwREQ0XCIsIFwidTBERDZcIiwgXCJ1MEUzMVwiLCBcInUwRTM0XCIsIFwidTBFMzVcIiwgXCJ1MEUzNlwiLCBcInUwRTM3XCIsIFwidTBFMzhcIiwgXCJ1MEUzOVwiLCBcInUwRTNBXCIsIFwidTBFNDdcIiwgXCJ1MEU0OFwiLCBcInUwRTQ5XCIsIFwidTBFNEFcIiwgXCJ1MEU0QlwiLCBcInUwRTRDXCIsIFwidTBFNERcIiwgXCJ1MEU0RVwiLCBcInUwRUIxXCIsIFwidTBFQjRcIiwgXCJ1MEVCNVwiLCBcInUwRUI2XCIsIFwidTBFQjdcIiwgXCJ1MEVCOFwiLCBcInUwRUI5XCIsIFwidTBFQkJcIiwgXCJ1MEVCQ1wiLCBcInUwRUM4XCIsIFwidTBFQzlcIiwgXCJ1MEVDQVwiLCBcInUwRUNCXCIsIFwidTBFQ0NcIiwgXCJ1MEVDRFwiLCBcInUwRjE4XCIsIFwidTBGMTlcIiwgXCJ1MEYzNVwiLCBcInUwRjM3XCIsIFwidTBGMzlcIiwgXCJ1MEY3MVwiLCBcInUwRjcyXCIsIFwidTBGNzNcIiwgXCJ1MEY3NFwiLCBcInUwRjc1XCIsIFwidTBGNzZcIiwgXCJ1MEY3N1wiLCBcInUwRjc4XCIsIFwidTBGNzlcIiwgXCJ1MEY3QVwiLCBcInUwRjdCXCIsIFwidTBGN0NcIiwgXCJ1MEY3RFwiLCBcInUwRjdFXCIsIFwidTBGODBcIiwgXCJ1MEY4MVwiLCBcInUwRjgyXCIsIFwidTBGODNcIiwgXCJ1MEY4NFwiLCBcInUwRjg2XCIsIFwidTBGODdcIiwgXCJ1MEY4RFwiLCBcInUwRjhFXCIsIFwidTBGOEZcIiwgXCJ1MEY5MFwiLCBcInUwRjkxXCIsIFwidTBGOTJcIiwgXCJ1MEY5M1wiLCBcInUwRjk0XCIsIFwidTBGOTVcIiwgXCJ1MEY5NlwiLCBcInUwRjk3XCIsIFwidTBGOTlcIiwgXCJ1MEY5QVwiLCBcInUwRjlCXCIsIFwidTBGOUNcIiwgXCJ1MEY5RFwiLCBcInUwRjlFXCIsIFwidTBGOUZcIiwgXCJ1MEZBMFwiLCBcInUwRkExXCIsIFwidTBGQTJcIiwgXCJ1MEZBM1wiLCBcInUwRkE0XCIsIFwidTBGQTVcIiwgXCJ1MEZBNlwiLCBcInUwRkE3XCIsIFwidTBGQThcIiwgXCJ1MEZBOVwiLCBcInUwRkFBXCIsIFwidTBGQUJcIiwgXCJ1MEZBQ1wiLCBcInUwRkFEXCIsIFwidTBGQUVcIiwgXCJ1MEZBRlwiLCBcInUwRkIwXCIsIFwidTBGQjFcIiwgXCJ1MEZCMlwiLCBcInUwRkIzXCIsIFwidTBGQjRcIiwgXCJ1MEZCNVwiLCBcInUwRkI2XCIsIFwidTBGQjdcIiwgXCJ1MEZCOFwiLCBcInUwRkI5XCIsIFwidTBGQkFcIiwgXCJ1MEZCQlwiLCBcInUwRkJDXCIsIFwidTBGQzZcIiwgXCJ1MTAyRFwiLCBcInUxMDJFXCIsIFwidTEwMkZcIiwgXCJ1MTAzMFwiLCBcInUxMDMyXCIsIFwidTEwMzNcIiwgXCJ1MTAzNFwiLCBcInUxMDM1XCIsIFwidTEwMzZcIiwgXCJ1MTAzN1wiLCBcInUxMDM5XCIsIFwidTEwM0FcIiwgXCJ1MTAzRFwiLCBcInUxMDNFXCIsIFwidTEwNThcIiwgXCJ1MTA1OVwiLCBcInUxMDVFXCIsIFwidTEwNUZcIiwgXCJ1MTA2MFwiLCBcInUxMDcxXCIsIFwidTEwNzJcIiwgXCJ1MTA3M1wiLCBcInUxMDc0XCIsIFwidTEwODJcIiwgXCJ1MTA4NVwiLCBcInUxMDg2XCIsIFwidTEwOERcIiwgXCJ1MTA5RFwiLCBcInUxMzVEXCIsIFwidTEzNUVcIiwgXCJ1MTM1RlwiLCBcInUxNzEyXCIsIFwidTE3MTNcIiwgXCJ1MTcxNFwiLCBcInUxNzMyXCIsIFwidTE3MzNcIiwgXCJ1MTczNFwiLCBcInUxNzUyXCIsIFwidTE3NTNcIiwgXCJ1MTc3MlwiLCBcInUxNzczXCIsIFwidTE3QjRcIiwgXCJ1MTdCNVwiLCBcInUxN0I3XCIsIFwidTE3QjhcIiwgXCJ1MTdCOVwiLCBcInUxN0JBXCIsIFwidTE3QkJcIiwgXCJ1MTdCQ1wiLCBcInUxN0JEXCIsIFwidTE3QzZcIiwgXCJ1MTdDOVwiLCBcInUxN0NBXCIsIFwidTE3Q0JcIiwgXCJ1MTdDQ1wiLCBcInUxN0NEXCIsIFwidTE3Q0VcIiwgXCJ1MTdDRlwiLCBcInUxN0QwXCIsIFwidTE3RDFcIiwgXCJ1MTdEMlwiLCBcInUxN0QzXCIsIFwidTE3RERcIiwgXCJ1MTgwQlwiLCBcInUxODBDXCIsIFwidTE4MERcIiwgXCJ1MThBOVwiLCBcInUxOTIwXCIsIFwidTE5MjFcIiwgXCJ1MTkyMlwiLCBcInUxOTI3XCIsIFwidTE5MjhcIiwgXCJ1MTkzMlwiLCBcInUxOTM5XCIsIFwidTE5M0FcIiwgXCJ1MTkzQlwiLCBcInUxQTE3XCIsIFwidTFBMThcIiwgXCJ1MUExQlwiLCBcInUxQTU2XCIsIFwidTFBNThcIiwgXCJ1MUE1OVwiLCBcInUxQTVBXCIsIFwidTFBNUJcIiwgXCJ1MUE1Q1wiLCBcInUxQTVEXCIsIFwidTFBNUVcIiwgXCJ1MUE2MFwiLCBcInUxQTYyXCIsIFwidTFBNjVcIiwgXCJ1MUE2NlwiLCBcInUxQTY3XCIsIFwidTFBNjhcIiwgXCJ1MUE2OVwiLCBcInUxQTZBXCIsIFwidTFBNkJcIiwgXCJ1MUE2Q1wiLCBcInUxQTczXCIsIFwidTFBNzRcIiwgXCJ1MUE3NVwiLCBcInUxQTc2XCIsIFwidTFBNzdcIiwgXCJ1MUE3OFwiLCBcInUxQTc5XCIsIFwidTFBN0FcIiwgXCJ1MUE3QlwiLCBcInUxQTdDXCIsIFwidTFBN0ZcIiwgXCJ1MUFCMFwiLCBcInUxQUIxXCIsIFwidTFBQjJcIiwgXCJ1MUFCM1wiLCBcInUxQUI0XCIsIFwidTFBQjVcIiwgXCJ1MUFCNlwiLCBcInUxQUI3XCIsIFwidTFBQjhcIiwgXCJ1MUFCOVwiLCBcInUxQUJBXCIsIFwidTFBQkJcIiwgXCJ1MUFCQ1wiLCBcInUxQUJEXCIsIFwidTFCMDBcIiwgXCJ1MUIwMVwiLCBcInUxQjAyXCIsIFwidTFCMDNcIiwgXCJ1MUIzNFwiLCBcInUxQjM2XCIsIFwidTFCMzdcIiwgXCJ1MUIzOFwiLCBcInUxQjM5XCIsIFwidTFCM0FcIiwgXCJ1MUIzQ1wiLCBcInUxQjQyXCIsIFwidTFCNkJcIiwgXCJ1MUI2Q1wiLCBcInUxQjZEXCIsIFwidTFCNkVcIiwgXCJ1MUI2RlwiLCBcInUxQjcwXCIsIFwidTFCNzFcIiwgXCJ1MUI3MlwiLCBcInUxQjczXCIsIFwidTFCODBcIiwgXCJ1MUI4MVwiLCBcInUxQkEyXCIsIFwidTFCQTNcIiwgXCJ1MUJBNFwiLCBcInUxQkE1XCIsIFwidTFCQThcIiwgXCJ1MUJBOVwiLCBcInUxQkFCXCIsIFwidTFCQUNcIiwgXCJ1MUJBRFwiLCBcInUxQkU2XCIsIFwidTFCRThcIiwgXCJ1MUJFOVwiLCBcInUxQkVEXCIsIFwidTFCRUZcIiwgXCJ1MUJGMFwiLCBcInUxQkYxXCIsIFwidTFDMkNcIiwgXCJ1MUMyRFwiLCBcInUxQzJFXCIsIFwidTFDMkZcIiwgXCJ1MUMzMFwiLCBcInUxQzMxXCIsIFwidTFDMzJcIiwgXCJ1MUMzM1wiLCBcInUxQzM2XCIsIFwidTFDMzdcIiwgXCJ1MUNEMFwiLCBcInUxQ0QxXCIsIFwidTFDRDJcIiwgXCJ1MUNENFwiLCBcInUxQ0Q1XCIsIFwidTFDRDZcIiwgXCJ1MUNEN1wiLCBcInUxQ0Q4XCIsIFwidTFDRDlcIiwgXCJ1MUNEQVwiLCBcInUxQ0RCXCIsIFwidTFDRENcIiwgXCJ1MUNERFwiLCBcInUxQ0RFXCIsIFwidTFDREZcIiwgXCJ1MUNFMFwiLCBcInUxQ0UyXCIsIFwidTFDRTNcIiwgXCJ1MUNFNFwiLCBcInUxQ0U1XCIsIFwidTFDRTZcIiwgXCJ1MUNFN1wiLCBcInUxQ0U4XCIsIFwidTFDRURcIiwgXCJ1MUNGNFwiLCBcInUxQ0Y4XCIsIFwidTFDRjlcIiwgXCJ1MURDMFwiLCBcInUxREMxXCIsIFwidTFEQzJcIiwgXCJ1MURDM1wiLCBcInUxREM0XCIsIFwidTFEQzVcIiwgXCJ1MURDNlwiLCBcInUxREM3XCIsIFwidTFEQzhcIiwgXCJ1MURDOVwiLCBcInUxRENBXCIsIFwidTFEQ0JcIiwgXCJ1MURDQ1wiLCBcInUxRENEXCIsIFwidTFEQ0VcIiwgXCJ1MURDRlwiLCBcInUxREQwXCIsIFwidTFERDFcIiwgXCJ1MUREMlwiLCBcInUxREQzXCIsIFwidTFERDRcIiwgXCJ1MURENVwiLCBcInUxREQ2XCIsIFwidTFERDdcIiwgXCJ1MUREOFwiLCBcInUxREQ5XCIsIFwidTFEREFcIiwgXCJ1MUREQlwiLCBcInUxRERDXCIsIFwidTFERERcIiwgXCJ1MURERVwiLCBcInUxRERGXCIsIFwidTFERTBcIiwgXCJ1MURFMVwiLCBcInUxREUyXCIsIFwidTFERTNcIiwgXCJ1MURFNFwiLCBcInUxREU1XCIsIFwidTFERTZcIiwgXCJ1MURFN1wiLCBcInUxREU4XCIsIFwidTFERTlcIiwgXCJ1MURFQVwiLCBcInUxREVCXCIsIFwidTFERUNcIiwgXCJ1MURFRFwiLCBcInUxREVFXCIsIFwidTFERUZcIiwgXCJ1MURGMFwiLCBcInUxREYxXCIsIFwidTFERjJcIiwgXCJ1MURGM1wiLCBcInUxREY0XCIsIFwidTFERjVcIiwgXCJ1MURGQ1wiLCBcInUxREZEXCIsIFwidTFERkVcIiwgXCJ1MURGRlwiLCBcInUyMEQwXCIsIFwidTIwRDFcIiwgXCJ1MjBEMlwiLCBcInUyMEQzXCIsIFwidTIwRDRcIiwgXCJ1MjBENVwiLCBcInUyMEQ2XCIsIFwidTIwRDdcIiwgXCJ1MjBEOFwiLCBcInUyMEQ5XCIsIFwidTIwREFcIiwgXCJ1MjBEQlwiLCBcInUyMERDXCIsIFwidTIwRTFcIiwgXCJ1MjBFNVwiLCBcInUyMEU2XCIsIFwidTIwRTdcIiwgXCJ1MjBFOFwiLCBcInUyMEU5XCIsIFwidTIwRUFcIiwgXCJ1MjBFQlwiLCBcInUyMEVDXCIsIFwidTIwRURcIiwgXCJ1MjBFRVwiLCBcInUyMEVGXCIsIFwidTIwRjBcIiwgXCJ1MkNFRlwiLCBcInUyQ0YwXCIsIFwidTJDRjFcIiwgXCJ1MkQ3RlwiLCBcInUyREUwXCIsIFwidTJERTFcIiwgXCJ1MkRFMlwiLCBcInUyREUzXCIsIFwidTJERTRcIiwgXCJ1MkRFNVwiLCBcInUyREU2XCIsIFwidTJERTdcIiwgXCJ1MkRFOFwiLCBcInUyREU5XCIsIFwidTJERUFcIiwgXCJ1MkRFQlwiLCBcInUyREVDXCIsIFwidTJERURcIiwgXCJ1MkRFRVwiLCBcInUyREVGXCIsIFwidTJERjBcIiwgXCJ1MkRGMVwiLCBcInUyREYyXCIsIFwidTJERjNcIiwgXCJ1MkRGNFwiLCBcInUyREY1XCIsIFwidTJERjZcIiwgXCJ1MkRGN1wiLCBcInUyREY4XCIsIFwidTJERjlcIiwgXCJ1MkRGQVwiLCBcInUyREZCXCIsIFwidTJERkNcIiwgXCJ1MkRGRFwiLCBcInUyREZFXCIsIFwidTJERkZcIiwgXCJ1MzAyQVwiLCBcInUzMDJCXCIsIFwidTMwMkNcIiwgXCJ1MzAyRFwiLCBcInUzMDk5XCIsIFwidTMwOUFcIiwgXCJ1QTY2RlwiLCBcInVBNjc0XCIsIFwidUE2NzVcIiwgXCJ1QTY3NlwiLCBcInVBNjc3XCIsIFwidUE2NzhcIiwgXCJ1QTY3OVwiLCBcInVBNjdBXCIsIFwidUE2N0JcIiwgXCJ1QTY3Q1wiLCBcInVBNjdEXCIsIFwidUE2OUVcIiwgXCJ1QTY5RlwiLCBcInVBNkYwXCIsIFwidUE2RjFcIiwgXCJ1QTgwMlwiLCBcInVBODA2XCIsIFwidUE4MEJcIiwgXCJ1QTgyNVwiLCBcInVBODI2XCIsIFwidUE4QzRcIiwgXCJ1QThFMFwiLCBcInVBOEUxXCIsIFwidUE4RTJcIiwgXCJ1QThFM1wiLCBcInVBOEU0XCIsIFwidUE4RTVcIiwgXCJ1QThFNlwiLCBcInVBOEU3XCIsIFwidUE4RThcIiwgXCJ1QThFOVwiLCBcInVBOEVBXCIsIFwidUE4RUJcIiwgXCJ1QThFQ1wiLCBcInVBOEVEXCIsIFwidUE4RUVcIiwgXCJ1QThFRlwiLCBcInVBOEYwXCIsIFwidUE4RjFcIiwgXCJ1QTkyNlwiLCBcInVBOTI3XCIsIFwidUE5MjhcIiwgXCJ1QTkyOVwiLCBcInVBOTJBXCIsIFwidUE5MkJcIiwgXCJ1QTkyQ1wiLCBcInVBOTJEXCIsIFwidUE5NDdcIiwgXCJ1QTk0OFwiLCBcInVBOTQ5XCIsIFwidUE5NEFcIiwgXCJ1QTk0QlwiLCBcInVBOTRDXCIsIFwidUE5NERcIiwgXCJ1QTk0RVwiLCBcInVBOTRGXCIsIFwidUE5NTBcIiwgXCJ1QTk1MVwiLCBcInVBOTgwXCIsIFwidUE5ODFcIiwgXCJ1QTk4MlwiLCBcInVBOUIzXCIsIFwidUE5QjZcIiwgXCJ1QTlCN1wiLCBcInVBOUI4XCIsIFwidUE5QjlcIiwgXCJ1QTlCQ1wiLCBcInVBOUU1XCIsIFwidUFBMjlcIiwgXCJ1QUEyQVwiLCBcInVBQTJCXCIsIFwidUFBMkNcIiwgXCJ1QUEyRFwiLCBcInVBQTJFXCIsIFwidUFBMzFcIiwgXCJ1QUEzMlwiLCBcInVBQTM1XCIsIFwidUFBMzZcIiwgXCJ1QUE0M1wiLCBcInVBQTRDXCIsIFwidUFBN0NcIiwgXCJ1QUFCMFwiLCBcInVBQUIyXCIsIFwidUFBQjNcIiwgXCJ1QUFCNFwiLCBcInVBQUI3XCIsIFwidUFBQjhcIiwgXCJ1QUFCRVwiLCBcInVBQUJGXCIsIFwidUFBQzFcIiwgXCJ1QUFFQ1wiLCBcInVBQUVEXCIsIFwidUFBRjZcIiwgXCJ1QUJFNVwiLCBcInVBQkU4XCIsIFwidUFCRURcIiwgXCJ1RkIxRVwiLCBcInVGRTAwXCIsIFwidUZFMDFcIiwgXCJ1RkUwMlwiLCBcInVGRTAzXCIsIFwidUZFMDRcIiwgXCJ1RkUwNVwiLCBcInVGRTA2XCIsIFwidUZFMDdcIiwgXCJ1RkUwOFwiLCBcInVGRTA5XCIsIFwidUZFMEFcIiwgXCJ1RkUwQlwiLCBcInVGRTBDXCIsIFwidUZFMERcIiwgXCJ1RkUwRVwiLCBcInVGRTBGXCIsIFwidUZFMjBcIiwgXCJ1RkUyMVwiLCBcInVGRTIyXCIsIFwidUZFMjNcIiwgXCJ1RkUyNFwiLCBcInVGRTI1XCIsIFwidUZFMjZcIiwgXCJ1RkUyN1wiLCBcInVGRTI4XCIsIFwidUZFMjlcIiwgXCJ1RkUyQVwiLCBcInVGRTJCXCIsIFwidUZFMkNcIiwgXCJ1RkUyRFwiLCBcInVGRTJFXCIsIFwidUZFMkZcIl07XG5leHBvcnQgZGVmYXVsdCBhLmNvbmNhdChiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tYmluaW5nTWFya3MuanMubWFwIiwiaW1wb3J0IHtkZWZhdWx0IGFzIHRleHRXaWR0aH0gZnJvbSBcIi4vdGV4dFdpZHRoXCI7XG5pbXBvcnQge3RyaW19IGZyb20gXCIuL3RyaW1cIjtcblxudmFyIGFscGhhID0gXCJhYmNkZWZnaGlBQkNERUZHSElfIUAjJCVeJiooKV8rMTIzNDU2Nzg5MFwiLFxuICAgICAgY2hlY2tlZCA9IHt9LFxuICAgICAgaGVpZ2h0ID0gMzI7XG5cbnZhciBkZWphdnUsIG1hY29zLCBtb25vc3BhY2UsIHByb3BvcnRpb25hbDtcblxuLyoqXG4gICAgQGZ1bmN0aW9uIGZvbnRFeGlzdHNcbiAgICBAZGVzYyBHaXZlbiBlaXRoZXIgYSBzaW5nbGUgZm9udC1mYW1pbHkgb3IgYSBsaXN0IG9mIGZvbnRzLCByZXR1cm5zIHRoZSBuYW1lIG9mIHRoZSBmaXJzdCBmb250IHRoYXQgY2FuIGJlIHJlbmRlcmVkLCBvciBgZmFsc2VgIGlmIG5vbmUgYXJlIGluc3RhbGxlZCBvbiB0aGUgdXNlcidzIG1hY2hpbmUuXG4gICAgQHBhcmFtIHtTdHJpbmd8QXJyYXl9IGZvbnQgQ2FuIGJlIGVpdGhlciBhIHZhbGlkIENTUyBmb250LWZhbWlseSBzdHJpbmcgKHNpbmdsZSBvciBjb21tYS1zZXBhcmF0ZWQgbmFtZXMpIG9yIGFuIEFycmF5IG9mIHN0cmluZyBuYW1lcy5cbiovXG52YXIgZm9udEV4aXN0cyA9IGZ1bmN0aW9uIChmb250KSB7XG5cbiAgaWYgKCFkZWphdnUpIHtcbiAgICBkZWphdnUgPSB0ZXh0V2lkdGgoYWxwaGEsIHtcImZvbnQtZmFtaWx5XCI6IFwiRGVqYVZ1U2Fuc1wiLCBcImZvbnQtc2l6ZVwiOiBoZWlnaHR9KTtcbiAgICBtYWNvcyA9IHRleHRXaWR0aChhbHBoYSwge1wiZm9udC1mYW1pbHlcIjogXCItYXBwbGUtc3lzdGVtXCIsIFwiZm9udC1zaXplXCI6IGhlaWdodH0pO1xuICAgIG1vbm9zcGFjZSA9IHRleHRXaWR0aChhbHBoYSwge1wiZm9udC1mYW1pbHlcIjogXCJtb25vc3BhY2VcIiwgXCJmb250LXNpemVcIjogaGVpZ2h0fSk7XG4gICAgcHJvcG9ydGlvbmFsID0gdGV4dFdpZHRoKGFscGhhLCB7XCJmb250LWZhbWlseVwiOiBcInNhbnMtc2VyaWZcIiwgXCJmb250LXNpemVcIjogaGVpZ2h0fSk7XG4gIH1cblxuICBpZiAoIShmb250IGluc3RhbmNlb2YgQXJyYXkpKSB7IGZvbnQgPSBmb250LnNwbGl0KFwiLFwiKTsgfVxuICBmb250ID0gZm9udC5tYXAoZnVuY3Rpb24gKGYpIHsgcmV0dXJuIHRyaW0oZik7IH0pO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZm9udC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBmYW0gPSBmb250W2ldO1xuICAgIGlmIChjaGVja2VkW2ZhbV0gfHwgW1wiLWFwcGxlLXN5c3RlbVwiLCBcIm1vbm9zcGFjZVwiLCBcInNhbnMtc2VyaWZcIiwgXCJEZWphVnVTYW5zXCJdLmluY2x1ZGVzKGZhbSkpIHsgcmV0dXJuIGZhbTsgfVxuICAgIGVsc2UgaWYgKGNoZWNrZWRbZmFtXSA9PT0gZmFsc2UpIHsgY29udGludWU7IH1cbiAgICB2YXIgd2lkdGggPSB0ZXh0V2lkdGgoYWxwaGEsIHtcImZvbnQtZmFtaWx5XCI6IGZhbSwgXCJmb250LXNpemVcIjogaGVpZ2h0fSk7XG4gICAgY2hlY2tlZFtmYW1dID0gd2lkdGggIT09IG1vbm9zcGFjZTtcbiAgICBpZiAoY2hlY2tlZFtmYW1dKSB7IGNoZWNrZWRbZmFtXSA9IHdpZHRoICE9PSBwcm9wb3J0aW9uYWw7IH1cbiAgICBpZiAobWFjb3MgJiYgY2hlY2tlZFtmYW1dKSB7IGNoZWNrZWRbZmFtXSA9IHdpZHRoICE9PSBtYWNvczsgfVxuICAgIGlmIChkZWphdnUgJiYgY2hlY2tlZFtmYW1dKSB7IGNoZWNrZWRbZmFtXSA9IHdpZHRoICE9PSBkZWphdnU7IH1cbiAgICBpZiAoY2hlY2tlZFtmYW1dKSB7IHJldHVybiBmYW07IH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcblxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBmb250RXhpc3RzO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb250RXhpc3RzLmpzLm1hcCIsImltcG9ydCB7c2VsZWN0fSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbi8qKlxuICAgIEBmdW5jdGlvbiBydGxcbiAgICBAZGVzYyBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgSFRNTCBvciBib2R5IGVsZW1lbnQgaGFzIGVpdGhlciB0aGUgXCJkaXJcIiBIVE1MIGF0dHJpYnV0ZSBvciB0aGUgXCJkaXJlY3Rpb25cIiBDU1MgcHJvcGVydHkgc2V0IHRvIFwicnRsXCIuXG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VsZWN0KFwiaHRtbFwiKS5hdHRyKFwiZGlyXCIpID09PSBcInJ0bFwiIHx8XG4gIHNlbGVjdChcImJvZHlcIikuYXR0cihcImRpclwiKSA9PT0gXCJydGxcIiB8fFxuICBzZWxlY3QoXCJodG1sXCIpLnN0eWxlKFwiZGlyZWN0aW9uXCIpID09PSBcInJ0bFwiIHx8XG4gIHNlbGVjdChcImJvZHlcIikuc3R5bGUoXCJkaXJlY3Rpb25cIikgPT09IFwicnRsXCI7IH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ0bC5qcy5tYXAiLCIvKipcbiAgICBAZnVuY3Rpb24gc3RyaW5naWZ5XG4gICAgQGRlc2MgQ29lcmNlcyB2YWx1ZSBpbnRvIGEgU3RyaW5nLlxuICAgIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZVxuKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PT0gdm9pZCAwKSB7IHZhbHVlID0gXCJ1bmRlZmluZWRcIjsgfVxuICBlbHNlIGlmICghKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiB8fCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZykpIHsgdmFsdWUgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7IH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmdpZnkuanMubWFwIiwiLy8gZ3JlYXQgdW5pY29kZSBsaXN0OiBodHRwOi8vYXNlY3VyaXR5c2l0ZS5jb20vY29kaW5nL2FzYzJcblxudmFyIGRpYWNyaXRpY3MgPSBbXG4gIFsvW1xcMzAwLVxcMzA1XS9nLCBcIkFcIl0sIFsvW1xcMzQwLVxcMzQ1XS9nLCBcImFcIl0sXG4gIFsvW1xcMzA2XS9nLCBcIkFFXCJdLCBbL1tcXDM0Nl0vZywgXCJhZVwiXSxcbiAgWy9bXFwzMzddL2csIFwiQlwiXSxcbiAgWy9bXFwzMDddL2csIFwiQ1wiXSwgWy9bXFwzNDddL2csIFwiY1wiXSxcbiAgWy9bXFwzMjBcXDMzNlxcMzc2XS9nLCBcIkRcIl0sIFsvW1xcMzYwXS9nLCBcImRcIl0sXG4gIFsvW1xcMzEwLVxcMzEzXS9nLCBcIkVcIl0sIFsvW1xcMzUwLVxcMzUzXS9nLCBcImVcIl0sXG4gIFsvW1xcMzE0LVxcMzE3XS9nLCBcIklcIl0sIFsvW1xcMzU0LVxcMzU3XS9nLCBcImlcIl0sXG4gIFsvW1xcMzIxXS9nLCBcIk5cIl0sIFsvW1xcMzYxXS9nLCBcIm5cIl0sXG4gIFsvW1xcMzIyLVxcMzI2XFwzMzBdL2csIFwiT1wiXSwgWy9bXFwzNjItXFwzNjZcXDM3MF0vZywgXCJvXCJdLFxuICBbL1tcXDMzMS1cXDMzNF0vZywgXCJVXCJdLCBbL1tcXDM3MS1cXDM3NF0vZywgXCJ1XCJdLFxuICBbL1tcXDMyN10vZywgXCJ4XCJdLFxuICBbL1tcXDMzNV0vZywgXCJZXCJdLCBbL1tcXDM3NVxcMzc3XS9nLCBcInlcIl1cbl07XG5cbi8qKlxuICAgIEBmdW5jdGlvbiBzdHJpcFxuICAgIEBkZXNjIFJlbW92ZXMgYWxsIG5vbiBBU0NJSSBjaGFyYWN0ZXJzIGZyb20gYSBzdHJpbmcuXG4gICAgQHBhcmFtIHtTdHJpbmd9IHZhbHVlXG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcblxuICByZXR1cm4gKFwiXCIgKyB2YWx1ZSkucmVwbGFjZSgvW15BLVphLXowLTlcXC1fXS9nLCBmdW5jdGlvbiAoY2hhcikge1xuXG4gICAgaWYgKGNoYXIgPT09IFwiIFwiKSB7IHJldHVybiBcIi1cIjsgfVxuXG4gICAgdmFyIHJldCA9IGZhbHNlO1xuICAgIGZvciAodmFyIGQgPSAwOyBkIDwgZGlhY3JpdGljcy5sZW5ndGg7IGQrKykge1xuICAgICAgaWYgKG5ldyBSZWdFeHAoZGlhY3JpdGljc1tkXVswXSkudGVzdChjaGFyKSkge1xuICAgICAgICByZXQgPSBkaWFjcml0aWNzW2RdWzFdO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmV0IHx8IFwiXCI7XG5cbiAgfSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmlwLmpzLm1hcCIsImltcG9ydCB7ZGVmYXVsdCBhcyBzdHJpbmdpZnl9IGZyb20gXCIuL3N0cmluZ2lmeVwiO1xuaW1wb3J0IHtkZWZhdWx0IGFzIGNvbWJpbmluZ01hcmtzfSBmcm9tIFwiLi9jb21iaW5pbmdNYXJrc1wiO1xuaW1wb3J0IHttZXJnZX0gZnJvbSBcImQzLWFycmF5XCI7XG5cbnZhciBzcGxpdENoYXJzID0gW1wiLVwiLCAgXCIvXCIsICBcIjtcIiwgIFwiOlwiLCAgXCImXCIsXG4gIFwidTBFMkZcIiwgIC8vIHRoYWkgY2hhcmFjdGVyIHBhaXJhbm5vaVxuICBcInUwRUFGXCIsICAvLyBsYW8gZWxsaXBzaXNcbiAgXCJ1MEVDNlwiLCAgLy8gbGFvIGtvIGxhICh3b3JkIHJlcGV0aXRpb24pXG4gIFwidTBFQ0NcIiwgIC8vIGxhbyBjYW5jZWxsYXRpb24gbWFya1xuICBcInUxMDRBXCIsICAvLyBteWFubWFyIHNpZ24gbGl0dGxlIHNlY3Rpb25cbiAgXCJ1MTA0QlwiLCAgLy8gbXlhbm1hciBzaWduIHNlY3Rpb25cbiAgXCJ1MTA0Q1wiLCAgLy8gbXlhbm1hciBzeW1ib2wgbG9jYXRpdmVcbiAgXCJ1MTA0RFwiLCAgLy8gbXlhbm1hciBzeW1ib2wgY29tcGxldGVkXG4gIFwidTEwNEVcIiwgIC8vIG15YW5tYXIgc3ltYm9sIGFmb3JlbWVudGlvbmVkXG4gIFwidTEwNEZcIiwgIC8vIG15YW5tYXIgc3ltYm9sIGdlbml0aXZlXG4gIFwidTIwMTNcIiwgIC8vIGVuIGRhc2hcbiAgXCJ1MjAxNFwiLCAgLy8gZW0gZGFzaFxuICBcInUyMDI3XCIsICAvLyBzaW1wbGlmaWVkIGNoaW5lc2UgaHlwaGVuYXRpb24gcG9pbnRcbiAgXCJ1MzAwMFwiLCAgLy8gc2ltcGxpZmllZCBjaGluZXNlIGlkZW9ncmFwaGljIHNwYWNlXG4gIFwidTMwMDFcIiwgIC8vIHNpbXBsaWZpZWQgY2hpbmVzZSBpZGVvZ3JhcGhpYyBjb21tYVxuICBcInUzMDAyXCIsICAvLyBzaW1wbGlmaWVkIGNoaW5lc2UgaWRlb2dyYXBoaWMgZnVsbCBzdG9wXG4gIFwidUZGMENcIiwgIC8vIGZ1bGwtd2lkdGggY29tbWFcbiAgXCJ1RkY1RVwiICAgLy8gd2F2ZSBkYXNoXG5dO1xuXG52YXIgcHJlZml4Q2hhcnMgPSBbXCInXCIsICBcIjxcIiwgIFwiKFwiLCAgXCJ7XCIsICBcIltcIixcbiAgXCJ1MDBBQlwiLCAgLy8gbGVmdC1wb2ludGluZyBkb3VibGUgYW5nbGUgcXVvdGF0aW9uIG1hcmtcbiAgXCJ1MzAwQVwiLCAgLy8gbGVmdCBkb3VibGUgYW5nbGUgYnJhY2tldFxuICBcInUzMDA4XCIgIC8vIGxlZnQgYW5nbGUgYnJhY2tldFxuXTtcblxudmFyIHN1ZmZpeENoYXJzID0gW1wiJ1wiLCAgXCI+XCIsICBcIilcIiwgIFwifVwiLCAgXCJdXCIsICBcIi5cIiwgIFwiIVwiLCAgXCI/XCIsXG4gIFwidTAwQkJcIiwgIC8vIHJpZ2h0LXBvaW50aW5nIGRvdWJsZSBhbmdsZSBxdW90YXRpb24gbWFya1xuICBcInUzMDBCXCIsICAvLyByaWdodCBkb3VibGUgYW5nbGUgYnJhY2tldFxuICBcInUzMDA5XCIgIC8vIHJpZ2h0IGFuZ2xlIGJyYWNrZXRcbl0uY29uY2F0KHNwbGl0Q2hhcnMpO1xuXG52YXIgYnVybWVzZVJhbmdlID0gXCJcXHUxMDAwLVxcdTEwMkFcXHUxMDNGLVxcdTEwNDlcXHUxMDUwLVxcdTEwNTVcIjtcbnZhciBqYXBhbmVzZVJhbmdlID0gXCJcXHUzMDQwLVxcdTMwOWZcXHUzMGEwLVxcdTMwZmZcXHVmZjAwLVxcdWZmMGJcXHVmZjBkLVxcdWZmNWRcXHVmZjVmLVxcdWZmOWZcXHUzNDAwLVxcdTRkYmZcIjtcbnZhciBjaGluZXNlUmFuZ2UgPSBcIlxcdTM0MDAtXFx1OUZCRlwiO1xudmFyIGxhb1JhbmdlID0gXCJcXHUwRTgxLVxcdTBFQUVcXHUwRUIwLVxcdTBFQzRcXHUwRUM4LVxcdTBFQ0JcXHUwRUNELVxcdTBFRERcIjtcblxudmFyIG5vU3BhY2VSYW5nZSA9IGJ1cm1lc2VSYW5nZSArIGNoaW5lc2VSYW5nZSArIGphcGFuZXNlUmFuZ2UgKyBsYW9SYW5nZTtcblxudmFyIHNwbGl0V29yZHMgPSBuZXcgUmVnRXhwKChcIihcXFxcXCIgKyAoc3BsaXRDaGFycy5qb2luKFwifFxcXFxcIikpICsgXCIpKlteXFxcXHN8XFxcXFwiICsgKHNwbGl0Q2hhcnMuam9pbihcInxcXFxcXCIpKSArIFwiXSooXFxcXFwiICsgKHNwbGl0Q2hhcnMuam9pbihcInxcXFxcXCIpKSArIFwiKSpcIiksIFwiZ1wiKTtcbnZhciBub1NwYWNlTGFuZ3VhZ2UgPSBuZXcgUmVnRXhwKChcIltcIiArIG5vU3BhY2VSYW5nZSArIFwiXVwiKSk7XG52YXIgc3BsaXRBbGxDaGFycyA9IG5ldyBSZWdFeHAoKFwiKFxcXFxcIiArIChwcmVmaXhDaGFycy5qb2luKFwifFxcXFxcIikpICsgXCIpKltcIiArIG5vU3BhY2VSYW5nZSArIFwiXShcXFxcXCIgKyAoc3VmZml4Q2hhcnMuam9pbihcInxcXFxcXCIpKSArIFwifFxcXFxcIiArIChjb21iaW5pbmdNYXJrcy5qb2luKFwifFxcXFxcIikpICsgXCIpKnxbYS16MC05XStcIiksIFwiZ2lcIik7XG5cbi8qKlxuICAgIEBmdW5jdGlvbiB0ZXh0U3BsaXRcbiAgICBAZGVzYyBTcGxpdHMgYSBnaXZlbiBzZW50ZW5jZSBpbnRvIGFuIGFycmF5IG9mIHdvcmRzLlxuICAgIEBwYXJhbSB7U3RyaW5nfSBzZW50ZW5jZVxuKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbnRlbmNlKSB7XG4gIGlmICghbm9TcGFjZUxhbmd1YWdlLnRlc3Qoc2VudGVuY2UpKSB7IHJldHVybiBzdHJpbmdpZnkoc2VudGVuY2UpLm1hdGNoKHNwbGl0V29yZHMpLmZpbHRlcihmdW5jdGlvbiAodykgeyByZXR1cm4gdy5sZW5ndGg7IH0pOyB9XG4gIHJldHVybiBtZXJnZShzdHJpbmdpZnkoc2VudGVuY2UpLm1hdGNoKHNwbGl0V29yZHMpLm1hcChmdW5jdGlvbiAoZCkge1xuICAgIGlmIChub1NwYWNlTGFuZ3VhZ2UudGVzdChkKSkgeyByZXR1cm4gZC5tYXRjaChzcGxpdEFsbENoYXJzKTsgfVxuICAgIHJldHVybiBbZF07XG4gIH0pKTtcbn1cblxuZXhwb3J0IHtwcmVmaXhDaGFycywgc3BsaXRDaGFycywgc3BsaXRXb3Jkcywgc3VmZml4Q2hhcnN9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0U3BsaXQuanMubWFwIiwiLyoqXG4gICAgQGZ1bmN0aW9uIHRleHRXaWR0aFxuICAgIEBkZXNjIEdpdmVuIGEgdGV4dCBzdHJpbmcsIHJldHVybnMgdGhlIHByZWRpY3RlZCBwaXhlbCB3aWR0aCBvZiB0aGUgc3RyaW5nIHdoZW4gcGxhY2VkIGludG8gRE9NLlxuICAgIEBwYXJhbSB7U3RyaW5nfEFycmF5fSB0ZXh0IENhbiBiZSBlaXRoZXIgYSBzaW5nbGUgc3RyaW5nIG9yIGFuIGFycmF5IG9mIHN0cmluZ3MgdG8gYW5hbHl6ZS5cbiAgICBAcGFyYW0ge09iamVjdH0gW3N0eWxlXSBBbiBvYmplY3Qgb2YgQ1NTIGZvbnQgc3R5bGVzIHRvIGFwcGx5LiBBY2NlcHRzIGFueSBvZiB0aGUgdmFsaWQgW0NTUyBmb250IHByb3BlcnR5XShodHRwOi8vd3d3Lnczc2Nob29scy5jb20vY3NzcmVmL3ByX2ZvbnRfZm9udC5hc3ApIHZhbHVlcy5cbiovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0ZXh0LCBzdHlsZSkge1xuXG4gIHN0eWxlID0gT2JqZWN0LmFzc2lnbih7XG4gICAgXCJmb250LXNpemVcIjogMTAsXG4gICAgXCJmb250LWZhbWlseVwiOiBcInNhbnMtc2VyaWZcIixcbiAgICBcImZvbnQtc3R5bGVcIjogXCJub3JtYWxcIixcbiAgICBcImZvbnQtd2VpZ2h0XCI6IDQwMCxcbiAgICBcImZvbnQtdmFyaWFudFwiOiBcIm5vcm1hbFwiXG4gIH0sIHN0eWxlKTtcblxuICB2YXIgY29udGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikuZ2V0Q29udGV4dChcIjJkXCIpO1xuXG4gIHZhciBmb250ID0gW107XG4gIGZvbnQucHVzaChzdHlsZVtcImZvbnQtc3R5bGVcIl0pO1xuICBmb250LnB1c2goc3R5bGVbXCJmb250LXZhcmlhbnRcIl0pO1xuICBmb250LnB1c2goc3R5bGVbXCJmb250LXdlaWdodFwiXSk7XG4gIGZvbnQucHVzaCh0eXBlb2Ygc3R5bGVbXCJmb250LXNpemVcIl0gPT09IFwic3RyaW5nXCIgPyBzdHlsZVtcImZvbnQtc2l6ZVwiXSA6ICgoc3R5bGVbXCJmb250LXNpemVcIl0pICsgXCJweFwiKSk7XG4gIC8vIGxldCBzID0gYCR7c3R5bGVbXCJmb250LXNpemVcIl19cHhgO1xuICAvLyBpZiAoXCJsaW5lLWhlaWdodFwiIGluIHN0eWxlKSBzICs9IGAvJHtzdHlsZVtcImxpbmUtaGVpZ2h0XCJdfXB4YDtcbiAgLy8gZm9udC5wdXNoKHMpO1xuICBmb250LnB1c2goc3R5bGVbXCJmb250LWZhbWlseVwiXSk7XG5cbiAgY29udGV4dC5mb250ID0gZm9udC5qb2luKFwiIFwiKTtcblxuICBpZiAodGV4dCBpbnN0YW5jZW9mIEFycmF5KSB7IHJldHVybiB0ZXh0Lm1hcChmdW5jdGlvbiAodCkgeyByZXR1cm4gY29udGV4dC5tZWFzdXJlVGV4dCh0KS53aWR0aDsgfSk7IH1cbiAgcmV0dXJuIGNvbnRleHQubWVhc3VyZVRleHQodGV4dCkud2lkdGg7XG5cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGV4dFdpZHRoLmpzLm1hcCIsImltcG9ydCBtZWFzdXJlIGZyb20gXCIuL3RleHRXaWR0aFwiO1xuaW1wb3J0IGRlZmF1bHRTcGxpdCBmcm9tIFwiLi90ZXh0U3BsaXRcIjtcbmltcG9ydCBzdHJpbmdpZnkgZnJvbSBcIi4vc3RyaW5naWZ5XCI7XG5pbXBvcnQge3RyaW1SaWdodH0gZnJvbSBcIi4vdHJpbVwiO1xuXG4vKipcbiAgICBAZnVuY3Rpb24gdGV4dFdyYXBcbiAgICBAZGVzYyBCYXNlZCBvbiB0aGUgZGVmaW5lZCBzdHlsZXMgYW5kIGRpbWVuc2lvbnMsIGJyZWFrcyBhIHN0cmluZyBpbnRvIGFuIGFycmF5IG9mIHN0cmluZ3MgZm9yIGVhY2ggbGluZSBvZiB0ZXh0LlxuKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuXG4gIHZhciBmb250RmFtaWx5ID0gXCJzYW5zLXNlcmlmXCIsXG4gICAgICBmb250U2l6ZSA9IDEwLFxuICAgICAgZm9udFdlaWdodCA9IDQwMCxcbiAgICAgIGhlaWdodCA9IDIwMCxcbiAgICAgIGxpbmVIZWlnaHQsXG4gICAgICBtYXhMaW5lcyA9IG51bGwsXG4gICAgICBvdmVyZmxvdyA9IGZhbHNlLFxuICAgICAgc3BsaXQgPSBkZWZhdWx0U3BsaXQsXG4gICAgICB3aWR0aCA9IDIwMDtcblxuICAvKipcbiAgICAgIFRoZSBpbm5lciByZXR1cm4gb2JqZWN0IGFuZCB3cmFwcyB0aGUgdGV4dCBhbmQgcmV0dXJucyB0aGUgbGluZSBkYXRhIGFycmF5LlxuICAgICAgQHByaXZhdGVcbiAgKi9cbiAgZnVuY3Rpb24gdGV4dFdyYXAoc2VudGVuY2UpIHtcblxuICAgIHNlbnRlbmNlID0gc3RyaW5naWZ5KHNlbnRlbmNlKTtcblxuICAgIGlmIChsaW5lSGVpZ2h0ID09PSB2b2lkIDApIHsgbGluZUhlaWdodCA9IE1hdGguY2VpbChmb250U2l6ZSAqIDEuNCk7IH1cblxuICAgIHZhciB3b3JkcyA9IHNwbGl0KHNlbnRlbmNlKTtcblxuICAgIHZhciBzdHlsZSA9IHtcbiAgICAgIFwiZm9udC1mYW1pbHlcIjogZm9udEZhbWlseSxcbiAgICAgIFwiZm9udC1zaXplXCI6IGZvbnRTaXplLFxuICAgICAgXCJmb250LXdlaWdodFwiOiBmb250V2VpZ2h0LFxuICAgICAgXCJsaW5lLWhlaWdodFwiOiBsaW5lSGVpZ2h0XG4gICAgfTtcblxuICAgIHZhciBsaW5lID0gMSxcbiAgICAgICAgdGV4dFByb2cgPSBcIlwiLFxuICAgICAgICB0cnVuY2F0ZWQgPSBmYWxzZSxcbiAgICAgICAgd2lkdGhQcm9nID0gMDtcblxuICAgIHZhciBsaW5lRGF0YSA9IFtdLFxuICAgICAgICAgIHNpemVzID0gbWVhc3VyZSh3b3Jkcywgc3R5bGUpLFxuICAgICAgICAgIHNwYWNlID0gbWVhc3VyZShcIiBcIiwgc3R5bGUpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB3b3Jkcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHdvcmQgPSB3b3Jkc1tpXTtcbiAgICAgIHZhciB3b3JkV2lkdGggPSBzaXplc1t3b3Jkcy5pbmRleE9mKHdvcmQpXTtcbiAgICAgIHdvcmQgKz0gc2VudGVuY2Uuc2xpY2UodGV4dFByb2cubGVuZ3RoICsgd29yZC5sZW5ndGgpLm1hdGNoKFwiXiggfFxcbikqXCIsIFwiZ1wiKVswXTtcbiAgICAgIGlmICh0ZXh0UHJvZy5zbGljZSgtMSkgPT09IFwiXFxuXCIgfHwgd2lkdGhQcm9nICsgd29yZFdpZHRoID4gd2lkdGgpIHtcbiAgICAgICAgaWYgKCFpICYmICFvdmVyZmxvdykge1xuICAgICAgICAgIHRydW5jYXRlZCA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgbGluZURhdGFbbGluZSAtIDFdID0gdHJpbVJpZ2h0KGxpbmVEYXRhW2xpbmUgLSAxXSk7XG4gICAgICAgIGxpbmUrKztcbiAgICAgICAgaWYgKGxpbmVIZWlnaHQgKiBsaW5lID4gaGVpZ2h0IHx8IHdvcmRXaWR0aCA+IHdpZHRoICYmICFvdmVyZmxvdyB8fCBtYXhMaW5lcyAmJiBsaW5lID4gbWF4TGluZXMpIHtcbiAgICAgICAgICB0cnVuY2F0ZWQgPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHdpZHRoUHJvZyA9IDA7XG4gICAgICAgIGxpbmVEYXRhLnB1c2god29yZCk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmICghaSkgeyBsaW5lRGF0YVswXSA9IHdvcmQ7IH1cbiAgICAgIGVsc2UgeyBsaW5lRGF0YVtsaW5lIC0gMV0gKz0gd29yZDsgfVxuICAgICAgdGV4dFByb2cgKz0gd29yZDtcbiAgICAgIHdpZHRoUHJvZyArPSB3b3JkV2lkdGg7XG4gICAgICB3aWR0aFByb2cgKz0gd29yZC5tYXRjaCgvW1xcc10qJC9nKVswXS5sZW5ndGggKiBzcGFjZTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgbGluZXM6IGxpbmVEYXRhLFxuICAgICAgc2VudGVuY2U6IHNlbnRlbmNlLCB0cnVuY2F0ZWQ6IHRydW5jYXRlZCxcbiAgICAgIHdpZHRoczogbWVhc3VyZShsaW5lRGF0YSwgc3R5bGUpLFxuICAgICAgd29yZHM6IHdvcmRzXG4gICAgfTtcblxuICB9XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgdGV4dFdyYXBcbiAgICAgIEBkZXNjIElmICp2YWx1ZSogaXMgc3BlY2lmaWVkLCBzZXRzIHRoZSBmb250IGZhbWlseSBhY2Nlc3NvciB0byB0aGUgc3BlY2lmaWVkIGZ1bmN0aW9uIG9yIHN0cmluZyBhbmQgcmV0dXJucyB0aGlzIGdlbmVyYXRvci4gSWYgKnZhbHVlKiBpcyBub3Qgc3BlY2lmaWVkLCByZXR1cm5zIHRoZSBjdXJyZW50IGZvbnQgZmFtaWx5LlxuICAgICAgQHBhcmFtIHtGdW5jdGlvbnxTdHJpbmd9IFsqdmFsdWUqID0gXCJzYW5zLXNlcmlmXCJdXG4gICovXG4gIHRleHRXcmFwLmZvbnRGYW1pbHkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZm9udEZhbWlseSA9IF8sIHRleHRXcmFwKSA6IGZvbnRGYW1pbHk7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgdGV4dFdyYXBcbiAgICAgIEBkZXNjIElmICp2YWx1ZSogaXMgc3BlY2lmaWVkLCBzZXRzIHRoZSBmb250IHNpemUgYWNjZXNzb3IgdG8gdGhlIHNwZWNpZmllZCBmdW5jdGlvbiBvciBudW1iZXIgYW5kIHJldHVybnMgdGhpcyBnZW5lcmF0b3IuIElmICp2YWx1ZSogaXMgbm90IHNwZWNpZmllZCwgcmV0dXJucyB0aGUgY3VycmVudCBmb250IHNpemUuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSogPSAxMF1cbiAgKi9cbiAgdGV4dFdyYXAuZm9udFNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZm9udFNpemUgPSBfLCB0ZXh0V3JhcCkgOiBmb250U2l6ZTtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiB0ZXh0V3JhcFxuICAgICAgQGRlc2MgSWYgKnZhbHVlKiBpcyBzcGVjaWZpZWQsIHNldHMgdGhlIGZvbnQgd2VpZ2h0IGFjY2Vzc29yIHRvIHRoZSBzcGVjaWZpZWQgZnVuY3Rpb24gb3IgbnVtYmVyIGFuZCByZXR1cm5zIHRoaXMgZ2VuZXJhdG9yLiBJZiAqdmFsdWUqIGlzIG5vdCBzcGVjaWZpZWQsIHJldHVybnMgdGhlIGN1cnJlbnQgZm9udCB3ZWlnaHQuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcnxTdHJpbmd9IFsqdmFsdWUqID0gNDAwXVxuICAqL1xuICB0ZXh0V3JhcC5mb250V2VpZ2h0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZvbnRXZWlnaHQgPSBfLCB0ZXh0V3JhcCkgOiBmb250V2VpZ2h0O1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIHRleHRXcmFwXG4gICAgICBAZGVzYyBJZiAqdmFsdWUqIGlzIHNwZWNpZmllZCwgc2V0cyBoZWlnaHQgbGltaXQgdG8gdGhlIHNwZWNpZmllZCB2YWx1ZSBhbmQgcmV0dXJucyB0aGlzIGdlbmVyYXRvci4gSWYgKnZhbHVlKiBpcyBub3Qgc3BlY2lmaWVkLCByZXR1cm5zIHRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAgQHBhcmFtIHtOdW1iZXJ9IFsqdmFsdWUqID0gMjAwXVxuICAqL1xuICB0ZXh0V3JhcC5oZWlnaHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaGVpZ2h0ID0gXywgdGV4dFdyYXApIDogaGVpZ2h0O1xuICB9O1xuXG4gIC8qKlxuICAgICAgQG1lbWJlcm9mIHRleHRXcmFwXG4gICAgICBAZGVzYyBJZiAqdmFsdWUqIGlzIHNwZWNpZmllZCwgc2V0cyB0aGUgbGluZSBoZWlnaHQgYWNjZXNzb3IgdG8gdGhlIHNwZWNpZmllZCBmdW5jdGlvbiBvciBudW1iZXIgYW5kIHJldHVybnMgdGhpcyBnZW5lcmF0b3IuIElmICp2YWx1ZSogaXMgbm90IHNwZWNpZmllZCwgcmV0dXJucyB0aGUgY3VycmVudCBsaW5lIGhlaWdodCBhY2Nlc3Nvciwgd2hpY2ggaXMgMS4xIHRpbWVzIHRoZSBbZm9udCBzaXplXSgjdGV4dFdyYXAuZm9udFNpemUpIGJ5IGRlZmF1bHQuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSpdXG4gICovXG4gIHRleHRXcmFwLmxpbmVIZWlnaHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobGluZUhlaWdodCA9IF8sIHRleHRXcmFwKSA6IGxpbmVIZWlnaHQ7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgdGV4dFdyYXBcbiAgICAgIEBkZXNjIElmICp2YWx1ZSogaXMgc3BlY2lmaWVkLCBzZXRzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBsaW5lcyBhbGxvd2VkIHdoZW4gd3JhcHBpbmcuXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufE51bWJlcn0gWyp2YWx1ZSpdXG4gICovXG4gIHRleHRXcmFwLm1heExpbmVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG1heExpbmVzID0gXywgdGV4dFdyYXApIDogbWF4TGluZXM7XG4gIH07XG5cbiAgLyoqXG4gICAgICBAbWVtYmVyb2YgdGV4dFdyYXBcbiAgICAgIEBkZXNjIElmICp2YWx1ZSogaXMgc3BlY2lmaWVkLCBzZXRzIHRoZSBvdmVyZmxvdyB0byB0aGUgc3BlY2lmaWVkIGJvb2xlYW4gYW5kIHJldHVybnMgdGhpcyBnZW5lcmF0b3IuIElmICp2YWx1ZSogaXMgbm90IHNwZWNpZmllZCwgcmV0dXJucyB0aGUgY3VycmVudCBvdmVyZmxvdyB2YWx1ZS5cbiAgICAgIEBwYXJhbSB7Qm9vbGVhbn0gWyp2YWx1ZSogPSBmYWxzZV1cbiAgKi9cbiAgdGV4dFdyYXAub3ZlcmZsb3cgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob3ZlcmZsb3cgPSBfLCB0ZXh0V3JhcCkgOiBvdmVyZmxvdztcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiB0ZXh0V3JhcFxuICAgICAgQGRlc2MgSWYgKnZhbHVlKiBpcyBzcGVjaWZpZWQsIHNldHMgdGhlIHdvcmQgc3BsaXQgZnVuY3Rpb24gdG8gdGhlIHNwZWNpZmllZCBmdW5jdGlvbiBhbmQgcmV0dXJucyB0aGlzIGdlbmVyYXRvci4gSWYgKnZhbHVlKiBpcyBub3Qgc3BlY2lmaWVkLCByZXR1cm5zIHRoZSBjdXJyZW50IHdvcmQgc3BsaXQgZnVuY3Rpb24uXG4gICAgICBAcGFyYW0ge0Z1bmN0aW9ufSBbKnZhbHVlKl0gQSBmdW5jdGlvbiB0aGF0LCB3aGVuIHBhc3NlZCBhIHN0cmluZywgaXMgZXhwZWN0ZWQgdG8gcmV0dXJuIHRoYXQgc3RyaW5nIHNwbGl0IGludG8gYW4gYXJyYXkgb2Ygd29yZHMgdG8gdGV4dFdyYXAuIFRoZSBkZWZhdWx0IHNwbGl0IGZ1bmN0aW9uIHNwbGl0cyBzdHJpbmdzIG9uIHRoZSBmb2xsb3dpbmcgY2hhcmFjdGVyczogYC1gLCBgL2AsIGA7YCwgYDpgLCBgJmBcbiAgKi9cbiAgdGV4dFdyYXAuc3BsaXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3BsaXQgPSBfLCB0ZXh0V3JhcCkgOiBzcGxpdDtcbiAgfTtcblxuICAvKipcbiAgICAgIEBtZW1iZXJvZiB0ZXh0V3JhcFxuICAgICAgQGRlc2MgSWYgKnZhbHVlKiBpcyBzcGVjaWZpZWQsIHNldHMgd2lkdGggbGltaXQgdG8gdGhlIHNwZWNpZmllZCB2YWx1ZSBhbmQgcmV0dXJucyB0aGlzIGdlbmVyYXRvci4gSWYgKnZhbHVlKiBpcyBub3Qgc3BlY2lmaWVkLCByZXR1cm5zIHRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAgQHBhcmFtIHtOdW1iZXJ9IFsqdmFsdWUqID0gMjAwXVxuICAqL1xuICB0ZXh0V3JhcC53aWR0aCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh3aWR0aCA9IF8sIHRleHRXcmFwKSA6IHdpZHRoO1xuICB9O1xuXG4gIHJldHVybiB0ZXh0V3JhcDtcblxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0V3JhcC5qcy5tYXAiLCJpbXBvcnQge3N1ZmZpeENoYXJzLCBkZWZhdWx0IGFzIHRleHRTcGxpdH0gZnJvbSBcIi4vdGV4dFNwbGl0XCI7XG5cbnZhciBsb3dlcmNhc2UgPSBbXCJhXCIsIFwiYW5cIiwgXCJhbmRcIiwgXCJhc1wiLCBcImF0XCIsIFwiYnV0XCIsIFwiYnlcIiwgXCJmb3JcIiwgXCJmcm9tXCIsIFwiaWZcIiwgXCJpblwiLCBcImludG9cIiwgXCJuZWFyXCIsIFwibm9yXCIsIFwib2ZcIiwgXCJvblwiLCBcIm9udG9cIiwgXCJvclwiLCBcInBlclwiLCBcInRoYXRcIiwgXCJ0aGVcIiwgXCJ0b1wiLCBcIndpdGhcIiwgXCJ2aWFcIiwgXCJ2c1wiLCBcInZzLlwiXTtcbnZhciB1cHBlcmNhc2UgPSBbXCJDRU9cIiwgXCJDRk9cIiwgXCJDTkNcIiwgXCJDT09cIiwgXCJDUFVcIiwgXCJHRFBcIiwgXCJIVkFDXCIsIFwiSURcIiwgXCJJVFwiLCBcIlImRFwiLCBcIlRWXCIsIFwiVUlcIl07XG5cbi8qKlxuICAgIEBmdW5jdGlvbiB0aXRsZUNhc2VcbiAgICBAZGVzYyBDYXBpdGFsaXplcyB0aGUgZmlyc3QgbGV0dGVyIG9mIGVhY2ggd29yZCBpbiBhIHBocmFzZS9zZW50ZW5jZS5cbiAgICBAcGFyYW0ge1N0cmluZ30gc3RyIFRoZSBzdHJpbmcgdG8gYXBwbHkgdGhlIHRpdGxlIGNhc2UgbG9naWMuXG4qL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RyKSB7XG5cbiAgaWYgKHN0ciA9PT0gdm9pZCAwKSB7IHJldHVybiBcIlwiOyB9XG5cbiAgdmFyIHNtYWxscyA9IGxvd2VyY2FzZS5tYXAoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIHMudG9Mb3dlckNhc2UoKTsgfSk7XG5cbiAgdmFyIGJpZ3MgPSB1cHBlcmNhc2Uuc2xpY2UoKTtcbiAgYmlncyA9IGJpZ3MuY29uY2F0KGJpZ3MubWFwKGZ1bmN0aW9uIChiKSB7IHJldHVybiAoYiArIFwic1wiKTsgfSkpO1xuICB2YXIgYmlnbG93ID0gYmlncy5tYXAoZnVuY3Rpb24gKGIpIHsgcmV0dXJuIGIudG9Mb3dlckNhc2UoKTsgfSk7XG5cbiAgdmFyIHNwbGl0ID0gdGV4dFNwbGl0KHN0cik7XG4gIHJldHVybiBzcGxpdC5tYXAoZnVuY3Rpb24gKHMsIGkpIHtcbiAgICBpZiAocykge1xuICAgICAgdmFyIGxvd2VyID0gcy50b0xvd2VyQ2FzZSgpO1xuICAgICAgdmFyIHN0cmlwcGVkID0gc3VmZml4Q2hhcnMuaW5jbHVkZXMobG93ZXIuY2hhckF0KGxvd2VyLmxlbmd0aCAtIDEpKSA/IGxvd2VyLnNsaWNlKDAsIC0xKSA6IGxvd2VyO1xuICAgICAgdmFyIGJpZ2luZGV4ID0gYmlnbG93LmluZGV4T2Yoc3RyaXBwZWQpO1xuICAgICAgaWYgKGJpZ2luZGV4ID49IDApIHsgcmV0dXJuIGJpZ3NbYmlnaW5kZXhdOyB9XG4gICAgICBlbHNlIGlmIChzbWFsbHMuaW5jbHVkZXMoc3RyaXBwZWQpICYmIGkgIT09IDAgJiYgaSAhPT0gc3BsaXQubGVuZ3RoIC0gMSkgeyByZXR1cm4gbG93ZXI7IH1cbiAgICAgIGVsc2UgeyByZXR1cm4gcy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHMuc3Vic3RyKDEpLnRvTG93ZXJDYXNlKCk7IH1cbiAgICB9XG4gICAgZWxzZSB7IHJldHVybiBcIlwiOyB9XG4gIH0pLnJlZHVjZShmdW5jdGlvbiAocmV0LCBzLCBpKSB7XG4gICAgaWYgKGkgJiYgc3RyLmNoYXJBdChyZXQubGVuZ3RoKSA9PT0gXCIgXCIpIHsgcmV0ICs9IFwiIFwiOyB9XG4gICAgcmV0ICs9IHM7XG4gICAgcmV0dXJuIHJldDtcbiAgfSwgXCJcIik7XG5cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGl0bGVDYXNlLmpzLm1hcCIsIi8qKlxuICAgIEBmdW5jdGlvbiB0cmltXG4gICAgQGRlc2MgQ3Jvc3MtYnJvd3NlciBpbXBsZW1lbnRhdGlvbiBvZiBbdHJpbV0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL1RyaW0pLlxuICAgIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiovXG5mdW5jdGlvbiB0cmltKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL15cXHMrfFxccyskL2csIFwiXCIpO1xufVxuXG4vKipcbiAgICBAZnVuY3Rpb24gdHJpbUxlZnRcbiAgICBAZGVzYyBDcm9zcy1icm93c2VyIGltcGxlbWVudGF0aW9uIG9mIFt0cmltTGVmdF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL1RyaW1MZWZ0KS5cbiAgICBAcGFyYW0ge1N0cmluZ30gc3RyXG4qL1xuZnVuY3Rpb24gdHJpbUxlZnQoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvXlxccysvLCBcIlwiKTtcbn1cblxuLyoqXG4gICAgQGZ1bmN0aW9uIHRyaW1SaWdodFxuICAgIEBkZXNjIENyb3NzLWJyb3dzZXIgaW1wbGVtZW50YXRpb24gb2YgW3RyaW1SaWdodF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU3RyaW5nL1RyaW1SaWdodCkuXG4gICAgQHBhcmFtIHtTdHJpbmd9IHN0clxuKi9cbmZ1bmN0aW9uIHRyaW1SaWdodChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9cXHMrJC8sIFwiXCIpO1xufVxuXG5leHBvcnQge3RyaW0sIHRyaW1MZWZ0LCB0cmltUmlnaHR9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmltLmpzLm1hcCIsImltcG9ydCBCb3hlZFRyZWUgZnJvbSAnLi9qcy9Cb3hlZFRyZWUnO1xyXG5pbXBvcnQgQ2lyY2xlVHJlZSBmcm9tICcuL2pzL0NpcmNsZVRyZWUnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgYm94ZWRUcmVlOiBCb3hlZFRyZWUsXHJcbiAgICBjaXJjbGVUcmVlOiBDaXJjbGVUcmVlXHJcbn07IiwiaW1wb3J0IGQzIGZyb20gJy4vQ3VzdG9tRDMnO1xyXG5pbXBvcnQgTm9kZVNldHRpbmdzIGZyb20gJy4vTm9kZVNldHRpbmdzJztcclxuaW1wb3J0IExvYWRPbkRlbWFuZFNldHRpbmdzIGZyb20gJy4vTG9hZE9uRGVtYW5kU2V0dGluZ3MnO1xyXG5pbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJ2V2ZW50cyc7XHJcblxyXG4vKipcclxuICogUmVjdXJzaXZlbHkgZmluZCBhIHBhcnRpY3VsYXIgb2JqZWN0IHdpdGhpbiBhIGhpZXJhcmNoaWNhbCBkYXRhc2V0LlxyXG4gKiBcclxuICogQHBhcmFtIHtvYmplY3R9IGhpZXJhcmNoaWNhbE9iamVjdCBUaGUgaW5pdGlhbCBoaWVyYXJjaGljYWwgb2JqZWN0IHRvIHN0YXJ0IHRoZSByZWN1cnNpdmUgZmluZC5cclxuICogQHBhcmFtIHtmdW5jdGlvbn0gZ2V0Q2hpbGRyZW4gVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgZ2V0cyB0aGUgY2hpbGRyZW4gaXRlbXMgb2YgdGhlIGhpZXJhcmNoaWNhbCBvYmplY3QuXHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGZpbmRDb25kaXRpb24gVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgZGVmaW5lcyB3aGV0aGVyIHRoZSBvYmplY3QgbWF0Y2hlcyB0aGUgY29uZGl0aW9uIHRvIGJlIHJldHVybmVkIG9yIG5vdC5cclxuICogQHJldHVybnMge29iamVjdHxudWxsfSBUaGUgZmlyc3Qgb2JqZWN0IG1hdGNoaW5nIHRoZSBjb25kaXRpb25zLlxyXG4gKi9cclxuZnVuY3Rpb24gcmVjdXJzaXZlRmluZChoaWVyYXJjaGljYWxPYmplY3QsIGdldENoaWxkcmVuLCBmaW5kQ29uZGl0aW9uKSB7XHJcbiAgICBpZiAoZmluZENvbmRpdGlvbihoaWVyYXJjaGljYWxPYmplY3QpKVxyXG4gICAgICAgIHJldHVybiBoaWVyYXJjaGljYWxPYmplY3Q7XHJcbiAgICB2YXIgY2hpbGRyZW4gPSBnZXRDaGlsZHJlbihoaWVyYXJjaGljYWxPYmplY3QpO1xyXG4gICAgdmFyIGZvdW5kTm9kZSA9IGNoaWxkcmVuLmZpbmQoZmluZENvbmRpdGlvbik7XHJcbiAgICBpZiAoIWZvdW5kTm9kZSlcclxuICAgIHtcclxuICAgICAgICBmb3IgKHZhciBjaGlsZCBvZiBjaGlsZHJlbikge1xyXG4gICAgICAgICAgICBmb3VuZE5vZGUgPSByZWN1cnNpdmVGaW5kKGNoaWxkLCBnZXRDaGlsZHJlbiwgZmluZENvbmRpdGlvbik7XHJcbiAgICAgICAgICAgIGlmIChmb3VuZE5vZGUpXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZm91bmROb2RlO1xyXG59XHJcblxyXG4vKipcclxuICogUmVjdXJzaXZlbHkgZ2V0cyBhIHNldCBvZiBvYmplY3RzIHdpdGhpbiBhIGhpZXJhcmNoaWNhbCBkYXRhc2V0LlxyXG4gKiBcclxuICogQHBhcmFtIHtvYmplY3R9IGhpZXJhcmNoaWNhbE9iamVjdCBUaGUgaW5pdGlhbCBoaWVyYXJjaGljYWwgb2JqZWN0IHRvIHN0YXJ0IHRoZSByZWN1cnNpdmUgZ2V0LlxyXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBnZXRDaGlsZHJlbiBUaGUgY2FsbGJhY2sgZnVuY3Rpb24gdGhhdCBnZXRzIHRoZSBjaGlsZHJlbiBpdGVtcyBvZiB0aGUgaGllcmFyY2hpY2FsIG9iamVjdC5cclxuICovXHJcbmZ1bmN0aW9uIHJlY3Vyc2l2ZUdldChoaWVyYXJjaGljYWxPYmplY3QsIGdldENoaWxkcmVuKSB7XHJcbiAgICB2YXIgYWxsSXRlbXMgPSBbXTtcclxuICAgIHZhciBjaGlsZHJlbiA9IGdldENoaWxkcmVuKGhpZXJhcmNoaWNhbE9iamVjdCk7XHJcbiAgICBpZiAoY2hpbGRyZW4pXHJcbiAgICB7XHJcbiAgICAgICAgZm9yICh2YXIgY2hpbGQgb2YgY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgYWxsSXRlbXMucHVzaChjaGlsZCk7XHJcbiAgICAgICAgICAgIHZhciBkZXNjZW5kYW50cyA9IHJlY3Vyc2l2ZUdldChjaGlsZCwgZ2V0Q2hpbGRyZW4pO1xyXG4gICAgICAgICAgICBpZiAoZGVzY2VuZGFudHMpXHJcbiAgICAgICAgICAgICAgICBhbGxJdGVtcyA9IFsuLi5hbGxJdGVtcywgLi4uZGVzY2VuZGFudHNdO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBhbGxJdGVtcztcclxufVxyXG5cclxuY2xhc3MgQmFzZVRyZWUgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyBUaGUgb3B0aW9ucyBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMudGhlbWU9ZGVmYXVsdF0gVGhlIHRoZW1lIG9mIHRoZSB0cmVlLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm9yaWVudGF0aW9uPWxlZnRUb1JpZ2h0XSBUaGUgb3JpZW50YXRpb24gb2YgdGhlIHRyZWUuXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmFsbG93UGFuPXRydWVdIEVuYWJsZXMvZGlzYWJsZXMgdGhlIG1vdXNlIGRyYWcgdG8gcGFuIGZlYXR1cmUuXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmFsbG93Wm9vbT10cnVlXSBFbmFibGVzL2Rpc2FibGVzIHRoZSBtb3VzZSB3aGVlbCB0byB6b29tIGZlYXR1cmUuXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmFsbG93Rm9jdXM9dHJ1ZV0gSWYgdHJ1ZSwgY2xpY2tpbmcgb24gYSBub2RlIHdvdWxkIGZvY3VzIHRvIHRoZSBub2RlLCBoaWRpbmcgYWxsIGlycmVsZXZhbnQgbm9kZXMgdGhhdCdzIG5vdCBhIHBhcmVudCwgYW5jZXN0b3IsIG9yIHNpYmxpbmcuXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmFsbG93Tm9kZUNlbnRlcmluZz10cnVlXSBJZiB0cnVlLCBjbGlja2luZyBvbiBhIG5vZGUgd291bGQgcGFuIHRvIHRoZSBub2RlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1pblNjYWxlPTFdIE1pbmltdW0gem9vbSBzY2FsaW5nLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1heFNjYWxlPTJdIE1heGltdW0gem9vbSBzY2FsaW5nLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm5vZGVEZXB0aE11bHRpcGxpZXI9MzAwXSBUaGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgcGFyZW50IGFuZCBjaGlsZCBub2Rlcy5cclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuaXNGbGF0RGF0YT1mYWxzZV0gSW5kaWNhdGVzIHdoZXRoZXIgdGhlIHBhc3NlZCBkYXRhIHdhcyBhIGZsYXQgYXJyYXkgb2Ygb2JqZWN0cy4gSWYgdHJ1ZSwgeW91IG11c3Qgc3BlY2lmeSB0aGUgYGdldFBhcmVudElkYCBvcHRpb24uXHJcbiAgICAgKiBAcGFyYW0ge2dldElkQ2FsbEJhY2t9IG9wdGlvbnMuZ2V0SWRcclxuICAgICAqIEBwYXJhbSB7Z2V0UGFyZW50SWRDYWxsQmFja30gW29wdGlvbnMuZ2V0UGFyZW50SWRdXHJcbiAgICAgKiBAcGFyYW0ge2dldENoaWxkcmVuQ2FsbEJhY2t9IFtvcHRpb25zLmdldENoaWxkcmVuXVxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLndpZHRoV2l0aG91dE1hcmdpbnM9OTYwXSBUaGUgd2lkdGggb2YgdGhlIHRyZWUsIG5vdCBpbmNsdWRpbmcgdGhlIG1hcmdpbnMuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuaGVpZ2h0V2l0aG91dE1hcmdpbnM9ODAwXSBUaGUgaGVpZ2h0IG9mIHRoZSB0cmVlLCBub3QgaW5jbHVkaW5nIHRoZSBtYXJnaW5zLlxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLm1hcmdpbnNdIE9iamVjdCBzcGVjaWZ5aW5nIHRoZSBtYXJnaW5zIG9mIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubWFyZ2lucy50b3BdIFRoZSB0b3AgbWFyZ2luIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1hcmdpbnMucmlnaHRdIFRoZSByaWdodCBtYXJnaW4gZm9yIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubWFyZ2lucy5ib3R0b21dIFRoZSBib3R0b20gbWFyZ2luIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1hcmdpbnMubGVmdF0gVGhlIGxlZnQgbWFyZ2luIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmR1cmF0aW9uXSBJbnRlZ2VyIGluIG1pbGxpc2Vjb25kcyBkZXRlcm1pbmluZyB0aGUgZHVyYXRpb24gb2YgdGhlIGFuaW1hdGlvbnMgZm9yIHRoZSB0cmVlLlxyXG4gICAgICogQHBhcmFtIHtMb2FkT25EZW1hbmRTZXR0aW5nc30gW29wdGlvbnMubG9hZE9uRGVtYW5kU2V0dGluZ3NdIE9iamVjdCBzcGVjaWZ5aW5nIHRoZSBsb2FkLW9uLWRlbWFuZCBzZXR0aW5ncy5cclxuICAgICAqIEBwYXJhbSB7Tm9kZVNldHRpbmdzfSBbb3B0aW9ucy5ub2RlU2V0dGluZ3NdIE9iamVjdCBzcGVjaWZ5aW5nIHRoZSBub2RlIHNldHRpbmdzIGZvciB0aGUgdHJlZS5cclxuICAgICAqL1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIERlZmF1bHRzIG9wdGlvbnMgdG8gYW4gZW1wdHkgb2JqZWN0XHJcblxyXG4gICAgICAgIHZhciBtZXJnZWRPcHRpb25zID0ge1xyXG4gICAgICAgICAgICAuLi5CYXNlVHJlZS5kZWZhdWx0cyxcclxuICAgICAgICAgICAgLi4ub3B0aW9uc1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vIFdlIGRlZmluZSBvdXIgcHJvdG90eXBlIHByb3BlcnRpZXMgd2hpY2ggd291bGQgYmUgc2V0IGxhdGVyXHJcbiAgICAgICAgdGhpcy5fcm9vdCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fc3ZnID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9wYW5uaW5nQ29udGFpbmVyID0gbnVsbCxcclxuICAgICAgICB0aGlzLl92aWV3ID0gbnVsbDtcclxuICAgICAgICB0aGlzLl90cmVlR2VuZXJhdG9yID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9saW5rUGF0aEdlbmVyYXRvciA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fdmlzaWJsZU5vZGVzID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9saW5rcyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5fem9vbUxpc3RlbmVyID0gbnVsbCxcclxuXHJcbiAgICAgICAgLy8gQXNzaWduL1NldCBwcm90b3R5cGUgcHJvcGVydGllcywgdXNpbmcgdmFsdWVzIHBhc3NlZCBmcm9tIHRoZSBvcHRpb25zIG9iamVjdFxyXG4gICAgICAgIHRoaXMuc2V0VGhlbWUobWVyZ2VkT3B0aW9ucy50aGVtZSk7XHJcbiAgICAgICAgdGhpcy5zZXRPcmllbnRhdGlvbihtZXJnZWRPcHRpb25zLm9yaWVudGF0aW9uKTtcclxuICAgICAgICB0aGlzLnNldERhdGEobWVyZ2VkT3B0aW9ucy5kYXRhKTtcclxuICAgICAgICB0aGlzLnNldEVsZW1lbnQobWVyZ2VkT3B0aW9ucy5lbGVtZW50KTtcclxuICAgICAgICB0aGlzLnNldFdpZHRoV2l0aG91dE1hcmdpbnMobWVyZ2VkT3B0aW9ucy53aWR0aFdpdGhvdXRNYXJnaW5zKTtcclxuICAgICAgICB0aGlzLnNldEhlaWdodFdpdGhvdXRNYXJnaW5zKG1lcmdlZE9wdGlvbnMuaGVpZ2h0V2l0aG91dE1hcmdpbnMpO1xyXG4gICAgICAgIHRoaXMuc2V0TWFyZ2lucyhtZXJnZWRPcHRpb25zLm1hcmdpbnMpO1xyXG4gICAgICAgIHRoaXMuc2V0RHVyYXRpb24obWVyZ2VkT3B0aW9ucy5kdXJhdGlvbik7XHJcbiAgICAgICAgdGhpcy5zZXRBbGxvd1BhbihtZXJnZWRPcHRpb25zLmFsbG93UGFuKTtcclxuICAgICAgICB0aGlzLnNldEFsbG93Wm9vbShtZXJnZWRPcHRpb25zLmFsbG93Wm9vbSk7XHJcbiAgICAgICAgdGhpcy5zZXRBbGxvd0ZvY3VzKG1lcmdlZE9wdGlvbnMuYWxsb3dGb2N1cyk7XHJcbiAgICAgICAgdGhpcy5zZXRBbGxvd05vZGVDZW50ZXJpbmcobWVyZ2VkT3B0aW9ucy5hbGxvd05vZGVDZW50ZXJpbmcpO1xyXG4gICAgICAgIHRoaXMuc2V0TWluU2NhbGUobWVyZ2VkT3B0aW9ucy5taW5TY2FsZSk7XHJcbiAgICAgICAgdGhpcy5zZXRNYXhTY2FsZShtZXJnZWRPcHRpb25zLm1heFNjYWxlKTtcclxuICAgICAgICB0aGlzLnNldElzRmxhdERhdGEobWVyZ2VkT3B0aW9ucy5pc0ZsYXREYXRhKTtcclxuICAgICAgICB0aGlzLnNldE5vZGVEZXB0aE11bHRpcGxpZXIobWVyZ2VkT3B0aW9ucy5ub2RlRGVwdGhNdWx0aXBsaWVyKVxyXG5cclxuICAgICAgICAvLyBXZSBkZWZpbmUgb3VyIHN1Yi1wcm90b3R5cGUgKEFLQSBzdWItY2xhc3MpIHByb3BlcnRpZXNcclxuXHJcbiAgICAgICAgdGhpcy5sb2FkT25EZW1hbmRTZXR0aW5ncyA9IG5ldyBMb2FkT25EZW1hbmRTZXR0aW5ncyh0aGlzLCBtZXJnZWRPcHRpb25zLmxvYWRPbkRlbWFuZFNldHRpbmdzKTtcclxuICAgICAgICB0aGlzLm5vZGVTZXR0aW5ncyA9IG5ldyBOb2RlU2V0dGluZ3ModGhpcywgbWVyZ2VkT3B0aW9ucy5ub2RlU2V0dGluZ3MpO1xyXG5cclxuICAgICAgICAvLyBXZSBkZWZpbmUgb3VyIG1ldGhvZHMsIHdoaWNoIGRlcml2ZXMgZnJvbSBvdXIgb3B0aW9uc1xyXG4gICAgICAgIHRoaXMuX2dldElkID0gbWVyZ2VkT3B0aW9ucy5nZXRJZDtcclxuICAgICAgICB0aGlzLl9nZXRDaGlsZHJlbiA9IG1lcmdlZE9wdGlvbnMuZ2V0Q2hpbGRyZW47XHJcbiAgICAgICAgdGhpcy5fZ2V0UGFyZW50SWQgPSBtZXJnZWRPcHRpb25zLmdldFBhcmVudElkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRGVmaW5lcyBob3cgdG8gY3JlYXRlIHRoZSBub2RlcyBmb3IgbmV3bHlcclxuICAgICAqIGFkZGVkIGRhdGEgb2JqZWN0cy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0geyp9IG5vZGVFbnRlciBUaGUgRDMgRW50ZXIgc2VsZWN0aW9uIG9mIG5vZGVzLlxyXG4gICAgICogQHBhcmFtIHsqfSBub2Rlc1xyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBfbm9kZUVudGVyKG5vZGVFbnRlciwgbm9kZXMpIHtcclxuICAgICAgICB0aHJvdyAnVGhlIGZ1bmN0aW9uIF9ub2RlRW50ZXIgbXVzdCBiZSBpbXBsZW1lbnRlZCc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZpbmVzIGhvdyB0byB1cGRhdGUgdGhlIG5vZGVzIGZvciB0aGVcclxuICAgICAqIGRhdGEgb2JqZWN0cy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0geyp9IG5vZGVVcGRhdGUgVGhlIEQzIFVwZGF0ZSBzZWxlY3Rpb24gb2Ygbm9kZXMuXHJcbiAgICAgKiBAcGFyYW0geyp9IG5vZGVVcGRhdGVUcmFuc2l0aW9uIFRoZSBEMyB0cmFuc2l0aW9uIG9iamVjdCBmb3IgdGhlIEQzIFVwZGF0ZSBzZWxlY3Rpb24gb2Ygbm9kZXMuXHJcbiAgICAgKiBAcGFyYW0geyp9IG5vZGVzXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIF9ub2RlVXBkYXRlKG5vZGVVcGRhdGUsIG5vZGVVcGRhdGVUcmFuc2l0aW9uLCBub2Rlcykge1xyXG4gICAgICAgIHRocm93ICdUaGUgZnVuY3Rpb24gX25vZGVVcGRhdGUgbXVzdCBiZSBpbXBsZW1lbnRlZCc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZpbmVzIGhvdyB0byByZW1vdmUgdGhlIG5vZGVzIGZvciB0aGVcclxuICAgICAqIHJlbW92ZWQgZGF0YSBvYmplY3RzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7Kn0gbm9kZUV4aXQgVGhlIEQzIEV4aXQgc2VsZWN0aW9uIG9mIG5vZGVzLlxyXG4gICAgICogQHBhcmFtIHsqfSBub2RlRXhpdFRyYW5zaXRpb24gVGhlIEQzIHRyYW5zaXRpb24gb2JqZWN0IGZvciB0aGUgRDMgRXhpdCBzZWxlY3Rpb24gb2Ygbm9kZXMuXHJcbiAgICAgKiBAcGFyYW0geyp9IG5vZGVzXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIF9ub2RlRXhpdChub2RlRXhpdCwgbm9kZUV4aXRUcmFuc2l0aW9uLCBub2Rlcykge1xyXG4gICAgICAgIHRocm93ICdUaGUgZnVuY3Rpb24gX25vZGVFeGl0IG11c3QgYmUgaW1wbGVtZW50ZWQnO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgcGF0aCBnZW5lcmF0b3IgdXNlZCB0byByZW5kZXJcclxuICAgICAqIHRoZSBsaW5rcyBiZXR3ZWVuIHRoZSBub2Rlcy5cclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7ZnVuY3Rpb259IFRoZSBjYWxsYmFjayBmdW5jdGlvbiB0aGF0IGdlbmVyYXRlcyB0aGUgU1ZHIHBhdGggY29vcmRpbmF0ZXMgZm9yIHRoZSBsaW5rcywgZ2l2ZW4gYSBjb29yZGluYXRlcyBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIF9nZXRMaW5rUGF0aEdlbmVyYXRvcigpIHtcclxuICAgICAgICB0aHJvdyAnVGhlIGZ1bmN0aW9uIF9nZXRMaW5rUGF0aEdlbmVyYXRvciBtdXN0IGJlIGltcGxlbWVudGVkJztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERlZmluZXMgaG93IHRvIGNyZWF0ZSB0aGUgbGlua3MgZm9yIG5ld2x5XHJcbiAgICAgKiBhZGRlZCBkYXRhIG9iamVjdHMuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHsqfSBzb3VyY2UgVGhlIG9yaWdpbmFsIGRhdGEgb2JqZWN0IHRoYXQgdGhlIGxpbmtzIGFyZSBiZWluZyBkcmF3biBmb3IuXHJcbiAgICAgKiBAcGFyYW0geyp9IGxpbmtFbnRlciBUaGUgRDMgRW50ZXIgc2VsZWN0aW9uIG9mIGxpbmtzLlxyXG4gICAgICogQHBhcmFtIHsqfSBsaW5rc1xyXG4gICAgICogQHBhcmFtIHsqfSBsaW5rUGF0aEdlbmVyYXRvclxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBfbGlua0VudGVyKHNvdXJjZSwgbGlua0VudGVyLCBsaW5rcywgbGlua1BhdGhHZW5lcmF0b3IpIHtcclxuICAgICAgICB0aHJvdyAnVGhlIGZ1bmN0aW9uIF9saW5rRW50ZXIgbXVzdCBiZSBpbXBsZW1lbnRlZCc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZpbmVzIGhvdyB0byB1cGRhdGUgdGhlIGxpbmtzIGZvciB0aGVcclxuICAgICAqIGRhdGEgb2JqZWN0cy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0geyp9IHNvdXJjZSBUaGUgb3JpZ2luYWwgZGF0YSBvYmplY3QgdGhhdCB0aGUgbGlua3MgYXJlIGJlaW5nIGRyYXduIGZvci5cclxuICAgICAqIEBwYXJhbSB7Kn0gbGlua1VwZGF0ZSBUaGUgRDMgVXBkYXRlIHNlbGVjdGlvbiBvZiBsaW5rcy5cclxuICAgICAqIEBwYXJhbSB7Kn0gbGlua1VwZGF0ZVRyYW5zaXRpb24gVGhlIEQzIHRyYW5zaXRpb24gb2JqZWN0IGZvciB0aGUgRDMgVXBkYXRlIHNlbGVjdGlvbiBvZiBsaW5rcy5cclxuICAgICAqIEBwYXJhbSB7Kn0gbGlua3NcclxuICAgICAqIEBwYXJhbSB7Kn0gbGlua1BhdGhHZW5lcmF0b3IgVGhlIGxpbmsgcGF0aCBnZW5lcmF0b3IgZnVuY3Rpb24uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIF9saW5rVXBkYXRlKHNvdXJjZSwgbGlua1VwZGF0ZSwgbGlua1VwZGF0ZVRyYW5zaXRpb24sIGxpbmtzLCBsaW5rUGF0aEdlbmVyYXRvcikge1xyXG4gICAgICAgIHRocm93ICdUaGUgZnVuY3Rpb24gX2xpbmtVcGRhdGUgbXVzdCBiZSBpbXBsZW1lbnRlZCc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZWZpbmVzIGhvdyB0byByZW1vdmUgdGhlIGxpbmtzIGZvciB0aGVcclxuICAgICAqIHJlbW92ZWQgZGF0YSBvYmplY3RzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBzb3VyY2UgVGhlIG9yaWdpbmFsIGRhdGEgb2JqZWN0IHRoYXQgdGhlIGxpbmtzIGFyZSBiZWluZyBkcmF3biBmb3IuXHJcbiAgICAgKiBAcGFyYW0geyp9IGxpbmtFeGl0IFRoZSBEMyBFeGl0IHNlbGVjdGlvbiBvZiBsaW5rcy5cclxuICAgICAqIEBwYXJhbSB7Kn0gbGlua0V4aXRUcmFuc2l0aW9uIFRoZSBEMyB0cmFuc2l0aW9uIG9iamVjdCBmb3IgdGhlIEQzIFVwZGF0ZSBzZWxlY3Rpb24gb2YgbGlua3MuXHJcbiAgICAgKiBAcGFyYW0geyp9IGxpbmtzXHJcbiAgICAgKiBAcGFyYW0geyp9IGxpbmtQYXRoR2VuZXJhdG9yIFRoZSBsaW5rIHBhdGggZ2VuZXJhdG9yIGZ1bmN0aW9uLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBfbGlua0V4aXQoc291cmNlLCBsaW5rRXhpdCwgbGlua0V4aXRUcmFuc2l0aW9uLCBsaW5rcywgbGlua1BhdGhHZW5lcmF0b3IpIHtcclxuICAgICAgICB0aHJvdyAnVGhlIGZ1bmN0aW9uIF9saW5rRXhpdCBtdXN0IGJlIGltcGxlbWVudGVkJztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENhbGxlZCB3aGVuIHVwZGF0aW5nIGRpbWVuc2lvbnMgd2hlblxyXG4gICAgICogbm9kZSBzZXR0aW5ncyBpcyBjb25maWd1cmVkIHRvIGJlXHJcbiAgICAgKiAnbm9kZXNpemUnLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyW119IEFuIGFycmF5IHdpdGggdHdvIHZhbHVlcywgcmVwcmVzZW50aW5nIHRoZSBoZWlnaHQgYW5kIHdpZHRoIG9mIHRoZSBub2RlIHJlc3BlY3RpdmVseS5cclxuICAgICAqL1xyXG4gICAgX2dldE5vZGVTaXplKCkge1xyXG4gICAgICAgIHRocm93ICdUaGUgZnVuY3Rpb24gX2dldE5vZGVTaXplIG11c3QgYmUgaW1wbGVtZW50ZWQnO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRm9jdXNlcyBhbmQgZXhwYW5kcyBhbGwgdGhlIHdheSB0aHJvdWdoIHRvIGEgbm9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHsqfSBpZE9yTm9kZURhdGFJdGVtIFRoZSBpZCBvZiB0aGUgbm9kZSB0byBmb2N1cywgb3IgdGhlIG5vZGUgZGF0YSBpdGVtIG9iamVjdC5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgZm9jdXNUb05vZGUoaWRPck5vZGVEYXRhSXRlbSkge1xyXG4gICAgICAgIHRoaXMucmVtb3ZlU2VsZWN0aW9uKHRoaXMuZ2V0Um9vdCgpKTtcclxuICAgICAgICBcclxuICAgICAgICB2YXIgbm9kZURhdGFJdGVtID0gaWRPck5vZGVEYXRhSXRlbTtcclxuICAgICAgICBpZiAodHlwZW9mIG5vZGVEYXRhSXRlbSAhPT0gJ29iamVjdCcgJiYgbm9kZURhdGFJdGVtICE9PSBudWxsKVxyXG4gICAgICAgICAgICBub2RlRGF0YUl0ZW0gPSB0aGlzLmdldE5vZGUobm9kZURhdGFJdGVtKTtcclxuICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IG51bGw7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gRXhwYW5kIGV2ZXJ5IHBhcmVudC9hbmNlc3RvciBub2RlXHJcbiAgICAgICAgcGFyZW50Tm9kZSA9IG5vZGVEYXRhSXRlbS5wYXJlbnQ7XHJcbiAgICAgICAgd2hpbGUocGFyZW50Tm9kZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmIChwYXJlbnROb2RlLl9jaGlsZHJlbilcclxuICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kKHBhcmVudE5vZGUpO1xyXG4gICAgICAgICAgICBwYXJlbnROb2RlID0gcGFyZW50Tm9kZS5wYXJlbnQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5nZXRBbGxvd0ZvY3VzKCkpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAvLyBIaWRlIHRoZSBwYXJlbnQvYW5jZXN0b3Igbm9kZSBzaWJsaW5nc1xyXG4gICAgICAgICAgICBwYXJlbnROb2RlID0gbm9kZURhdGFJdGVtLnBhcmVudDtcclxuICAgICAgICAgICAgd2hpbGUocGFyZW50Tm9kZSlcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRlU2libGluZ3MocGFyZW50Tm9kZSk7XHJcbiAgICAgICAgICAgICAgICBwYXJlbnROb2RlID0gcGFyZW50Tm9kZS5wYXJlbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVHJlZVdpdGhGb2N1c09uTm9kZShub2RlRGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICBub2RlRGF0YUl0ZW0uc2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGUodGhpcy5nZXRSb290KCkpO1xyXG4gICAgICAgIHRoaXMuY2VudGVyTm9kZShub2RlRGF0YUl0ZW0pO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBib29sZWFuIHdoZXRoZXIgdGhlXHJcbiAgICAgKiB0cmVlIGlzIHVzaW5nIGZsYXQgZGF0YSBvciBub3QuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBXaGV0aGVyIHRoZSB0cmVlIGlzIHVzaW5nIGZsYXQgZGF0YSBvciBub3QuXHJcbiAgICAgKi9cclxuICAgIGdldElzRmxhdERhdGEoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzRmxhdERhdGE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgaXMgZmxhdCBkYXRhIGZsYWcuXHJcbiAgICAgKiBJZiBzZXQgdG8gdHJ1ZSwgeW91IG11c3Qgc3BlY2lmeVxyXG4gICAgICogdGhlIGBnZXRQYXJlbnRJZGAgb3B0aW9uLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IG5ld0lzRmxhdERhdGEgV2hldGhlciB0aGUgdHJlZSBpcyB1c2luZyBmbGF0IGRhdGEgb3Igbm90LlxyXG4gICAgICovXHJcbiAgICBzZXRJc0ZsYXREYXRhKG5ld0lzRmxhdERhdGEpIHtcclxuICAgICAgICB0aGlzLl9pc0ZsYXREYXRhID0gbmV3SXNGbGF0RGF0YTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlZ2VuZXJhdGVzIHRoZSBub2RlIGRhdGEuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgcmVnZW5lcmF0ZU5vZGVEYXRhKCkge1xyXG4gICAgICAgIC8vIEFzc2lnbnMgcGFyZW50LCBjaGlsZHJlbiwgaGVpZ2h0LCBkZXB0aFxyXG4gICAgICAgIGlmICghdGhpcy5nZXRJc0ZsYXREYXRhKCkpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLl9nZXRDaGlsZHJlbilcclxuICAgICAgICAgICAgICAgIHRocm93IFwiSWYgeW91IGFyZSBwcm92aWRpbmcgaGllcmFyY2hpY2FsIHN0cnVjdHVyZWQgZGF0YSwgdGhlbiB5b3UgbXVzdCBzZXQgdGhlIGdldENoaWxkcmVuIGFjY2Vzc29yIHByb3BlcnR5LlwiO1xyXG5cclxuICAgICAgICAgICAgLy8gU3BlY2lmeSB5b3VyIGNoaWxkcmVuIHByb3BlcnR5IGhlcmUsXHJcbiAgICAgICAgICAgIC8vIHNvIHRoYXQgRDMncyByZXN1bHRpbmcgcm9vdCBvYmplY3RcclxuICAgICAgICAgICAgLy8gaGFzIGEgbWFwcGluZyBmcm9tIGl0cyBcImNoaWxkcmVuXCIgcHJvcGVydHlcclxuICAgICAgICAgICAgLy8gdG8geW91ciBzcGVjaWZpZWQgY2hpbGRyZW4gcHJvcGVydHlcclxuICAgICAgICAgICAgdGhpcy5fcm9vdCA9IGQzLmhpZXJhcmNoeSh0aGlzLmdldERhdGEoKSwgKGRhdGEpID0+IHRoaXMuZ2V0Q2hpbGRyZW4uY2FsbCh0aGlzLCBkYXRhKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuX2dldFBhcmVudElkKVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgXCJJZiB5b3UgYXJlIHByb3ZpZGluZyBmbGF0IHN0cnVjdHVyZWQgZGF0YSwgdGhlbiB5b3UgbXVzdCBzZXQgdGhlIGdldFBhcmVudElkIGFjY2Vzc29yIHByb3BlcnR5LlwiO1xyXG5cclxuICAgICAgICAgICAgLy8gc3RyYXRpZmllciBpcyBhIGZ1bmN0aW9uIHRoYXQgd291bGQgY29udmVydCB0aGUgZmxhdFxyXG4gICAgICAgICAgICAvLyBkYXRhc2V0IGludG8gaGllcmFyY2hpY2FsbHkgc3RydWN0dXJlZCBkYXRhXHJcbiAgICAgICAgICAgIC8vIHRvIGJlIHVzZWQgd2l0aCBEMyB0cmVlcy5cclxuICAgICAgICAgICAgLy8gSXQgYWNjZXB0cyB0aGUgZGF0YXNldCBhcyBpdHMgcGFyYW1ldGVyLFxyXG4gICAgICAgICAgICAvLyBhbmQgcmV0dXJucyB0aGUgY29udmVydGVkIGRhdGEuXHJcblxyXG4gICAgICAgICAgICAvLyBOb3RlIHRoYXQgdGhpcyBpcyB1c2VkIGluc3RlYWQgb2YgdGhlIGQzLmhpZXJhcmNoeSgpXHJcbiAgICAgICAgICAgIC8vIG1ldGhvZCBhcyBkMy5oaWVyYXJjaHkoKSBzaG91bGQgb25seSBiZSB1c2VkIGlmIHRoZVxyXG4gICAgICAgICAgICAvLyBkYXRhIGlzIGFscmVhZHkgaW4gaGVpcmFyY2hpY2FsIHN0cnVjdHVyZSwgYW5kXHJcbiAgICAgICAgICAgIC8vIG5lZWRzIHRvIGJlIGNvbnZlcnRlZCB0byBEMyBoaWVyYXJjaGljYWwgbm9kZXNcclxuICAgICAgICAgICAgdmFyIHN0cmF0aWZpZXIgPSBkMy5zdHJhdGlmeSgpXHJcbiAgICAgICAgICAgICAgICAuaWQoKGRhdGEsIGluZGV4LCBhcnIpID0+IHRoaXMuZ2V0SWQuY2FsbCh0aGlzLCBkYXRhKSlcclxuICAgICAgICAgICAgICAgIC5wYXJlbnRJZCgoZGF0YSwgaW5kZXgsIGFycikgPT4gdGhpcy5nZXRQYXJlbnRJZC5jYWxsKHRoaXMsIGRhdGEpKTtcclxuICAgICAgICAgICAgdGhpcy5fcm9vdCA9IHN0cmF0aWZpZXIodGhpcy5nZXREYXRhKCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIHRyZWUgdGhlbWUuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSB0aGVtZSB0aGUgdHJlZSBpcyB1c2luZy5cclxuICAgICAqL1xyXG4gICAgZ2V0VGhlbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RoZW1lO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgdHJlZSB0aGVtZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRoZW1lIFRoZSB0aGVtZSB0byBzZXQgdGhlIHRyZWUgdG8uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldFRoZW1lKHRoZW1lKSB7XHJcbiAgICAgICAgdGhpcy5fdGhlbWUgPSB0aGVtZTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIHRyZWUgb3JpZW50YXRpb24uXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBvcmllbnRhdGlvbiB0aGUgdHJlZSBpcyB1c2luZy5cclxuICAgICAqL1xyXG4gICAgZ2V0T3JpZW50YXRpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX29yaWVudGF0aW9uO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgdHJlZSBvcmllbnRhdGlvbi5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG9yaWVudGF0aW9uIFRoZSBvcmllbnRhdGlvbiB0byBzZXQgdGhlIHRyZWUgdG8uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldE9yaWVudGF0aW9uKG9yaWVudGF0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5fb3JpZW50YXRpb24gPSBvcmllbnRhdGlvbjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIGRhdGEgaXRlbXMgdXNlZCB0byByZW5kZXJcclxuICAgICAqIHRoZSBub2Rlcy5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge29iamVjdFtdfSBUaGUgYXJyYXkgb2YgZGF0YSBpdGVtcyB0aGUgdHJlZSB1c2VzLlxyXG4gICAgICovXHJcbiAgICBnZXREYXRhKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgZGF0YSBpdGVtcyB0aGUgdHJlZSBzaG91bGRcclxuICAgICAqIHVzZSB0byByZW5kZXIgdGhlIG5vZGVzLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdFtdfSBuZXdEYXRhIFRoZSBuZXcgc2V0IG9mIGRhdGEgaXRlbXMuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldERhdGEobmV3RGF0YSkge1xyXG4gICAgICAgIHRoaXMuX2RhdGEgPSBuZXdEYXRhO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgbm9kZSBkZXB0aCBtdWx0aXBsaWVyIHRoYXRcclxuICAgICAqIGFmZmVjdHMgdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlXHJcbiAgICAgKiBwYXJlbnQgbm9kZSBhbmQgdGhlIGNoaWxkIG5vZGUuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSBub2RlIGRlcHRoIG11bHRpcGxpZXIgdmFsdWVcclxuICAgICAqL1xyXG4gICAgZ2V0Tm9kZURlcHRoTXVsdGlwbGllcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbm9kZURlcHRoTXVsdGlwbGllcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIG5vZGUgZGVwdGggbXVsdGlwbGllciB2YWx1ZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG5ld05vZGVEZXB0aE11bHRpcGxpZXIgVGhlIHZhbHVlIHRoYXQgYWZmZWN0cyB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgcGFyZW50IG5vZGUgYW5kIHRoZSBjaGlsZCBub2RlLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBzZXROb2RlRGVwdGhNdWx0aXBsaWVyKG5ld05vZGVEZXB0aE11bHRpcGxpZXIpIHtcclxuICAgICAgICB0aGlzLl9ub2RlRGVwdGhNdWx0aXBsaWVyID0gbmV3Tm9kZURlcHRoTXVsdGlwbGllcjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIGR1cmF0aW9uIG9mIGFuaW1hdGlvbnNcclxuICAgICAqIGZvciB0aGUgdHJlZS5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gVGhlIGFuaW1hdGlvbiBkdXJhdGlvbiBpbiBtaWxsaXNlY29uZHMuXHJcbiAgICAgKi9cclxuICAgIGdldER1cmF0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kdXJhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIGR1cmF0aW9uIG9mIGFuaW1hdGlvbnNcclxuICAgICAqIGZvciB0aGUgdHJlZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHsqfSBuZXdEdXJhdGlvbiBUaGUgYW5pbWF0aW9uIGR1cmF0aW9uIGluIG1pbGxpc2Vjb25kcy5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0RHVyYXRpb24obmV3RHVyYXRpb24pIHtcclxuICAgICAgICB0aGlzLl9kdXJhdGlvbiA9IG5ld0R1cmF0aW9uO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgYm9vbGVhbiB2YWx1ZSBpbmRpY2F0aW5nXHJcbiAgICAgKiB3aGV0aGVyIHRoZSBkcmFnLXRvLXBhbiBwYW4gZmVhdHVyZVxyXG4gICAgICogaXMgZW5hYmxlZCBvciBub3QuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBXaGV0aGVyIHBhbm5pbmcgaXMgZW5hYmxlZCBvciBub3QuXHJcbiAgICAgKi9cclxuICAgIGdldEFsbG93UGFuKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9hbGxvd1BhbjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIGJvb2xlYW4gdmFsdWUgaW5kaWNhdGluZ1xyXG4gICAgICogd2hldGhlciB0aGUgZHJhZy10by1wYW4gcGFuIGZlYXR1cmVcclxuICAgICAqIGlzIGVuYWJsZWQgb3Igbm90LlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IG5ld0FsbG93UGFuIFdoZXRoZXIgcGFubmluZyBpcyBlbmFibGVkIG9yIG5vdC5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0QWxsb3dQYW4obmV3QWxsb3dQYW4pIHtcclxuICAgICAgICB0aGlzLl9hbGxvd1BhbiA9IG5ld0FsbG93UGFuO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgYm9vbGVhbiB2YWx1ZSBpbmRpY2F0aW5nXHJcbiAgICAgKiB3aGV0aGVyIHRoZSBtb3VzZSB3aGVlbCB0byB6b29tIGluL291dFxyXG4gICAgICogZmVhdHVyZSBpcyBlbmFibGVkIG9yIG5vdC5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFdoZXRoZXIgem9vbWluZyBpcyBlbmFibGVkIG9yIG5vdC5cclxuICAgICAqL1xyXG4gICAgZ2V0QWxsb3dab29tKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9hbGxvd1pvb207XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBib29sZWFuIHZhbHVlIGluZGljYXRpbmdcclxuICAgICAqIHdoZXRoZXIgdGhlIG1vdXNlIHdoZWVsIHRvIHpvb20gaW4vb3V0XHJcbiAgICAgKiBmZWF0dXJlIGlzIGVuYWJsZWQgb3Igbm90LlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IG5ld0FsbG93Wm9vbSBXaGV0aGVyIHpvb21pbmcgaXMgZW5hYmxlZCBvciBub3QuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldEFsbG93Wm9vbShuZXdBbGxvd1pvb20pIHtcclxuICAgICAgICB0aGlzLl9hbGxvd1pvb20gPSBuZXdBbGxvd1pvb207XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBib29sZWFuIHZhbHVlIGluZGljYXRpbmdcclxuICAgICAqIHdoZXRoZXIgdG8gZm9jdXMgdG8gdGhlIGNsaWNrZWQgbm9kZVxyXG4gICAgICogb3Igbm90LiBGb2N1c2luZyBvbiBhIG5vZGUgd291bGQgaGlkZVxyXG4gICAgICogYWxsIGlycmVsZXZhbnQgbm9kZXMgdGhhdCdzIG5vdCBhIFxyXG4gICAgICogcGFyZW50LCBzaWJsaW5nIG9yIGFuY2VzdG9yIG9mIHRoZVxyXG4gICAgICogY2xpY2tlZCBub2RlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gV2hldGhlciB0byBmb2N1cyB0byB0aGUgY2xpY2tlZCBub2RlLlxyXG4gICAgICovXHJcbiAgICBnZXRBbGxvd0ZvY3VzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9hbGxvd0ZvY3VzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgYm9vbGVhbiB2YWx1ZSBpbmRpY2F0aW5nXHJcbiAgICAgKiB3aGV0aGVyIHRvIGZvY3VzIHRvIHRoZSBjbGlja2VkIG5vZGVcclxuICAgICAqIG9yIG5vdC4gRm9jdXNpbmcgb24gYSBub2RlIHdvdWxkIGhpZGVcclxuICAgICAqIGFsbCBpcnJlbGV2YW50IG5vZGVzIHRoYXQncyBub3QgYSBcclxuICAgICAqIHBhcmVudCwgc2libGluZyBvciBhbmNlc3RvciBvZiB0aGVcclxuICAgICAqIGNsaWNrZWQgbm9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtib29sZWFufSBuZXdBbGxvd0ZvY3VzIFdoZXRoZXIgdG8gcGFuIHRvIHRoZSBjbGlja2VkIG5vZGUuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldEFsbG93Rm9jdXMobmV3QWxsb3dGb2N1cykge1xyXG4gICAgICAgIHRoaXMuX2FsbG93Rm9jdXMgPSBuZXdBbGxvd0ZvY3VzO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgYm9vbGVhbiB2YWx1ZSBpbmRpY2F0aW5nXHJcbiAgICAgKiB3aGV0aGVyIHRvIHBhbiB0byBhIGNsaWNrZWQgbm9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFdoZXRoZXIgdG8gcGFuIHRvIHRoZSBjbGlja2VkIG5vZGUuXHJcbiAgICAgKi9cclxuICAgIGdldEFsbG93Tm9kZUNlbnRlcmluZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fYWxsb3dOb2RlQ2VudGVyaW5nO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogV2hldGhlciB0byBwYW4gdG8gYSBjbGlja2VkIG5vZGUuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gbmV3QWxsb3dOb2RlQ2VudGVyaW5nIFdoZXRoZXIgdG8gcGFuIHRvIHRoZSBjbGlja2VkIG5vZGUuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldEFsbG93Tm9kZUNlbnRlcmluZyhuZXdBbGxvd05vZGVDZW50ZXJpbmcpIHtcclxuICAgICAgICB0aGlzLl9hbGxvd05vZGVDZW50ZXJpbmcgPSBuZXdBbGxvd05vZGVDZW50ZXJpbmc7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBtaW5pbXVtIHpvb20gc2NhbGluZy5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gVGhlIG1pbmltdW0gem9vbSBzY2FsZSB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgZ2V0TWluU2NhbGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21pblNjYWxlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgbWluaW11bSB6b29tIHNjYWxpbmcuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Kn0gbmV3TWluU2NhbGUgVGhlIG1pbmltdW0gem9vbSBzY2FsZSB2YWx1ZS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0TWluU2NhbGUobmV3TWluU2NhbGUpIHtcclxuICAgICAgICB0aGlzLl9taW5TY2FsZSA9IG5ld01pblNjYWxlO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgbWF4aW11bSB6b29tIHNjYWxpbmcuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IE1heGltdW0gem9vbSBzY2FsZSB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgZ2V0TWF4U2NhbGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21heFNjYWxlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgbWF4aW11bSB6b29tIHNjYWxpbmcuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Kn0gbmV3TWF4U2NhbGUgVGhlIG1heGltdW0gem9vbSBzY2FsZSB2YWx1ZS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0TWF4U2NhbGUobmV3TWF4U2NhbGUpIHtcclxuICAgICAgICB0aGlzLl9tYXhTY2FsZSA9IG5ld01heFNjYWxlO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgbG9hZCBvbiBkZW1hbmQgc2V0dGluZ3Mgb2JqZWN0LlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7TG9hZE9uRGVtYW5kU2V0dGluZ3N9IFRoZSBsb2FkIG9uIGRlbWFuZCBzZXR0aW5ncy5cclxuICAgICAqL1xyXG4gICAgZ2V0TG9hZE9uRGVtYW5kU2V0dGluZ3MoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubG9hZE9uRGVtYW5kU2V0dGluZ3M7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBub2RlIHNldHRpbmdzIG9iamVjdC5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge05vZGVTZXR0aW5nc30gVGhlIG5vZGUgc2V0dGluZ3MuXHJcbiAgICAgKi9cclxuICAgIGdldE5vZGVTZXR0aW5ncygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ub2RlU2V0dGluZ3M7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBjb250YWluZXIgRE9NIGVsZW1lbnQuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSBjb250YWluZXIgRE9NIGVsZW1lbnQuXHJcbiAgICAgKi9cclxuICAgIGdldEVsZW1lbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBjb250YWluZXIgRE9NIGVsZW1lbnRcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5ld0VsZW1lbnQgVGhlIGNvbnRhaW5lciBET00gZWxlbWVudC5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0RWxlbWVudChuZXdFbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IG5ld0VsZW1lbnQ7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSByb290IG5vZGUgb2JqZWN0LlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJuIHtvYmplY3R9IFRoZSByb290IEQzIHRyZWUgbm9kZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIGdldFJvb3QoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jvb3Q7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBEMyBzZWxlY3Rpb24gb2JqZWN0IGZvciB0aGUgU1ZHIGVsZW1lbnQuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm4ge29iamVjdH0gUmV0dXJucyB0aGUgRDMgc2VsZWN0aW9uIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgZ2V0U3ZnKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zdmc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBEMyBzZWxlY3Rpb24gb2JqZWN0IGZvciB0aGUgdmlldyBlbGVtZW50LlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBEMyBzZWxlY3Rpb24gb2JqZWN0IGZvciB0aGUgdmlldyBlbGVtZW50LlxyXG4gICAgICovXHJcbiAgICBnZXRWaWV3KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl92aWV3O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgRDMgc2VsZWN0aW9uIG9iamVjdCBmb3IgdGhlXHJcbiAgICAgKiBwYW5uaW5nIGNvbnRhaW5lciBlbGVtZW50LlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBEMyBzZWxlY3Rpb24gb2JqZWN0IGZvciB0aGUgcGFubmluZyBjb250YWluZXIgZWxlbWVudC5cclxuICAgICAqL1xyXG4gICAgZ2V0UGFubmluZ0NvbnRhaW5lcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcGFubmluZ0NvbnRhaW5lcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIEQzIGdlbmVyYXRvciBvYmplY3QgdXNlZCB0b1xyXG4gICAgICogZ2VuZXJhdGUgdGhlIHRyZWUgbm9kZXMgY29vcmRpbmF0ZXMuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtmdW5jdGlvbn0gRDMgdHJlZSBnZW5lcmF0b3Igb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBnZXRUcmVlR2VuZXJhdG9yKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90cmVlR2VuZXJhdG9yO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IGEgc2luZ2xlIG5vZGUgZ2l2ZW4gYW4gaWQgb3IgYSBkYXRhIGl0ZW0uXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7KnxvYmplY3R9IGlkT3JEYXRhSXRlbSBUaGUgSUQgb3IgZGF0YSBpdGVtIHRvIHJldHJpZXZlIHRoZSBEMyB0cmVlIG5vZGUgZGF0YSBpdGVtIHdpdGguXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBEMyB0cmVlIG5vZGUgZGF0YSBpdGVtLlxyXG4gICAgICovXHJcbiAgICBnZXROb2RlKGlkT3JEYXRhSXRlbSkge1xyXG4gICAgICAgIHZhciBpZCA9IGlkT3JEYXRhSXRlbTtcclxuICAgICAgICBpZiAodHlwZW9mIGlkID09PSAnb2JqZWN0JyAmJiBpZCAhPT0gbnVsbClcclxuICAgICAgICAgICAgaWQgPSB0aGlzLmdldElkKGlkKTsgICAgICAgIFxyXG4gICAgICAgIHZhciByb290Tm9kZSA9IHRoaXMuZ2V0Um9vdCgpO1xyXG5cclxuICAgICAgICB2YXIgZ2V0Tm9kZUNoaWxkcmVuID0gKG5vZGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKG5vZGUuX2NoaWxkcmVuKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vZGUuX2NoaWxkcmVuO1xyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBub2RlID0gcmVjdXJzaXZlRmluZChyb290Tm9kZSwgZ2V0Tm9kZUNoaWxkcmVuLCB4ID0+IHRoaXMuZ2V0SWQoeC5kYXRhKSA9PSBpZCk7XHJcbiAgICAgICAgcmV0dXJuIG5vZGU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgYSBzaW5nbGUgZGF0YSBpdGVtIGdpdmVuIGFuIGlkLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IGlkIFRoZSBJRCB0byByZXRyaWV2ZSB0aGUgZGF0YSBpdGVtIHdpdGguXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgZGF0YSBpdGVtIHdpdGggdGhlIGdpdmVuIElELlxyXG4gICAgICovXHJcbiAgICBnZXREYXRhSXRlbShpZCkge1xyXG4gICAgICAgIHZhciBub2RlID0gdGhpcy5nZXROb2RlKGlkKTtcclxuICAgICAgICByZXR1cm4gbm9kZS5kYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0IHRoZSBhcnJheSBvZiBEMyBub2RlIGRhdGEgaXRlbXNcclxuICAgICAqIHRoZSBEMyB0cmVlIGhhcyBnZW5lcmF0ZWQuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3RbXX0gQXJyYXkgb2YgRDMgbm9kZSBkYXRhIGl0ZW1zLlxyXG4gICAgICovXHJcbiAgICBnZXROb2RlcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbm9kZXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGhlIGFycmF5IG9mIHZpc2libGUgRDMgbm9kZVxyXG4gICAgICogZGF0YSBpdGVtcyB0aGUgRDMgdHJlZSBoYXMgZ2VuZXJhdGVkLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0W119IEFycmF5IG9mIEQzIG5vZGUgZGF0YSBpdGVtcy5cclxuICAgICAqL1xyXG4gICAgZ2V0VmlzaWJsZU5vZGVzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl92aXNpYmxlTm9kZXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGhlIGFycmF5IG9mIEQzIGxpbmsgZGF0YSBpdGVtc1xyXG4gICAgICogdGhlIEQzIHRyZWUgaGFzIGdlbmVyYXRlZC5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge29iamVjdFtdfSBBcnJheSBvZiBEMyBsaW5rIGRhdGEgaXRlbXMuXHJcbiAgICAgKi9cclxuICAgIGdldExpbmtzKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9saW5rcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIEQzIHpvb20gbGlzdGVuZXIgdXNlZCBmb3JcclxuICAgICAqIHRoZSBwYW5uaW5nLCB6b29taW5nIGFuZCBmb2N1cyBmZWF0dXJlcy5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge2Z1bmN0aW9ufSBUaGUgRDMgem9vbSBsaXN0ZW5lclxyXG4gICAgICovXHJcbiAgICBnZXRab29tTGlzdGVuZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3pvb21MaXN0ZW5lcjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIElEIGZvciBhIGdpdmVuIGRhdGEgaXRlbS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGFJdGVtIFRoZSBkYXRhIGl0ZW0gdG8gZ2V0IHRoZSBJRCBmcm9tLlxyXG4gICAgICogQHJldHVybnMgeyp9IFRoZSBJRCBmb3IgdGhlIGdpdmVuIGRhdGEgaXRlbS5cclxuICAgICAqL1xyXG4gICAgZ2V0SWQoZGF0YUl0ZW0pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0SWQoZGF0YUl0ZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgY2hpbGRyZW4gZGF0YSBpdGVtcyBmb3IgYSBnaXZlbiBkYXRhIGl0ZW0uXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhSXRlbSBUaGUgZGF0YSBpdGVtIHRvIGdldCB0aGUgY2hpbGRyZW4gZGF0YSBpdGVtcyBmcm9tLlxyXG4gICAgICogQHJldHVybnMge29iamVjdFtdfSBUaGUgYXJyYXkgb2YgY2hpbGQgZGF0YSBpdGVtcy5cclxuICAgICAqL1xyXG4gICAgZ2V0Q2hpbGRyZW4oZGF0YUl0ZW0pIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0Q2hpbGRyZW4oZGF0YUl0ZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgcGFyZW50IElEIGZvciBhIGdpdmVuIGRhdGEgaXRlbS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGFJdGVtIFRoZSBkYXRhIGl0ZW0gdG8gZ2V0IHRoZSBwYXJlbnQgSUQgZnJvbS5cclxuICAgICAqIEByZXR1cm5zIHsqfSBUaGUgcGFyZW50IElEIGZvciB0aGUgZ2l2ZW4gZGF0YSBpdGVtLlxyXG4gICAgICovXHJcbiAgICBnZXRQYXJlbnRJZChkYXRhSXRlbSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRQYXJlbnRJZChkYXRhSXRlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBJRCBhY2Nlc3NvciBjYWxsYmFjayBmdW5jdGlvbixcclxuICAgICAqIGRlZmluaW5nIGhvdyB0byBnZXQgYSB1bmlxdWUgSUQgZnJvbSBhXHJcbiAgICAgKiBnaXZlbiBkYXRhIGl0ZW0uXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Z2V0SWRDYWxsQmFja30gbmV3SWRBY2Nlc3NvciBDYWxsYmFjayBmdW5jdGlvbiB0byBnZXQgdGhlIElEIGZvciBhIGdpdmVuIGRhdGEgaXRlbS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0SWRBY2Nlc3NvcihuZXdJZEFjY2Vzc29yKSB7XHJcbiAgICAgICAgdGhpcy5fZ2V0SWQgPSBuZXdJZEFjY2Vzc29yO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgY2hpbGRyZW4gYWNjZXNzb3IgY2FsbGJhY2sgZnVuY3Rpb24sXHJcbiAgICAgKiBkZWZpbmluZyBob3cgdG8gZ2V0IHRoZSBjaGlsZHJlbiBkYXRhIGl0ZW1zXHJcbiAgICAgKiBmcm9tIGEgZ2l2ZW4gZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge2dldENoaWxkcmVuQ2FsbEJhY2t9IG5ld0NoaWxkcmVuQWNjZXNzb3IgQ2FsbGJhY2sgZnVuY3Rpb24gdG8gZ2V0IHRoZSBjaGlsZHJlbiBmb3IgYSBnaXZlbiBkYXRhIGl0ZW0uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldENoaWxkcmVuQWNjZXNzb3IobmV3Q2hpbGRyZW5BY2Nlc3Nvcikge1xyXG4gICAgICAgIHRoaXMuX2dldENoaWxkcmVuID0gbmV3Q2hpbGRyZW5BY2Nlc3NvcjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIHBhcmVudCBJRCBhY2Nlc3NvciBjYWxsYmFjayBmdW5jdGlvbixcclxuICAgICAqIGRlZmluaW5nIGhvdyB0byBnZXQgdGhlIHBhcmVudCBJRCBmcm9tIGFcclxuICAgICAqIGdpdmVuIGRhdGEgaXRlbS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtnZXRQYXJlbnRJZENhbGxCYWNrfSBuZXdQYXJlbnRJZEFjY2Vzc29yIENhbGxiYWNrIGZ1bmN0aW9uIHRvIGdldCB0aGUgcGFyZW50IGlkIGZvciBhIGdpdmVuIGRhdGEgaXRlbS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0UGFyZW50SWRBY2Nlc3NvcihuZXdQYXJlbnRJZEFjY2Vzc29yKSB7XHJcbiAgICAgICAgdGhpcy5fZ2V0UGFyZW50SWQgPSBuZXdQYXJlbnRJZEFjY2Vzc29yO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgd2lkdGggb2YgU1ZHLCBpbmNsdWRpbmcgdGhlIG1hcmdpbnMuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSB3aWR0aCBvZiB0aGUgU1ZHLlxyXG4gICAgICovXHJcbiAgICBnZXRXaWR0aCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRXaWR0aFdpdGhvdXRNYXJnaW5zKCkgLSB0aGlzLmdldE1hcmdpbnMoKS5sZWZ0IC0gdGhpcy5nZXRNYXJnaW5zKCkucmlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBoZWlnaHQgb2YgU1ZHLCBpbmNsdWRpbmcgdGhlIG1hcmdpbnMuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSBoZWlnaHQgb2YgdGhlIFNWRy5cclxuICAgICAqL1xyXG4gICAgZ2V0SGVpZ2h0KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldEhlaWdodFdpdGhvdXRNYXJnaW5zKCkgLSB0aGlzLmdldE1hcmdpbnMoKS50b3AgLSB0aGlzLmdldE1hcmdpbnMoKS5ib3R0b207XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBtYXJnaW5zIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbmV3TWFyZ2lucyBUaGUgbWFyZ2luIG9iamVjdC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBuZXdNYXJnaW5zLnRvcCBUaGUgbWFyZ2luIHRvcCBmb3IgdGhlIHRyZWUgZGlhZ3JhbS5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBuZXdNYXJnaW5zLnJpZ2h0IFRoZSBtYXJnaW4gcmlnaHQgZm9yIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbmV3TWFyZ2lucy5ib3R0b20gVGhlIG1hcmdpbiBib3R0b20gZm9yIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbmV3TWFyZ2lucy5sZWZ0IFRoZSBtYXJnaW4gbGVmdCBmb3IgdGhlIHRyZWUgZGlhZ3JhbS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0TWFyZ2lucyhuZXdNYXJnaW5zKSB7XHJcbiAgICAgICAgdGhpcy5fbWFyZ2lucyA9IG5ld01hcmdpbnM7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBtYXJnaW5zIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgbWFyZ2lucyBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIGdldE1hcmdpbnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21hcmdpbnM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSB3aWR0aCBvZiB0aGUgU1ZHIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IG5ld1dpZHRoV2l0aG91dE1hcmdpbiBUaGUgd2lkdGggb2YgU1ZHIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBzZXRXaWR0aFdpdGhvdXRNYXJnaW5zKG5ld1dpZHRoV2l0aG91dE1hcmdpbikge1xyXG4gICAgICAgIHRoaXMuX3dpZHRoV2l0aG91dE1hcmdpbiA9IG5ld1dpZHRoV2l0aG91dE1hcmdpbjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIHdpZHRoIG9mIHRoZSBTVkcgZm9yIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKiBEb2VzIG5vdCBpbmNsdWRlIHRoZSBtYXJnaW5zLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgd2lkdGggKG5vdCBpbmNsdWRpbmcgdGhlIG1hcmdpbnMpIG9mIHRoZSBTVkcgZm9yIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKi9cclxuICAgIGdldFdpZHRoV2l0aG91dE1hcmdpbnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dpZHRoV2l0aG91dE1hcmdpbjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIGhlaWdodCBvZiB0aGUgU1ZHIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IG5ld0hlaWdodFdpdGhvdXRNYXJnaW4gVGhlIGhlaWdodCBvZiBTVkcgZm9yIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldEhlaWdodFdpdGhvdXRNYXJnaW5zKG5ld0hlaWdodFdpdGhvdXRNYXJnaW4pIHtcclxuICAgICAgICB0aGlzLl9oZWlnaHRXaXRob3V0TWFyZ2luID0gbmV3SGVpZ2h0V2l0aG91dE1hcmdpbjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIGhlaWdodCBvZiB0aGUgU1ZHIGZvciB0aGUgdHJlZSBkaWFncmFtLlxyXG4gICAgICogRG9lcyBub3QgaW5jbHVkZSB0aGUgbWFyZ2lucy5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gVGhlIGhlaWdodCAobm90IGluY2x1ZGluZyB0aGUgbWFyZ2lucykgb2YgdGhlIFNWRyBmb3IgdGhlIHRyZWUgZGlhZ3JhbS5cclxuICAgICAqL1xyXG4gICAgZ2V0SGVpZ2h0V2l0aG91dE1hcmdpbnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hlaWdodFdpdGhvdXRNYXJnaW47XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIHRoZSBkaW1lbnNpb25zIG9mIHRoZSBTVkcuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgdXBkYXRlRGltZW5zaW9ucygpIHtcclxuICAgICAgICAvLyBVcGRhdGUgU1ZHIHdpdGggbmV3IHdpZHRoIGFuZCBoZWlnaHRcclxuICAgICAgICB0aGlzLmdldFN2ZygpXHJcbiAgICAgICAgICAgIC8vIFVzZSB2aWV3Qm94IHRvIHNldCBTVkcgd2lkdGggYW5kIGhlaWdodFxyXG4gICAgICAgICAgICAvLyBzbyBpdCBpcyByZXNwb25zaXZlLCBhbmQgY2FuIGJlIHJlc2l6ZWRcclxuICAgICAgICAgICAgLy8gYmFzZWQgb24gdGhlIHBhcmVudCBlbGVtZW50XHJcbiAgICAgICAgICAgIC5hdHRyKFwidmlld0JveFwiLCBcIjAgMCBcIiArIHRoaXMuZ2V0V2lkdGhXaXRob3V0TWFyZ2lucygpICsgXCIgXCIgKyB0aGlzLmdldEhlaWdodFdpdGhvdXRNYXJnaW5zKCkpO1xyXG5cclxuICAgICAgICB2YXIgbWFyZ2lucyA9IHRoaXMuZ2V0TWFyZ2lucygpO1xyXG5cclxuICAgICAgICB2YXIgbmVlZFRvQ2VudGVyVmlldyA9IGZhbHNlO1xyXG4gICAgICAgIC8vIHVwZGF0ZSB0aGUgdHJlZSBnZW5lcmF0b3Igd2l0aCB0aGUgbmV3IHdpZHRoIGFuZCBoZWlnaHRcclxuICAgICAgICB2YXIgc2l6aW5nTW9kZSA9IHRoaXMubm9kZVNldHRpbmdzLmdldFNpemluZ01vZGUoKTtcclxuICAgICAgICBpZiAodHlwZW9mIHNpemluZ01vZGUgPT09ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICBzaXppbmdNb2RlID0gc2l6aW5nTW9kZS50cmltKCkudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBpZiAoc2l6aW5nTW9kZSA9PT0gXCJub2Rlc2l6ZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0VHJlZUdlbmVyYXRvcigpXHJcbiAgICAgICAgICAgICAgICAubm9kZVNpemUodGhpcy5fZ2V0Tm9kZVNpemUoKSk7XHJcblxyXG4gICAgICAgICAgICAvLyBPbmx5IHBlcmZvcm0gY2VudGVyaW5nIGlmIG5vZGUgY2VudGVyaW5nIGlzIHR1cm5lZCBvZmYsXHJcbiAgICAgICAgICAgIC8vIGFzIHRoYXQgd291bGQgY2VudGVyIHRvIHRoZSByb290IG5vZGUgYW55d2F5LiBOb2RlXHJcbiAgICAgICAgICAgIC8vIGNlbnRlcmluZyBpcyB0dXJuZWQgb24gd2hlbiBhbGxvdyBmb2N1cyBpcyB0dXJuZWQgb24uXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmdldEFsbG93Rm9jdXMoKSA9PT0gZmFsc2UpXHJcbiAgICAgICAgICAgICAgICBuZWVkVG9DZW50ZXJWaWV3ID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0VHJlZUdlbmVyYXRvcigpXHJcbiAgICAgICAgICAgICAgICAuc2l6ZShbdGhpcy5nZXRIZWlnaHQoKSwgdGhpcy5nZXRXaWR0aCgpXSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAobmVlZFRvQ2VudGVyVmlldyA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSB2aWV3IHdpdGggdGhlIG5ldyBtYXJnaW5zXHJcbiAgICAgICAgICAgIHRoaXMuZ2V0VmlldygpXHJcbiAgICAgICAgICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIG1hcmdpbnMubGVmdCArIFwiLFwiICsgbWFyZ2lucy50b3AgKyBcIilcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBNb3ZlIHRoZSB2aWV3IGRvd253YXJkcyBhcyB0byBjZW50ZXIgdGhlIHJvb3Qgbm9kZVxyXG4gICAgICAgICAgICAvLyBUaGlzIGlzIGR1ZSB0byB3aGVuIHlvdSB1c2Ugbm9kZS1zaXplLCBpdCBzZXRzIHRoZVxyXG4gICAgICAgICAgICAvLyBub2RlIG9yaWdpbiBhdCAwLCAwIGluc3RlYWQgb2YgYXV0b21hdGljYWxseVxyXG4gICAgICAgICAgICAvLyBjZW50ZXJpbmcgaXQgYXMgaXQgZG9lcyB3aXRoIHNpemUoKVxyXG4gICAgICAgICAgICB0aGlzLmdldFZpZXcoKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyBtYXJnaW5zLmxlZnQgKyBcIiwgXCIgKyAodGhpcy5nZXRIZWlnaHQoKSAvIDIgKyBtYXJnaW5zLnRvcCkgKyBcIilcIik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBJZiB3ZSBuZWVkIHRvIGNlbnRlciB0aGUgdHJlZSBieSBhZGp1c3RpbmcgdGhlIHZpZXcgYW5kIHRoZSBub2RlIHBvc2l0aW9uXHJcbiAgICAgICAgdmFyIHgwLCB5MDtcclxuICAgICAgICBpZiAodGhpcy5nZXRPcmllbnRhdGlvbigpID09PSAndG9wVG9Cb3R0b20nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYgKG5lZWRUb0NlbnRlclZpZXcgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICB4MCA9IHRoaXMuZ2V0V2lkdGgoKSAvIDI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB4MCA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgeTAgPSB0aGlzLmdldEhlaWdodCgpIC8gNDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgaWYgKG5lZWRUb0NlbnRlclZpZXcgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICB4MCA9IHRoaXMuZ2V0SGVpZ2h0KCkgLyAyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgeDAgPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHkwID0gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuZ2V0Um9vdCgpLngwID0geDA7XHJcbiAgICAgICAgdGhpcy5nZXRSb290KCkueTAgPSB5MDtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0Wm9vbUxpc3RlbmVyKCkpIHtcclxuICAgICAgICAgICAgdGhpcy5nZXRab29tTGlzdGVuZXIoKVxyXG4gICAgICAgICAgICAgICAgLmV4dGVudChbWzAsIDBdLCBbdGhpcy5nZXRXaWR0aFdpdGhvdXRNYXJnaW5zKCksIHRoaXMuZ2V0SGVpZ2h0V2l0aG91dE1hcmdpbnMoKV1dKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBWYWxpZGF0ZXMgdGhlIHNldHRpbmdzIHRvIGVuc3VyZSB0aGVcclxuICAgICAqIHRyZWUgZGlhZ3JhbSBpcyByZWFkeSB0byBiZSBnZW5lcmF0ZWQuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgdmFsaWRhdGVTZXR0aW5ncygpIHtcclxuICAgICAgICAvLyBDaGVjayB0byBtYWtlIHN1cmUgY29tcHVsc29yeSBvcHRpb25zIGFyZSBwcm92aWRlZFxyXG4gICAgICAgIGlmICghdGhpcy5nZXRFbGVtZW50KCkpXHJcbiAgICAgICAgICAgIHRocm93IFwiTmVlZCB0byBwYXNzIGluIGFuIGVsZW1lbnQgYXMgcGFydCBvZiB0aGUgb3B0aW9uc1wiO1xyXG4gICAgICAgIGlmICghdGhpcy5nZXREYXRhKCkpXHJcbiAgICAgICAgICAgIHRocm93IFwiTmVlZCB0byBwYXNzIGluIGRhdGEgYXMgcGFydCBvZiB0aGUgb3B0aW9uc1wiO1xyXG5cclxuICAgICAgICAvLyBDaGVja3MgaWYgbWFuZGF0b3J5IG1ldGhvZHMgdG8gc3BlY2lmeSBleGlzdHNcclxuICAgICAgICBpZiAoIXRoaXMuX2dldElkKVxyXG4gICAgICAgICAgICB0aHJvdyBcIk5lZWQgdG8gZGVmaW5lIHRoZSBnZXRJZCBmdW5jdGlvbiBhcyBwYXJ0IG9mIHRoZSBvcHRpb25zXCI7XHJcbiAgICAgICAgdGhpcy5sb2FkT25EZW1hbmRTZXR0aW5ncy52YWxpZGF0ZVNldHRpbmdzKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGVzIGFuZCBzZXQgdXAgdGhlIHRoZSB0cmVlIGRpYWdyYW0uXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgaW5pdGlhbGl6ZSgpIHtcclxuICAgICAgICB0aGlzLnZhbGlkYXRlU2V0dGluZ3MoKTtcclxuICAgICAgICB0aGlzLnJlZ2VuZXJhdGVOb2RlRGF0YSgpO1xyXG5cclxuICAgICAgICB3aGlsZSAodGhpcy5nZXRFbGVtZW50KCkuZmlyc3RDaGlsZCkge1xyXG4gICAgICAgICAgICB0aGlzLmdldEVsZW1lbnQoKS5yZW1vdmVDaGlsZCh0aGlzLmdldEVsZW1lbnQoKS5maXJzdENoaWxkKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAvLyBDcmVhdGUgdGhlIHN2ZywgYW5kIHNldCBpdHMgZGltZW5zaW9uc1xyXG4gICAgICAgIHRoaXMuX3N2ZyA9IGQzLnNlbGVjdCh0aGlzLmdldEVsZW1lbnQoKSlcclxuICAgICAgICAgICAgLmFwcGVuZChcInN2Z1wiKVxyXG4gICAgICAgICAgICAgICAgLmNsYXNzZWQoJ21pdGNoLWQzLXRyZWUnLCB0cnVlKVxyXG4gICAgICAgICAgICAgICAgLmNsYXNzZWQodGhpcy5nZXRUaGVtZSgpLCB0cnVlKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJwcmVzZXJ2ZUFzcGVjdFJhdGlvXCIsIFwieE1pZFlNaWQgbWVldFwiKVxyXG4gICAgICAgICAgICAgICAgLnN0eWxlKFwid2lkdGhcIiwgXCIxMDAlXCIpXHJcbiAgICAgICAgICAgICAgICAuc3R5bGUoXCJoZWlnaHRcIiwgXCIxMDAlXCIpO1xyXG5cclxuICAgICAgICAvLyBDcmVhdGUgdGhlIHZpZXcgd2l0aCBtYXJnaW5zXHJcbiAgICAgICAgdGhpcy5fdmlldyA9IHRoaXMuZ2V0U3ZnKCkuYXBwZW5kKFwiZ1wiKVxyXG4gICAgICAgICAgICAuY2xhc3NlZChcInZpZXdcIiwgdHJ1ZSk7XHJcblxyXG4gICAgICAgIC8vIENyZWF0ZSB0cmVlIGdlbmVyYXRvciB0byBwb3NpdGlvbiB0aGUgbm9kZXNcclxuICAgICAgICB0aGlzLl90cmVlR2VuZXJhdG9yID0gZDMudHJlZSgpO1xyXG5cclxuICAgICAgICAvLyBDcmVhdGUgdGhlIHBhbm5pbmcgY29udGFpbmVyIHdoaWNoIHBhbm5pbmcgc2hvdWxkIGFjdCB1cG9uXHJcbiAgICAgICAgdGhpcy5fcGFubmluZ0NvbnRhaW5lciA9IHRoaXMuZ2V0VmlldygpLmFwcGVuZChcImdcIilcclxuICAgICAgICAgICAgLmNsYXNzZWQoXCJwYW5uaW5nQ29udGFpbmVyXCIsIHRydWUpO1xyXG5cclxuICAgICAgICB0aGlzLl96b29tTGlzdGVuZXIgPSBkMy56b29tKClcclxuICAgICAgICAgICAgLy8gTGltaXQgem9vbSBsZXZlbFxyXG4gICAgICAgICAgICAuc2NhbGVFeHRlbnQoW3RoaXMuZ2V0TWluU2NhbGUoKSwgdGhpcy5nZXRNYXhTY2FsZSgpXSlcclxuICAgICAgICAgICAgLy8gWm9vbSBpbiBEMyB0cmFuc2xhdGVzIHRvIHRoZSBuYXRpdmUgSFRNTC9KUyBldmVudHMgb2Y6XHJcbiAgICAgICAgICAgIC8vIC0gRG91YmxlIENsaWNraW5nIChpLmUuIHRvIHpvb20gaW4pXHJcbiAgICAgICAgICAgIC8vIC0gRHJhZ2dpbmcgKGkuZS4gcGFubmluZyBvciBtb3ZpbmcgYXJvdW5kKVxyXG4gICAgICAgICAgICAvLyAtIFdoZWVsIChpLmUuIHpvb20gaW4vb3V0KVxyXG4gICAgICAgICAgICAub24oXCJ6b29tXCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIFRoZSBcInpvb21cIiBldmVudCBwb3B1bGF0ZXMgZDMuZXZlbnQgd2l0aCBhbiBvYmplY3QgdGhhdCBoYXNcclxuICAgICAgICAgICAgICAgIC8vIGEgXCJ0cmFuc2Zvcm1cIiBwcm9wZXJ0eSAoYW4gb2JqZWN0IHdpdGggdGhyZWUgcHJvcGVydGllc1xyXG4gICAgICAgICAgICAgICAgLy8gb2YgeCwgeSwgYW5kIGspLCB3aGVyZSB4IGFuZCB5IGlzIGZvciB0cmFuc2xhdGlvbiBwdXJwb3NlcyxcclxuICAgICAgICAgICAgICAgIC8vIGFuZCBrIGlzIHRoZSBzY2FsaW5nIGZhY3RvclxyXG4gICAgICAgICAgICAgICAgdmFyIHRyYW5zZm9ybSA9IGQzLmV2ZW50LnRyYW5zZm9ybTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ2V0UGFubmluZ0NvbnRhaW5lcigpLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgdHJhbnNmb3JtKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5nZXRTdmcoKS5jYWxsKHRoaXMuZ2V0Wm9vbUxpc3RlbmVyKCkpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5nZXRBbGxvd1BhbigpID09PSBmYWxzZSkge1xyXG4gICAgICAgICAgICB0aGlzLmdldFN2ZygpXHJcbiAgICAgICAgICAgICAgICAub24oXCJtb3VzZWRvd24uem9vbVwiLCBudWxsKVxyXG4gICAgICAgICAgICAgICAgLm9uKFwidG91Y2hzdGFydC56b29tXCIsIG51bGwpXHJcbiAgICAgICAgICAgICAgICAub24oXCJ0b3VjaG1vdmUuem9vbVwiLCBudWxsKVxyXG4gICAgICAgICAgICAgICAgLm9uKFwidG91Y2hlbmQuem9vbVwiLCBudWxsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0QWxsb3dab29tKCkgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0U3ZnKClcclxuICAgICAgICAgICAgICAgIC5vbihcImRibGNsaWNrLnpvb21cIiwgbnVsbClcclxuICAgICAgICAgICAgICAgIC5vbihcIndoZWVsLnpvb21cIiwgbnVsbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZURpbWVuc2lvbnMoKTtcclxuXHJcbiAgICAgICAgdGhpcy5fcG9wdWxhdGVVbmRlcmx5aW5nQ2hpbGRyZW4odGhpcy5nZXRSb290KCkpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5nZXRSb290KCkuY2hpbGRyZW4pXHJcbiAgICAgICAgICAgIHRoaXMuZ2V0Um9vdCgpLmNoaWxkcmVuLmZvckVhY2godGhpcy5jb2xsYXBzZVJlY3Vyc2l2ZWx5KTtcclxuICAgICAgICB0aGlzLnJlbW92ZVNlbGVjdGlvbih0aGlzLmdldFJvb3QoKSk7XHJcblxyXG4gICAgICAgIC8vIENhbGwgdGhlIGZpcnN0IHVwZGF0ZSwgd2hpY2ggcmVuZGVyc1xyXG4gICAgICAgIC8vIHRoZSBpbml0aWFsIHRyZWVcclxuICAgICAgICB0aGlzLnVwZGF0ZSh0aGlzLmdldFJvb3QoKSk7XHJcblxyXG4gICAgICAgIC8vIENlbnRlcnMgdGhlIHJvb3Qgbm9kZVxyXG4gICAgICAgIHRoaXMuY2VudGVyTm9kZSh0aGlzLmdldFJvb3QoKSk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogRXhwYW5kcyB0aGUgZ2l2ZW4gbm9kZSBkYXRhIGl0ZW0uXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBub2RlRGF0YUl0ZW0gVGhlIEQzIG5vZGUgZGF0YSBpdGVtIHRvIGV4cGFuZC5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgZXhwYW5kKG5vZGVEYXRhSXRlbSkge1xyXG4gICAgICAgIG5vZGVEYXRhSXRlbS5jaGlsZHJlbiA9IG5vZGVEYXRhSXRlbS5fY2hpbGRyZW47XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBFeHBhbmRzIHRoZSBnaXZlbiBub2RlIGRhdGEgaXRlbSxcclxuICAgICAqIGFuZCBpdHMgY2hpbGRyZW4gYW5kIGRlc2NlbmRhbnRzLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBEMyBub2RlIGRhdGEgaXRlbSB0byBleHBhbmQuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIGV4cGFuZFJlY3Vyc2l2ZWx5KG5vZGVEYXRhSXRlbSkge1xyXG4gICAgICAgIHZhciByZWMgPSBmdW5jdGlvbiByZWN1cnNpdmUoZGlyZWN0Tm9kZURhdGFJdGVtKSB7XHJcbiAgICAgICAgICAgIGlmIChkaXJlY3ROb2RlRGF0YUl0ZW0uY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgIGRpcmVjdE5vZGVEYXRhSXRlbS5jaGlsZHJlbi5mb3JFYWNoKHJlY3Vyc2l2ZSk7XHJcbiAgICAgICAgICAgICAgICBkaXJlY3ROb2RlRGF0YUl0ZW0uY2hpbGRyZW4gPSBkaXJlY3ROb2RlRGF0YUl0ZW0uX2NoaWxkcmVuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZWMobm9kZURhdGFJdGVtKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIENvbGxhcHNlcyB0aGUgZ2l2ZW4gbm9kZSBkYXRhIGl0ZW0uXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBub2RlRGF0YUl0ZW0gVGhlIEQzIG5vZGUgZGF0YSBpdGVtIHRvIGNvbGxhcHNlLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBjb2xsYXBzZShub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICBub2RlRGF0YUl0ZW0uY2hpbGRyZW4gPSBudWxsO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ29sbGFwc2VzIHRoZSBnaXZlbiBub2RlIGRhdGEgaXRlbSxcclxuICAgICAqIGFuZCBpdHMgY2hpbGRyZW4gYW5kIGRlc2NlbmRhbnRzLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBEMyBub2RlIGRhdGEgaXRlbSB0byBjb2xsYXBzZS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgY29sbGFwc2VSZWN1cnNpdmVseShub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICB2YXIgcmVjID0gZnVuY3Rpb24gcmVjdXJzaXZlKGRpcmVjdE5vZGVEYXRhSXRlbSkge1xyXG4gICAgICAgICAgICBpZiAoZGlyZWN0Tm9kZURhdGFJdGVtLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgICAgICBkaXJlY3ROb2RlRGF0YUl0ZW0uY2hpbGRyZW4uZm9yRWFjaChyZWN1cnNpdmUpO1xyXG4gICAgICAgICAgICAgICAgZGlyZWN0Tm9kZURhdGFJdGVtLmNoaWxkcmVuID0gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmVjKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qKlxyXG4gICAgICogUG9wdWxhdGVzIHRoZSBub2RlJ3MgY2hpbGRyZW4gdG8gYSBoaWRkZW4gcHJvcGVydHkuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBub2RlRGF0YUl0ZW0gVGhlIEQzIG5vZGUgZGF0YSBpdGVtIHRvIGNvbGxhcHNlLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBfcG9wdWxhdGVVbmRlcmx5aW5nQ2hpbGRyZW4obm9kZURhdGFJdGVtKSB7XHJcbiAgICAgICAgdmFyIHJlYyA9IGZ1bmN0aW9uIHJlY3Vyc2l2ZShkaXJlY3ROb2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgaWYgKGRpcmVjdE5vZGVEYXRhSXRlbS5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgICAgZGlyZWN0Tm9kZURhdGFJdGVtLl9jaGlsZHJlbiA9IGRpcmVjdE5vZGVEYXRhSXRlbS5jaGlsZHJlbjtcclxuICAgICAgICAgICAgICAgIGRpcmVjdE5vZGVEYXRhSXRlbS5fY2hpbGRyZW4uZm9yRWFjaChyZWN1cnNpdmUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICByZWMobm9kZURhdGFJdGVtKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSBub2RlIHNlbGVjdGlvbnMgZm9yIGEgZ2l2ZW4gbm9kZSBhbmQgaXQncyBjaGlsZHJlbi5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5vZGVEYXRhSXRlbSBUaGUgRDMgbm9kZSBkYXRhIGl0ZW0gdG8gcmVtb3ZlIHNlbGVjdGlvbiBmcm9tLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICByZW1vdmVTZWxlY3Rpb24obm9kZURhdGFJdGVtKSB7XHJcbiAgICAgICAgdmFyIHJlYyA9IGZ1bmN0aW9uIHJlY3Vyc2l2ZShkaXJlY3ROb2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICAgICAgZGlyZWN0Tm9kZURhdGFJdGVtLnNlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmIChkaXJlY3ROb2RlRGF0YUl0ZW0uY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgIGRpcmVjdE5vZGVEYXRhSXRlbS5jaGlsZHJlbi5mb3JFYWNoKHJlY3Vyc2l2ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHJlYyhub2RlRGF0YUl0ZW0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2VudGVyIHRoZSB2aWV3IHRvIGEgRDMgdHJlZSBub2RlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IG5vZGVEYXRhSXRlbSBUaGUgRDMgbm9kZSBkYXRhIGl0ZW0gdG8gZm9jdXMgb24uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIGNlbnRlck5vZGUobm9kZURhdGFJdGVtKSB7XHJcbiAgICAgICAgdmFyIHRyYW5zZm9ybSA9IGQzLnpvb21UcmFuc2Zvcm0odGhpcy5nZXRTdmcoKS5ub2RlKCkpO1xyXG4gICAgICAgIHZhciBzY2FsZSA9IHRyYW5zZm9ybS5rO1xyXG5cclxuICAgICAgICB2YXIgeCwgeSwgdHJhbnNsYXRlWCwgdHJhbnNsYXRlWTtcclxuICAgICAgICBpZiAodGhpcy5nZXRPcmllbnRhdGlvbigpLnRvTG93ZXJDYXNlKCkgPT09ICd0b3B0b2JvdHRvbScpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB4ID0gLW5vZGVEYXRhSXRlbS54MDtcclxuICAgICAgICAgICAgeSA9IC1ub2RlRGF0YUl0ZW0ueTA7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0ZVggPSB4ICogc2NhbGUgKyB0aGlzLmdldFdpZHRoKCkgLyAyO1xyXG4gICAgICAgICAgICB0cmFuc2xhdGVZID0geSAqIHNjYWxlICsgdGhpcy5nZXRIZWlnaHQoKSAvIDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHggPSAtbm9kZURhdGFJdGVtLnkwO1xyXG4gICAgICAgICAgICB5ID0gLW5vZGVEYXRhSXRlbS54MDtcclxuICAgICAgICAgICAgdHJhbnNsYXRlWCA9IHggKiBzY2FsZSArIHRoaXMuZ2V0V2lkdGgoKSAvIDQ7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0ZVkgPSB5ICogc2NhbGUgKyB0aGlzLmdldEhlaWdodCgpIC8gMjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuZ2V0U3ZnKCkudHJhbnNpdGlvbigpXHJcbiAgICAgICAgICAgIC5kdXJhdGlvbih0aGlzLmdldER1cmF0aW9uKCkpXHJcbiAgICAgICAgICAgIC5jYWxsKHRoaXMuZ2V0Wm9vbUxpc3RlbmVyKCkudHJhbnNmb3JtLCBkMy56b29tSWRlbnRpdHkudHJhbnNsYXRlKHRyYW5zbGF0ZVgsIHRyYW5zbGF0ZVkpLnNjYWxlKHNjYWxlKSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUcmlnZ2VycyB0aGUgbm9kZUNsaWNrIGV2ZW50IHdoZW4gYVxyXG4gICAgICogRDMgbm9kZSBpcyBjbGlja2VkIG9uLCBhbmQgcHJvY2VlZHNcclxuICAgICAqIHRvIGZvY3VzL2V4cGFuZC9jb2xsYXBzZSB0aGUgbm9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5vZGVEYXRhSXRlbSBUaGUgRDMgbm9kZSBkYXRhIGl0ZW0gdGhhdCB3YXMgY2xpY2tlZC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBpbmRleCBUaGUgaW5kZXggb2YgdGhlIEQzIG5vZGUgYmVpbmcgY2xpY2tlZCBpbiB0aGUgYXJyYXkgb2Ygc2libGluZ3MuXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdFtdfSBhcnIgQXJyYXkgb2Ygc2libGluZ3MgRDMgbm9kZSwgaW5jbHVzaXZlIG9mIHRoZSBjbGlja2VkIG5vZGUgZGF0YSBpdGVtIGl0c2VsZi5cclxuICAgICAqIEBlbWl0cyB7bm9kZUNsaWNrfSBFbWl0IG5vZGUgY2xpY2sgZXZlbnQuXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBtZWFuaW5nIGl0IHN1Y2Nlc3NmdWxseSBmb2N1c2VkL2V4cGFuZGVkL2NvbGxhcHNlZCBhIG5vZGUuIEZhbHNlIG90aGVyd2lzZS5cclxuICAgICAqL1xyXG4gICAgX29uTm9kZUNsaWNrKG5vZGVEYXRhSXRlbSwgaW5kZXgsIGFycikge1xyXG4gICAgICAgIHZhciBldmVudFR5cGUgPSBudWxsO1xyXG4gICAgICAgIGlmICh0aGlzLmdldEFsbG93Rm9jdXMoKSlcclxuICAgICAgICAgICAgZXZlbnRUeXBlID0gJ2ZvY3VzJztcclxuICAgICAgICBlbHNlIGlmIChub2RlRGF0YUl0ZW0uY2hpbGRyZW4pXHJcbiAgICAgICAgICAgIGV2ZW50VHlwZSA9ICdjb2xsYXBzZSc7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICBldmVudFR5cGUgPSAnZXhwYW5kJztcclxuICAgICAgICBcclxuICAgICAgICB2YXIgZXZlbnQgPSB7XHJcbiAgICAgICAgICAgIHR5cGU6IGV2ZW50VHlwZSxcclxuICAgICAgICAgICAgY29udGludWU6IHRydWUsXHJcbiAgICAgICAgICAgIG5vZGVEYXRhSXRlbTogbm9kZURhdGFJdGVtLFxyXG4gICAgICAgICAgICBub2RlRGF0YUl0ZW1JbmRleDogaW5kZXgsXHJcbiAgICAgICAgICAgIG5vZGVEYXRhSXRlbXM6IGFyclxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVtaXQoJ25vZGVDbGljaycsIGV2ZW50KTtcclxuICAgICAgICBpZiAoZXZlbnQuY29udGludWUgPT09IGZhbHNlKVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0QWxsb3dGb2N1cygpKVxyXG4gICAgICAgICAgICB0aGlzLm5vZGVGb2N1cy5jYWxsKHRoaXMsIG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB0aGlzLm5vZGVUb2dnbGUuY2FsbCh0aGlzLCBub2RlRGF0YUl0ZW0pO1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIGNoaWxkIEQzIHRyZWUgbm9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHBhcmVudE5vZGVEYXRhSXRlbSBUaGUgcGFyZW50IEQzIHRyZWUgbm9kZSBkYXRhIGl0ZW0uXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YUl0ZW0gVGhlIGRhdGEgaXRlbS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSBuZXdseSBjcmVhdGVkIEQzIG5vZGU7XHJcbiAgICAgKi9cclxuICAgIF9jcmVhdGVOb2RlKHBhcmVudE5vZGVEYXRhSXRlbSwgZGF0YUl0ZW0pIHtcclxuICAgICAgICAvLyBDcmVhdGUgYSBEMyBub2RlIG9iamVjdCBmcm9tIHJlc3VsdGluZyBkYXRhIGl0ZW1zIHVzaW5nIGQzLmhpZXJhcmNoeSgpXHJcbiAgICAgICAgdmFyIG5ld05vZGUgPSBkMy5oaWVyYXJjaHkoZGF0YUl0ZW0pO1xyXG5cclxuICAgICAgICAvLyBOb3cgYWRkIG1pc3NpbmcgcHJvcGVydGllcyB0byBOb2RlIGxpa2UgY2hpbGQsIHBhcmVudCwgZGVwdGhcclxuICAgICAgICBuZXdOb2RlLmRlcHRoID0gcGFyZW50Tm9kZURhdGFJdGVtLmRlcHRoICsgMTtcclxuICAgICAgICBuZXdOb2RlLmhlaWdodCA9IHBhcmVudE5vZGVEYXRhSXRlbS5oZWlnaHQgLSAxO1xyXG4gICAgICAgIG5ld05vZGUucGFyZW50ID0gcGFyZW50Tm9kZURhdGFJdGVtO1xyXG4gICAgICAgIG5ld05vZGUuaWQgPSB0aGlzLmdldElkLmNhbGwodGhpcywgZGF0YUl0ZW0pO1xyXG4gICAgICAgIHJldHVybiBuZXdOb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbmQgYWRkcyBhIGNoaWxkIEQzIHRyZWVcclxuICAgICAqIG5vZGUgdG8gYSBnaXZlbiBwYXJlbnQgRDMgdHJlZSBub2RlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGFyZW50Tm9kZURhdGFJdGVtIFRoZSBwYXJlbnQgRDMgdHJlZSBub2RlIGRhdGEgaXRlbS5cclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhSXRlbSBUaGUgZGF0YSBpdGVtLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIG5ld2x5IGNyZWF0ZWQgYW5kIGFkZGVkIEQzIG5vZGU7XHJcbiAgICAgKi9cclxuICAgIF9hZGRVbmRlcmx5aW5nQ2hpbGROb2RlKHBhcmVudE5vZGVEYXRhSXRlbSwgZGF0YUl0ZW0pIHtcclxuICAgICAgICB2YXIgbmV3Tm9kZSA9IHRoaXMuX2NyZWF0ZU5vZGUocGFyZW50Tm9kZURhdGFJdGVtLCBkYXRhSXRlbSk7XHJcbiAgICAgICAgcGFyZW50Tm9kZURhdGFJdGVtLl9jaGlsZHJlbi5wdXNoKG5ld05vZGUpO1xyXG4gICAgICAgIHJldHVybiBuZXdOb2RlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIFByb2Nlc3MgdGhlIGxvYWRlZCBkYXRhIGZyb20gQUpBWFxyXG4gICAgICogcmVzdWx0aW5nIGZyb20gYSBub2RlIGV4cGFuZC5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5vZGVEYXRhSXRlbSBUaGUgRDMgbm9kZSBkYXRhIGl0ZW0gYmVpbmcgZXhwYW5kZWQuXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdFtdfSByZXN1bHQgVGhlIGNoaWxkcmVuIGRhdGEgaXRlbXMgdG8gcHJvY2Vzcy5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgX3Byb2Nlc3NMb2FkZWREYXRhRm9yTm9kZUZvY3VzKG5vZGVEYXRhSXRlbSwgcmVzdWx0KSB7XHJcbiAgICAgICAgbm9kZURhdGFJdGVtLl9jaGlsZHJlbiA9IFtdO1xyXG4gICAgICAgIHJlc3VsdC5mb3JFYWNoKChjdXJyZW50SXRlbSkgPT4gdGhpcy5fYWRkVW5kZXJseWluZ0NoaWxkTm9kZShub2RlRGF0YUl0ZW0sIGN1cnJlbnRJdGVtKSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3BvcHVsYXRlVW5kZXJseWluZ0NoaWxkcmVuKG5vZGVEYXRhSXRlbSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlVHJlZVdpdGhGb2N1c09uTm9kZShub2RlRGF0YUl0ZW0pO1xyXG5cclxuICAgICAgICB2YXIgd2FzU2VsZWN0ZWQgPSBub2RlRGF0YUl0ZW0uc2VsZWN0ZWQ7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVTZWxlY3Rpb24odGhpcy5nZXRSb290KCkpO1xyXG4gICAgICAgIG5vZGVEYXRhSXRlbS5zZWxlY3RlZCA9IHRydWU7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlKG5vZGVEYXRhSXRlbSk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmdldEFsbG93Tm9kZUNlbnRlcmluZygpID09PSB0cnVlICYmIFxyXG4gICAgICAgICAgICAod2FzU2VsZWN0ZWQgPT09IGZhbHNlIHx8IHR5cGVvZiB3YXNTZWxlY3RlZCA9PT0gJ3VuZGVmaW5lZCcpKVxyXG4gICAgICAgICAgICB0aGlzLmNlbnRlck5vZGUobm9kZURhdGFJdGVtKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEZvY3VzZXMgdG8gYSBub2RlLCBnaXZlbiBhIG5vZGUgZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBub2RlIGJlaW5nIGZvY3VzZWQgb24uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIG5vZGVGb2N1cyhub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICBpZiAoIW5vZGVEYXRhSXRlbS5jaGlsZHJlbiAmJiAhbm9kZURhdGFJdGVtLl9jaGlsZHJlblxyXG4gICAgICAgICAgICAmJiB0aGlzLmxvYWRPbkRlbWFuZFNldHRpbmdzLmlzRW5hYmxlZCgpXHJcbiAgICAgICAgICAgICYmIHRoaXMubG9hZE9uRGVtYW5kU2V0dGluZ3MuaGFzQ2hpbGRyZW4obm9kZURhdGFJdGVtLmRhdGEpKSB7XHJcbiAgICAgICAgICAgIHZhciBwcm9jZXNzRGF0YSA9IChyZXN1bHQpID0+IHRoaXMuX3Byb2Nlc3NMb2FkZWREYXRhRm9yTm9kZUZvY3VzKG5vZGVEYXRhSXRlbSwgcmVzdWx0KTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkT25EZW1hbmRTZXR0aW5ncy5sb2FkQ2hpbGRyZW4obm9kZURhdGFJdGVtLmRhdGEsIHByb2Nlc3NEYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVHJlZVdpdGhGb2N1c09uTm9kZShub2RlRGF0YUl0ZW0pO1xyXG5cclxuICAgICAgICAgICAgdmFyIHdhc1NlbGVjdGVkID0gbm9kZURhdGFJdGVtLnNlbGVjdGVkO1xyXG4gICAgICAgICAgICB0aGlzLnJlbW92ZVNlbGVjdGlvbih0aGlzLmdldFJvb3QoKSk7XHJcbiAgICAgICAgICAgIG5vZGVEYXRhSXRlbS5zZWxlY3RlZCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZShub2RlRGF0YUl0ZW0pO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuZ2V0QWxsb3dOb2RlQ2VudGVyaW5nKCkgPT09IHRydWUgJiYgXHJcbiAgICAgICAgICAgICAgICAod2FzU2VsZWN0ZWQgPT09IGZhbHNlIHx8IHR5cGVvZiB3YXNTZWxlY3RlZCA9PT0gJ3VuZGVmaW5lZCcpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jZW50ZXJOb2RlKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUHJvY2VzcyB0aGUgbG9hZGVkIGRhdGEgZnJvbSBBSkFYXHJcbiAgICAgKiByZXN1bHRpbmcgZnJvbSBhIG5vZGUgdG9nZ2xlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBEMyBub2RlIGRhdGEgaXRlbS5cclxuICAgICAqIEBwYXJhbSB7b2JqZWN0W119IHJlc3VsdCBBcnJheSBvZiBzaWJsaW5nIG5vZGUgZGF0YSBpdGVtcywgaW5jbHVzaXZlIHRoZSBub2RlIGJlaW5nIHRvZ2dsZWQuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIF9wcm9jZXNzTG9hZGVkRGF0YUZvck5vZGVUb2dnbGUobm9kZURhdGFJdGVtLCByZXN1bHQpIHtcclxuICAgICAgICBub2RlRGF0YUl0ZW0uX2NoaWxkcmVuID0gW107XHJcbiAgICAgICAgcmVzdWx0LmZvckVhY2goKGN1cnJlbnRJdGVtKSA9PiB0aGlzLl9hZGRVbmRlcmx5aW5nQ2hpbGROb2RlKG5vZGVEYXRhSXRlbSwgY3VycmVudEl0ZW0pKTtcclxuXHJcbiAgICAgICAgdGhpcy5leHBhbmQobm9kZURhdGFJdGVtKTtcclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGUobm9kZURhdGFJdGVtKTtcclxuICAgICAgICBpZiAodGhpcy5nZXRBbGxvd05vZGVDZW50ZXJpbmcoKSA9PT0gdHJ1ZSlcclxuICAgICAgICAgICAgdGhpcy5jZW50ZXJOb2RlKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBUb2dnbGVzIHRoZSBjaGlsZHJlbiB2aXNpYmlsaXR5IGZvciBhIGdpdmVuIG5vZGUgZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IG5vZGVEYXRhSXRlbSBEMyBOb2RlIGRhdGEgaXRlbS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgbm9kZVRvZ2dsZShub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICAvLyBJZiBpdCBoYXNuJ3QgYmVlbiBsb2FkZWQsIGFuZCBpdCdzIHNwZWNpZmllZCB0byBoYXZlIGNoaWxkcmVuLFxyXG4gICAgICAgIC8vIHRoZW4gcGVyZm9ybSBsb2FkLW9uLWRlbWFuZCB0byBsb2FkIG5ldyBpdGVtcyBmcm9tIHNlcnZlclxyXG4gICAgICAgIC8vIGFuZCBhZGQgdGhlbSBhcyBjaGlsZCBub2Rlc1xyXG4gICAgICAgIGlmICghbm9kZURhdGFJdGVtLmNoaWxkcmVuICYmICFub2RlRGF0YUl0ZW0uX2NoaWxkcmVuXHJcbiAgICAgICAgICAgICYmIHRoaXMubG9hZE9uRGVtYW5kU2V0dGluZ3MuaXNFbmFibGVkKClcclxuICAgICAgICAgICAgJiYgdGhpcy5sb2FkT25EZW1hbmRTZXR0aW5ncy5oYXNDaGlsZHJlbihub2RlRGF0YUl0ZW0uZGF0YSkpIHtcclxuICAgICAgICAgICAgdmFyIHByb2Nlc3NEYXRhID0gKHJlc3VsdCkgPT4gdGhpcy5fcHJvY2Vzc0xvYWRlZERhdGFGb3JOb2RlVG9nZ2xlKG5vZGVEYXRhSXRlbSwgcmVzdWx0KTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkT25EZW1hbmRTZXR0aW5ncy5sb2FkQ2hpbGRyZW4obm9kZURhdGFJdGVtLmRhdGEsIHByb2Nlc3NEYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChub2RlRGF0YUl0ZW0uY2hpbGRyZW4pXHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbGxhcHNlKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmdldEFsbG93Tm9kZUNlbnRlcmluZygpID09PSB0cnVlKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jZW50ZXJOb2RlKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGlkZSB0aGUgc2libGluZ3Mgbm9kZXNcclxuICAgICAqIGZvciBhIGdpdmVuIG5vZGUuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBub2RlRGF0YUl0ZW0gVGhlIEQzIG5vZGUgdG8gaGlkZSBzaWJsaW5ncyBmb3IuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIGhpZGVTaWJsaW5ncyhub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IG5vZGVEYXRhSXRlbS5wYXJlbnQ7XHJcblxyXG4gICAgICAgIGlmIChwYXJlbnROb2RlKSB7XHJcbiAgICAgICAgICAgIHZhciBub2RlSWQgPSB0aGlzLmdldElkKG5vZGVEYXRhSXRlbS5kYXRhKTtcclxuICAgICAgICAgICAgcGFyZW50Tm9kZS5jaGlsZHJlbi5maWx0ZXIoeCA9PiB0aGlzLmdldElkKHguZGF0YSkgIT0gbm9kZUlkKS5mb3JFYWNoKHRoaXMuY29sbGFwc2VSZWN1cnNpdmVseSk7XHJcbiAgICAgICAgICAgIHBhcmVudE5vZGUuY2hpbGRyZW4gPSBbXTtcclxuICAgICAgICAgICAgcGFyZW50Tm9kZS5jaGlsZHJlbi5wdXNoKG5vZGVEYXRhSXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyB0aGUgdHJlZSBkaWFncmFtIHNvIG9ubHkgdGhlIHJlbGV2YW50XHJcbiAgICAgKiBmb2N1c2VkIG5vZGUgYW5kIGRpcmVjdCBwYXJlbnQgaGllcmFyY2hpZXMgYXJlXHJcbiAgICAgKiBzaG93bi5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5vZGVEYXRhSXRlbSBEMyBOb2RlIGRhdGEgaXRlbS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0cmVlIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgdXBkYXRlVHJlZVdpdGhGb2N1c09uTm9kZShub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICBpZiAoIW5vZGVEYXRhSXRlbS5jaGlsZHJlbiAmJiBub2RlRGF0YUl0ZW0uX2NoaWxkcmVuKSB7IC8vIElmIHRoZXJlJ3Mgbm8gY2hpbGRyZW4gbm9kZXMsIGJ1dCB0aGVyZSBhIHNvbWUgY2hpbGRyZW4gaXRlbXMgdG8gZXhwYW5kXHJcbiAgICAgICAgICAgIHRoaXMuaGlkZVNpYmxpbmdzKG5vZGVEYXRhSXRlbSk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmV4cGFuZChub2RlRGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICAvLyBDb2xsYXBzZSB0aGUgY3VycmVudCBmb2N1c2VkIG5vZGUncyBjaGlsZHJlbiwgc28gb25seSBkaXJlY3QgY2hpbGRyZW5zIGFyZSBzaG93blxyXG4gICAgICAgICAgICBub2RlRGF0YUl0ZW0uY2hpbGRyZW4uZm9yRWFjaCh0aGlzLmNvbGxhcHNlUmVjdXJzaXZlbHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChub2RlRGF0YUl0ZW0uY2hpbGRyZW4pIHsgLy8gSWYgdGhlcmUgYXJlIHJlbmRlcmVkIGNoaWxkcmVuIG5vZGVzXHJcbiAgICAgICAgICAgIC8vIENoZWNrcyBpZiBpdHMgY2hpbGRyZW4gaGFzIGFueSByZW5kZXJlZCBjaGlsZHJlblxyXG4gICAgICAgICAgICB2YXIgaGFzTmVzdGVkQ2hpbGRyZW4gPSBub2RlRGF0YUl0ZW0uY2hpbGRyZW4uc29tZSgoY3VycmVudEl0ZW0sIGluZGV4LCBhcnIpID0+IGN1cnJlbnRJdGVtLmNoaWxkcmVuKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBpc1ByZXZpb3VzbHlFeHBhbmRlZE5vZGUgPSAhaGFzTmVzdGVkQ2hpbGRyZW47XHJcbiAgICAgICAgICAgIC8vIElmIGl0IGlzIGEgcGFyZW50IG5vZGUgd2l0aCBjaGlsZHJlbiwgYW5kXHJcbiAgICAgICAgICAgIC8vIGlzIG5vdCB0aGUgcHJldmlvdXMgZXhwYW5kZWQgbm9kZSxcclxuICAgICAgICAgICAgLy8gdGhlbiB3ZSdsbCBmb2N1cyBvbiBpdCwgZXhwYW5kaW5nIGl0XHJcbiAgICAgICAgICAgIC8vIGFuZCBzaG93aW5nIGFsbCBvZiBpdHMgY2hpbGRyZW5cclxuICAgICAgICAgICAgaWYgKGlzUHJldmlvdXNseUV4cGFuZGVkTm9kZSA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29sbGFwc2VSZWN1cnNpdmVseShub2RlRGF0YUl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5leHBhbmQobm9kZURhdGFJdGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFVwZGF0ZXMgdGhlIHRyZWUgbm9kZXMgZ2l2ZW5cclxuICAgICAqIGEgRDMgdHJlZSBub2RlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBEMyBub2RlIGRhdGEgaXRlbSB0byB1cGRhdGUuXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdFtdfSBub2RlcyBBcnJheSBvZiBEMyBub2RlIGRhdGEgaXRlbXMuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIF91cGRhdGVOb2Rlcyhub2RlRGF0YUl0ZW0sIG5vZGVzKSB7XHJcbiAgICAgICAgLy8gTm9ybWFsaXplIGZvciBmaXhlZC1kZXB0aC5cclxuICAgICAgICBcclxuICAgICAgICAvLyBZb3UgY2FuIGluY3JlYXNlIHRoZSBkZXB0aCBtdWx0aXBsaWNhdGlvbiB0byBnZXQgbW9yZSBkZXB0aCxcclxuICAgICAgICAvLyBpLmUuIGluY3JlYXNpbmcgdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHBhcmVudCBub2RlIGFuZCBjaGlsZCBub2RlXHJcbiAgICAgICAgbm9kZXMuZm9yRWFjaCgoZGF0YSkgPT4gZGF0YS55ID0gZGF0YS5kZXB0aCAqIHRoaXMuZ2V0Tm9kZURlcHRoTXVsdGlwbGllcigpKTtcclxuXHJcbiAgICAgICAgLy8gKioqKioqKioqKioqKioqKioqIE5vZGVzIHNlY3Rpb24gKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4gICAgICAgIC8vIFVwZGF0ZSB0aGUgbm9kZXMuLi5cclxuICAgICAgICB2YXIgbm9kZXMgPSB0aGlzLmdldFBhbm5pbmdDb250YWluZXIoKS5zZWxlY3RBbGwoXCJnLm5vZGVcIilcclxuICAgICAgICAgICAgLy8gVGhlIHNlY29uZCBwYXJhbWV0ZXIgb2YgZGF0YSgpIHRha2VzIGluIGEgXHJcbiAgICAgICAgICAgIC8vIGZ1bmN0aW9uLCBkZXRlcm1pbmluZyB0aGUga2V5IG9mIHRoZSBkYXRhXHJcbiAgICAgICAgICAgIC8vIGl0ZW1zLCB3aGljaCBpcyB1c2VmdWwgdG8gcmV0cmlldmUgaXRlbXMsXHJcbiAgICAgICAgICAgIC8vIGFuZCBkYXRhYmluZCB0aGVtXHJcbiAgICAgICAgICAgIC5kYXRhKG5vZGVzLCAoZGF0YSkgPT4gdGhpcy5nZXRJZC5jYWxsKHRoaXMsIGRhdGEuZGF0YSkpO1xyXG5cclxuICAgICAgICAvLyBFbnRlciBhbnkgbmV3IG5vZGVzIGF0IHRoZSBwYXJlbnQncyBwcmV2aW91cyBwb3NpdGlvbi5cclxuICAgICAgICB2YXIgbm9kZUVudGVyID0gbm9kZXMuZW50ZXIoKS5hcHBlbmQoXCJnXCIpXHJcbiAgICAgICAgICAgIC5jbGFzc2VkKFwibm9kZVwiLCB0cnVlKVxyXG4gICAgICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCAoZGF0YSwgaW5kZXgsIGFycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0T3JpZW50YXRpb24oKS50b0xvd2VyQ2FzZSgpID09PSAndG9wdG9ib3R0b20nKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBcInRyYW5zbGF0ZShcIiArIG5vZGVEYXRhSXRlbS54MCArIFwiLFwiICsgbm9kZURhdGFJdGVtLnkwICsgXCIpXCI7XHJcbiAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgbm9kZURhdGFJdGVtLnkwICsgXCIsXCIgKyBub2RlRGF0YUl0ZW0ueDAgKyBcIilcIjtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLm9uKFwiY2xpY2tcIiwgKGRhdGEsIGluZGV4LCBhcnIpID0+IHRoaXMuX29uTm9kZUNsaWNrLmNhbGwodGhpcywgZGF0YSwgaW5kZXgsIGFycikpO1xyXG5cclxuICAgICAgICB0aGlzLl9ub2RlRW50ZXIobm9kZUVudGVyLCBub2Rlcyk7XHJcblxyXG4gICAgICAgIC8vIFVQREFURVxyXG4gICAgICAgIHZhciBub2RlVXBkYXRlID0gbm9kZUVudGVyLm1lcmdlKG5vZGVzKTtcclxuICAgICAgICB2YXIgbm9kZVVwZGF0ZVRyYW5zaXRpb24gPSBub2RlVXBkYXRlLnRyYW5zaXRpb24oKS5kdXJhdGlvbih0aGlzLmdldER1cmF0aW9uKCkpO1xyXG5cclxuICAgICAgICBub2RlVXBkYXRlXHJcbiAgICAgICAgICAgIC5jbGFzc2VkKFwiY29sbGFwc2VkXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWRhdGEuY2hpbGRyZW4gJiYgZGF0YS5fY2hpbGRyZW4pXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLmxvYWRPbkRlbWFuZFNldHRpbmdzLmlzRW5hYmxlZCgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiB0aGlzLmxvYWRPbkRlbWFuZFNldHRpbmdzLmhhc0NoaWxkcmVuKGRhdGEuZGF0YSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICYmICFkYXRhLmNoaWxkcmVuICYmICFkYXRhLl9jaGlsZHJlbikgLy8gSWYgaXQgZG9lcyBoYXZlIGNoaWxkcmVuIHRvIGxvYWQgdmlhIEFKQVhcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNsYXNzZWQoXCJleHBhbmRlZFwiLCAoZGF0YSwgaW5kZXgsIGFycikgPT4gZGF0YS5jaGlsZHJlbilcclxuICAgICAgICAgICAgLmNsYXNzZWQoXCJjaGlsZGxlc3NcIiwgKGRhdGEsIGluZGV4LCBhcnIpID0+ICFkYXRhLmNoaWxkcmVuICYmICFkYXRhLl9jaGlsZHJlbilcclxuICAgICAgICAgICAgLmNsYXNzZWQoXCJzZWxlY3RlZFwiLCAoZGF0YSwgaW5kZXgsIGFycikgPT4gZGF0YS5zZWxlY3RlZCk7XHJcblxyXG4gICAgICAgIHRoaXMuX25vZGVVcGRhdGUobm9kZVVwZGF0ZSwgbm9kZVVwZGF0ZVRyYW5zaXRpb24sIG5vZGVzKTtcclxuXHJcbiAgICAgICAgLy8gUmVtb3ZlIGFueSBleGl0aW5nIG5vZGVzXHJcbiAgICAgICAgdmFyIG5vZGVFeGl0ID0gbm9kZXMuZXhpdCgpO1xyXG4gICAgICAgIHZhciBub2RlRXhpdFRyYW5zaXRpb24gPSBub2RlRXhpdC50cmFuc2l0aW9uKCkuZHVyYXRpb24odGhpcy5nZXREdXJhdGlvbigpKTtcclxuXHJcbiAgICAgICAgdGhpcy5fbm9kZUV4aXQobm9kZUV4aXQsIG5vZGVFeGl0VHJhbnNpdGlvbiwgbm9kZXMpO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyB0aGUgdHJlZSBub2RlIGxpbmtzIGdpdmVuXHJcbiAgICAgKiBhIEQzIHRyZWUgbm9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5vZGVEYXRhSXRlbSBUaGUgRDMgbm9kZSBkYXRhIGl0ZW0uIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3RbXX0gbGlua3MgQXJyYXkgb2YgRDMgbGluayBkYXRhIGl0ZW1zLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBfdXBkYXRlTGlua3Mobm9kZURhdGFJdGVtLCBsaW5rcykge1xyXG4gICAgICAgIHZhciBsaW5rUGF0aEdlbmVyYXRvciA9IHRoaXMuX2dldExpbmtQYXRoR2VuZXJhdG9yKCk7XHJcblxyXG4gICAgICAgIC8vIFVwZGF0ZSB0aGUgbGlua3MuLi5cclxuICAgICAgICB2YXIgbGluayA9IHRoaXMuZ2V0UGFubmluZ0NvbnRhaW5lcigpLnNlbGVjdEFsbChcInBhdGgubGlua1wiKVxyXG4gICAgICAgICAgICAuZGF0YShsaW5rcywgKGRhdGEpID0+IHRoaXMuZ2V0SWQuY2FsbCh0aGlzLCBkYXRhLmRhdGEpKTtcclxuXHJcbiAgICAgICAgLy8gRW50ZXIgYW55IG5ldyBsaW5rcyBhdCB0aGUgcGFyZW50J3MgcHJldmlvdXMgcG9zaXRpb24uXHJcbiAgICAgICAgdmFyIGxpbmtFbnRlciA9IGxpbmsuZW50ZXIoKS5pbnNlcnQoXCJwYXRoXCIsIFwiZ1wiKVxyXG4gICAgICAgICAgICAuY2xhc3NlZChcImxpbmtcIiwgdHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5fbGlua0VudGVyKG5vZGVEYXRhSXRlbSwgbGlua0VudGVyLCBsaW5rLCBsaW5rUGF0aEdlbmVyYXRvcik7XHJcblxyXG4gICAgICAgIC8vIFVQREFURVxyXG4gICAgICAgIHZhciBsaW5rVXBkYXRlID0gbGlua0VudGVyLm1lcmdlKGxpbmspO1xyXG4gICAgICAgIHZhciBsaW5rVXBkYXRlVHJhbnNpdGlvbiA9IGxpbmtVcGRhdGUudHJhbnNpdGlvbigpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5kdXJhdGlvbih0aGlzLmdldER1cmF0aW9uKCkpO1xyXG5cclxuICAgICAgICAvLyBUcmFuc2l0aW9uIGJhY2sgdG8gdGhlIHBhcmVudCBlbGVtZW50IHBvc2l0aW9uXHJcbiAgICAgICAgdGhpcy5fbGlua1VwZGF0ZShub2RlRGF0YUl0ZW0sIGxpbmtVcGRhdGUsIGxpbmtVcGRhdGVUcmFuc2l0aW9uLCBsaW5rLCBsaW5rUGF0aEdlbmVyYXRvcik7XHJcblxyXG4gICAgICAgIC8vIFJlbW92ZSBhbnkgZXhpdGluZyBsaW5rc1xyXG4gICAgICAgIHZhciBsaW5rRXhpdCA9IGxpbmsuZXhpdCgpO1xyXG4gICAgICAgIHZhciBsaW5rRXhpdFRyYW5zaXRpb24gPSBsaW5rRXhpdC50cmFuc2l0aW9uKClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmR1cmF0aW9uKHRoaXMuZ2V0RHVyYXRpb24oKSlcclxuXHJcbiAgICAgICAgdGhpcy5fbGlua0V4aXQobm9kZURhdGFJdGVtLCBsaW5rRXhpdCwgbGlua0V4aXRUcmFuc2l0aW9uLCBsaW5rLCBsaW5rUGF0aEdlbmVyYXRvcik7XHJcblxyXG4gICAgICAgIC8vIFN0b3JlIHRoZSBvbGQgcG9zaXRpb25zIGZvciB0cmFuc2l0aW9uLlxyXG4gICAgICAgIHRoaXMuZ2V0VmlzaWJsZU5vZGVzKCkuZm9yRWFjaCgoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICBkYXRhLngwID0gZGF0YS54O1xyXG4gICAgICAgICAgICBkYXRhLnkwID0gZGF0YS55O1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogVXBkYXRlcyB0aGUgdHJlZSBnaXZlbiBhIEQzIHRyZWUgbm9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5vZGVEYXRhSXRlbSBUaGUgRDMgbm9kZSBkYXRhIGl0ZW0uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZShub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICB2YXIgdHJlZUdlbmVyYXRvciA9IHRoaXMuZ2V0VHJlZUdlbmVyYXRvcigpO1xyXG4gICAgICAgIC8vIEFzc2lnbnMgdGhlIHggYW5kIHkgcG9zaXRpb24gZm9yIHRoZSBub2Rlc1xyXG4gICAgICAgIHZhciB0cmVlRGF0YSA9IHRyZWVHZW5lcmF0b3IodGhpcy5nZXRSb290KCkpO1xyXG4gICAgICAgIHRoaXMuX3Zpc2libGVOb2RlcyA9IHRyZWVEYXRhLmRlc2NlbmRhbnRzKCk7XHJcbiAgICAgICAgdGhpcy5fbm9kZXMgPSBbdGhpcy5nZXRSb290KCksIC4uLnJlY3Vyc2l2ZUdldCh0aGlzLmdldFJvb3QoKSwgKG5vZGUpID0+IG5vZGUuX2NoaWxkcmVuKV07XHJcbiAgICAgICAgdGhpcy5fbGlua3MgPSB0cmVlRGF0YS5kZXNjZW5kYW50cygpLnNsaWNlKDEpO1xyXG5cclxuICAgICAgICB0aGlzLl91cGRhdGVOb2Rlcyhub2RlRGF0YUl0ZW0sIHRoaXMuZ2V0VmlzaWJsZU5vZGVzKCkpXHJcbiAgICAgICAgICAgIC5fdXBkYXRlTGlua3Mobm9kZURhdGFJdGVtLCB0aGlzLmdldExpbmtzKCkpO1xyXG5cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIHVuaXF1ZSBJRCBmb3IgYSBnaXZlbiBkYXRhIGl0ZW0uXHJcbiAgICAgKiBAY2FsbGJhY2sgZ2V0SWRDYWxsQmFja1xyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEgUmVwcmVzZW50cyB0aGUgc2luZ2xlIGRhdGEgaXRlbSB0byBleHRyYWN0IHRoZSBJRCBmcm9tLlxyXG4gICAgICogQHJldHVybnMgeyp9IFRoZSB1bmlxdWUgSUQgZnJvbSB0aGUgZ2l2ZW4gZGF0YSBpdGVtLlxyXG4gICAgICovXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBwYXJlbnQgSUQgZm9yIGEgZ2l2ZW4gZGF0YSBpdGVtLlxyXG4gICAgICogQGNhbGxiYWNrIGdldFBhcmVudElkQ2FsbEJhY2tcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIFJlcHJlc2VudHMgdGhlIHNpbmdsZSBkYXRhIGl0ZW0gdG8gZXh0cmFjdCB0aGUgcGFyZW50IElEIGZyb20uXHJcbiAgICAgKiBAcmV0dXJucyB7Kn0gVGhlIHBhcmVudCBJRCBmcm9tIHRoZSBnaXZlbiBkYXRhIGl0ZW0uXHJcbiAgICAgKi9cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIGNoaWxkcmVuIGl0ZW1zIGZvciBhIGdpdmVuXHJcbiAgICAgKiBkYXRhIGl0ZW0uXHJcbiAgICAgKiBAY2FsbGJhY2sgZ2V0Q2hpbGRyZW5DYWxsQmFja1xyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEgUmVwcmVzZW50cyB0aGUgc2luZ2xlIGRhdGEgaXRlbSB0byBleHRyYWN0IHRoZSBjaGlsZHJlbiBkYXRhIGl0ZW1zIGZyb20uXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0W119IFRoZSBhcnJheSBvZiBkYXRhIGl0ZW1zIHJlcHJlc2VudGluZyB0aGUgY2hpbGRyZW4gb2YgdGhlIGdpdmVuIGRhdGEgaXRlbS5cclxuICAgICAqL1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogTm9kZSBjbGljayBldmVudCwgdHJpZ2dlcmVkIHdoZW4gYVxyXG4gICAgICogdXNlciBjbGlja3Mgb24gYSB0cmVlIG5vZGUuXHJcbiAgICAgKiBcclxuICAgICAqIEB0eXBlZGVmIHtvYmplY3R9IG5vZGVDbGlja1xyXG4gICAgICogQHByb3BlcnR5IHtvYmplY3R9IGV2ZW50IE9iamVjdCBjb250YWluaW5nIHZhcmlvdXMgZXZlbnQgcGFyYW1ldGVycy5cclxuICAgICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBldmVudC50eXBlIFRoZSB0eXBlIG9mIHRoZSBvcGVyYXRpb24gdGhlIGNsaWNrIHdpbGwgdHJpZ2dlciwgd2hldGhlciBpdCdzICdmb2N1cycsICdleHBhbmQnLCBvciAnY29sbGFwc2UnLlxyXG4gICAgICogQHByb3BlcnR5IHtib29sZWFufSBldmVudC5jb250aW51ZSBXaGV0aGVyIHRvIGNvbnRpbnVlIHRoZSBub2RlIGZvY3VzaW5nL2V4cGFuZGluZy9jb2xsYXBzaW5nLlxyXG4gICAgICogQHByb3BlcnR5IHtvYmplY3R9IGV2ZW50Lm5vZGVEYXRhSXRlbSBOb2RlIGRhdGEgaXRlbSByZXByZXNlbnRpbmcgdGhlIGNsaWNrZWQgbm9kZS5cclxuICAgICAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBldmVudC5ub2RlRGF0YUl0ZW0uZGF0YSBUaGUgZGF0YSBpdGVtIG9mIHRoZSBjbGlja2VkIG5vZGUuXHJcbiAgICAgKiBAcHJvcGVydHkge251bWJlcn0gZXZlbnQubm9kZURhdGFJdGVtSW5kZXggSW5kZXggb2YgdGhlIGNsaWNrZWQgaXRlbSBpbiB0aGUgYXJyYXkgb2Ygc2libGluZ3MuXHJcbiAgICAgKiBAcHJvcGVydHkge29iamVjdFtdfSBldmVudC5ub2RlRGF0YUl0ZW1zIFRoZSBhcnJheSBvZiBzaWJsaW5nIHJlbmRlcmVkIFNWRyBlbGVtZW50cywgaW5jbHVzaXZlIG9mIHRoZSBub2RlIGl0c2VsZi5cclxuICAgICAqL1xyXG59XHJcblxyXG4vLyBEZWZpbmUgb3B0aW9uIGRlZmF1bHRzIHVzaW5nIGEgY2xhc3Mgc3RhdGljIHByb3BlcnR5XHJcbkJhc2VUcmVlLmRlZmF1bHRzID0ge1xyXG4gICAgdGhlbWU6ICdkZWZhdWx0JyxcclxuICAgIG9yaWVudGF0aW9uOiAnbGVmdFRvUmlnaHQnLCAvLyB0b3BUb0JvdHRvbSwgcmlnaHRUb0xlZnQsIGJvdHRvbVRvVG9wXHJcbiAgICBhbGxvd1BhbjogdHJ1ZSxcclxuICAgIGFsbG93Wm9vbTogdHJ1ZSxcclxuICAgIGFsbG93Rm9jdXM6IHRydWUsXHJcbiAgICBhbGxvd05vZGVDZW50ZXJpbmc6IHRydWUsXHJcbiAgICBtaW5TY2FsZTogMSwgLy8gTWluaW11bSB6b29tIHNjYWxpbmdcclxuICAgIG1heFNjYWxlOiAyLCAvLyBNYXhpbXVtIHpvb20gc2NhbGluZ1xyXG4gICAgLy8gWW91IGNhbiBpbmNyZWFzZSB0aGUgZGVwdGggbXVsdGlwbGljYXRpb24gdG8gZ2V0IG1vcmUgZGVwdGgsXHJcbiAgICAvLyBpLmUuIGluY3JlYXNpbmcgdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHBhcmVudCBub2RlIGFuZCBjaGlsZCBub2RlXHJcbiAgICBub2RlRGVwdGhNdWx0aXBsaWVyOiAzMDAsXHJcbiAgICBpc0ZsYXREYXRhOiBmYWxzZSxcclxuICAgIGdldElkOiBudWxsLFxyXG4gICAgZ2V0UGFyZW50SWQ6IG51bGwsXHJcbiAgICBnZXRDaGlsZHJlbjogbnVsbCxcclxuICAgIHdpZHRoV2l0aG91dE1hcmdpbnM6IDk2MCxcclxuICAgIGhlaWdodFdpdGhvdXRNYXJnaW5zOiA4MDAsXHJcbiAgICBtYXJnaW5zOiB7XHJcbiAgICAgICAgdG9wOiA0MCxcclxuICAgICAgICByaWdodDogMjAsXHJcbiAgICAgICAgYm90dG9tOiA0MCxcclxuICAgICAgICBsZWZ0OiAxMDBcclxuICAgIH0sXHJcbiAgICBkdXJhdGlvbjogNzUwLFxyXG4gICAgbG9hZE9uRGVtYW5kU2V0dGluZ3M6IHtcclxuICAgICAgICAvLyBEZWZhdWx0cyBhcmUgZGVmaW5lZCBpbiB0aGUgbG9hZC1vbi1kZW1hbmQgc2V0dGluZ3MgcHJvdG90eXBlXHJcbiAgICB9LFxyXG4gICAgbm9kZVNldHRpbmdzOiB7XHJcbiAgICAgICAgLy8gRGVmYXVsdHMgYXJlIGRlZmluZWQgaW4gdGhlIG5vZGUgc2V0dGluZ3MgcHJvdG90eXBlXHJcbiAgICB9LFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCYXNlVHJlZTsiLCJpbXBvcnQgTm9kZVNldHRpbmdzIGZyb20gJy4vTm9kZVNldHRpbmdzJztcclxuXHJcbmNsYXNzIEJveGVkTm9kZVNldHRpbmdzIGV4dGVuZHMgTm9kZVNldHRpbmdzIHtcclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG93bmVyT2JqZWN0IFRoZSBvd25lciBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyBUaGUgb3B0aW9ucyBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuYm9keUJveFdpZHRoPTIwMF0gQm9keSBib3ggd2lkdGguXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuYm9keUJveEhlaWdodD03NV0gQm9keSBib3ggaGVpZ2h0LlxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLmJvZHlCb3hQYWRkaW5nXSBCb2R5IGJveCBwYWRkaW5nIG9iamVjdC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5ib2R5Qm94UGFkZGluZy50b3A9NV0gQm9keSBib3ggcGFkZGluZyB0b3AuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuYm9keUJveFBhZGRpbmcucmlnaHQ9MTBdIEJvZHkgYm94IHBhZGRpbmcgcmlnaHQuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMuYm9keUJveFBhZGRpbmcuYm90dG9tPTVdIEJvZHkgYm94IHBhZGRpbmcgYm90dG9tLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmJvZHlCb3hQYWRkaW5nLmxlZnQ9MTBdIEJvZHkgYm94IHBhZGRpbmcgbGVmdC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy50aXRsZUJveFdpZHRoXSBUaXRsZSBib3ggd2lkdGguXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMudGl0bGVCb3hIZWlnaHQ9NDBdIFRpdGxlIGJveCBoZWlnaHQuXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnMudGl0bGVCb3hQYWRkaW5nXSBUaXRsZSBib3ggcGFkZGluZyBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMudGl0bGVCb3hQYWRkaW5nLnRvcD0yXSBUaXRsZSBib3ggcGFkZGluZyB0b3AuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMudGl0bGVCb3hQYWRkaW5nLnJpZ2h0PTVdIFRpdGxlIGJveCBwYWRkaW5nIHJpZ2h0LlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLnRpdGxlQm94UGFkZGluZy5ib3R0b209Ml0gVGl0bGUgYm94IHBhZGRpbmcgYm90dG9tLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLnRpdGxlQm94UGFkZGluZy5sZWZ0PTVdIFRpdGxlIGJveCBwYWRkaW5nIGxlZnQuXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKG93bmVyT2JqZWN0LCBvcHRpb25zKSB7XHJcbiAgICAgICAgc3VwZXIob3duZXJPYmplY3QsIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICB2YXIgbWVyZ2VkT3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgLi4uQm94ZWROb2RlU2V0dGluZ3MuZGVmYXVsdHMsXHJcbiAgICAgICAgICAgIC4uLm9wdGlvbnNcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLl9ib2R5Qm94V2lkdGggPSBtZXJnZWRPcHRpb25zLmJvZHlCb3hXaWR0aDtcclxuICAgICAgICB0aGlzLl9ib2R5Qm94SGVpZ2h0ID0gbWVyZ2VkT3B0aW9ucy5ib2R5Qm94SGVpZ2h0O1xyXG4gICAgICAgIHRoaXMuX2JvZHlCb3hQYWRkaW5nID0gbWVyZ2VkT3B0aW9ucy5ib2R5Qm94UGFkZGluZztcclxuICAgICAgICB0aGlzLl90aXRsZUJveFdpZHRoID0gbWVyZ2VkT3B0aW9ucy50aXRsZUJveFdpZHRoO1xyXG4gICAgICAgIHRoaXMuX3RpdGxlQm94SGVpZ2h0ID0gbWVyZ2VkT3B0aW9ucy50aXRsZUJveEhlaWdodDtcclxuICAgICAgICB0aGlzLl90aXRsZUJveFBhZGRpbmcgPSBtZXJnZWRPcHRpb25zLnRpdGxlQm94UGFkZGluZztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIGJvZHkgYm94IHdpZHRoIHZhbHVlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgYm9keSBib3ggd2lkdGggdmFsdWUuXHJcbiAgICAgKi9cclxuICAgIGdldEJvZHlCb3hXaWR0aCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fYm9keUJveFdpZHRoO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgYm9keSBib3ggd2lkdGggdmFsdWUuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB3aWR0aCBUaGUgYm9keSBib3ggd2lkdGggdmFsdWUuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgbm9kZSBzZXR0aW5ncyBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldEJvZHlCb3hXaWR0aCh3aWR0aCkge1xyXG4gICAgICAgIHRoaXMuX2JvZHlCb3hXaWR0aCA9IHdpZHRoO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgYm9keSBib3ggaGVpZ2h0IHZhbHVlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgYm9keSBib3ggaGVpZ2h0IHZhbHVlLlxyXG4gICAgICovXHJcbiAgICBnZXRCb2R5Qm94SGVpZ2h0KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9ib2R5Qm94SGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgYm9keSBib3ggaGVpZ2h0IHZhbHVlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gaGVpZ2h0IFRoZSBib2R5IGJveCBoZWlnaHQgdmFsdWUuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgbm9kZSBzZXR0aW5ncyBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldEJvZHlCb3hIZWlnaHQoaGVpZ2h0KSB7XHJcbiAgICAgICAgdGhpcy5fYm9keUJveEhlaWdodCA9IGhlaWdodDtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIGJvZHkgYm94IHBhZGRpbmcgdmFsdWVzLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbmV3UGFkZGluZyBUaGUgYm9keSBib3ggcGFkZGluZyBvYmplY3QgdmFsdWUuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbmV3UGFkZGluZy50b3AgVGhlIGJvZHkgYm94IHBhZGRpbmcgdG9wIHZhbHVlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG5ld1BhZGRpbmcucmlnaHQgVGhlIGJvZHkgYm94IHBhZGRpbmcgcmlnaHQgdmFsdWUuXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbmV3UGFkZGluZy5ib3R0b20gVGhlIGJvZHkgYm94IHBhZGRpbmcgYm90dG9tIHZhbHVlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG5ld1BhZGRpbmcubGVmdCBUaGUgYm9keSBib3ggcGFkZGluZyBsZWZ0IHZhbHVlLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIG5vZGUgc2V0dGluZ3Mgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBzZXRCb2R5Qm94UGFkZGluZyhuZXdQYWRkaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fYm9keUJveFBhZGRpbmcgPSBuZXdQYWRkaW5nO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgYm9keSBib3ggcGFkZGluZyB2YWx1ZXMuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSBib2R5IGJveCBwYWRkaW5nIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgZ2V0Qm9keUJveFBhZGRpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2JvZHlCb3hQYWRkaW5nO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgdGl0bGUgYm94IHdpZHRoIHZhbHVlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgdGl0bGUgYm94IHdpZHRoIHZhbHVlLlxyXG4gICAgICovXHJcbiAgICBnZXRUaXRsZUJveFdpZHRoKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl90aXRsZUJveFdpZHRoKVxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdGl0bGVCb3hXaWR0aDtcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEJvZHlCb3hXaWR0aCgpIC8gMjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIHRpdGxlIGJveCB3aWR0aCB2YWx1ZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHdpZHRoIFRoZSB0aXRsZSBib3ggd2lkdGggdmFsdWUuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgbm9kZSBzZXR0aW5ncyBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldFRpdGxlQm94V2lkdGgod2lkdGgpIHtcclxuICAgICAgICB0aGlzLl90aXRsZUJveFdpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSB0aXRsZSBib3ggaGVpZ2h0IHZhbHVlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgdGl0bGUgYm94IGhlaWdodCB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgZ2V0VGl0bGVCb3hIZWlnaHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RpdGxlQm94SGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgdGl0bGUgYm94IGhlaWdodCB2YWx1ZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodCBUaGUgdGl0bGUgYm94IGhlaWdodCB2YWx1ZS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSBub2RlIHNldHRpbmdzIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0VGl0bGVCb3hIZWlnaHQoaGVpZ2h0KSB7XHJcbiAgICAgICAgdGhpcy5fdGl0bGVCb3hIZWlnaHQgPSBoZWlnaHQ7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSB0aXRsZSBib3ggcGFkZGluZyB2YWx1ZXMuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSB0aXRsZSBib3ggcGFkZGluZyBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIGdldFRpdGxlQm94UGFkZGluZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGl0bGVCb3hQYWRkaW5nO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIHRpdGxlIGJveCBwYWRkaW5nIHZhbHVlcy5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5ld1BhZGRpbmcgVGhlIGJvZHkgYm94IHBhZGRpbmcgb2JqZWN0IHZhbHVlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG5ld1BhZGRpbmcudG9wIFRoZSBib2R5IGJveCBwYWRkaW5nIHRvcCB2YWx1ZS5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBuZXdQYWRkaW5nLnJpZ2h0IFRoZSBib2R5IGJveCBwYWRkaW5nIHJpZ2h0IHZhbHVlLlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG5ld1BhZGRpbmcuYm90dG9tIFRoZSBib2R5IGJveCBwYWRkaW5nIGJvdHRvbSB2YWx1ZS5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBuZXdQYWRkaW5nLmxlZnQgVGhlIGJvZHkgYm94IHBhZGRpbmcgbGVmdCB2YWx1ZS5cclxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSBub2RlIHNldHRpbmdzIG9iamVjdC5cclxuICAgICAqL1xyXG4gICAgc2V0VGl0bGVCb3hQYWRkaW5nKG5ld1BhZGRpbmcpIHtcclxuICAgICAgICB0aGlzLl90aXRsZUJveFBhZGRpbmcgPSBuZXdQYWRkaW5nO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG59XHJcblxyXG5Cb3hlZE5vZGVTZXR0aW5ncy5kZWZhdWx0cyA9IHtcclxuICAgIGJvZHlCb3hXaWR0aDogMjAwLFxyXG4gICAgYm9keUJveEhlaWdodDogNzUsXHJcbiAgICBib2R5Qm94UGFkZGluZzoge1xyXG4gICAgICAgIHRvcDogNSxcclxuICAgICAgICByaWdodDogMTAsXHJcbiAgICAgICAgYm90dG9tOiA1LFxyXG4gICAgICAgIGxlZnQ6IDEwXHJcbiAgICB9LFxyXG4gICAgdGl0bGVCb3hXaWR0aDogbnVsbCxcclxuICAgIHRpdGxlQm94SGVpZ2h0OiA0MCxcclxuICAgIHRpdGxlQm94UGFkZGluZzoge1xyXG4gICAgICAgIHRvcDogMixcclxuICAgICAgICByaWdodDogNSxcclxuICAgICAgICBib3R0b206IDIsXHJcbiAgICAgICAgbGVmdDogNVxyXG4gICAgfSxcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm94ZWROb2RlU2V0dGluZ3M7IiwiaW1wb3J0IGQzIGZyb20gJy4vQ3VzdG9tRDMnO1xyXG5pbXBvcnQge1RleHRCb3ggYXMgZDNQbHVzVGV4dEJveH0gZnJvbSAnZDNwbHVzLXRleHQnO1xyXG5pbXBvcnQgQmFzZVRyZWUgZnJvbSAnLi9CYXNlVHJlZSc7XHJcbmltcG9ydCBCb3hlZE5vZGVTZXR0aW5ncyBmcm9tICcuL0JveGVkTm9kZVNldHRpbmdzJztcclxuXHJcbmNsYXNzIEJveGVkVHJlZSBleHRlbmRzIEJhc2VUcmVle1xyXG4gICAgLyoqIFxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgVGhlIG9wdGlvbnMgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHtib2R5RGlzcGxheVRleHRBY2Nlc3NvckNhbGxCYWNrfSBvcHRpb25zLmdldEJvZHlEaXNwbGF5VGV4dCBEZXRlcm1pbmVzIGhvdyB0byBvYnRhaW4gdGhlIGJvZHkgdGV4dCB0byBkaXNwbGF5IGZvciBhIG5vZGUgY29ycmVzcG9uZGluZyB0byBhIGRhdGEgaXRlbS5cclxuICAgICAqIEBwYXJhbSB7dGl0bGVEaXNwbGF5VGV4dEFjY2Vzc29yQ2FsbEJhY2t9IG9wdGlvbnMuZ2V0VGl0bGVEaXNwbGF5VGV4dCBEZXRlcm1pbmVzIGhvdyB0byBvYnRhaW4gdGhlIHRpdGxlIHRleHQgdG8gZGlzcGxheSBmb3IgYSBub2RlIGNvcnJlc3BvbmRpbmcgdG8gYSBkYXRhIGl0ZW0uXHJcbiAgICAqL1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgICAgIHN1cGVyKG9wdGlvbnMpO1xyXG4gICAgICAgIHZhciBtZXJnZWRPcHRpb25zID0ge1xyXG4gICAgICAgICAgICAuLi5CYXNlVHJlZS5kZWZhdWx0cyxcclxuICAgICAgICAgICAgLi4uQm94ZWRUcmVlLmRlZmF1bHRzLFxyXG4gICAgICAgICAgICAuLi5vcHRpb25zXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5fZ2V0Qm9keURpc3BsYXlUZXh0ID0gbWVyZ2VkT3B0aW9ucy5nZXRCb2R5RGlzcGxheVRleHQ7XHJcbiAgICAgICAgdGhpcy5fZ2V0VGl0bGVEaXNwbGF5VGV4dCA9IG1lcmdlZE9wdGlvbnMuZ2V0VGl0bGVEaXNwbGF5VGV4dDtcclxuICAgICAgICB0aGlzLm5vZGVTZXR0aW5ncyA9IG5ldyBCb3hlZE5vZGVTZXR0aW5ncyh0aGlzLCBtZXJnZWRPcHRpb25zLm5vZGVTZXR0aW5ncyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBpbmhlcml0ZG9jICovXHJcbiAgICBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIHN1cGVyLmluaXRpYWxpemUoKTtcclxuXHJcbiAgICAgICAgLy8gQ3JlYXRlIHRoZSBzdmcsIGFuZCBzZXQgaXRzIGRpbWVuc2lvbnNcclxuICAgICAgICB0aGlzLmdldFN2ZygpLmNsYXNzZWQoJ2JveGVkLXRyZWUnLCB0cnVlKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKiogQGluaGVyaXRkb2MgKi9cclxuICAgIF9ub2RlRW50ZXIobm9kZUVudGVyLCBub2Rlcykge1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICAvLyBEZWNsYXJlIGJveCBkaW1lbnNpb25zXHJcbiAgICAgICAgdmFyIG5vZGVCb2R5Qm94V2lkdGggPSBzZWxmLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94V2lkdGgoKTtcclxuICAgICAgICB2YXIgbm9kZUJvZHlCb3hIZWlnaHQgPSBzZWxmLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94SGVpZ2h0KCk7XHJcbiAgICAgICAgdmFyIG5vZGVCb2R5Qm94UGFkZGluZyA9IHNlbGYubm9kZVNldHRpbmdzLmdldEJvZHlCb3hQYWRkaW5nKCk7XHJcblxyXG4gICAgICAgIHZhciBub2RlVGl0bGVCb3hXaWR0aCA9IHNlbGYubm9kZVNldHRpbmdzLmdldFRpdGxlQm94V2lkdGgoKTtcclxuICAgICAgICB2YXIgbm9kZVRpdGxlQm94SGVpZ2h0ID0gc2VsZi5ub2RlU2V0dGluZ3MuZ2V0VGl0bGVCb3hIZWlnaHQoKTtcclxuICAgICAgICB2YXIgbm9kZVRpdGxlQm94UGFkZGluZyA9IHNlbGYubm9kZVNldHRpbmdzLmdldFRpdGxlQm94UGFkZGluZygpO1xyXG5cclxuICAgICAgICAvKiBBZGQgQm9keSBSZWN0YW5nbGUgYW5kIFRleHQgZm9yIE5vZGUgKi9cclxuICAgICAgICB2YXIgYm9keUdyb3VwcyA9IG5vZGVFbnRlci5hcHBlbmQoXCJnXCIpXHJcbiAgICAgICAgICAgIC5jbGFzc2VkKFwiYm9keS1ncm91cFwiLCB0cnVlKTtcclxuXHJcbiAgICAgICAgYm9keUdyb3Vwcy5hcHBlbmQoXCJyZWN0XCIpXHJcbiAgICAgICAgICAgIC5jbGFzc2VkKFwiYm9keS1ib3hcIiwgdHJ1ZSlcclxuICAgICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCAxZS02KVxyXG4gICAgICAgICAgICAuYXR0cihcImhlaWdodFwiLCAxZS02KTtcclxuXHJcbiAgICAgICAgYm9keUdyb3Vwcy5lYWNoKGZ1bmN0aW9uKGRhdGEsIGluZGV4LCBhcnIpIHtcclxuICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzO1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0aW9uID0gZDMuc2VsZWN0KGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB2YXIgc2luZ2xlZE91dERhdGEgPSBbXTtcclxuICAgICAgICAgICAgc2luZ2xlZE91dERhdGEucHVzaChkYXRhKTtcclxuXHJcbiAgICAgICAgICAgIHZhciByZWNhbGN1bGF0ZWRQYWRkaW5nVG9wID0gbm9kZUJvZHlCb3hQYWRkaW5nLnRvcDtcclxuICAgICAgICAgICAgaWYgKHNlbGYuZ2V0VGl0bGVEaXNwbGF5VGV4dC5jYWxsKHNlbGYsIGRhdGEpKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZWNhbGN1bGF0ZWRQYWRkaW5nVG9wICs9IG5vZGVUaXRsZUJveEhlaWdodCAvIDI7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIEQzUGx1cyBUZXh0Ym94IHdpdGggcmVzaXppbmcgY2FwYWJpbGl0eVxyXG4gICAgICAgICAgICB2YXIgZDNQbHVzQm9keVRleHRCb3ggPSBuZXcgZDNQbHVzVGV4dEJveCgpXHJcbiAgICAgICAgICAgICAgICAuc2VsZWN0KGVsZW1lbnQpIC8vIFNldHMgdGhlIEQzUGx1cyBjb2RlIHRvIGFwcGVuZCB0byB0aGUgc3BlY2lmaWVkIERPTSBlbGVtZW50LlxyXG4gICAgICAgICAgICAgICAgLmRhdGEoc2luZ2xlZE91dERhdGEpXHJcbiAgICAgICAgICAgICAgICAudGV4dCgoZGF0YSwgaW5kZXgsIGFycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLmdldEJvZHlEaXNwbGF5VGV4dC5jYWxsKHNlbGYsIGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC50ZXh0QW5jaG9yKFwibWlkZGxlXCIpXHJcbiAgICAgICAgICAgICAgICAudmVydGljYWxBbGlnbihcIm1pZGRsZVwiKVxyXG4gICAgICAgICAgICAgICAgLmZvbnRTaXplKDEzKSAvLyBpbiBwaXhlbHNcclxuICAgICAgICAgICAgICAgIC54KG5vZGVCb2R5Qm94UGFkZGluZy5sZWZ0KVxyXG4gICAgICAgICAgICAgICAgLnkocmVjYWxjdWxhdGVkUGFkZGluZ1RvcCAtIG5vZGVCb2R5Qm94SGVpZ2h0IC8gMilcclxuICAgICAgICAgICAgICAgIC53aWR0aChub2RlQm9keUJveFdpZHRoIC0gbm9kZUJvZHlCb3hQYWRkaW5nLmxlZnQgLSBub2RlQm9keUJveFBhZGRpbmcucmlnaHQpXHJcbiAgICAgICAgICAgICAgICAuaGVpZ2h0KG5vZGVCb2R5Qm94SGVpZ2h0IC0gcmVjYWxjdWxhdGVkUGFkZGluZ1RvcCAtIG5vZGVCb2R5Qm94UGFkZGluZy5ib3R0b20pXHJcbiAgICAgICAgICAgICAgICAuZWxsaXBzaXMoKHRleHQsIGxpbmUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBJZiB0ZXh0IHdhcyBjdXQtb2ZmLCBhZGQgdG9vbHRpcFxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbi5hcHBlbmQoXCJ0aXRsZVwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudGV4dChzZWxmLmdldEJvZHlEaXNwbGF5VGV4dChkYXRhKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgodGV4dC5yZXBsYWNlKC9cXC58LCQvZywgXCJcIikpICsgXCIuLi5cIik7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnJlbmRlcigpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKiBBZGQgVGl0bGUgUmVjdGFuZ2xlIGFuZCBUZXh0IGZvciBOb2RlICovXHJcbiAgICAgICAgdmFyIHRpdGxlR3JvdXBzID0gbm9kZUVudGVyLmFwcGVuZChcImdcIilcclxuICAgICAgICAgICAgLmNsYXNzZWQoXCJ0aXRsZS1ncm91cFwiLCB0cnVlKVxyXG4gICAgICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZShcIiArIC1ub2RlVGl0bGVCb3hXaWR0aCAvIDMgKyBcIiwgXCIgKyAoLW5vZGVUaXRsZUJveEhlaWdodCAvIDIgLSBub2RlQm9keUJveEhlaWdodCAvIDIpICsgXCIpXCIpO1xyXG5cclxuICAgICAgICB0aXRsZUdyb3Vwcy5lYWNoKGZ1bmN0aW9uKGRhdGEsIGluZGV4LCBhcnIpIHtcclxuICAgICAgICAgICAgaWYgKCFzZWxmLmdldFRpdGxlRGlzcGxheVRleHQuY2FsbChzZWxmLCBkYXRhKSlcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzO1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0aW9uID0gZDMuc2VsZWN0KGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB2YXIgc2luZ2xlZE91dERhdGEgPSBbXTtcclxuICAgICAgICAgICAgc2luZ2xlZE91dERhdGEucHVzaChkYXRhKTtcclxuXHJcbiAgICAgICAgICAgIHNlbGVjdGlvbi5hcHBlbmQoXCJyZWN0XCIpXHJcbiAgICAgICAgICAgICAgICAuY2xhc3NlZChcInRpdGxlLWJveFwiLCB0cnVlKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBub2RlVGl0bGVCb3hXaWR0aClcclxuICAgICAgICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIG5vZGVUaXRsZUJveEhlaWdodCk7XHJcblxyXG4gICAgICAgICAgICAvLyBEM1BsdXMgVGV4dGJveCB3aXRoIHJlc2l6aW5nIGNhcGFiaWxpdHlcclxuICAgICAgICAgICAgdmFyIGQzUGx1c1RpdGxlVGV4dEJveCA9IG5ldyBkM1BsdXNUZXh0Qm94KClcclxuICAgICAgICAgICAgICAgIC5zZWxlY3QoZWxlbWVudCkgLy8gU2V0cyB0aGUgRDNQbHVzIGNvZGUgdG8gYXBwZW5kIHRvIHRoZSBET00gZWxlbWVudC5cclxuICAgICAgICAgICAgICAgIC5kYXRhKHNpbmdsZWRPdXREYXRhKVxyXG4gICAgICAgICAgICAgICAgLnRleHQoKGRhdGEsIGluZGV4LCBhcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5nZXRUaXRsZURpc3BsYXlUZXh0LmNhbGwoc2VsZiwgZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgLnRleHRBbmNob3IoXCJtaWRkbGVcIilcclxuICAgICAgICAgICAgICAgIC52ZXJ0aWNhbEFsaWduKFwibWlkZGxlXCIpXHJcbiAgICAgICAgICAgICAgICAueChub2RlVGl0bGVCb3hQYWRkaW5nLmxlZnQpXHJcbiAgICAgICAgICAgICAgICAueShub2RlVGl0bGVCb3hQYWRkaW5nLnRvcClcclxuICAgICAgICAgICAgICAgIC5mb250V2VpZ2h0KDcwMClcclxuICAgICAgICAgICAgICAgIC5mb250TWluKDYpXHJcbiAgICAgICAgICAgICAgICAuZm9udE1heCgxNilcclxuICAgICAgICAgICAgICAgIC5mb250UmVzaXplKHRydWUpIC8vIFJlc2l6ZXMgdGhlIHRleHQgdG8gZml0IHRoZSBjb250ZW50XHJcbiAgICAgICAgICAgICAgICAud2lkdGgobm9kZVRpdGxlQm94V2lkdGggLSBub2RlVGl0bGVCb3hQYWRkaW5nLmxlZnQgLSBub2RlVGl0bGVCb3hQYWRkaW5nLnJpZ2h0KVxyXG4gICAgICAgICAgICAgICAgLmhlaWdodChub2RlVGl0bGVCb3hIZWlnaHQgLSBub2RlVGl0bGVCb3hQYWRkaW5nLnRvcCAtIG5vZGVUaXRsZUJveFBhZGRpbmcuYm90dG9tKVxyXG4gICAgICAgICAgICAgICAgLnJlbmRlcigpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBzZWxmO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaW5oZXJpdGRvYyAqL1xyXG4gICAgX25vZGVVcGRhdGUobm9kZVVwZGF0ZSwgbm9kZVVwZGF0ZVRyYW5zaXRpb24sIG5vZGVzKSB7XHJcbiAgICAgICAgLy8gVHJhbnNpdGlvbiB0byB0aGUgcHJvcGVyIHBvc2l0aW9uIGZvciB0aGUgbm9kZVxyXG5cclxuICAgICAgICAvLyBUcmFuc2xhdGluZyB3aGlsZSBpbnZlcnRpbmcgWC9ZIHRvXHJcbiAgICAgICAgLy8gbWFrZSB0cmVlIGRpcmVjdGlvbiBmcm9tIGxlZnQgdG8gcmlnaHQsXHJcbiAgICAgICAgLy8gaW5zdGVhZCBvZiB0aGUgdHlwaWNhbCB0b3AtdG8tZG93biB0cmVlXHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0T3JpZW50YXRpb24oKS50b0xvd2VyQ2FzZSgpID09PSAndG9wdG9ib3R0b20nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbm9kZVVwZGF0ZVRyYW5zaXRpb24uYXR0cihcInRyYW5zZm9ybVwiLCAoZGF0YSwgaW5kZXgsIGFycikgPT4gXCJ0cmFuc2xhdGUoXCIgKyBkYXRhLnggKyBcIixcIiArIGRhdGEueSArIFwiKVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbm9kZVVwZGF0ZVRyYW5zaXRpb24uYXR0cihcInRyYW5zZm9ybVwiLCAoZGF0YSwgaW5kZXgsIGFycikgPT4gXCJ0cmFuc2xhdGUoXCIgKyBkYXRhLnkgKyBcIixcIiArIGRhdGEueCArIFwiKVwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBub2RlQm9keUJveFdpZHRoID0gdGhpcy5ub2RlU2V0dGluZ3MuZ2V0Qm9keUJveFdpZHRoKCk7XHJcbiAgICAgICAgdmFyIG5vZGVCb2R5Qm94SGVpZ2h0ID0gdGhpcy5ub2RlU2V0dGluZ3MuZ2V0Qm9keUJveEhlaWdodCgpO1xyXG5cclxuICAgICAgICAvLyBVcGRhdGUgdGhlIG5vZGUgYXR0cmlidXRlcyBhbmQgc3R5bGVcclxuICAgICAgICBub2RlVXBkYXRlLnNlbGVjdChcIi5ub2RlIC5ib2R5LWdyb3VwIC5ib2R5LWJveFwiKVxyXG4gICAgICAgICAgICAuYXR0cihcInlcIiwgLShub2RlQm9keUJveEhlaWdodCAvIDIpKVxyXG4gICAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIG5vZGVCb2R5Qm94V2lkdGgpXHJcbiAgICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIG5vZGVCb2R5Qm94SGVpZ2h0KTtcclxuXHJcbiAgICAgICAgbm9kZVVwZGF0ZS5zZWxlY3QoXCIuZDNwbHVzLXRleHRCb3hcIilcclxuICAgICAgICAgICAgLnN0eWxlKFwiZmlsbC1vcGFjaXR5XCIsIDEpO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaW5oZXJpdGRvYyAqL1xyXG4gICAgX25vZGVFeGl0KG5vZGVFeGl0LCBub2RlRXhpdFRyYW5zaXRpb24sIG5vZGVzKSB7XHJcbiAgICAgICAgdmFyIG5vZGVCb2R5Qm94V2lkdGggPSB0aGlzLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94V2lkdGgoKTtcclxuICAgICAgICB2YXIgbm9kZUJvZHlCb3hIZWlnaHQgPSB0aGlzLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94SGVpZ2h0KCk7XHJcblxyXG4gICAgICAgIG5vZGVFeGl0VHJhbnNpdGlvbi5hdHRyKFwidHJhbnNmb3JtXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQgPSBkYXRhLnBhcmVudDtcclxuICAgICAgICAgICAgICAgIHdoaWxlIChoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC5wYXJlbnQgJiYgIWhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnBhcmVudC5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgICAgICAgIGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50ID0gaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQucGFyZW50O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmdldE9yaWVudGF0aW9uKCkudG9Mb3dlckNhc2UoKSA9PT0gJ3RvcHRvYm90dG9tJylcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyAoaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQueCArIG5vZGVCb2R5Qm94V2lkdGggLyAyKSArIFwiLFwiICsgKGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnkgKyBub2RlQm9keUJveEhlaWdodCkgKyBcIilcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBUcmFuc2xhdGluZyB3aGlsZSBpbnZlcnRpbmcgWC9ZIHRvXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gbWFrZSB0cmVlIGRpcmVjdGlvbiBmcm9tIGxlZnQgdG8gcmlnaHQsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gaW5zdGVhZCBvZiB0aGUgdHlwaWNhbCB0b3AtdG8tZG93biB0cmVlXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgKGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnkgKyBub2RlQm9keUJveFdpZHRoKSArIFwiLFwiICsgKGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnggKyBub2RlQm9keUJveEhlaWdodCAvIDIpICsgXCIpXCI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5yZW1vdmUoKTtcclxuXHJcbiAgICAgICAgLy8gT24gZXhpdCBhbmltYXRlIG91dFxyXG4gICAgICAgIG5vZGVFeGl0VHJhbnNpdGlvbi5zZWxlY3QoXCIubm9kZSAuYm9keS1ncm91cCByZWN0XCIpXHJcbiAgICAgICAgICAgIC5hdHRyKFwid2lkdGhcIiwgMWUtNilcclxuICAgICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgMWUtNik7XHJcblxyXG4gICAgICAgIG5vZGVFeGl0VHJhbnNpdGlvbi5zZWxlY3QoXCIubm9kZSAuYm9keS1ncm91cCAuZDNwbHVzLXRleHRCb3hcIilcclxuICAgICAgICAgICAgLnN0eWxlKFwiZmlsbC1vcGFjaXR5XCIsIDFlLTYpXHJcbiAgICAgICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiBcInRyYW5zbGF0ZSgwLFwiICsgKC1ub2RlQm9keUJveEhlaWdodCAvIDIpICsgXCIpXCIpXHJcbiAgICAgICAgICAgIC5zZWxlY3RBbGwoXCJ0ZXh0XCIpXHJcbiAgICAgICAgICAgICAgICAuc3R5bGUoXCJmb250LXNpemVcIiwgMClcclxuICAgICAgICAgICAgICAgIC5hdHRyKFwieVwiLCAwKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJ4XCIsIDApO1xyXG5cclxuICAgICAgICBub2RlRXhpdFRyYW5zaXRpb24uc2VsZWN0KFwiLm5vZGUgLnRpdGxlLWdyb3VwXCIpXHJcbiAgICAgICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKDAsIFwiICsgKC1ub2RlQm9keUJveEhlaWdodCAvIDIpICsgXCIpXCIpO1xyXG5cclxuICAgICAgICBub2RlRXhpdFRyYW5zaXRpb24uc2VsZWN0KFwiLm5vZGUgLnRpdGxlLWdyb3VwIHJlY3RcIilcclxuICAgICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCAxZS02KVxyXG4gICAgICAgICAgICAuYXR0cihcImhlaWdodFwiLCAxZS02KTtcclxuXHJcbiAgICAgICAgbm9kZUV4aXRUcmFuc2l0aW9uLnNlbGVjdChcIi5ub2RlIC50aXRsZS1ncm91cCAuZDNwbHVzLXRleHRCb3hcIilcclxuICAgICAgICAgICAgLnN0eWxlKFwiZmlsbC1vcGFjaXR5XCIsIDFlLTYpXHJcbiAgICAgICAgICAgIC5hdHRyKFwidHJhbnNmb3JtXCIsIFwidHJhbnNsYXRlKDAsMClcIilcclxuICAgICAgICAgICAgLnNlbGVjdEFsbChcInRleHRcIilcclxuICAgICAgICAgICAgICAgIC5zdHlsZShcImZvbnQtc2l6ZVwiLCAwKVxyXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJ5XCIsIDApXHJcbiAgICAgICAgICAgICAgICAuYXR0cihcInhcIiwgMCk7XHJcblxyXG4gICAgICAgIC8vIE9uIGV4aXQgcmVkdWNlIHRoZSBvcGFjaXR5IG9mIHRleHQgbGFiZWxzXHJcbiAgICAgICAgbm9kZUV4aXRUcmFuc2l0aW9uLnNlbGVjdChcIi5kM3BsdXMtdGV4dEJveFwiKVxyXG4gICAgICAgICAgICAuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIiwgMWUtNik7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBpbmhlcml0ZG9jICovXHJcbiAgICBfZ2V0Tm9kZVNpemUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0T3JpZW50YXRpb24oKS50b0xvd2VyQ2FzZSgpID09PSAndG9wdG9ib3R0b20nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZVNldHRpbmdzLmdldEJvZHlCb3hXaWR0aCgpICsgdGhpcy5ub2RlU2V0dGluZ3MuZ2V0SG9yaXpvbnRhbFNwYWNpbmcoKSxcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZVNldHRpbmdzLmdldEJvZHlCb3hIZWlnaHQoKSArIHRoaXMubm9kZVNldHRpbmdzLmdldFZlcnRpY2FsU3BhY2luZygpXHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94SGVpZ2h0KCkgKyB0aGlzLm5vZGVTZXR0aW5ncy5nZXRWZXJ0aWNhbFNwYWNpbmcoKSxcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZVNldHRpbmdzLmdldEJvZHlCb3hXaWR0aCgpICsgdGhpcy5ub2RlU2V0dGluZ3MuZ2V0SG9yaXpvbnRhbFNwYWNpbmcoKVxyXG4gICAgICAgICAgICBdO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiogQGluaGVyaXRkb2MgKi9cclxuICAgIF9saW5rRW50ZXIoc291cmNlLCBsaW5rRW50ZXIsIGxpbmtzLCBsaW5rUGF0aEdlbmVyYXRvcilcdHtcclxuICAgICAgICBsaW5rRW50ZXIuYXR0cihcImRcIiwgKGRhdGEsIGluZGV4LCBhcnIpID0+IHtcclxuICAgICAgICAgICAgdmFyIHNvdXJjZUNvb3JkaW5hdGUgPSB7XHJcbiAgICAgICAgICAgICAgICB4OiBzb3VyY2UueDAsXHJcbiAgICAgICAgICAgICAgICB5OiBzb3VyY2UueTBcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjb29yZGluYXRlc09iamVjdCA9IHtcclxuICAgICAgICAgICAgICAgIHNvdXJjZTogc291cmNlQ29vcmRpbmF0ZSxcclxuICAgICAgICAgICAgICAgIHRhcmdldDogc291cmNlQ29vcmRpbmF0ZVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICByZXR1cm4gbGlua1BhdGhHZW5lcmF0b3IoY29vcmRpbmF0ZXNPYmplY3QpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaW5oZXJpdGRvYyAqL1xyXG4gICAgX2xpbmtVcGRhdGUoc291cmNlLCBsaW5rVXBkYXRlLCBsaW5rVXBkYXRlVHJhbnNpdGlvbiwgbGlua3MsIGxpbmtQYXRoR2VuZXJhdG9yKSB7XHJcbiAgICAgICAgbGlua1VwZGF0ZVRyYW5zaXRpb24uYXR0cihcImRcIiwgKGRhdGEsIGluZGV4LCBhcnIpID0+IHtcclxuICAgICAgICAgICAgdmFyIHNvdXJjZUNvb3JkaW5hdGUgPSBkYXRhO1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0Q29vcmRpbmF0ZSA9IGRhdGEucGFyZW50O1xyXG5cclxuICAgICAgICAgICAgdmFyIGNvb3JkaW5hdGVzT2JqZWN0ID0ge1xyXG4gICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2VDb29yZGluYXRlLFxyXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiB0YXJnZXRDb29yZGluYXRlXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gbGlua1BhdGhHZW5lcmF0b3IoY29vcmRpbmF0ZXNPYmplY3QpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaW5oZXJpdGRvYyAqL1xyXG4gICAgX2xpbmtFeGl0KHNvdXJjZSwgbGlua0V4aXQsIGxpbmtFeGl0VHJhbnNpdGlvbiwgbGlua3MsIGxpbmtQYXRoR2VuZXJhdG9yKSB7XHJcbiAgICAgICAgbGlua0V4aXRUcmFuc2l0aW9uLmF0dHIoXCJkXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHZhciBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudCA9IGRhdGEucGFyZW50O1xyXG4gICAgICAgICAgICB3aGlsZSAoaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQucGFyZW50ICYmICFoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC5wYXJlbnQuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgIGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50ID0gaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQucGFyZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2YXIgc291cmNlQ29vcmRpbmF0ZSA9IG51bGw7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmdldE9yaWVudGF0aW9uKCkudG9Mb3dlckNhc2UoKSA9PT0gJ3RvcHRvYm90dG9tJylcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdmFyIG5vZGVCb2R5Qm94SGVpZ2h0ID0gdGhpcy5ub2RlU2V0dGluZ3MuZ2V0Qm9keUJveEhlaWdodCgpO1xyXG4gICAgICAgICAgICAgICAgc291cmNlQ29vcmRpbmF0ZSA9IHtcclxuICAgICAgICAgICAgICAgICAgICB4OiBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC54LFxyXG4gICAgICAgICAgICAgICAgICAgIHk6IGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnkgKyBub2RlQm9keUJveEhlaWdodFxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHZhciBub2RlQm9keUJveFdpZHRoID0gdGhpcy5ub2RlU2V0dGluZ3MuZ2V0Qm9keUJveFdpZHRoKCk7XHJcbiAgICAgICAgICAgICAgICBzb3VyY2VDb29yZGluYXRlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHg6IGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LngsXHJcbiAgICAgICAgICAgICAgICAgICAgeTogaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQueSArIG5vZGVCb2R5Qm94V2lkdGhcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciB0YXJnZXRDb29yZGluYXRlID0ge1xyXG4gICAgICAgICAgICAgICAgeDogaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQueCxcclxuICAgICAgICAgICAgICAgIHk6IGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnlcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjb29yZGluYXRlc09iamVjdCA9IHtcclxuICAgICAgICAgICAgICAgIHNvdXJjZTogc291cmNlQ29vcmRpbmF0ZSxcclxuICAgICAgICAgICAgICAgIHRhcmdldDogdGFyZ2V0Q29vcmRpbmF0ZVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGxpbmtQYXRoR2VuZXJhdG9yKGNvb3JkaW5hdGVzT2JqZWN0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKiogQGluaGVyaXRkb2MgKi9cclxuICAgIF9nZXRMaW5rUGF0aEdlbmVyYXRvcigpIHtcclxuICAgICAgICAvLyBEZWNsYXJlIGJveCBkaW1lbnNpb25zXHJcbiAgICAgICAgdmFyIG5vZGVCb2R5Qm94V2lkdGggPSB0aGlzLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94V2lkdGgoKTtcclxuICAgICAgICB2YXIgbm9kZUJvZHlCb3hIZWlnaHQgPSB0aGlzLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94SGVpZ2h0KCk7XHJcblxyXG4gICAgICAgIC8vIFdlIHNwZWNpZnkgYXJyb3cgZnVuY3Rpb25zIHRoYXQgcmV0dXJuc1xyXG4gICAgICAgIC8vIGFuIGFycmF5IHNwZWNpZnlpbmcgaG93IHRvIGdldCB0aGVcclxuICAgICAgICAvLyB0aGUgeC95IGNvcmRpbmF0ZXMgZnJvbSB0aGUgb2JqZWN0LFxyXG4gICAgICAgIC8vIGluIHRoZSBmb3JtYXQgb2YgW3gsIHldLCB0aGUgZGVmYXVsdFxyXG4gICAgICAgIC8vIGZvcm1hdCBmb3IgdGhlIGxpbmsgZ2VuZXJhdG9yIHRvXHJcbiAgICAgICAgLy8gZ2VuZXJhdGUgdGhlIHBhdGhcclxuICAgICAgICBpZiAodGhpcy5nZXRPcmllbnRhdGlvbigpLnRvTG93ZXJDYXNlKCkgPT09ICd0b3B0b2JvdHRvbScpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICByZXR1cm4gZDMubGlua1ZlcnRpY2FsKClcclxuICAgICAgICAgICAgICAgIC5zb3VyY2UoKGRhdGEpID0+IFtkYXRhLnNvdXJjZS54ICsgbm9kZUJvZHlCb3hXaWR0aCAvIDIsIGRhdGEuc291cmNlLnkgLSBub2RlQm9keUJveEhlaWdodCAvIDJdKVxyXG4gICAgICAgICAgICAgICAgLnRhcmdldCgoZGF0YSkgPT4gW2RhdGEudGFyZ2V0LnggKyBub2RlQm9keUJveFdpZHRoIC8gMiwgZGF0YS50YXJnZXQueSArIG5vZGVCb2R5Qm94SGVpZ2h0IC8gMl0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICByZXR1cm4gZDMubGlua0hvcml6b250YWwoKVxyXG4gICAgICAgICAgICAgICAgLy8gSW52ZXJ0cyB0aGUgWC9ZIGNvb3JkaW5hdGVzIHRvIGRyYXcgbGlua3MgZm9yIGFcclxuICAgICAgICAgICAgICAgIC8vIHRyZWUgc3RhcnRpbmcgZnJvbSBsZWZ0IHRvIHJpZ2h0LFxyXG4gICAgICAgICAgICAgICAgLy8gaW5zdGVhZCBvZiB0aGUgdHlwaWNhbCB0b3AtdG8tZG93biB0cmVlXHJcbiAgICAgICAgICAgICAgICAuc291cmNlKChkYXRhKSA9PiBbZGF0YS5zb3VyY2UueSwgZGF0YS5zb3VyY2UueF0pXHJcbiAgICAgICAgICAgICAgICAudGFyZ2V0KChkYXRhKSA9PiBbZGF0YS50YXJnZXQueSArIG5vZGVCb2R5Qm94V2lkdGgsIGRhdGEudGFyZ2V0LnhdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBpbmhlcml0ZG9jICovXHJcbiAgICB2YWxpZGF0ZVNldHRpbmdzKCkge1xyXG4gICAgICAgIHN1cGVyLnZhbGlkYXRlU2V0dGluZ3MoKTtcclxuICAgICAgICBpZiAoIXRoaXMuX2dldEJvZHlEaXNwbGF5VGV4dClcclxuICAgICAgICAgICAgdGhyb3cgXCJOZWVkIHRvIGRlZmluZSB0aGUgZ2V0Qm9keURpc3BsYXlUZXh0IGZ1bmN0aW9uIGFzIHBhcnQgb2YgdGhlIG9wdGlvbnNcIjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIGJvZHkgZGlzcGxheSB0ZXh0IGFjY2Vzc29yLFxyXG4gICAgICogdXNlZCB0byBnZXQgdGhlIGJvZHkgZGlzcGxheSB0ZXh0XHJcbiAgICAgKiBmb3IgdGhlIG5vZGVzLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge2JvZHlEaXNwbGF5VGV4dEFjY2Vzc29yQ2FsbEJhY2t9IG5ld0JvZHlEaXNwbGF5VGV4dEFjY2Vzc29yIFxyXG4gICAgICovXHJcbiAgICBzZXRCb2R5RGlzcGxheVRleHRBY2Nlc3NvcihuZXdCb2R5RGlzcGxheVRleHRBY2Nlc3Nvcikge1xyXG4gICAgICAgIHRoaXMuX2dldEJvZHlEaXNwbGF5VGV4dCA9IG5ld0JvZHlEaXNwbGF5VGV4dEFjY2Vzc29yO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgYm9keSBkaXNwbGF5IHRleHQgZm9yIGEgZ2l2ZW4gZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBkYXRhIGl0ZW0gdG8gZ2V0IHRoZSBib2R5IGRpc3BsYXkgdGV4dCBmcm9tLlxyXG4gICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIGJvZHkgZGlzcGxheSB0ZXh0IHRvIHJlbmRlciBmb3IgdGhlIG5vZGUuXHJcbiAgICAgKi9cclxuICAgIGdldEJvZHlEaXNwbGF5VGV4dChub2RlRGF0YUl0ZW0pIHtcclxuICAgICAgICAvLyBOb3RlIHRoYXQgZGF0YSBpbiB0aGlzIGNvbnRleHQgcmVmZXJzIHRvIEQzIFRyZWUgZGF0YSwgbm90IHRoZSBvcmlnaW5hbCBpdGVtIGRhdGFcclxuICAgICAgICAvLyBUbyBBY2Nlc3MgdGhlIG9yaWdpbmFsIGl0ZW0gZGF0YSwgdXNlIHRoZSBcIi5kYXRhXCIgcHJvcGVydHlcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0Qm9keURpc3BsYXlUZXh0KG5vZGVEYXRhSXRlbS5kYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIHRpdGxlIGRpc3BsYXkgdGV4dCBhY2Nlc3NvcixcclxuICAgICAqIHVzZWQgdG8gZ2V0IHRoZSB0aXRsZSBkaXNwbGF5IHRleHRcclxuICAgICAqIGZvciB0aGUgbm9kZXMuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7dGl0bGVEaXNwbGF5VGV4dEFjY2Vzc29yQ2FsbEJhY2t9IG5ld1RpdGxlRGlzcGxheVRleHRBY2Nlc3NvciBcclxuICAgICAqL1xyXG4gICAgc2V0VGl0bGVEaXNwbGF5VGV4dEFjY2Vzc29yKG5ld1RpdGxlRGlzcGxheVRleHRBY2Nlc3Nvcikge1xyXG4gICAgICAgIHRoaXMuX2dldFRpdGxlRGlzcGxheVRleHQgPSBuZXdUaXRsZURpc3BsYXlUZXh0QWNjZXNzb3I7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSB0aXRsZSBkaXNwbGF5IHRleHQgZm9yIGEgZ2l2ZW4gZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBEMyBub2RlIGRhdGEgaXRlbSB0byBnZXQgdGhlIHRpdGxlIGRpc3BsYXkgdGV4dCBmcm9tLlxyXG4gICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIHRpdGxlIGRpc3BsYXkgdGV4dCB0byByZW5kZXIgZm9yIHRoZSBub2RlLlxyXG4gICAgICovXHJcbiAgICBnZXRUaXRsZURpc3BsYXlUZXh0KG5vZGVEYXRhSXRlbSkge1xyXG4gICAgICAgIC8vIE5vdGUgdGhhdCBkYXRhIGluIHRoaXMgY29udGV4dCByZWZlcnMgdG8gRDMgVHJlZSBkYXRhLCBub3QgdGhlIG9yaWdpbmFsIGl0ZW0gZGF0YVxyXG4gICAgICAgIC8vIFRvIEFjY2VzcyB0aGUgb3JpZ2luYWwgaXRlbSBkYXRhLCB1c2UgdGhlIFwiLmRhdGFcIiBwcm9wZXJ0eVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRUaXRsZURpc3BsYXlUZXh0KG5vZGVEYXRhSXRlbS5kYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogQGluaGVyaXRkb2MgKi9cclxuICAgIGNlbnRlck5vZGUobm9kZURhdGFJdGVtKSB7XHJcbiAgICAgICAgdmFyIG5vZGVCb2R5Qm94V2lkdGggPSB0aGlzLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94V2lkdGgoKTtcclxuICAgICAgICB2YXIgbm9kZUJvZHlCb3hIZWlnaHQgPSB0aGlzLm5vZGVTZXR0aW5ncy5nZXRCb2R5Qm94SGVpZ2h0KCk7XHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0T3JpZW50YXRpb24oKS50b0xvd2VyQ2FzZSgpID09PSAndG9wdG9ib3R0b20nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbm9kZURhdGFJdGVtLngwID0gbm9kZURhdGFJdGVtLngwO1xyXG4gICAgICAgICAgICBub2RlRGF0YUl0ZW0ueTAgPSBub2RlRGF0YUl0ZW0ueTAgKyBub2RlQm9keUJveEhlaWdodCAvIDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5vZGVEYXRhSXRlbS55MCA9IG5vZGVEYXRhSXRlbS55MCArIG5vZGVCb2R5Qm94V2lkdGggLyAyO1xyXG4gICAgICAgICAgICBub2RlRGF0YUl0ZW0ueDAgPSBub2RlRGF0YUl0ZW0ueDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBzdXBlci5jZW50ZXJOb2RlKG5vZGVEYXRhSXRlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBEZXRlcm1pbmVzIGhvdyB0byBvYnRhaW4gdGhlIGJvZHkgdGV4dFxyXG4gICAgICogdG8gZGlzcGxheSBmb3IgYSBub2RlIGNvcnJlc3BvbmRpbmdcclxuICAgICAqIHRvIGEgZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAY2FsbGJhY2sgYm9keURpc3BsYXlUZXh0QWNjZXNzb3JDYWxsQmFja1xyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEgVGhlIGRhdGEgaXRlbSB0byBnZXQgdGhlIGJvZHkgZGlzcGxheSB0ZXh0IGZyb20uXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgYm9keSBkaXNwbGF5IHRleHQgdG8gcmVuZGVyIGZvciB0aGUgbm9kZS5cclxuICAgICAqL1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogRGV0ZXJtaW5lcyBob3cgdG8gb2J0YWluIHRoZSB0aXRsZSB0ZXh0XHJcbiAgICAgKiB0byBkaXNwbGF5IGZvciBhIG5vZGUgY29ycmVzcG9uZGluZ1xyXG4gICAgICogdG8gYSBkYXRhIGl0ZW0uXHJcbiAgICAgKiBcclxuICAgICAqIEBjYWxsYmFjayB0aXRsZURpc3BsYXlUZXh0QWNjZXNzb3JDYWxsQmFja1xyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEgVGhlIGRhdGEgaXRlbSB0byBnZXQgdGhlIHRpdGxlIGRpc3BsYXkgdGV4dCBmcm9tLlxyXG4gICAgICogQHJldHVybnMge3N0cmluZ30gVGhlIHRpdGxlIGRpc3BsYXkgdGV4dCB0byByZW5kZXIgZm9yIHRoZSBub2RlLlxyXG4gICAgICovXHJcbn1cclxuXHJcbkJveGVkVHJlZS5kZWZhdWx0cyA9IHtcclxuICAgIGdldEJvZHlEaXNwbGF5VGV4dDogbnVsbCxcclxuICAgIGdldFRpdGxlRGlzcGxheVRleHQ6IChkYXRhSXRlbSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCb3hlZFRyZWU7IiwiaW1wb3J0IE5vZGVTZXR0aW5ncyBmcm9tICcuL05vZGVTZXR0aW5ncyc7XHJcblxyXG5jbGFzcyBDaXJjbGVOb2RlU2V0dGluZ3MgZXh0ZW5kcyBOb2RlU2V0dGluZ3Mge1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaXJjbGVOb2RlU2V0dGluZ3M7IiwiaW1wb3J0IGQzIGZyb20gJy4vQ3VzdG9tRDMnO1xyXG5pbXBvcnQgQmFzZVRyZWUgZnJvbSAnLi9CYXNlVHJlZSc7XHJcbmltcG9ydCBDaXJjbGVOb2RlU2V0dGluZ3MgZnJvbSAnLi9DaXJjbGVOb2RlU2V0dGluZ3MnO1xyXG5cclxuY2xhc3MgQ2lyY2xlVHJlZSBleHRlbmRzIEJhc2VUcmVle1xyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gW29wdGlvbnNdIFRoZSBvcHRpb25zIG9iamVjdC5cclxuICAgICAqIEBwYXJhbSB7ZGlzcGxheVRleHRBY2Nlc3NvckNhbGxCYWNrfSBbb3B0aW9ucy5nZXREaXNwbGF5VGV4dF0gRGV0ZXJtaW5lcyBob3cgdG8gb2J0YWluIHRoZSB0ZXh0IHRvIGRpc3BsYXkgZm9yIGEgbm9kZSBjb3JyZXNwb25kaW5nIHRvIGEgZGF0YSBpdGVtLlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICAgICAgc3VwZXIob3B0aW9ucyk7XHJcbiAgICAgICAgdmFyIG1lcmdlZE9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgIC4uLkJhc2VUcmVlLmRlZmF1bHRzLFxyXG4gICAgICAgICAgICAuLi5DaXJjbGVUcmVlLmRlZmF1bHRzLFxyXG4gICAgICAgICAgICAuLi5vcHRpb25zXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdGhpcy5fZ2V0RGlzcGxheVRleHQgPSBtZXJnZWRPcHRpb25zLmdldERpc3BsYXlUZXh0O1xyXG4gICAgICAgIHRoaXMubm9kZVNldHRpbmdzID0gbmV3IENpcmNsZU5vZGVTZXR0aW5ncyh0aGlzLCBtZXJnZWRPcHRpb25zLm5vZGVTZXR0aW5ncyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBpbmhlcml0ZG9jICovXHJcbiAgICBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIC8vIENyZWF0ZSB0aGUgc3ZnLCBhbmQgc2V0IGl0cyBkaW1lbnNpb25zXHJcbiAgICAgICAgc3VwZXIuaW5pdGlhbGl6ZSgpO1xyXG4gICAgICAgIHRoaXMuZ2V0U3ZnKCkuY2xhc3NlZCgnY2lyY2xlLXRyZWUnLCB0cnVlKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKiogQGluaGVyaXRkb2MgKi9cclxuICAgIF9ub2RlRW50ZXIobm9kZUVudGVyLCBub2Rlcykge1xyXG4gICAgICAgIC8vIEFkZCBDaXJjbGUgZm9yIHRoZSBub2Rlc1xyXG4gICAgICAgIG5vZGVFbnRlci5hcHBlbmQoXCJjaXJjbGVcIilcclxuICAgICAgICAgICAgLmF0dHIoXCJyXCIsIDFlLTYpO1xyXG5cclxuICAgICAgICAvLyBBZGQgbGFiZWxzIGZvciB0aGUgbm9kZXNcclxuICAgICAgICBub2RlRW50ZXIuYXBwZW5kKFwidGV4dFwiKVxyXG4gICAgICAgICAgICAudGV4dCgoZGF0YSwgaW5kZXgsIGFycikgPT4gdGhpcy5nZXREaXNwbGF5VGV4dC5jYWxsKHRoaXMsIGRhdGEpKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKiogQGluaGVyaXRkb2MgKi9cclxuICAgIF9ub2RlVXBkYXRlKG5vZGVVcGRhdGUsIG5vZGVVcGRhdGVUcmFuc2l0aW9uLCBub2Rlcykge1xyXG4gICAgICAgIG5vZGVVcGRhdGUuY2xhc3NlZCgnbWlkZGxlJywgKGRhdGEsIGluZGV4LCBhcnIpID0+IHtcclxuICAgICAgICAgICAgdmFyIGlzTWlkZGxlQ2hpbGQgPSBmYWxzZTtcclxuICAgICAgICAgICAgaWYgKGRhdGEucGFyZW50ICYmIGRhdGEucGFyZW50LmNoaWxkcmVuLmxlbmd0aCAlIDIgIT09IDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBzaWJsaW5ncyA9IGRhdGEucGFyZW50LmNoaWxkcmVuO1xyXG4gICAgICAgICAgICAgICAgdmFyIGluZGV4T2ZTaWJsaW5ncyA9IHNpYmxpbmdzLmluZGV4T2YoZGF0YSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXhPZlNpYmxpbmdzID09PSBNYXRoLmZsb29yKHNpYmxpbmdzLmxlbmd0aCAvIDIpKVxyXG4gICAgICAgICAgICAgICAgICAgIGlzTWlkZGxlQ2hpbGQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBpc01pZGRsZUNoaWxkO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBUcmFuc2l0aW9uIHRvIHRoZSBwcm9wZXIgcG9zaXRpb24gZm9yIHRoZSBub2RlXHJcblxyXG4gICAgICAgIC8vIFRyYW5zbGF0aW5nIHdoaWxlIGludmVydGluZyBYL1kgdG9cclxuICAgICAgICAvLyBtYWtlIHRyZWUgZGlyZWN0aW9uIGZyb20gbGVmdCB0byByaWdodCxcclxuICAgICAgICAvLyBpbnN0ZWFkIG9mIHRoZSB0eXBpY2FsIHRvcC10by1kb3duIHRyZWVcclxuICAgICAgICBpZiAodGhpcy5nZXRPcmllbnRhdGlvbigpLnRvTG93ZXJDYXNlKCkgPT09ICd0b3B0b2JvdHRvbScpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBub2RlVXBkYXRlVHJhbnNpdGlvbi5hdHRyKFwidHJhbnNmb3JtXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiBcInRyYW5zbGF0ZShcIiArIGRhdGEueCArIFwiLFwiICsgZGF0YS55ICsgXCIpXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBub2RlVXBkYXRlVHJhbnNpdGlvbi5hdHRyKFwidHJhbnNmb3JtXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiBcInRyYW5zbGF0ZShcIiArIGRhdGEueSArIFwiLFwiICsgZGF0YS54ICsgXCIpXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbm9kZVVwZGF0ZS5zZWxlY3QoXCJ0ZXh0XCIpXHJcbiAgICAgICAgICAgIC5zdHlsZShcImZpbGwtb3BhY2l0eVwiLCAxKTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKiogQGluaGVyaXRkb2MgKi9cclxuICAgIF9ub2RlRXhpdChub2RlRXhpdCwgbm9kZUV4aXRUcmFuc2l0aW9uLCBub2Rlcykge1xyXG4gICAgICAgIC8vIFJlbW92ZSBhbnkgZXhpdGluZyBub2Rlc1xyXG4gICAgICAgIG5vZGVFeGl0VHJhbnNpdGlvbi5hdHRyKFwidHJhbnNmb3JtXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHZhciBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudCA9IGRhdGEucGFyZW50O1xyXG4gICAgICAgICAgICB3aGlsZSAoaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQucGFyZW50ICYmICFoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC5wYXJlbnQuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgIGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50ID0gaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQucGFyZW50O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBUcmFuc2xhdGluZyB3aGlsZSBpbnZlcnRpbmcgWC9ZIHRvXHJcbiAgICAgICAgICAgIC8vIG1ha2UgdHJlZSBkaXJlY3Rpb24gZnJvbSBsZWZ0IHRvIHJpZ2h0LFxyXG4gICAgICAgICAgICAvLyBpbnN0ZWFkIG9mIHRoZSB0eXBpY2FsIHRvcC10by1kb3duIHRyZWVcclxuICAgICAgICAgICAgaWYgKHRoaXMuZ2V0T3JpZW50YXRpb24oKS50b0xvd2VyQ2FzZSgpID09PSAndG9wdG9ib3R0b20nKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC54ICsgXCIsXCIgKyBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC55ICsgXCIpXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC55ICsgXCIsXCIgKyBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC54ICsgXCIpXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC5yZW1vdmUoKTtcclxuXHJcbiAgICAgICAgLy8gT24gZXhpdCByZWR1Y2UgdGhlIG5vZGUgY2lyY2xlcyBzaXplIHRvIDBcclxuICAgICAgICBub2RlRXhpdFRyYW5zaXRpb24uc2VsZWN0KFwiY2lyY2xlXCIpXHJcbiAgICAgICAgICAgIC5hdHRyKFwiclwiLCAxZS02KTtcclxuXHJcbiAgICAgICAgLy8gT24gZXhpdCByZWR1Y2UgdGhlIG9wYWNpdHkgb2YgdGV4dCBsYWJlbHNcclxuICAgICAgICBub2RlRXhpdFRyYW5zaXRpb24uc2VsZWN0KFwidGV4dFwiKVxyXG4gICAgICAgICAgICAuc3R5bGUoXCJmaWxsLW9wYWNpdHlcIiwgMWUtNik7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBpbmhlcml0ZG9jICovXHJcbiAgICBfZ2V0Tm9kZVNpemUoKSB7XHJcbiAgICAgICAgcmV0dXJuIFtcclxuICAgICAgICAgICAgdGhpcy5ub2RlU2V0dGluZ3MuZ2V0VmVydGljYWxTcGFjaW5nKCksXHJcbiAgICAgICAgICAgIHRoaXMubm9kZVNldHRpbmdzLmdldEhvcml6b250YWxTcGFjaW5nKClcclxuICAgICAgICBdO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaW5oZXJpdGRvYyAqL1xyXG4gICAgX2xpbmtFbnRlcihzb3VyY2UsIGxpbmtFbnRlciwgbGlua3MsIGxpbmtQYXRoR2VuZXJhdG9yKVx0e1xyXG4gICAgICAgIGxpbmtFbnRlci5hdHRyKFwiZFwiLCAoZGF0YSwgaW5kZXgsIGFycikgPT4ge1xyXG4gICAgICAgICAgICB2YXIgc291cmNlQ29vcmRpbmF0ZSA9IHtcclxuICAgICAgICAgICAgICAgIHg6IHNvdXJjZS54MCxcclxuICAgICAgICAgICAgICAgIHk6IHNvdXJjZS55MFxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdmFyIGNvb3JkaW5hdGVzT2JqZWN0ID0ge1xyXG4gICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2VDb29yZGluYXRlLFxyXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiBzb3VyY2VDb29yZGluYXRlXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gbGlua1BhdGhHZW5lcmF0b3IoY29vcmRpbmF0ZXNPYmplY3QpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaW5oZXJpdGRvYyAqL1xyXG4gICAgX2xpbmtVcGRhdGUoc291cmNlLCBsaW5rVXBkYXRlLCBsaW5rVXBkYXRlVHJhbnNpdGlvbiwgbGlua3MsIGxpbmtQYXRoR2VuZXJhdG9yKSB7XHJcbiAgICAgICAgbGlua1VwZGF0ZVRyYW5zaXRpb24uYXR0cihcImRcIiwgKGRhdGEsIGluZGV4LCBhcnIpID0+IHtcclxuICAgICAgICAgICAgdmFyIHNvdXJjZUNvb3JkaW5hdGUgPSBkYXRhO1xyXG4gICAgICAgICAgICB2YXIgdGFyZ2V0Q29vcmRpbmF0ZSA9IGRhdGEucGFyZW50O1xyXG5cclxuICAgICAgICAgICAgdmFyIGNvb3JkaW5hdGVzT2JqZWN0ID0ge1xyXG4gICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2VDb29yZGluYXRlLFxyXG4gICAgICAgICAgICAgICAgdGFyZ2V0OiB0YXJnZXRDb29yZGluYXRlXHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gbGlua1BhdGhHZW5lcmF0b3IoY29vcmRpbmF0ZXNPYmplY3QpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiBAaW5oZXJpdGRvYyAqL1xyXG4gICAgX2xpbmtFeGl0KHNvdXJjZSwgbGlua0V4aXQsIGxpbmtFeGl0VHJhbnNpdGlvbiwgbGlua3MsIGxpbmtQYXRoR2VuZXJhdG9yKSB7XHJcbiAgICAgICAgbGlua0V4aXRUcmFuc2l0aW9uLmF0dHIoXCJkXCIsIChkYXRhLCBpbmRleCwgYXJyKSA9PiB7XHJcbiAgICAgICAgICAgIHZhciBoaWdoZXN0Q29sbGFwc2luZ1BhcmVudCA9IGRhdGEucGFyZW50O1xyXG4gICAgICAgICAgICB3aGlsZSAoaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQucGFyZW50ICYmICFoaWdoZXN0Q29sbGFwc2luZ1BhcmVudC5wYXJlbnQuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgIGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50ID0gaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQucGFyZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBzb3VyY2VDb29yZGluYXRlID0ge1xyXG4gICAgICAgICAgICAgICAgeDogaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQueCxcclxuICAgICAgICAgICAgICAgIHk6IGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnlcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZhciB0YXJnZXRDb29yZGluYXRlID0ge1xyXG4gICAgICAgICAgICAgICAgeDogaGlnaGVzdENvbGxhcHNpbmdQYXJlbnQueCxcclxuICAgICAgICAgICAgICAgIHk6IGhpZ2hlc3RDb2xsYXBzaW5nUGFyZW50LnlcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjb29yZGluYXRlc09iamVjdCA9IHtcclxuICAgICAgICAgICAgICAgIHNvdXJjZTogc291cmNlQ29vcmRpbmF0ZSxcclxuICAgICAgICAgICAgICAgIHRhcmdldDogdGFyZ2V0Q29vcmRpbmF0ZVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIGxpbmtQYXRoR2VuZXJhdG9yKGNvb3JkaW5hdGVzT2JqZWN0KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBpbmhlcml0ZG9jICovXHJcbiAgICBfZ2V0TGlua1BhdGhHZW5lcmF0b3IoKSB7XHJcbiAgICAgICAgLy8gV2Ugc3BlY2lmeSBhcnJvdyBmdW5jdGlvbnMgdGhhdCByZXR1cm5zXHJcbiAgICAgICAgLy8gYW4gYXJyYXkgc3BlY2lmeWluZyBob3cgdG8gZ2V0IHRoZVxyXG4gICAgICAgIC8vIHRoZSB4L3kgY29yZGluYXRlcyBmcm9tIHRoZSBvYmplY3QsXHJcbiAgICAgICAgLy8gaW4gdGhlIGZvcm1hdCBvZiBbeCwgeV0sIHRoZSBkZWZhdWx0XHJcbiAgICAgICAgLy8gZm9ybWF0IGZvciB0aGUgbGluayBnZW5lcmF0b3IgdG9cclxuICAgICAgICAvLyBnZW5lcmF0ZSB0aGUgcGF0aFxyXG4gICAgICAgIGlmICh0aGlzLmdldE9yaWVudGF0aW9uKCkudG9Mb3dlckNhc2UoKSA9PT0gJ3RvcHRvYm90dG9tJylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJldHVybiBkMy5saW5rVmVydGljYWwoKVxyXG4gICAgICAgICAgICAgICAgLnNvdXJjZSgoZGF0YSkgPT4gW2RhdGEuc291cmNlLngsIGRhdGEuc291cmNlLnldKVxyXG4gICAgICAgICAgICAgICAgLnRhcmdldCgoZGF0YSkgPT4gW2RhdGEudGFyZ2V0LngsIGRhdGEudGFyZ2V0LnldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIGQzLmxpbmtIb3Jpem9udGFsKClcclxuICAgICAgICAgICAgICAgIC8vIEludmVydHMgdGhlIFgvWSBjb29yZGluYXRlcyB0byBkcmF3IGxpbmtzIGZvciBhXHJcbiAgICAgICAgICAgICAgICAvLyB0cmVlIHN0YXJ0aW5nIGZyb20gbGVmdCB0byByaWdodCxcclxuICAgICAgICAgICAgICAgIC8vIGluc3RlYWQgb2YgdGhlIHR5cGljYWwgdG9wLXRvLWRvd24gdHJlZVxyXG4gICAgICAgICAgICAgICAgLnNvdXJjZSgoZGF0YSkgPT4gW2RhdGEuc291cmNlLnksIGRhdGEuc291cmNlLnhdKVxyXG4gICAgICAgICAgICAgICAgLnRhcmdldCgoZGF0YSkgPT4gW2RhdGEudGFyZ2V0LnksIGRhdGEudGFyZ2V0LnhdKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIEBpbmhlcml0ZG9jICovXHJcbiAgICB2YWxpZGF0ZVNldHRpbmdzKCkge1xyXG4gICAgICAgIHN1cGVyLnZhbGlkYXRlU2V0dGluZ3MoKTtcclxuICAgICAgICBpZiAoIXRoaXMuZ2V0RGlzcGxheVRleHQpXHJcbiAgICAgICAgICAgIHRocm93IFwiTmVlZCB0byBkZWZpbmUgdGhlIGdldERpc3BsYXlUZXh0IGZ1bmN0aW9uIGFzIHBhcnQgb2YgdGhlIG9wdGlvbnNcIjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIGRpc3BsYXkgdGV4dCBhY2Nlc3NvcixcclxuICAgICAqIHVzZWQgdG8gZ2V0IHRoZSBkaXNwbGF5IHRleHRcclxuICAgICAqIGZvciB0aGUgbm9kZXMuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7ZGlzcGxheVRleHRBY2Nlc3NvckNhbGxCYWNrfSBuZXdEaXNwbGF5VGV4dEFjY2Vzc29yIFxyXG4gICAgICovXHJcbiAgICBzZXREaXNwbGF5VGV4dEFjY2Vzc29yKG5ld0Rpc3BsYXlUZXh0QWNjZXNzb3IpIHtcclxuICAgICAgICB0aGlzLl9nZXREaXNwbGF5VGV4dCA9IG5ld0Rpc3BsYXlUZXh0QWNjZXNzb3I7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBHZXRzIHRoZSBkaXNwbGF5IHRleHQgZm9yIGEgZ2l2ZW4gZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIFRoZSBkYXRhIGl0ZW0gdG8gZ2V0IHRoZSBkaXNwbGF5IHRleHQgZnJvbS5cclxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBkaXNwbGF5IHRleHQgdG8gcmVuZGVyIGZvciB0aGUgbm9kZS5cclxuICAgICAqL1xyXG4gICAgZ2V0RGlzcGxheVRleHQobm9kZURhdGFJdGVtKSB7XHJcbiAgICAgICAgLy8gTm90ZSB0aGF0IGRhdGEgaW4gdGhpcyBjb250ZXh0IHJlZmVycyB0byBEMyBUcmVlIGRhdGEsIG5vdCB0aGUgb3JpZ2luYWwgaXRlbSBkYXRhXHJcbiAgICAgICAgLy8gVG8gQWNjZXNzIHRoZSBvcmlnaW5hbCBpdGVtIGRhdGEsIHVzZSB0aGUgXCIuZGF0YVwiIHByb3BlcnR5XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldERpc3BsYXlUZXh0KG5vZGVEYXRhSXRlbS5kYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERldGVybWluZXMgaG93IHRvIG9idGFpbiB0aGUgdGV4dFxyXG4gICAgICogdG8gZGlzcGxheSBmb3IgYSBub2RlIGNvcnJlc3BvbmRpbmdcclxuICAgICAqIHRvIGEgZGF0YSBpdGVtLlxyXG4gICAgICogXHJcbiAgICAgKiBAY2FsbGJhY2sgZGlzcGxheVRleHRBY2Nlc3NvckNhbGxCYWNrXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YSBUaGUgZGF0YSBpdGVtIHRvIGdldCB0aGUgZGlzcGxheSB0ZXh0IGZyb20uXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZGlzcGxheSB0ZXh0IHRvIHJlbmRlciBmb3IgdGhlIG5vZGUuXHJcbiAgICAgKi9cclxufVxyXG5cclxuQ2lyY2xlVHJlZS5kZWZhdWx0cyA9IHtcclxuICAgIGdldERpc3BsYXlUZXh0OiAobm9kZURhdGFJdGVtKSA9PiBudWxsXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENpcmNsZVRyZWU7IiwiLyoqXHJcbiAqIFdlIG9ubHkgaW1wb3J0IHRoZSBuZWNlc3NhcnkgbW9kdWxlc1xyXG4gKiBmcm9tIEQzLCB0byBrZWVwIHJlc3VsdGluZyBidW5kZGVkXHJcbiAqIEpTIGZpbGVzIG1pbmltYWwgaW4gc2l6ZS5cclxuICovXHJcblxyXG5pbXBvcnQgeyBzZWxlY3QsIHNlbGVjdEFsbCwgZXZlbnQgfSBmcm9tICdkMy1zZWxlY3Rpb24nXHJcbmltcG9ydCAqIGFzIGhpZXJhcmNoeSBmcm9tICdkMy1oaWVyYXJjaHknXHJcbmltcG9ydCAqIGFzIHpvb20gZnJvbSAnZDMtem9vbSdcclxuaW1wb3J0IHsgbGlua0hvcml6b250YWwsIGxpbmtWZXJ0aWNhbCB9IGZyb20gJ2QzLXNoYXBlJ1xyXG5cclxuLy8gY3JlYXRlIGEgT2JqZWN0IHdpdGggb25seSB0aGUgc3Vic2V0IG9mIGZ1bmN0aW9ucy9zdWJtb2R1bGVzL3BsdWdpbnMgdGhhdCB3ZSBuZWVkXHJcbnZhciBkMyA9IHtcclxuICBzZWxlY3QsXHJcbiAgc2VsZWN0QWxsLFxyXG4gIC8vIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGxpdmUgYmluZGluZ3MsIHJlZmVyIHRvOlxyXG4gIC8vICAgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDAwMTIwMTYvaW1wb3J0aW5nLWQzLWV2ZW50LWludG8tYS1jdXN0b20tYnVpbGQtdXNpbmctcm9sbHVwXHJcbiAgZ2V0IGV2ZW50KCkgeyByZXR1cm4gZXZlbnQ7IH0sXHJcbiAgbGlua0hvcml6b250YWwsXHJcbiAgbGlua1ZlcnRpY2FsLFxyXG4gIC4uLmhpZXJhcmNoeSxcclxuICAuLi56b29tLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZDM7IiwiY2xhc3MgTG9hZE9uRGVtYW5kU2V0dGluZ3Mge1xyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvd25lck9iamVjdCBUaGUgb3duZXIgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgVGhlIG9wdGlvbnMgb2JqZWN0LlxyXG4gICAgICogQHBhcmFtIHtoYXNDaGlsZHJlbkNhbGxCYWNrfSBvcHRpb25zLmhhc0NoaWxkcmVuIFNldHMgdGhlIGhhc0NoaWxkcmVuIGNhbGxiYWNrIGZ1bmN0aW9uLCB1c2VkIHRvIGRldGVybWluZSB3aGV0aGVyIGEgbm9kZSBvciBkYXRhIGl0ZW0gaGFzIGNoaWxkcmVuIG9yIG5vdC5cclxuICAgICAqIEBwYXJhbSB7bG9hZENoaWxkcmVuQ2FsbEJhY2t9IG9wdGlvbnMubG9hZENoaWxkcmVuIHRoZSBsb2FkQ2hpbGRyZW4gY2FsbGJhY2sgZnVuY3Rpb24sIHVzZWQgdG8gbG9hZCBjaGlsZHJlbiBkYXRhIGl0ZW1zIGZvciBhIG5vZGUuXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKG93bmVyT2JqZWN0LCBvcHRpb25zKSB7XHJcbiAgICAgICAgLy8gRGVmaW5lIG9wdGlvbiBkZWZhdWx0c1xyXG4gICAgICAgIHZhciBtZXJnZWRPcHRpb25zID0ge1xyXG4gICAgICAgICAgICAuLi5Mb2FkT25EZW1hbmRTZXR0aW5ncy5kZWZhdWx0cyxcclxuICAgICAgICAgICAgLi4ub3B0aW9uc1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuX293bmVyT2JqZWN0ID0gb3duZXJPYmplY3Q7XHJcbiAgICAgICAgdGhpcy5faGFzQ2hpbGRyZW4gPSBtZXJnZWRPcHRpb25zLmhhc0NoaWxkcmVuO1xyXG4gICAgICAgIHRoaXMuX2xvYWRDaGlsZHJlbiA9IG1lcmdlZE9wdGlvbnMubG9hZENoaWxkcmVuO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgb3duZXIgb2JqZWN0LlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgb3duZXIgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBiYWNrKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9vd25lck9iamVjdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFZhbGlkYXRlcyB3aGV0aGVyIHRoZSBwcm92aWRlZFxyXG4gICAgICogc2V0dGluZ3MgYXJlIGNvcnJlY3Qgb3Igbm90LlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdHJlZSBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHZhbGlkYXRlU2V0dGluZ3MoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmhhc0NoaWxkcmVuICYmIHRoaXMubG9hZENoaWxkcmVuKVxyXG4gICAgICAgICAgICB0aHJvdyBcIldpdGggbG9hZCBvbiBkZW1hbmQgZW5hYmxlZCwgeW91IG5lZWQgdG8gZGVmaW5lIGhhc0NoaWxkcmVuIGFzIHBhcnQgb2YgdGhlIG9wdGlvbnNcIjtcclxuICAgICAgICBpZiAoIXRoaXMubG9hZENoaWxkcmVuICYmIHRoaXMuaGFzQ2hpbGRyZW4pXHJcbiAgICAgICAgICAgIHRocm93IFwiV2l0aCBsb2FkIG9uIGRlbWFuZCBlbmFibGVkLCB5b3UgbmVlZCB0byBkZWZpbmUgbG9hZENoaWxkcmVuIGFzIHBhcnQgb2YgdGhlIG9wdGlvbnNcIjtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIExvYWQgdGhlIGNoaWxkcmVuIGZvciBhIGdpdmVuIGRhdGEgb2JqZWN0LlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IGRhdGEgVGhlIGRhdGEgaXRlbSwgd2hpY2ggc2hvdWxkIGJlIHVzZWQgdG8gbG9hZCB0aGUgY2hpbGRyZW4gb2YgdGhlIGRhdGEgaXRlbSB2aWEgQUpBWC5cclxuICAgICAqIEBwYXJhbSB7Kn0gcHJvY2Vzc0RhdGEgQ2FsbGJhY2sgZnVuY3Rpb24gdG8gcHJvY2VzcyB0aGUgY2hpbGRyZW4gZGF0YSBpdGVtcy5cclxuICAgICAqIEByZXR1cm5zIHsqfVxyXG4gICAgICovXHJcbiAgICBsb2FkQ2hpbGRyZW4oZGF0YSwgcHJvY2Vzc0RhdGEpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9sb2FkQ2hpbGRyZW4uY2FsbCh0aGlzLl9vd25lck9iamVjdCwgZGF0YSwgcHJvY2Vzc0RhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIGJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyXHJcbiAgICAgKiB0aGUgcGFzc2VkIGRhdGEgaXRlbSBoYXMgY2hpbGRyZW4uXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhSXRlbSBUaGUgZGF0YSBpdGVtIHRvIGNoZWNrIGlmIGl0IGhhcyBjaGlsZHJlbiBvciBub3QuXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gV2hldGhlciB0aGUgZGF0YSBpdGVtIGhhcyBjaGlsZHJlbiBvciBub3QuXHJcbiAgICAgKi9cclxuICAgIGhhc0NoaWxkcmVuKGRhdGFJdGVtKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5faGFzQ2hpbGRyZW4uY2FsbCh0aGlzLl9vd25lck9iamVjdCwgZGF0YUl0ZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgbG9hZENoaWxkcmVuIGNhbGxiYWNrIGZ1bmN0aW9uLFxyXG4gICAgICogdXNlZCB0byBsb2FkIGNoaWxkcmVuIGRhdGEgaXRlbXMgZm9yXHJcbiAgICAgKiBhIG5vZGUuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7bG9hZENoaWxkcmVuQ2FsbEJhY2t9IG5ld0xvYWRDaGlsZHJlbk1ldGhvZFxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBzZXRMb2FkQ2hpbGRyZW5NZXRob2QobmV3TG9hZENoaWxkcmVuTWV0aG9kKXtcclxuICAgICAgICB0aGlzLl9sb2FkQ2hpbGRyZW4gPSBuZXdMb2FkQ2hpbGRyZW5NZXRob2Q7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBoYXNDaGlsZHJlbiBjYWxsYmFjayBmdW5jdGlvbixcclxuICAgICAqIHVzZWQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgYSBub2RlXHJcbiAgICAgKiBvciBkYXRhIGl0ZW0gaGFzIGNoaWxkcmVuIG9yIG5vdC5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtoYXNDaGlsZHJlbkNhbGxCYWNrfSBuZXdIYXNDaGlsZHJlbk1ldGhvZFxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIHRyZWUgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBzZXRIYXNDaGlsZHJlbk1ldGhvZChuZXdIYXNDaGlsZHJlbk1ldGhvZCl7XHJcbiAgICAgICAgdGhpcy5faGFzQ2hpbGRyZW4gPSBuZXdIYXNDaGlsZHJlbk1ldGhvZDtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlclxyXG4gICAgICogbG9hZC1vbi1kZW1hbmQgaXMgZW5hYmxlZCBvciBub3QuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBXaGV0aGVyIGxvYWQtb24tZGVtYW5kIGlzIGVuYWJsZWQgb3Igbm90LlxyXG4gICAgICovXHJcbiAgICBpc0VuYWJsZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hhc0NoaWxkcmVuIHx8IHRoaXMuX2xvYWRDaGlsZHJlbjtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIERldGVybWluZXMgd2hldGhlciBhIG5vZGUgZGF0YSBpdGVtXHJcbiAgICAgKiBoYXMgY2hpbGRyZW4gb3Igbm90LlxyXG4gICAgICogXHJcbiAgICAgKiBAY2FsbGJhY2sgaGFzQ2hpbGRyZW5DYWxsQmFja1xyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGFJdGVtIENhbiBiZSB1c2VkIHRvIHRvIGxvYWQgdGhlIGNoaWxkcmVucyBmcm9tIHRoZSBzZXJ2ZXIgdmlhIEFKQVguXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgbm9kZSBvciBkYXRhIGl0ZW0gaGFzIGNoaWxkcmVuIHRvIGxvYWQgdmlhIEFKQVgsIGZhbHNlIG90aGVyd2lzZS5cclxuICAgICAqL1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9hZCB0aGUgY2hpbGRyZW4gaXRlbXMgZm9yIGEgZ2l2ZW5cclxuICAgICAqIG5vZGUgZGF0YSBpdGVtLlxyXG4gICAgICogQGNhbGxiYWNrIGxvYWRDaGlsZHJlbkNhbGxCYWNrXHJcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gbm9kZURhdGFJdGVtIE5vZGUgZGF0YSBpdGVtLCB3aGljaCBjYW4gYmUgdXNlZCB0byB0byBsb2FkIHRoZSBjaGlsZHJlbnMgZnJvbSB0aGUgc2VydmVyIHZpYSBBSkFYLlxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG5vZGVEYXRhSXRlbS5kYXRhIFRoZSBkYXRhIGl0ZW0sIHdoaWNoIGNhbiBiZSB1c2VkIHRvIHRvIGxvYWQgdGhlIGNoaWxkcmVucyBmcm9tIHRoZSBzZXJ2ZXIgdmlhIEFKQVguXHJcbiAgICAgKiBAcGFyYW0ge2NoaWxkcmVuRGF0YVByb2Nlc3NvckNhbGxCYWNrfSBwcm9jZXNzRGF0YSBEYXRhIHByb2Nlc3NvciBjYWxsYmFjayBmdW5jdGlvbiB3aGljaCB5b3Ugc2hvdWxkIHVzZSB0byBjYWxsLCBwYXNzaW5nIGluIHRoZSBjaGlsZHJlbiBkYXRhIHRoYXQncyBiZWVuIGxvYWRlZCB2aWEgQUpBWC5cclxuICAgICAqIEByZXR1cm5zIHt1bmRlZmluZWR9XHJcbiAgICAgKi9cclxuXHJcbiAgICAvKipcclxuICAgICAqIFByb2Nlc3NlcyB0aGUgY2hpbGRyZW4gaXRlbXMuXHJcbiAgICAgKiBAY2FsbGJhY2sgY2hpbGRyZW5EYXRhUHJvY2Vzc29yQ2FsbEJhY2tcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0W119IGNoaWxkcmVuRGF0YUl0ZW1zIFRoZSBhcnJheSBvZiBjaGlsZHJlbiBkYXRhIGZvciB0aGUgbm9kZSBiZWluZyBwcm9jZXNzZWQuXHJcbiAgICAgKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxyXG4gICAgICovXHJcbn1cclxuXHJcbkxvYWRPbkRlbWFuZFNldHRpbmdzLmRlZmF1bHRzID0ge1xyXG4gICAgLy8gVGFrZXMgaW4gYSBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgYSBwYXJhbWV0ZXI6XHJcbiAgICAvLyAtIFRoZSBub2RlIGFuZCBkYXRhIGl0ZW0gd2hpY2ggY2FuIGJlIHVzZWRcclxuICAgIC8vICAgdG8gbG9hZCB0aGUgY2hpbGRyZW5zIGZyb20gc2VydmVyXHJcbiAgICAvLyBSZXR1cm5zIHRydWUgb3IgZmFsc2VcclxuICAgIGhhc0NoaWxkcmVuOiBudWxsLFxyXG4gICAgLy8gVGFrZXMgaW4gYSBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgdHdvIHBhcmFtZXRlcnM6XHJcbiAgICAvLyAtIFRoZSBub2RlIGFuZCBkYXRhIGl0ZW0gd2hpY2ggY2FuIGJlIHVzZWRcclxuICAgIC8vICAgdG8gbG9hZCB0aGUgY2hpbGRyZW5zIGZyb20gc2VydmVyXHJcbiAgICAvLyAtIHRoZSBkYXRhIHByb2Nlc3NvciBmdW5jdGlvbiwgd2hpY2hcclxuICAgIC8vICAgeW91IHNob3VsZCBjYWxsLCBwYXNzaW5nIGluIHRoZVxyXG4gICAgLy8gICBjaGlsZHJlbiBkYXRhIHlvdSBsb2FkZWQgd2l0aFxyXG4gICAgLy8gICB5b3VyIHNlcnZlciBBSkFYIHJlcXVlc3RcclxuICAgIGxvYWRDaGlsZHJlbjogbnVsbCxcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTG9hZE9uRGVtYW5kU2V0dGluZ3M7IiwiY2xhc3MgTm9kZVNldHRpbmdzIHtcclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIHtvYmplY3R9IG93bmVyT2JqZWN0IFRoZSBvd25lciBvYmplY3RcclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIFRoZSBvcHRpb25zIGZvciB0aGUgbm9kZSBzZXR0aW5ncy5cclxuICAgICAqIEBwYXJhbSB7KCdub2RlU2l6ZSd8J3NpemUnKX0gW29wdGlvbnMuc2l6aW5nTW9kZT1zaXplXSBUaGUgc2l6aW5nIG1vZGUuIFNob3VsZCBiZSBlaXRoZXIgJ25vZGVTaXplJyB0byBhdXRvbWF0aWNhbGx5IHNpemUgdGhlIFNWRyBiYXNlZCBvbiB0aGUgbm9kZXMsIG9yICdzaXplJyB0byB1c2UgdGhlIGNvbmZpZ3VyZWQgd2lkdGggYW5kIGhlaWdodC5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5ob3Jpem9udGFsU3BhY2luZz0yNV0gVGhlIGhvcml6b250YWwgc3BhY2luZyB2YWx1ZS5cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy52ZXJ0aWNhbFNwYWNpbmc9MjVdIFRoZSB2ZXJ0aWNhbCBzcGFjaW5nIHZhbHVlLlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihvd25lck9iamVjdCwgb3B0aW9ucykge1xyXG4gICAgICAgIHZhciBtZXJnZWRPcHRpb25zID0ge1xyXG4gICAgICAgICAgICAuLi5Ob2RlU2V0dGluZ3MuZGVmYXVsdHMsXHJcbiAgICAgICAgICAgIC4uLm9wdGlvbnNcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLl9vd25lck9iamVjdCA9IG93bmVyT2JqZWN0O1xyXG4gICAgICAgIHRoaXMuX3NpemluZ01vZGUgPSBtZXJnZWRPcHRpb25zLnNpemluZ01vZGU7XHJcbiAgICAgICAgdGhpcy5faG9yaXpvbnRhbFNwYWNpbmcgPSBtZXJnZWRPcHRpb25zLmhvcml6b250YWxTcGFjaW5nO1xyXG4gICAgICAgIHRoaXMuX3ZlcnRpY2FsU3BhY2luZyA9IG1lcmdlZE9wdGlvbnMudmVydGljYWxTcGFjaW5nO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgb3duZXIgb2JqZWN0LlxyXG4gICAgICogXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgb3duZXIgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBiYWNrKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9vd25lck9iamVjdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIGhvcml6b250YWwgc3BhY2luZyB2YWx1ZS5cclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge251bWJlcn0gVGhlIGhvcml6b250YWwgc3BhY2luZyB2YWx1ZS5cclxuICAgICAqL1xyXG4gICAgZ2V0SG9yaXpvbnRhbFNwYWNpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2hvcml6b250YWxTcGFjaW5nO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogU2V0cyB0aGUgaG9yaXpvbnRhbCBzcGFjaW5nIHZhbHVlLlxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbmV3SG9yaXpvbnRhbFNwYWNpbmcgVGhlIG5ldyBob3Jpem9udGFsIHNwYWNpbmcgdmFsdWUuXHJcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgbm9kZSBzZXR0aW5ncyBvYmplY3QuXHJcbiAgICAgKi9cclxuICAgIHNldEhvcml6b250YWxTcGFjaW5nKG5ld0hvcml6b250YWxTcGFjaW5nKSB7XHJcbiAgICAgICAgdGhpcy5faG9yaXpvbnRhbFNwYWNpbmcgPSBuZXdIb3Jpem9udGFsU3BhY2luZztcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEdldHMgdGhlIHZlcnRpY2FsIHNwYWNpbmcgdmFsdWUuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFRoZSB2ZXJ0aWNhbCBzcGFjaW5nIHZhbHVlLlxyXG4gICAgICovXHJcbiAgICBnZXRWZXJ0aWNhbFNwYWNpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZlcnRpY2FsU3BhY2luZztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFNldHMgdGhlIHZlcnRpY2FsIHNwYWNpbmcgdmFsdWUuXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBuZXdWZXJ0aWNhbFNwYWNpbmcgVGhlIG5ldyB2ZXJ0aWNhbCBzcGFjaW5nIHZhbHVlLlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIG5vZGUgc2V0dGluZ3Mgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBzZXRWZXJ0aWNhbFNwYWNpbmcobmV3VmVydGljYWxTcGFjaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fdmVydGljYWxTcGFjaW5nID0gbmV3VmVydGljYWxTcGFjaW5nO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgc2l6aW5nIG1vZGUuXHJcbiAgICAgKiBcclxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb25maWd1cmVkIG5vZGUgc2l6aW5nIG1vZGUuXHJcbiAgICAgKi9cclxuICAgIGdldFNpemluZ01vZGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpemluZ01vZGU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTZXRzIHRoZSBzaXppbmcgbW9kZS5cclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHsoJ25vZGVTaXplJ3wnc2l6ZScpfSBuZXdTaXppbmdNb2RlIFRoZSBzaXppbmcgbW9kZS4gU2hvdWxkIGJlIGVpdGhlciAnbm9kZVNpemUnIHRvIGF1dG9tYXRpY2FsbHkgc2l6ZSB0aGUgU1ZHIGJhc2VkIG9uIHRoZSBub2Rlcywgb3IgJ3NpemUnIHRvIHVzZSB0aGUgY29uZmlndXJlZCB3aWR0aCBhbmQgaGVpZ2h0LlxyXG4gICAgICogQHJldHVybnMge29iamVjdH0gVGhlIG5vZGUgc2V0dGluZ3Mgb2JqZWN0LlxyXG4gICAgICovXHJcbiAgICBzZXRTaXppbmdNb2RlKG5ld1NpemluZ01vZGUpIHtcclxuICAgICAgICB0aGlzLl9zaXppbmdNb2RlID0gbmV3U2l6aW5nTW9kZTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH1cclxufVxyXG5cclxuTm9kZVNldHRpbmdzLmRlZmF1bHRzID0ge1xyXG4gICAgc2l6aW5nTW9kZTogXCJzaXplXCIsIC8vIHNldCB0byAnbm9kZVNpemUnIGZvciB0aGUgdHJlZSBzaXplIHRvIGF1dG9tYXRpY2FsbHkgYmUgYmFzZWQgb24gdGhlIG5vZGUgZGltZW5zaW9ucyBpdHNlbGYuXHJcbiAgICBob3Jpem9udGFsU3BhY2luZzogMjUsXHJcbiAgICB2ZXJ0aWNhbFNwYWNpbmc6IDI1XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IE5vZGVTZXR0aW5nczsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJldmVudHNcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==